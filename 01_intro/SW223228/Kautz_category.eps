%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (Adobe Illustrator Artwork)
%%Creator: (Adobe Illustrator\(R\) 26.3)
%%For: (kyle Hamilton)
%%CreationDate: 6/21/22
%%BoundingBox: 0 0 489 235
%%HiResBoundingBox: 0 0 488.1719 234.0844
%%CropBox: 0 0 488.1719 234.0844
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 26.3.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 26.3.1 x1103 R agm 5.512 ct 6.513%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 64 8%%BeginData: 6480 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD35FF7D7D7DFFA8A8A8FF52A8FFFFA8FFFFFF7D7DFFFF7DA8FFFF%A87DA8FFFFA8FFFFA8FFA8FFA8A852A8A8FFA8FF7DA8A8FFA8FFA8A87DFF%A8FFA8FFA8A8A8FD43FF7D2752527DFD06522752A87D5252A8A82752527D%27527D7D275227A87D52275227A87DF87D52277D7D52527DA8527D27277D%27FD0552275252FD42FF7D7D527D52A8A8A852FD047DFF7D7D7DFFA8527D%7D527D52FD047D52A87D527D7D7DFFA87D7D527D527D7D7DA8FF52A852FD%047D52527D52A87D7DFD45FFA8FFA8FFFFFFA8FFA8FFFFFFA8FFA8FFA8FF%A8FFFFFFA8FFA8FFA8FF7DA8FD04FFA8FFA8FFA8FFA8FFA8FFFFFFA8FFFF%FFA8FF527DFFFFFFA8A8FDFCFFFDB9FF777752774C7752774C7752774CA2%FD72FF5321222122212221222122212253FD56FF52A8FFA852FFFD05A8FF%A8A8A8FF7D7D7DA8A8FFA8A8A87D7DFF4C22212221282122212821222177%FFA8FD54FF7D7DFF7DFD04527D527DFD04527D7D52522752527D527D52A8%A84C214C2228214C2228214C222277AE27FD54FF527DA8A8525252A8FD04%7D527D527D52A8FD047D52A87D527DFF4C21212221222122212221222177%A87DA8FD58FFA8FD0AFFA8FD08FFA8FFFF4D002221222122212221222121%53FD72FFA27E7DA27DA27DA27DA27DA27DA8FDFCFFFDFCFFFDFAFF4C2822%4C224C224C224C224C224C224C224C224C224C217DFD4DFFA8FD1AFF5321%28212221282122212821222128212221282122212277FD4CFF7D7DFFA852%A87DA8A8A87DA8FFA852A8A87D7D7D52A87D7D7DA8A8FF4C222128212221%282122212821222128212221282122217DA87DA8FD49FFA852FF7D525227%277D525227FFA85227522752525227FD0452A8A8532128214C2228214C22%28214C2228214C2228214C222277FF7DFD4AFFFD08A87DA8A8FD067DA8A8%A87DA87DA87DA8A8FF4C2121222122212221222122212221222122212221%220077AEFD67FF77214C214C224C214C224C214C224C214C224C214C2222%77FD68FFA8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8A8A8A9A8FDFCFF%FDFCFFFD72FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FFCBFFA8FF%CBFFA8FFCBFD62FF4C222122212821222128212221282122212821222128%21222128212221227DFD46FFA8FFA8FD0AFFA8FD04FFA8FFFFFFA8FD04FF%772128214C2128214C2128214C2128214C2128214C2128214C2128214C21%A2FD45FF7D52FFA8277D7D7DA87D7D7DA8A8527D7D7D527D52A8FD047DA8%A82822212221282122212821222128212221282122212821222128212221%227E7D52FD43FFA852FFA8FD06527D27A8A87D5252527DFD0752FFFF5321%4C2228214C2228214C2228214C2228214C2228214C2228214C222821A87D%7DFD43FFA8A8A8FFA8FFA8FF7DFFA8A87DFFA8A87DFFA8FFA8FFA8FFA8A8%A8FF4C212122212121222121212221212122212121222121212221212122%21217DFFA8FD5FFF774C534C4D4C534C4D4C534C4D4C534C4D4C534C4D4C%534C4D4C534C4D4CA8FD63FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FFFFFFA8FDFCFFFDFCFFFD6DFFA87EA8A2A8A2A8A2A8A2A8A2A8A2%A8A2A8A2A8A2A8A2A8A2A8A2A8A2A8A2A8A2A8A2A8A2A8A2A8A2A8A2A8A2%A8A2A8FD51FF4C2121222122212221222122212221222122212221222122%2122212221222122212221222122212221222122212121CBFD29FFA8FFFF%A8A8FD08FFA8A8FD04FFA8FFFFA8A8FFFFA87DA8A8A8FD08FF77214C224C%214C224C214C224C214C224C214C224C214C224C214C224C214C224C214C%224C214C224C214C224C214CA8FD28FFA827A8FFFD04527D7D527D7DFF52%52527D527D5252527D527D7DA827A8275252527D7D527DA8A82822212821%222128212221282122212821222128212221282122212821222128212221%282122212821222128212221FF7D7D27FD26FF52A8FFA8FD0552A8527DFF%7D52527DA87D7D527D527D527D7D52A8A8527D525252A852A8FF53212821%4C2228214C2228214C2228214C2228214C2228214C2228214C2228214C22%28214C2228214C2228214C214CA8A87D7DFD27FFA8FD05FFA8FFFFFFA8FF%A8FF7DFFFFFFA8FD05FFA8FFA8FFFFFFA8FFA8FD05FF2821212100212121%002121210021212100212121002121210021212100212121002121210021%212100212121002121A8FD50FFA27777777D7777777D7777777D7777777D%7777777D7777777D7777777D7777777D7777777D7777777D7777777D777D%A8FDFCFFFDFCFFFDD8FFA2777D777D777D777D777D777D777D777D777D77%7D777D777D777D777D777D777D777D777D777D777D777D777D777D777D77%7D777D777D777D777D777D777D777D777D777D777D777D777D777D777D77%7D77777DFD2CFF2821212100222121002221210022212100222121002221%210022212100222121002221210022212100222121002221210022212100%222121002221210022212100222121002221210022212100222121002200%4CFD04FF7DFFFFA8FFFFFFA8FF7DFFA8A87DA8FFA87DA8A8FFFFFFA8FFFF%FFA8FFA8FF7DA8FFFF7DA8A8FFFF77214C214C224C214C224C214C224C21%4C224C214C224C214C224C214C224C214C224C214C224C214C224C214C22%4C214C224C214C224C214C224C214C224C214C224C214C224C214C224C21%4C224C214C22224CFFA8A8A852FFFFFD0A527D52A87D275252277D525252%A8525227FD08527DA8A82822212221282122212821222128212221282122%212821222128212221282122212821222128212221282122212821222128%212221282122212821222128212221282122212821222128212221282122%2128214CA87D5252A8A8FF7D7D52A8A87D52A8FD047DA8FFFD047D52A87D%7DA87D527D7DA8FD057DA87DFFFF53214C2228214C2228214C2228214C22%28214C2228214C2228214C2228214C2228214C2228214C2228214C222821%4C2228214C2228214C2228214C2228214C2228214C2228214C2228214C22%28214C222821224CFF7DA87DFFFFA8FFA8A8FD15FFA8A8FD0BFF4C210021%212100212121002121210021212100212121002121210021212100212121%002121210021212100212121002121210021212100212121002121210021%212100212121002121210021212100212121004CFFFFA8FD29FFA877A27D%7E77A27D7E77A27D7E77A27D7E77A27D7E77A27D7E77A27D7E77A27D7E77%A27D7E77A27D7E77A27D7E77A27D7E77A27D7E77A27D7E77A27D7E77A27D%7E77A27D7E77A27D7E77A27D7E77A27D7E777E7EFDFCFFFD87FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.cb7c5a1, 2022/04/14-05:22:35        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <xmp:CreatorTool>Adobe Illustrator 26.3 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2022-06-21T05:53:46-04:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>124</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAfAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq8u8/eSPO+p+cn1nRJ+FkbfRLWe0eQLHPFb6lcXN2QtRxlhUwsrH7Sl1HXFUstt&#xA;A/O+7tlju7660+ezsYYElgurV/rN5B9VjkmbkrgJMFnkoQCKjodsVU5fKX5xQa5q1xpd3LDJcrLD&#xA;DqE01q8csEEF1DamWILz+sljbMH2XZuXgyqfaBoH5qQ6Nr732ryyazLYtDoHrGFIY5m9RkZ40NyB&#xA;In7tC7O4NK/FU1VXeXPKXmwarc67qplbUYtPubPRGuZ4pZYFkndo0laMNH6nAR8nUGopUsQTiqS6&#xA;Fon5xWM9pql+LrULuOJYprV72BFdEvUkblHzaJHeEtxoz7ChcVAxVD6d5Q/N6efT7jWHafVLTT7O&#xA;MXc89tJbJP8AWNKmm4xKPU5g2lw0j7htuPUAKo/y1ov52W+p6E+sajLdWcc7nU0JtogImWPkJCsk&#xA;zP8AvFkKcQaqwFIqYqgWsPzq1EatLpV/d2dsdVvkT6z9Xd2gh1C8jg+pxu0DJGsSwk+pIOaiq1B3&#xA;VTbVfJP5j6n5J+oPrU0PmSbW57r9Ilo2W1tBczrbtAilaL9XMbcORYE9ajZVLY9I/Om11VX0+0+p&#xA;6HbQ2HpaNFdW7J/os9k9zDFKxVv3yRXS8pFqQ4LPvxjVbtfLX5ppqUMt0+qqt3eWV1fzWl/bOsUE&#xA;dsqz26xTSxqS06UYrtwaq8m2Cqb+bdL/ADWl1DWzo1xcCKdof0Y8c9skC2/K15osLhJvWXjclm9V&#xA;OSsAHrxCKpNpvlj874rmykk1OWB5ri1u9XkZ4blHkOn2EcqKjSx8IluYbvmqCnxoVVv2VUv8sf8A&#xA;K7dVR7mO41CNYXWFje+lbBr8JB6lwI5oY3NiH9esQXnuo6qQqrKfJWmfmLa+adPtNZ1O6udPh01L&#xA;7VvXIemou0sIt0lVVjeIxvz4qSVMalvtDFXpuKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsDn/AD1/&#xA;KaCeSCbzDCksTFJF9K42ZTQjaPxy78vPubPBl3Kf/K/Pyh/6mOH/AJFXH/VPD+Xn3J8GXc7/AJX5&#xA;+UP/AFMcP/Iq4/6p4/l59y+DLuZN5W85eWfNVnLeeX75b+2gk9GWRFdQsnENx+NVPRhlc4GPNhKJ&#xA;HNOsgxdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYDoOt+apfLfmH1pb+bV4&#xA;vrb6Q91pjwyKsUSpGRH6dvDLymrJHHzLcCFLFgaKse0jz1+akkg0iLTkuryKH6xNfXkTmRBLePBE&#xA;ksESWDjlFG0is0EVVp8PfFVVfO35tx6ncGTQDKq2iUgFrciF5Vt7i4aWKQFuBV2hhaN2JkI+Dids&#xA;Vc3nD81kufra6TKbaX6whVrOdokSNoFgnFsoF3WYcyI+dU5nly4YqlcXmr84Yed3o9s+tacby7X0&#xA;mVXeOS3huX9F348jFJNwSooyMgUfb2VZHp3nf8zLqWCzk8vrFdPR3uja3a2vpF7RVYGUxlXb1bgm&#xA;NviXgK7blVb5N81+ddV803Ueo2n1e4j0qOSLTpRPZwO7SKfUKSrNLHxd5YOfE+p6fIDiRRV8b6/y&#xA;/Tuo8gA31qaoBqK+o3fbN5HkHaR5IHJJdir6Q/5x5vvM1l+VmuzeW7D9Ian+lVCxAx1WMQRs7BZX&#xA;iVjQcQOXU13pTNbrfqHucPU8w+klJKgkFSRUqaVHsaVGYbjN4q7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq4AAkgbnqcVdirsVdirsVdirzq4/5x6/J+4uJbibQOU0ztJI31u9F&#xA;WY1JoJwOpy8anJ3tvjS71P8A6Fz/ACa/6l7/AKfL7/qvh/NZO9fHn3u/6Fz/ACa/6l7/AKfL7/qv&#xA;j+ayd6+PPvZZ5Q8jeVvJ9lNY+XLL6ja3EvrzR+rNNyk4heVZnkI2UdDlU8kpGywlMy5p7kGLsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVeMXn/ADlb+Xdp&#xA;eT2smnauZLeR4nKw2xUsjFTStyNtsyxo5nqG8aeSj/0Nv+XH/Vt1j/kTa/8AZTj+Sn3hP5aXk7/o&#xA;bf8ALj/q26x/yJtf+ynH8lPvC/lpeTv+ht/y4/6tusf8ibX/ALKcfyU+8L+Wl5O/6G3/AC4/6tus&#xA;f8ibX/spx/JT7wv5aXkitK/5ym/L7U9Us9Ng0/VlnvZ47aJpIbYIHlcIpYi4Y0q29BgOkkBeyDp5&#xA;APY8xWh2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVgWj+XvONnJ5shl5PBqzXcumX&#xA;El36skUkrzNGFPCPhFxljCLSqFWHJhxOKsYg8m/nxZ20VnY+Y4VWMGM3VwBcSyIttAkPqmQGjIRM&#xA;jOteTcXINTxVRsmlfnpMlzdx36Wk7FBa6f6ts8ak/WfiaU27khZDbFxTdA4Xf7Sqt51sPP8ArGoQ&#xA;6xpNre6KtjbSqBPcRyMrAM5ljs7KS4WVz8IQMzc6FWTo2KoL/Dv55XKXEtzrBVbyMu2nKbQQxtNH&#xA;YcoVYQmXihl1BQfU/ZiPzVdbeWPzrFjbWN1qUctiLYQPEZYfUXhHKH9WRLeNpHaT0TEyFeKqwapO&#xA;6rJfJuj/AJhWsclrrV+RELK3jt51eCUJMsEKvxjMIct6iyl2eRgaig7Kq+I9fBGu6iCeRF1NVvH9&#xA;42+byPIO0jyQOSS7FXYq7FU78jf8pt5f/wC2lZ/8n0yGT6T7mM+Rfd+j6Pe2mt61fTXEzWt68Is7&#xA;R55p0RY0LSSqsrOImkklZSkdF4om1a5pHWJzirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdiqSv5J8mO7O+g6czsSzM1pASSdySSmT8SXeWXGe9r/A3kn/qX9N/6Q4P&#xA;+aMfEl3leM97v8DeSf8AqX9N/wCkOD/mjHxJd5XjPe7/AAN5J/6l/Tf+kOD/AJox8SXeV4z3u/wN&#xA;5J/6l/Tf+kOD/mjHxJd5XjPevi8l+ToZUmh0LTo5Y2DxyJaQKyspqGUhKgg48cu8rxHvTjIMXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVGO8s5FmaOeN1t2ZJyrqRGy7sr0Pwkd64qv&#xA;iuIJhWGRZAACSjBtmHJTt4g1GKr8VUpby0init5Z44556+hCzKHfiKtwUmrUHWmKr5JI4o2kkYJG&#xA;gLO7EBVUCpJJ6AYqsa6tVtvrTTILbiH9csAnE7huVaU98VXxSxSxrLE6yRuAyOpBUg9CCOuKvnfU&#xA;P+cvPqd/c2n+E+f1eV4uf6Qpy4MVrT6saVpmcNFY5/Y5Q03mh/8Aocb/AL9H/uY/9muH8j5/Yn8r&#xA;5u/6HG/79H/uY/8AZrj+R8/sX8r5u/6HG/79H/uY/wDZrj+R8/sX8r5u/wChxv8Av0f+5j/2a4/k&#xA;fP7F/K+bv+hxv+/R/wC5j/2a4/kfP7F/K+bv+hxv+/R/7mP/AGa4/kfP7F/K+bPPyi/Pb/lYmt3m&#xA;mfoP9F/VLb6z631r6xy/eKnHj6MNPt1rXKc2n4Bd21ZMPCLt6tmM0uxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KsH0j8vb/Tm8yqLy19DzEJQ8cNs0IiLIUjZR6jjo59QbAncUqcVYvD+Q+t20&#xA;MFpY+cLyysYA6RxRKwZY2ghjVeYkVmETQssdekb8a7HkqmE/5Uea7uG5mufNLpqt1PJL68K3IhiW&#xA;U3JAii+sfCYXuUkjqxFY1DAinFVE+bvy31nXo7K+9e3tNRtbJ4Z0tRK8jSDk6pBcTOqr8bDhK0fO&#xA;M/EpFSMVStfyX8xS+pcXvmm5mvriP/SHMlyYjK6WAkpH6qpwLW97ReP2bgj9ndVuy/JbzDb29tbv&#xA;5nZ7eGH0WtQlwYVUJMpWJZLiQcZWmV5OfL4o1407Ksm8peQL/RzcpqOqvqEU9rb23qI93BODDDHG&#xA;1HW5KKOcbOCiK3xmp6llXxhrvlrzD+m9Q4aXeMn1mbi3oStUeoaGpBrm7jIUN3ZxkKQP+GfMn/Vq&#xA;vP8ApHl/5pw8Y708Qd/hnzJ/1arz/pHl/wCaceMd68Qd/hnzJ/1arz/pHl/5px4x3rxB3+GfMn/V&#xA;qvP+keX/AJpx4x3rxB3+GfMn/VqvP+keX/mnHjHevEHf4Z8yf9Wq8/6R5f8AmnHjHevEHsH/ADjf&#xA;5T1S61bzPp17b3NhHqGjS2qzyROgBkkQbcgA3y75iayQMR73H1BFPp/y1ox0Ty/p2kGc3RsLeO3N&#xA;wVEfMxqFLBF+FAeyjoNs1zhplirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqCi1rSptXuNHiuUf&#xA;U7SGO4ubVd2jimLLGzdhyMbbdcVQWnedfKmosFs9UglLKGB5cQeU0luBVqDl6sDpx61HTFUbNrmi&#xA;QqGm1C2jUryBeaNRxopruelJFP0jxxVD6p5p8v6WsDXt4iLcyNFCUDS1ZPtk+mH4qn7bNRV7kYqr&#xA;truiLII21C2WRuJVDNGCRIAUoK/tcxTxqMVUbfzT5duLY3MOoQtEJJIDVgrerESHj4GjchxO1K4q&#xA;p6f5v8t6hpq6laXyPaPA90rMGjcwRirSCJwsnEePHFUNF+YPk2Wwt79dUjFpdx3k1tIyupkTTiRd&#xA;8VZQxMXE1FK7EjFU2OsaQBKTfW4EDMs371PgZGCsG32KswBr3IxVfaalp14WFndQ3JQKXEMivQOO&#xA;Sk8SachuMVfKWq/85R/mXa6peWsUWnenBPJEnKCQnijlRX977ZsxpIEdXNGnjSF/6Gs/M/8A31pv&#xA;/SPJ/wBVcP5OHmn8vF3/AENZ+Z/++tN/6R5P+quP5OHmv5eLv+hrPzP/AN9ab/0jyf8AVXH8nDzX&#xA;8vF3/Q1n5n/7603/AKR5P+quP5OHmv5eLv8Aoaz8z/8AfWm/9I8n/VXH8nDzX8vF3/Q1n5n/AO+t&#xA;N/6R5P8Aqrj+Th5r+Xi7/oaz8z/99ab/ANI8n/VXH8nDzX8vF3/Q1n5n/wC+tN/6R5P+quP5OHmv&#xA;5eLv+hrPzP8A99ab/wBI8n/VXH8nDzX8vF3/AENZ+Z/++tN/6R5P+quP5OHmv5eLKvyu/wCch/P3&#xA;mfz7pGg6lHYixvpHSYwwuslFidxxYyMBuvhlWbTRjEkMMmGIjb6It9b0a4aBbe/tpmummW2WOaNj&#xA;K1sxScR0J5GJhxen2T1zAcRG4q7FXYq7FXYq7FXYq7FXYqx/TvI+i6b5mvfMdi9zDf6l/wAdCMzy&#xA;SwzEAgExymThT4aenxoFAG1QVWLXX5A+SLi9W8Et7DKDbs6pJCY3e2SaMO0bxOnKRLgh6Dfip2NS&#xA;VUVa/kz5et7doxqF/LMDEba5l+qPJAsH1VYkjU23psqJYRL+8RqivKpoQqmGofllo99oWk6LJe3k&#xA;dtoxT6nKht/W4xoEUeo0LFWCrT1E4ydfj3NVUk0v8ivK8Oki1vmeS5eORJZIQgRBJHeQqsImWZ1W&#xA;KHUTGlW6Rx+Bqqrt+R/ldr2S8a9vjNJK0jGtoB6bXC3RhAFvsPWjVvU/ve3OmKonR/ye8uaTUWt3&#xA;eGNrM2MiSfVnLJwljD+oYPUVwtw/2GCnupxVbN+TPlSfy5Z6DcT3k9tYQ3kNtcPKn1hfr9ylzI4k&#xA;EY+JWj4LtTgWVgwOKoC5/ILyjLFdQx3+o28V6ZvrSRPbfHHNNDcemS9u7USW2Qq1eXUFiNsVZDon&#xA;5a+W9IvL6eJXuYL6MQvY3CwNbohf1GAVYkZuT7/vGYL0XiNsVfKOsfkR+a8urXstv5clMElxK0RW&#xA;S3AKFyVoPU8M20dRCubnjNGuaD/5UH+b3/UuTf8AI23/AOqmS/Mw70+NHvd/yoP83v8AqXJv+Rtv&#xA;/wBVMfzMO9fGj3u/5UH+b3/UuTf8jbf/AKqY/mYd6+NHvd/yoP8AN7/qXJv+Rtv/ANVMfzMO9fGj&#xA;3u/5UH+b3/UuTf8AI23/AOqmP5mHevjR73f8qD/N7/qXJv8Akbb/APVTH8zDvXxo97v+VB/m9/1L&#xA;k3/I23/6qY/mYd6+NHvd/wAqD/N7/qXJv+Rtv/1Ux/Mw718aPe7/AJUH+b3/AFLk3/I23/6qY/mY&#xA;d6+NHvd/yoP83v8AqXJv+Rtv/wBVMfzMO9fGj3sy/J78nvzJ0P8AMnQ9V1XQ5bXT7WWRri4aSFgo&#xA;aF1Gyux6sO2U588DAgFhlyxMSAX0bbfl95ft9bstbQ3B1CwkvJIHMzcKahNNPMhiFI+PO5ahC8tl&#xA;5E8RmtcJkuKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpJbeb9Ik8ty+Yroyafp9uZ1uhdLxkiNrM8EoZEMm/&#xA;OMgAVJxVLpvzV8gwqGfVR0QsghuGdRIpdOaLGWSqqW+IDbFVtv8Amr5Llnu4TeOjWsixpWGZjMXW&#xA;A8YlVCzSLJdJG0VPUVq1XFXaf+aXlG9vRaLcMrStGLSUL6kcyyyyQpIpi5lY6w7u4VRyXepxVRm/&#xA;N7yTbahqFlfXMlnJpbzpePMmy+hLBCCqqWdxK90ojKqalXBoVpiqJf8ANPyCsccn6XR45VleNo45&#xA;pAywyTQyMOCNsJLWVa9+O3UVVRF7+YvkyxtrS5utSWKG9iuJ7cmOYn07P/ehnUIWj9I7NzAoduuK&#xA;oGf83PIUcl1BHqQnubQPziSKYAtGEPESsgi3M0Sg8qVkQVq61VWR/m75Kl0+K5hune4lgWcWPpyL&#xA;KvJXcRyclVUdlhkKBiOYVitQK4qmej+fvK2q2zTw3iwrHbx3VwJ6RrFHKiSDlLUwkqsqcwrnjyFe&#xA;oxV8f6z+dH5oR6vfRweZbsQJcSrEFZeIQOQtNulM28cEK5OwGKNckH/yuz81v+pmvP8Agl/5pyXg&#xA;Q7k+FHud/wArs/Nb/qZrz/gl/wCacfAh3L4Ue53/ACuz81v+pmvP+CX/AJpx8CHcvhR7nf8AK7Pz&#xA;W/6ma8/4Jf8AmnHwIdy+FHud/wArs/Nb/qZrz/gl/wCacfAh3L4Ue53/ACuz81v+pmvP+CX/AJpx&#xA;8CHcvhR7nf8AK7PzW/6ma8/4Jf8AmnHwIdy+FHud/wArs/Nb/qZrz/gl/wCacfAh3L4Ue53/ACuz&#xA;81v+pmvP+CX/AJpx8CHcvhR7nf8AK7PzW/6ma8/4Jf8AmnHwIdy+FHud/wArs/Nb/qZrz/gl/wCa&#xA;cfAh3L4Ue53/ACuz81v+pmvP+CX/AJpx8CHcvhR7nf8AK7PzW/6ma8/4Jf8AmnHwIdy+FHud/wAr&#xA;s/Nb/qZrz/gl/wCacfAh3L4Ue53/ACuz81v+pmvP+CX/AJpx8CHcvhR7nf8AK7PzW/6ma8/4Jf8A&#xA;mnHwIdy+FHud/wArs/Nb/qZrz/gl/wCacfAh3L4Ue53/ACuz81v+pmvP+CX/AJpx8CHcvhR7nf8A&#xA;K7PzW/6ma8/4Jf8AmnHwIdy+FHuRFh+dP5qSX1tG/mW8ZHlRWUsu4LAEfZwHBCuSnFHufYOp/mH5&#xA;X0zVRpV7NLDeNc29nGrwyqjzXau0QSRlCOD6LiqmlRTrtmndcmMvlrRpbK6sWhcWl56v1iFZpkUm&#xA;eZ55WHFxxZpJWbktD70AxVJdK/K3ybpzXRisg4ufSQKxpwht7cWsMSleLMqRVFXLNud8VVP+VYeR&#xA;xJcSJp7RyXTtLI8dzcxlZXkSVpYikq+lIXiT44+LbAVpiqpb/lx5Ltpraa100W0lmI1t2glmi4pC&#xA;zOkZ4OvKPk5JRqqdqg0FFV+pfl55M1G4e6u9MRruRZEa6R5Ipgstwl03GWNkdf38KuCD8J6Uqaqq&#xA;EP5X+RIZ7mePSx6l0rpKWmnYcZTIXCK0hWPk08jHgB8TFvtb4qu1D8t/Kd7YWlo9s6/o9ZxYymWW&#xA;Ro3ua+pK4kZ1ncsxeswerbnfFVlt+V/kW3tI7VNLQxxxJBVnkqUjS0QVow346Xbf8B7mqrVv+Vnk&#xA;OD0uGmVMQ4qXnuZC2zqpk5yN6hjWZ1jL1KKxC0BxVM9F8o+X9EuGn0u1NszRRwcBLK0YjiRUXjEz&#xA;tGrFY1DMq8moOROKvmLVf+cXPzLutUvLqKXTvTnnklTlPIDxdywr+6982Y1cAOrmjURpC/8AQqf5&#xA;n/7903/pIk/6pYfzkPNP5iLv+hU/zP8A9+6b/wBJEn/VLH85DzX8xF3/AEKn+Z/+/dN/6SJP+qWP&#xA;5yHmv5iLv+hU/wAz/wDfum/9JEn/AFSx/OQ81/MRd/0Kn+Z/+/dN/wCkiT/qlj+ch5r+Yi7/AKFT&#xA;/M//AH7pv/SRJ/1Sx/OQ81/MRd/0Kn+Z/wDv3Tf+kiT/AKpY/nIea/mIu/6FT/M//fum/wDSRJ/1&#xA;Sx/OQ81/MRd/0Kn+Z/8Av3Tf+kiT/qlj+ch5r+Yi7/oVP8z/APfum/8ASRJ/1Sx/OQ81/MRd/wBC&#xA;p/mf/v3Tf+kiT/qlj+ch5r+Yi7/oVP8AM/8A37pv/SRJ/wBUsfzkPNfzEXf9Cp/mf/v3Tf8ApIk/&#xA;6pY/nIea/mIu/wChU/zP/wB+6b/0kSf9UsfzkPNfzEXf9Cp/mf8A7903/pIk/wCqWP5yHmv5iLv+&#xA;hU/zP/37pv8A0kSf9UsfzkPNfzEXf9Cp/mf/AL903/pIk/6pY/nIea/mIu/6FT/M/wD37pv/AEkS&#xA;f9UsfzkPNfzEXf8AQqf5n/7903/pIk/6pY/nIea/mIq1n/zix+ZkN5BM8um8I5EdqXElaKwJ/wB1&#xA;YDrIeaDqIvpu68jeWbq/ub64tpJLi8linua3Nz6bvAvCMmISenQLsV40I61zWOEn2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>503.567505</stDim:w>
            <stDim:h>248.484375</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -234.084 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 234.084 li
488.172 234.084 li
488.172 0 li
cp
clp
gsave
153.372 16.6444 mo
488.172 16.6444 li
488.172 234.084 li
153.372 234.084 li
153.372 16.6444 li
cp
clp
153.372 223.212 mo
472.229 223.212 li
472.229 201.468 li
153.372 201.468 li
153.372 223.212 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
153.372 16.6444 mo
488.172 16.6444 li
488.172 234.084 li
153.372 234.084 li
153.372 16.6444 li
cp
clp
153.372 179.724 mo
331.932 179.724 li
331.932 157.98 li
153.372 157.98 li
153.372 179.724 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
153.372 16.6444 mo
488.172 16.6444 li
488.172 234.084 li
153.372 234.084 li
153.372 16.6444 li
cp
clp
153.372 136.236 mo
268.16 136.236 li
268.16 114.492 li
153.372 114.492 li
153.372 136.236 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
153.372 16.6444 mo
488.172 16.6444 li
488.172 234.084 li
153.372 234.084 li
153.372 16.6444 li
cp
clp
153.372 92.7484 mo
242.652 92.7484 li
242.652 71.0044 li
153.372 71.0044 li
153.372 92.7484 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
153.372 16.6444 mo
488.172 16.6444 li
488.172 234.084 li
153.372 234.084 li
153.372 16.6444 li
cp
clp
153.372 49.2604 mo
204.389 49.2604 li
204.389 27.5164 li
153.372 27.5164 li
153.372 49.2604 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
153.372 212.34 mo
149.872 212.34 li
false sop
.749721 .679194 .670497 .901457 cmyk
f
.8 lw
0 lc
1 lj
4 ml
[] 0 dsh
true sadj
153.372 212.34 mo
149.872 212.34 li
@
3.27562 216.84 mo
2.18625 216.84 li
2.18625 209.616 li
0 210.419 li
0 209.434 li
3.10687 208.268 li
3.27562 208.268 li
3.27562 216.84 li
cp
f
6.58641 216.272 mo
6.58641 216.085 6.64203 215.928 6.75328 215.803 cv
6.86453 215.678 7.03141 215.616 7.25391 215.616 cv
7.47641 215.616 7.64516 215.678 7.76016 215.803 cv
7.87641 215.928 7.93453 216.085 7.93453 216.272 cv
7.93453 216.452 7.87641 216.603 7.76016 216.724 cv
7.64516 216.844 7.47641 216.904 7.25391 216.904 cv
7.03141 216.904 6.86453 216.844 6.75328 216.724 cv
6.64203 216.603 6.58641 216.452 6.58641 216.272 cv
cp
f
16.3828 215.158 mo
16.3828 214.866 16.2722 214.639 16.0509 214.476 cv
15.8309 214.313 15.4466 214.174 14.8978 214.058 cv
14.3491 213.94 13.9134 213.8 13.5909 213.636 cv
13.2684 213.471 13.0303 213.275 12.8766 213.049 cv
12.7228 212.823 12.6459 212.553 12.6459 212.241 cv
12.6459 211.721 12.8653 211.282 13.3041 210.923 cv
13.7441 210.563 14.3059 210.383 14.9897 210.383 cv
15.7084 210.383 16.2909 210.568 16.7372 210.94 cv
17.1847 211.311 17.4084 211.785 17.4084 212.363 cv
16.3191 212.363 li
16.3191 212.067 16.1928 211.811 15.9403 211.596 cv
15.6891 211.381 15.3722 211.273 14.9897 211.273 cv
14.5947 211.273 14.2859 211.36 14.0634 211.532 cv
13.8409 211.704 13.7297 211.928 13.7297 212.205 cv
13.7297 212.467 13.8328 212.664 14.0391 212.798 cv
14.2466 212.93 14.6209 213.057 15.1622 213.178 cv
15.7034 213.3 16.1416 213.444 16.4766 213.612 cv
16.8128 213.779 17.0616 213.982 17.2228 214.219 cv
17.3853 214.455 17.4666 214.743 17.4666 215.082 cv
17.4666 215.649 17.2397 216.104 16.7859 216.447 cv
16.3334 216.788 15.7459 216.958 15.0234 216.958 cv
14.5159 216.958 14.0666 216.868 13.6753 216.688 cv
13.2853 216.508 12.9797 216.257 12.7584 215.935 cv
12.5384 215.612 12.4284 215.264 12.4284 214.889 cv
13.5122 214.889 li
13.5322 215.252 13.6778 215.541 13.9491 215.755 cv
14.2203 215.967 14.5784 216.074 15.0234 216.074 cv
15.4334 216.074 15.7622 215.99 16.0097 215.824 cv
16.2584 215.658 16.3828 215.436 16.3828 215.158 cv
cp
f
20.9541 215.252 mo
22.4297 210.501 li
23.5903 210.501 li
21.0422 217.819 li
20.6472 218.874 20.0203 219.402 19.1616 219.402 cv
18.9553 219.383 li
18.5522 219.308 li
18.5522 218.428 li
18.8447 218.451 li
19.2122 218.451 19.4984 218.377 19.7034 218.228 cv
19.9084 218.08 20.0772 217.809 20.2097 217.414 cv
20.4497 216.769 li
18.1884 210.501 li
19.3716 210.501 li
20.9541 215.252 li
cp
f
25.5762 210.501 mo
25.6062 211.204 li
26.0712 210.657 26.698 210.383 27.4868 210.383 cv
28.373 210.383 28.9768 210.723 29.298 211.403 cv
29.508 211.098 29.7818 210.852 30.1193 210.664 cv
30.458 210.477 30.858 210.383 31.3193 210.383 cv
32.7093 210.383 33.4162 211.119 33.4399 212.592 cv
33.4399 216.84 li
32.3562 216.84 li
32.3562 212.657 li
32.3562 212.204 32.2524 211.865 32.0449 211.641 cv
31.8387 211.416 31.4912 211.303 31.0024 211.303 cv
30.5999 211.303 30.2655 211.423 29.9993 211.663 cv
29.7343 211.904 29.5805 212.227 29.538 212.633 cv
29.538 216.84 li
28.4487 216.84 li
28.4487 212.685 li
28.4487 211.764 27.9974 211.303 27.0949 211.303 cv
26.3837 211.303 25.8974 211.606 25.6362 212.211 cv
25.6362 216.84 li
24.5505 216.84 li
24.5505 210.501 li
25.5762 210.501 li
cp
f
39.3581 213.617 mo
39.3581 212.88 39.2156 212.31 38.9306 211.907 cv
38.6456 211.505 38.2356 211.303 37.7006 211.303 cv
36.9856 211.303 36.4719 211.635 36.1594 212.299 cv
36.1594 215.042 li
36.4906 215.706 37.0081 216.038 37.7119 216.038 cv
38.2306 216.038 38.6344 215.837 38.9231 215.434 cv
39.2131 215.032 39.3581 214.426 39.3581 213.617 cv
cp
40.4419 213.741 mo
40.4419 214.71 40.2194 215.488 39.7744 216.077 cv
39.3294 216.665 38.7319 216.958 37.9819 216.958 cv
37.1806 216.958 36.5612 216.675 36.1237 216.107 cv
36.0713 216.84 li
35.0756 216.84 li
35.0756 207.84 li
36.1594 207.84 li
36.1594 211.199 li
36.5969 210.655 37.2 210.383 37.9688 210.383 cv
38.7388 210.383 39.3431 210.674 39.7819 211.257 cv
40.2219 211.838 40.4419 212.635 40.4419 213.647 cv
40.4419 213.741 li
cp
f
42.6105 213.741 mo
42.6105 214.443 42.7737 215.008 43.0999 215.434 cv
43.4262 215.86 43.8624 216.074 44.4087 216.074 cv
44.9599 216.074 45.3974 215.858 45.7212 215.427 cv
46.0449 214.994 46.2068 214.389 46.2068 213.612 cv
46.2068 212.917 46.0418 212.354 45.7118 211.922 cv
45.3818 211.49 44.9437 211.273 44.3974 211.273 cv
43.8624 211.273 43.4305 211.487 43.1018 211.913 cv
42.7743 212.338 42.6105 212.947 42.6105 213.741 cv
cp
41.5193 213.612 mo
41.5193 212.99 41.6412 212.432 41.8849 211.935 cv
42.1299 211.439 42.4699 211.057 42.9049 210.788 cv
43.3412 210.518 43.8387 210.383 44.3974 210.383 cv
45.2599 210.383 45.958 210.682 46.4918 211.279 cv
47.0255 211.877 47.2924 212.672 47.2924 213.664 cv
47.2924 213.741 li
47.2924 214.359 47.1737 214.912 46.9362 215.402 cv
46.6999 215.892 46.3618 216.274 45.9218 216.548 cv
45.483 216.822 44.9787 216.958 44.4087 216.958 cv
43.5499 216.958 42.8537 216.66 42.3199 216.062 cv
41.7862 215.464 41.5193 214.672 41.5193 213.688 cv
41.5193 213.612 li
cp
f
49.8293 216.84 mo
48.7455 216.84 li
48.7455 207.84 li
49.8293 207.84 li
49.8293 216.84 li
cp
f
51.5695 208.819 mo
51.5695 208.643 51.6233 208.494 51.7308 208.373 cv
51.8383 208.252 51.997 208.191 52.207 208.191 cv
52.4183 208.191 52.5783 208.252 52.687 208.373 cv
52.797 208.494 52.852 208.643 52.852 208.819 cv
52.852 208.994 52.797 209.14 52.687 209.258 cv
52.5783 209.375 52.4183 209.434 52.207 209.434 cv
51.997 209.434 51.8383 209.375 51.7308 209.258 cv
51.6233 209.14 51.5695 208.994 51.5695 208.819 cv
cp
52.7414 216.84 mo
51.6577 216.84 li
51.6577 210.501 li
52.7414 210.501 li
52.7414 216.84 li
cp
f
57.0185 216.074 mo
57.4048 216.074 57.7423 215.957 58.031 215.723 cv
58.321 215.488 58.4816 215.194 58.5129 214.842 cv
59.5385 214.842 li
59.5185 215.205 59.3929 215.552 59.1616 215.88 cv
58.9316 216.208 58.6241 216.47 58.2391 216.666 cv
57.8554 216.861 57.4485 216.958 57.0185 216.958 cv
56.1548 216.958 55.4679 216.67 54.9579 216.094 cv
54.4491 215.518 54.1948 214.73 54.1948 213.73 cv
54.1948 213.548 li
54.1948 212.93 54.3079 212.382 54.5341 211.902 cv
54.7604 211.42 55.0854 211.047 55.5091 210.782 cv
55.9329 210.516 56.4341 210.383 57.0129 210.383 cv
57.7229 210.383 58.3135 210.596 58.7848 211.022 cv
59.256 211.447 59.5073 212 59.5385 212.68 cv
58.5129 212.68 li
58.4816 212.27 58.326 211.933 58.046 211.669 cv
57.7673 211.405 57.4229 211.273 57.0129 211.273 cv
56.4616 211.273 56.0348 211.472 55.7323 211.87 cv
55.4298 212.266 55.2785 212.839 55.2785 213.589 cv
55.2785 213.794 li
55.2785 214.523 55.4285 215.086 55.7285 215.481 cv
56.0298 215.876 56.4598 216.074 57.0185 216.074 cv
cp
f
70.4536 216.84 mo
69.323 216.84 li
65.0273 210.267 li
65.0273 216.84 li
63.8967 216.84 li
63.8967 208.309 li
65.0273 208.309 li
69.3342 214.913 li
69.3342 208.309 li
70.4536 208.309 li
70.4536 216.84 li
cp
f
74.7783 211.273 mo
74.3408 211.273 73.9733 211.433 73.6758 211.752 cv
73.3795 212.07 73.1964 212.517 73.1264 213.09 cv
76.3008 213.09 li
76.3008 213.008 li
76.2695 212.458 76.1208 212.032 75.8545 211.729 cv
75.5895 211.425 75.2308 211.273 74.7783 211.273 cv
cp
74.9133 216.958 mo
74.0533 216.958 73.3539 216.676 72.8152 216.111 cv
72.2764 215.546 72.007 214.791 72.007 213.846 cv
72.007 213.647 li
72.007 213.018 72.127 212.457 72.367 211.964 cv
72.607 211.469 72.9427 211.082 73.3739 210.803 cv
73.8064 210.523 74.2745 210.383 74.7783 210.383 cv
75.602 210.383 76.242 210.655 76.6983 211.199 cv
77.1558 211.741 77.3845 212.518 77.3845 213.529 cv
77.3845 213.981 li
73.0908 213.981 li
73.1058 214.606 73.2883 215.111 73.6383 215.496 cv
73.9883 215.881 74.4327 216.074 74.9714 216.074 cv
75.3539 216.074 75.6777 215.995 75.9427 215.839 cv
76.2089 215.683 76.442 215.475 76.642 215.217 cv
77.3039 215.732 li
76.7727 216.55 75.9758 216.958 74.9133 216.958 cv
cp
f
82.5532 216.214 mo
82.132 216.71 81.5126 216.958 80.6951 216.958 cv
80.0201 216.958 79.5057 216.762 79.152 216.37 cv
78.7982 215.976 78.6195 215.395 78.6157 214.626 cv
78.6157 210.501 li
79.6994 210.501 li
79.6994 214.596 li
79.6994 215.557 80.0901 216.038 80.8713 216.038 cv
81.7001 216.038 82.2507 215.729 82.5232 215.112 cv
82.5232 210.501 li
83.6088 210.501 li
83.6088 216.84 li
82.5776 216.84 li
82.5532 216.214 li
cp
f
88.3191 211.472 mo
88.1553 211.446 87.9778 211.433 87.7866 211.433 cv
87.0753 211.433 86.5928 211.735 86.3391 212.34 cv
86.3391 216.84 li
85.2553 216.84 li
85.2553 210.501 li
86.3091 210.501 li
86.3259 211.232 li
86.6822 210.666 87.1866 210.383 87.8391 210.383 cv
88.0491 210.383 88.2091 210.41 88.3191 210.465 cv
88.3191 211.472 li
cp
f
90.1184 213.741 mo
90.1184 214.443 90.2815 215.008 90.6077 215.434 cv
90.934 215.86 91.3702 216.074 91.9165 216.074 cv
92.4677 216.074 92.9052 215.858 93.229 215.427 cv
93.5527 214.994 93.7146 214.389 93.7146 213.612 cv
93.7146 212.917 93.5496 212.354 93.2196 211.922 cv
92.8896 211.49 92.4515 211.273 91.9052 211.273 cv
91.3702 211.273 90.9384 211.487 90.6096 211.913 cv
90.2821 212.338 90.1184 212.947 90.1184 213.741 cv
cp
89.0271 213.612 mo
89.0271 212.99 89.149 212.432 89.3927 211.935 cv
89.6377 211.439 89.9777 211.057 90.4127 210.788 cv
90.849 210.518 91.3465 210.383 91.9052 210.383 cv
92.7677 210.383 93.4659 210.682 93.9996 211.279 cv
94.5334 211.877 94.8002 212.672 94.8002 213.664 cv
94.8002 213.741 li
94.8002 214.359 94.6815 214.912 94.444 215.402 cv
94.2077 215.892 93.8696 216.274 93.4296 216.548 cv
92.9909 216.822 92.4865 216.958 91.9165 216.958 cv
91.0577 216.958 90.3615 216.66 89.8277 216.062 cv
89.294 215.464 89.0271 214.672 89.0271 213.688 cv
89.0271 213.612 li
cp
f
102.82 215.158 mo
102.82 214.866 102.71 214.639 102.488 214.476 cv
102.268 214.313 101.884 214.174 101.335 214.058 cv
100.787 213.94 100.351 213.8 100.028 213.636 cv
99.7059 213.471 99.4678 213.275 99.3141 213.049 cv
99.1603 212.823 99.0834 212.553 99.0834 212.241 cv
99.0834 211.721 99.3028 211.282 99.7416 210.923 cv
100.182 210.563 100.743 210.383 101.427 210.383 cv
102.146 210.383 102.728 210.568 103.175 210.94 cv
103.622 211.311 103.846 211.785 103.846 212.363 cv
102.757 212.363 li
102.757 212.067 102.63 211.811 102.378 211.596 cv
102.127 211.381 101.81 211.273 101.427 211.273 cv
101.032 211.273 100.723 211.36 100.501 211.532 cv
100.278 211.704 100.167 211.928 100.167 212.205 cv
100.167 212.467 100.27 212.664 100.477 212.798 cv
100.684 212.93 101.058 213.057 101.6 213.178 cv
102.141 213.3 102.579 213.444 102.914 213.612 cv
103.25 213.779 103.499 213.982 103.66 214.219 cv
103.823 214.455 103.904 214.743 103.904 215.082 cv
103.904 215.649 103.677 216.104 103.223 216.447 cv
102.771 216.788 102.183 216.958 101.461 216.958 cv
100.953 216.958 100.504 216.868 100.113 216.688 cv
99.7228 216.508 99.4172 216.257 99.1959 215.935 cv
98.9759 215.612 98.8659 215.264 98.8659 214.889 cv
99.9497 214.889 li
99.9697 215.252 100.115 215.541 100.387 215.755 cv
100.658 215.967 101.016 216.074 101.461 216.074 cv
101.871 216.074 102.2 215.99 102.447 215.824 cv
102.696 215.658 102.82 215.436 102.82 215.158 cv
cp
f
107.392 215.252 mo
108.867 210.501 li
110.028 210.501 li
107.48 217.819 li
107.085 218.874 106.458 219.402 105.599 219.402 cv
105.393 219.383 li
104.99 219.308 li
104.99 218.428 li
105.282 218.451 li
105.65 218.451 105.936 218.377 106.141 218.228 cv
106.346 218.08 106.515 217.809 106.647 217.414 cv
106.887 216.769 li
104.626 210.501 li
105.809 210.501 li
107.392 215.252 li
cp
f
112.014 210.501 mo
112.044 211.204 li
112.509 210.657 113.136 210.383 113.924 210.383 cv
114.811 210.383 115.414 210.723 115.736 211.403 cv
115.946 211.098 116.219 210.852 116.557 210.664 cv
116.896 210.477 117.296 210.383 117.757 210.383 cv
119.147 210.383 119.854 211.119 119.877 212.592 cv
119.877 216.84 li
118.794 216.84 li
118.794 212.657 li
118.794 212.204 118.69 211.865 118.482 211.641 cv
118.276 211.416 117.929 211.303 117.44 211.303 cv
117.037 211.303 116.703 211.423 116.437 211.663 cv
116.172 211.904 116.018 212.227 115.976 212.633 cv
115.976 216.84 li
114.886 216.84 li
114.886 212.685 li
114.886 211.764 114.435 211.303 113.532 211.303 cv
112.821 211.303 112.335 211.606 112.074 212.211 cv
112.074 216.84 li
110.988 216.84 li
110.988 210.501 li
112.014 210.501 li
cp
f
125.796 213.617 mo
125.796 212.88 125.653 212.31 125.368 211.907 cv
125.083 211.505 124.673 211.303 124.138 211.303 cv
123.423 211.303 122.909 211.635 122.597 212.299 cv
122.597 215.042 li
122.928 215.706 123.446 216.038 124.149 216.038 cv
124.668 216.038 125.072 215.837 125.361 215.434 cv
125.651 215.032 125.796 214.426 125.796 213.617 cv
cp
126.879 213.741 mo
126.879 214.71 126.657 215.488 126.212 216.077 cv
125.767 216.665 125.169 216.958 124.419 216.958 cv
123.618 216.958 122.999 216.675 122.561 216.107 cv
122.509 216.84 li
121.513 216.84 li
121.513 207.84 li
122.597 207.84 li
122.597 211.199 li
123.034 210.655 123.637 210.383 124.406 210.383 cv
125.176 210.383 125.781 210.674 126.219 211.257 cv
126.659 211.838 126.879 212.635 126.879 213.647 cv
126.879 213.741 li
cp
f
129.048 213.741 mo
129.048 214.443 129.211 215.008 129.537 215.434 cv
129.864 215.86 130.3 216.074 130.846 216.074 cv
131.397 216.074 131.835 215.858 132.159 215.427 cv
132.482 214.994 132.644 214.389 132.644 213.612 cv
132.644 212.917 132.479 212.354 132.149 211.922 cv
131.819 211.49 131.381 211.273 130.835 211.273 cv
130.3 211.273 129.868 211.487 129.539 211.913 cv
129.212 212.338 129.048 212.947 129.048 213.741 cv
cp
127.957 213.612 mo
127.957 212.99 128.079 212.432 128.322 211.935 cv
128.567 211.439 128.907 211.057 129.342 210.788 cv
129.779 210.518 130.276 210.383 130.835 210.383 cv
131.697 210.383 132.396 210.682 132.929 211.279 cv
133.463 211.877 133.73 212.672 133.73 213.664 cv
133.73 213.741 li
133.73 214.359 133.611 214.912 133.374 215.402 cv
133.137 215.892 132.799 216.274 132.359 216.548 cv
131.921 216.822 131.416 216.958 130.846 216.958 cv
129.987 216.958 129.291 216.66 128.757 216.062 cv
128.224 215.464 127.957 214.672 127.957 213.688 cv
127.957 213.612 li
cp
f
136.267 216.84 mo
135.183 216.84 li
135.183 207.84 li
136.267 207.84 li
136.267 216.84 li
cp
f
138.007 208.819 mo
138.007 208.643 138.061 208.494 138.168 208.373 cv
138.276 208.252 138.435 208.191 138.645 208.191 cv
138.856 208.191 139.016 208.252 139.125 208.373 cv
139.235 208.494 139.29 208.643 139.29 208.819 cv
139.29 208.994 139.235 209.14 139.125 209.258 cv
139.016 209.375 138.856 209.434 138.645 209.434 cv
138.435 209.434 138.276 209.375 138.168 209.258 cv
138.061 209.14 138.007 208.994 138.007 208.819 cv
cp
139.179 216.84 mo
138.095 216.84 li
138.095 210.501 li
139.179 210.501 li
139.179 216.84 li
cp
f
143.456 216.074 mo
143.842 216.074 144.18 215.957 144.469 215.723 cv
144.759 215.488 144.919 215.194 144.95 214.842 cv
145.976 214.842 li
145.956 215.205 145.83 215.552 145.599 215.88 cv
145.369 216.208 145.062 216.47 144.677 216.666 cv
144.293 216.861 143.886 216.958 143.456 216.958 cv
142.592 216.958 141.905 216.67 141.395 216.094 cv
140.887 215.518 140.632 214.73 140.632 213.73 cv
140.632 213.548 li
140.632 212.93 140.745 212.382 140.972 211.902 cv
141.198 211.42 141.523 211.047 141.947 210.782 cv
142.37 210.516 142.872 210.383 143.45 210.383 cv
144.16 210.383 144.751 210.596 145.222 211.022 cv
145.694 211.447 145.945 212 145.976 212.68 cv
144.95 212.68 li
144.919 212.27 144.764 211.933 144.484 211.669 cv
144.205 211.405 143.86 211.273 143.45 211.273 cv
142.899 211.273 142.472 211.472 142.17 211.87 cv
141.867 212.266 141.716 212.839 141.716 213.589 cv
141.716 213.794 li
141.716 214.523 141.866 215.086 142.166 215.481 cv
142.467 215.876 142.897 216.074 143.456 216.074 cv
cp
f
153.372 168.852 mo
149.872 168.852 li
f
153.372 168.852 mo
149.872 168.852 li
@
4.04625 170.487 mo
6.70125 170.487 li
6.70125 166.304 li
6.57188 166.539 li
4.04625 170.487 li
cp
7.79063 170.487 mo
8.97375 170.487 li
8.97375 171.372 li
7.79063 171.372 li
7.79063 173.352 li
6.70125 173.352 li
6.70125 171.372 li
2.81625 171.372 li
2.81625 170.733 li
6.63563 164.821 li
7.79063 164.821 li
7.79063 170.487 li
cp
f
10.087 172.784 mo
10.087 172.597 10.1427 172.44 10.2539 172.315 cv
10.3652 172.19 10.532 172.128 10.7545 172.128 cv
10.977 172.128 11.1458 172.19 11.2608 172.315 cv
11.377 172.44 11.4352 172.597 11.4352 172.784 cv
11.4352 172.964 11.377 173.115 11.2608 173.236 cv
11.1458 173.356 10.977 173.416 10.7545 173.416 cv
10.532 173.416 10.3652 173.356 10.2539 173.236 cv
10.1427 173.115 10.087 172.964 10.087 172.784 cv
cp
f
22.9191 173.352 mo
21.7884 173.352 li
17.4928 166.779 li
17.4928 173.352 li
16.3622 173.352 li
16.3622 164.821 li
17.4928 164.821 li
21.7997 171.425 li
21.7997 164.821 li
22.9191 164.821 li
22.9191 173.352 li
cp
f
27.2437 167.785 mo
26.8062 167.785 26.4387 167.945 26.1413 168.264 cv
25.845 168.582 25.6619 169.029 25.5919 169.602 cv
28.7663 169.602 li
28.7663 169.52 li
28.735 168.97 28.5863 168.544 28.32 168.241 cv
28.055 167.937 27.6963 167.785 27.2437 167.785 cv
cp
27.3787 173.47 mo
26.5187 173.47 25.8194 173.188 25.2806 172.623 cv
24.7419 172.058 24.4725 171.303 24.4725 170.358 cv
24.4725 170.159 li
24.4725 169.53 24.5925 168.969 24.8325 168.475 cv
25.0725 167.98 25.4081 167.594 25.8394 167.315 cv
26.2719 167.035 26.74 166.895 27.2437 166.895 cv
28.0675 166.895 28.7075 167.167 29.1637 167.71 cv
29.6213 168.253 29.85 169.03 29.85 170.041 cv
29.85 170.493 li
25.5562 170.493 li
25.5713 171.118 25.7537 171.623 26.1038 172.008 cv
26.4538 172.393 26.8981 172.585 27.4369 172.585 cv
27.8194 172.585 28.1431 172.507 28.4081 172.351 cv
28.6744 172.195 28.9075 171.987 29.1075 171.729 cv
29.7694 172.244 li
29.2381 173.062 28.4412 173.47 27.3787 173.47 cv
cp
f
35.0187 172.726 mo
34.5974 173.222 33.978 173.47 33.1605 173.47 cv
32.4855 173.47 31.9712 173.274 31.6174 172.882 cv
31.2637 172.488 31.0849 171.907 31.0812 171.138 cv
31.0812 167.013 li
32.1649 167.013 li
32.1649 171.108 li
32.1649 172.069 32.5555 172.55 33.3368 172.55 cv
34.1655 172.55 34.7162 172.241 34.9887 171.624 cv
34.9887 167.013 li
36.0743 167.013 li
36.0743 173.352 li
35.043 173.352 li
35.0187 172.726 li
cp
f
40.7845 167.984 mo
40.6208 167.958 40.4433 167.945 40.252 167.945 cv
39.5408 167.945 39.0583 168.247 38.8045 168.852 cv
38.8045 173.352 li
37.7208 173.352 li
37.7208 167.013 li
38.7745 167.013 li
38.7914 167.744 li
39.1477 167.178 39.652 166.895 40.3045 166.895 cv
40.5145 166.895 40.6745 166.922 40.7845 166.977 cv
40.7845 167.984 li
cp
f
42.5838 170.253 mo
42.5838 170.955 42.747 171.52 43.0732 171.946 cv
43.3995 172.372 43.8357 172.585 44.382 172.585 cv
44.9332 172.585 45.3707 172.37 45.6945 171.939 cv
46.0182 171.506 46.1801 170.901 46.1801 170.124 cv
46.1801 169.429 46.0151 168.865 45.6851 168.434 cv
45.3551 168.002 44.917 167.785 44.3707 167.785 cv
43.8357 167.785 43.4038 167.999 43.0751 168.425 cv
42.7476 168.85 42.5838 169.459 42.5838 170.253 cv
cp
41.4926 170.124 mo
41.4926 169.502 41.6145 168.944 41.8582 168.447 cv
42.1032 167.951 42.4432 167.569 42.8782 167.3 cv
43.3145 167.03 43.812 166.895 44.3707 166.895 cv
45.2332 166.895 45.9313 167.194 46.4651 167.791 cv
46.9988 168.389 47.2657 169.184 47.2657 170.176 cv
47.2657 170.253 li
47.2657 170.87 47.147 171.424 46.9095 171.914 cv
46.6732 172.404 46.3351 172.786 45.8951 173.06 cv
45.4563 173.334 44.952 173.47 44.382 173.47 cv
43.5232 173.47 42.827 173.172 42.2932 172.574 cv
41.7595 171.975 41.4926 171.184 41.4926 170.2 cv
41.4926 170.124 li
cp
f
48.5876 167.624 mo
48.5876 167.437 48.6432 167.28 48.7545 167.155 cv
48.8657 167.03 49.0326 166.968 49.2551 166.968 cv
49.4776 166.968 49.6463 167.03 49.7613 167.155 cv
49.8776 167.28 49.9357 167.437 49.9357 167.624 cv
49.9357 167.804 49.8776 167.955 49.7613 168.076 cv
49.6463 168.196 49.4776 168.256 49.2551 168.256 cv
49.0326 168.256 48.8657 168.196 48.7545 168.076 cv
48.6432 167.955 48.5876 167.804 48.5876 167.624 cv
cp
48.5876 172.784 mo
48.5876 172.597 48.6432 172.44 48.7545 172.315 cv
48.8657 172.19 49.0326 172.128 49.2551 172.128 cv
49.4776 172.128 49.6463 172.19 49.7613 172.315 cv
49.8776 172.44 49.9357 172.597 49.9357 172.784 cv
49.9357 172.964 49.8776 173.115 49.7613 173.236 cv
49.6463 173.356 49.4776 173.416 49.2551 173.416 cv
49.0326 173.416 48.8657 173.356 48.7545 173.236 cv
48.6432 173.115 48.5876 172.964 48.5876 172.784 cv
cp
f
57.1852 169.55 mo
56.2202 169.272 55.5177 168.932 55.0777 168.528 cv
54.6389 168.123 54.4195 167.624 54.4195 167.03 cv
54.4195 166.359 54.6877 165.803 55.2239 165.363 cv
55.7614 164.923 56.4602 164.703 57.3202 164.703 cv
57.9052 164.703 58.427 164.817 58.8858 165.044 cv
59.3458 165.27 59.7014 165.583 59.9527 165.982 cv
60.2052 166.379 60.3314 166.815 60.3314 167.289 cv
59.2008 167.289 li
59.2008 166.772 59.0364 166.367 58.7077 166.072 cv
58.3802 165.777 57.9177 165.629 57.3202 165.629 cv
56.7652 165.629 56.332 165.752 56.0208 165.997 cv
55.7108 166.24 55.5558 166.579 55.5558 167.013 cv
55.5558 167.36 55.7033 167.654 55.9983 167.894 cv
56.2933 168.134 56.7952 168.354 57.5039 168.554 cv
58.2127 168.753 58.767 168.972 59.167 169.212 cv
59.5683 169.452 59.8652 169.733 60.0577 170.054 cv
60.2514 170.374 60.3483 170.751 60.3483 171.185 cv
60.3483 171.876 60.0789 172.43 59.5402 172.846 cv
59.0014 173.262 58.2808 173.47 57.3783 173.47 cv
56.792 173.47 56.2452 173.358 55.7377 173.133 cv
55.2302 172.908 54.8383 172.6 54.562 172.21 cv
54.287 171.819 54.1495 171.375 54.1495 170.879 cv
55.2802 170.879 li
55.2802 171.395 55.4708 171.803 55.852 172.102 cv
56.2333 172.4 56.742 172.55 57.3783 172.55 cv
57.972 172.55 58.427 172.429 58.7433 172.186 cv
59.0595 171.944 59.2177 171.614 59.2177 171.196 cv
59.2177 170.779 59.0708 170.455 58.777 170.227 cv
58.4845 169.998 57.9539 169.772 57.1852 169.55 cv
cp
f
63.6949 171.764 mo
65.1705 167.013 li
66.3312 167.013 li
63.783 174.331 li
63.388 175.386 62.7612 175.914 61.9024 175.914 cv
61.6962 175.895 li
61.293 175.82 li
61.293 174.94 li
61.5855 174.963 li
61.953 174.963 62.2393 174.889 62.4443 174.74 cv
62.6493 174.592 62.818 174.321 62.9505 173.926 cv
63.1905 173.281 li
60.9293 167.013 li
62.1124 167.013 li
63.6949 171.764 li
cp
f
68.317 167.013 mo
68.347 167.716 li
68.812 167.169 69.4389 166.895 70.2277 166.895 cv
71.1139 166.895 71.7177 167.235 72.0389 167.915 cv
72.2489 167.61 72.5227 167.364 72.8602 167.176 cv
73.1989 166.989 73.5989 166.895 74.0602 166.895 cv
75.4502 166.895 76.157 167.631 76.1808 169.104 cv
76.1808 173.352 li
75.097 173.352 li
75.097 169.169 li
75.097 168.715 74.9933 168.377 74.7858 168.153 cv
74.5795 167.928 74.232 167.815 73.7433 167.815 cv
73.3408 167.815 73.0064 167.935 72.7402 168.175 cv
72.4752 168.415 72.3214 168.739 72.2789 169.145 cv
72.2789 173.352 li
71.1895 173.352 li
71.1895 169.197 li
71.1895 168.276 70.7383 167.815 69.8358 167.815 cv
69.1245 167.815 68.6383 168.118 68.377 168.723 cv
68.377 173.352 li
67.2914 173.352 li
67.2914 167.013 li
68.317 167.013 li
cp
f
82.099 170.129 mo
82.099 169.392 81.9565 168.822 81.6715 168.419 cv
81.3865 168.017 80.9765 167.815 80.4415 167.815 cv
79.7265 167.815 79.2127 168.147 78.9002 168.811 cv
78.9002 171.554 li
79.2315 172.218 79.749 172.55 80.4527 172.55 cv
80.9715 172.55 81.3752 172.349 81.664 171.946 cv
81.954 171.544 82.099 170.938 82.099 170.129 cv
cp
83.1827 170.253 mo
83.1827 171.222 82.9602 172 82.5152 172.589 cv
82.0702 173.177 81.4727 173.47 80.7227 173.47 cv
79.9215 173.47 79.3021 173.187 78.8646 172.619 cv
78.8121 173.352 li
77.8165 173.352 li
77.8165 164.352 li
78.9002 164.352 li
78.9002 167.71 li
79.3377 167.167 79.9409 166.895 80.7096 166.895 cv
81.4796 166.895 82.084 167.186 82.5227 167.769 cv
82.9627 168.35 83.1827 169.147 83.1827 170.159 cv
83.1827 170.253 li
cp
f
85.3514 170.253 mo
85.3514 170.955 85.5145 171.52 85.8408 171.946 cv
86.167 172.372 86.6033 172.585 87.1495 172.585 cv
87.7008 172.585 88.1383 172.37 88.462 171.939 cv
88.7858 171.506 88.9477 170.901 88.9477 170.124 cv
88.9477 169.429 88.7827 168.865 88.4527 168.434 cv
88.1227 168.002 87.6845 167.785 87.1383 167.785 cv
86.6033 167.785 86.1714 167.999 85.8427 168.425 cv
85.5152 168.85 85.3514 169.459 85.3514 170.253 cv
cp
84.2602 170.124 mo
84.2602 169.502 84.382 168.944 84.6258 168.447 cv
84.8708 167.951 85.2108 167.569 85.6458 167.3 cv
86.082 167.03 86.5795 166.895 87.1383 166.895 cv
88.0008 166.895 88.6989 167.194 89.2327 167.791 cv
89.7664 168.389 90.0333 169.184 90.0333 170.176 cv
90.0333 170.253 li
90.0333 170.87 89.9145 171.424 89.677 171.914 cv
89.4408 172.404 89.1027 172.786 88.6627 173.06 cv
88.2239 173.334 87.7195 173.47 87.1495 173.47 cv
86.2908 173.47 85.5945 173.172 85.0608 172.574 cv
84.527 171.975 84.2602 171.184 84.2602 170.2 cv
84.2602 170.124 li
cp
f
92.5702 173.352 mo
91.4864 173.352 li
91.4864 164.352 li
92.5702 164.352 li
92.5702 173.352 li
cp
f
94.3104 165.331 mo
94.3104 165.155 94.3641 165.006 94.4716 164.885 cv
94.5791 164.764 94.7379 164.703 94.9479 164.703 cv
95.1591 164.703 95.3191 164.764 95.4279 164.885 cv
95.5379 165.006 95.5929 165.155 95.5929 165.331 cv
95.5929 165.506 95.5379 165.652 95.4279 165.77 cv
95.3191 165.887 95.1591 165.946 94.9479 165.946 cv
94.7379 165.946 94.5791 165.887 94.4716 165.77 cv
94.3641 165.652 94.3104 165.506 94.3104 165.331 cv
cp
95.4823 173.352 mo
94.3985 173.352 li
94.3985 167.013 li
95.4823 167.013 li
95.4823 173.352 li
cp
f
99.7594 172.585 mo
100.146 172.585 100.483 172.469 100.772 172.235 cv
101.062 172 101.222 171.706 101.254 171.354 cv
102.279 171.354 li
102.259 171.717 102.134 172.064 101.902 172.392 cv
101.673 172.72 101.365 172.982 100.98 173.178 cv
100.596 173.373 100.189 173.47 99.7594 173.47 cv
98.8956 173.47 98.2087 173.182 97.6987 172.606 cv
97.19 172.03 96.9356 171.242 96.9356 170.242 cv
96.9356 170.06 li
96.9356 169.442 97.0488 168.894 97.275 168.414 cv
97.5013 167.932 97.8262 167.559 98.25 167.294 cv
98.6738 167.028 99.175 166.895 99.7537 166.895 cv
100.464 166.895 101.054 167.108 101.526 167.534 cv
101.997 167.959 102.248 168.512 102.279 169.192 cv
101.254 169.192 li
101.222 168.782 101.067 168.445 100.787 168.181 cv
100.508 167.917 100.164 167.785 99.7537 167.785 cv
99.2025 167.785 98.7756 167.984 98.4731 168.382 cv
98.1706 168.778 98.0194 169.351 98.0194 170.101 cv
98.0194 170.305 li
98.0194 171.035 98.1694 171.598 98.4694 171.993 cv
98.7706 172.388 99.2006 172.585 99.7594 172.585 cv
cp
f
108.289 168.687 mo
109.803 165.138 li
106.784 165.138 li
108.289 168.687 li
cp
106.784 173.035 mo
109.803 173.035 li
108.289 169.484 li
106.784 173.035 li
cp
106.549 165.389 mo
106.549 172.79 li
108.121 169.087 li
106.549 165.389 li
cp
110.065 172.859 mo
110.065 165.32 li
108.46 169.087 li
110.065 172.859 li
cp
110.382 173.352 mo
106.234 173.352 li
106.234 164.821 li
110.382 164.821 li
110.382 173.352 li
cp
f
121.485 173.352 mo
120.355 173.352 li
116.059 166.779 li
116.059 173.352 li
114.929 173.352 li
114.929 164.821 li
116.059 164.821 li
120.366 171.425 li
120.366 164.821 li
121.485 164.821 li
121.485 173.352 li
cp
f
125.81 167.785 mo
125.373 167.785 125.005 167.945 124.708 168.264 cv
124.411 168.582 124.228 169.029 124.158 169.602 cv
127.333 169.602 li
127.333 169.52 li
127.301 168.97 127.153 168.544 126.886 168.241 cv
126.621 167.937 126.263 167.785 125.81 167.785 cv
cp
125.945 173.47 mo
125.085 173.47 124.386 173.188 123.847 172.623 cv
123.308 172.058 123.039 171.303 123.039 170.358 cv
123.039 170.159 li
123.039 169.53 123.159 168.969 123.399 168.475 cv
123.639 167.98 123.975 167.594 124.406 167.315 cv
124.838 167.035 125.306 166.895 125.81 166.895 cv
126.634 166.895 127.274 167.167 127.73 167.71 cv
128.188 168.253 128.416 169.03 128.416 170.041 cv
128.416 170.493 li
124.123 170.493 li
124.138 171.118 124.32 171.623 124.67 172.008 cv
125.02 172.393 125.465 172.585 126.003 172.585 cv
126.386 172.585 126.71 172.507 126.975 172.351 cv
127.241 172.195 127.474 171.987 127.674 171.729 cv
128.336 172.244 li
127.805 173.062 127.008 173.47 125.945 173.47 cv
cp
f
133.585 172.726 mo
133.164 173.222 132.544 173.47 131.727 173.47 cv
131.052 173.47 130.538 173.274 130.184 172.882 cv
129.83 172.488 129.651 171.907 129.648 171.138 cv
129.648 167.013 li
130.731 167.013 li
130.731 171.108 li
130.731 172.069 131.122 172.55 131.903 172.55 cv
132.732 172.55 133.283 172.241 133.555 171.624 cv
133.555 167.013 li
134.641 167.013 li
134.641 173.352 li
133.609 173.352 li
133.585 172.726 li
cp
f
139.351 167.984 mo
139.187 167.958 139.01 167.945 138.818 167.945 cv
138.107 167.945 137.625 168.247 137.371 168.852 cv
137.371 173.352 li
136.287 173.352 li
136.287 167.013 li
137.341 167.013 li
137.358 167.744 li
137.714 167.178 138.218 166.895 138.871 166.895 cv
139.081 166.895 139.241 166.922 139.351 166.977 cv
139.351 167.984 li
cp
f
141.15 170.253 mo
141.15 170.955 141.313 171.52 141.64 171.946 cv
141.966 172.372 142.402 172.585 142.948 172.585 cv
143.5 172.585 143.937 172.37 144.261 171.939 cv
144.585 171.506 144.746 170.901 144.746 170.124 cv
144.746 169.429 144.581 168.865 144.251 168.434 cv
143.921 168.002 143.483 167.785 142.937 167.785 cv
142.402 167.785 141.97 167.999 141.641 168.425 cv
141.314 168.85 141.15 169.459 141.15 170.253 cv
cp
140.059 170.124 mo
140.059 169.502 140.181 168.944 140.425 168.447 cv
140.67 167.951 141.01 167.569 141.445 167.3 cv
141.881 167.03 142.378 166.895 142.937 166.895 cv
143.8 166.895 144.498 167.194 145.031 167.791 cv
145.565 168.389 145.832 169.184 145.832 170.176 cv
145.832 170.253 li
145.832 170.87 145.713 171.424 145.476 171.914 cv
145.24 172.404 144.901 172.786 144.461 173.06 cv
144.023 173.334 143.518 173.47 142.948 173.47 cv
142.09 173.47 141.393 173.172 140.86 172.574 cv
140.326 171.975 140.059 171.184 140.059 170.2 cv
140.059 170.124 li
cp
f
153.372 125.364 mo
149.872 125.364 li
f
153.372 125.364 mo
149.872 125.364 li
@
48.855 125.072 mo
49.6688 125.072 li
50.1812 125.063 50.5837 124.928 50.8763 124.667 cv
51.1688 124.406 51.315 124.052 51.315 123.606 cv
51.315 122.606 50.8169 122.106 49.8206 122.106 cv
49.3519 122.106 48.9781 122.24 48.6994 122.509 cv
48.4206 122.776 48.2813 123.131 48.2813 123.572 cv
47.1956 123.572 li
47.1956 122.896 47.4425 122.334 47.9362 121.886 cv
48.4312 121.439 49.0594 121.215 49.8206 121.215 cv
50.6256 121.215 51.2562 121.428 51.7125 121.854 cv
52.17 122.281 52.3988 122.873 52.3988 123.63 cv
52.3988 124.001 52.2788 124.361 52.0387 124.708 cv
51.7987 125.056 51.4719 125.316 51.0581 125.488 cv
51.5269 125.636 51.8887 125.881 52.1437 126.225 cv
52.4 126.569 52.5281 126.989 52.5281 127.485 cv
52.5281 128.251 52.2781 128.859 51.7781 129.309 cv
51.2781 129.758 50.6275 129.982 49.8262 129.982 cv
49.0262 129.982 48.375 129.766 47.8725 129.332 cv
47.3713 128.898 47.1206 128.326 47.1206 127.614 cv
48.21 127.614 li
48.21 128.063 48.3563 128.423 48.6488 128.693 cv
48.9425 128.962 49.3356 129.098 49.8281 129.098 cv
50.3506 129.098 50.7506 128.961 51.0281 128.687 cv
51.3056 128.413 51.4444 128.021 51.4444 127.509 cv
51.4444 127.013 51.2919 126.632 50.9869 126.368 cv
50.6831 126.101 50.2437 125.964 49.6688 125.957 cv
48.855 125.957 li
48.855 125.072 li
cp
f
54.1514 129.296 mo
54.1514 129.109 54.207 128.952 54.3183 128.827 cv
54.4295 128.702 54.5964 128.64 54.8189 128.64 cv
55.0414 128.64 55.2102 128.702 55.3252 128.827 cv
55.4414 128.952 55.4995 129.109 55.4995 129.296 cv
55.4995 129.476 55.4414 129.627 55.3252 129.748 cv
55.2102 129.868 55.0414 129.928 54.8189 129.928 cv
54.5964 129.928 54.4295 129.868 54.3183 129.748 cv
54.207 129.627 54.1514 129.476 54.1514 129.296 cv
cp
f
66.9834 129.864 mo
65.8528 129.864 li
61.5572 123.291 li
61.5572 129.864 li
60.4266 129.864 li
60.4266 121.333 li
61.5572 121.333 li
65.8641 127.937 li
65.8641 121.333 li
66.9834 121.333 li
66.9834 129.864 li
cp
f
71.3081 124.298 mo
70.8706 124.298 70.5031 124.457 70.2056 124.776 cv
69.9094 125.094 69.7262 125.541 69.6563 126.114 cv
72.8306 126.114 li
72.8306 126.032 li
72.7994 125.482 72.6506 125.056 72.3844 124.753 cv
72.1194 124.449 71.7606 124.298 71.3081 124.298 cv
cp
71.4431 129.982 mo
70.5831 129.982 69.8838 129.7 69.345 129.135 cv
68.8063 128.57 68.5369 127.815 68.5369 126.87 cv
68.5369 126.671 li
68.5369 126.043 68.6569 125.481 68.8969 124.988 cv
69.1369 124.493 69.4725 124.106 69.9037 123.827 cv
70.3363 123.547 70.8044 123.407 71.3081 123.407 cv
72.1319 123.407 72.7719 123.679 73.2281 124.223 cv
73.6856 124.765 73.9144 125.542 73.9144 126.553 cv
73.9144 127.005 li
69.6206 127.005 li
69.6356 127.63 69.8181 128.135 70.1681 128.52 cv
70.5181 128.905 70.9625 129.098 71.5013 129.098 cv
71.8838 129.098 72.2075 129.019 72.4725 128.863 cv
72.7387 128.707 72.9719 128.499 73.1719 128.241 cv
73.8337 128.756 li
73.3025 129.574 72.5056 129.982 71.4431 129.982 cv
cp
f
79.083 129.238 mo
78.6618 129.734 78.0424 129.982 77.2249 129.982 cv
76.5499 129.982 76.0355 129.786 75.6818 129.394 cv
75.328 129 75.1493 128.419 75.1455 127.65 cv
75.1455 123.525 li
76.2293 123.525 li
76.2293 127.62 li
76.2293 128.581 76.6199 129.062 77.4012 129.062 cv
78.2299 129.062 78.7805 128.753 79.053 128.136 cv
79.053 123.525 li
80.1387 123.525 li
80.1387 129.864 li
79.1074 129.864 li
79.083 129.238 li
cp
f
84.8489 124.496 mo
84.6852 124.47 84.5077 124.457 84.3164 124.457 cv
83.6052 124.457 83.1227 124.759 82.8689 125.364 cv
82.8689 129.864 li
81.7852 129.864 li
81.7852 123.525 li
82.8389 123.525 li
82.8558 124.256 li
83.212 123.69 83.7164 123.407 84.3689 123.407 cv
84.5789 123.407 84.7389 123.434 84.8489 123.489 cv
84.8489 124.496 li
cp
f
86.6482 126.765 mo
86.6482 127.467 86.8113 128.032 87.1376 128.458 cv
87.4638 128.884 87.9001 129.098 88.4463 129.098 cv
88.9976 129.098 89.4351 128.882 89.7588 128.451 cv
90.0826 128.018 90.2445 127.413 90.2445 126.636 cv
90.2445 125.941 90.0795 125.378 89.7495 124.946 cv
89.4194 124.514 88.9813 124.298 88.4351 124.298 cv
87.9001 124.298 87.4682 124.511 87.1395 124.937 cv
86.812 125.362 86.6482 125.971 86.6482 126.765 cv
cp
85.557 126.636 mo
85.557 126.014 85.6788 125.456 85.9226 124.959 cv
86.1676 124.463 86.5076 124.081 86.9426 123.812 cv
87.3788 123.542 87.8763 123.407 88.4351 123.407 cv
89.2976 123.407 89.9957 123.706 90.5294 124.303 cv
91.0632 124.901 91.3301 125.696 91.3301 126.688 cv
91.3301 126.765 li
91.3301 127.382 91.2113 127.936 90.9738 128.426 cv
90.7376 128.916 90.3995 129.298 89.9594 129.572 cv
89.5207 129.846 89.0163 129.982 88.4463 129.982 cv
87.5876 129.982 86.8913 129.684 86.3576 129.086 cv
85.8238 128.488 85.557 127.696 85.557 126.713 cv
85.557 126.636 li
cp
f
92.7288 131.563 mo
92.1138 131.141 li
92.4801 130.63 92.6713 130.103 92.6876 129.559 cv
92.6876 128.582 li
93.7488 128.582 li
93.7488 129.431 li
93.7488 129.825 93.652 130.219 93.4582 130.614 cv
93.2645 131.009 93.0213 131.326 92.7288 131.563 cv
cp
92.517 124.136 mo
92.517 123.949 92.5726 123.793 92.6838 123.668 cv
92.7951 123.543 92.962 123.48 93.1844 123.48 cv
93.407 123.48 93.5757 123.543 93.6907 123.668 cv
93.807 123.793 93.8651 123.949 93.8651 124.136 cv
93.8651 124.316 93.807 124.467 93.6907 124.588 cv
93.5757 124.708 93.407 124.768 93.1844 124.768 cv
92.962 124.768 92.7951 124.708 92.6838 124.588 cv
92.5726 124.467 92.517 124.316 92.517 124.136 cv
cp
f
100.88 126.062 mo
99.9154 125.784 99.2129 125.444 98.7729 125.04 cv
98.3341 124.635 98.1148 124.136 98.1148 123.542 cv
98.1148 122.871 98.3829 122.315 98.9191 121.875 cv
99.4566 121.435 100.155 121.215 101.015 121.215 cv
101.6 121.215 102.122 121.329 102.581 121.556 cv
103.041 121.783 103.397 122.095 103.648 122.494 cv
103.9 122.891 104.027 123.327 104.027 123.801 cv
102.896 123.801 li
102.896 123.284 102.732 122.879 102.403 122.584 cv
102.075 122.289 101.613 122.141 101.015 122.141 cv
100.46 122.141 100.027 122.264 99.716 122.509 cv
99.406 122.753 99.251 123.091 99.251 123.525 cv
99.251 123.872 99.3985 124.166 99.6935 124.406 cv
99.9885 124.646 100.49 124.866 101.199 125.066 cv
101.908 125.265 102.462 125.484 102.862 125.724 cv
103.264 125.964 103.56 126.245 103.753 126.566 cv
103.947 126.886 104.044 127.263 104.044 127.697 cv
104.044 128.388 103.774 128.942 103.235 129.358 cv
102.697 129.774 101.976 129.982 101.074 129.982 cv
100.487 129.982 99.9404 129.87 99.4329 129.645 cv
98.9254 129.42 98.5335 129.113 98.2573 128.723 cv
97.9823 128.331 97.8448 127.888 97.8448 127.391 cv
98.9754 127.391 li
98.9754 127.908 99.166 128.315 99.5473 128.614 cv
99.9285 128.913 100.437 129.062 101.074 129.062 cv
101.667 129.062 102.122 128.941 102.439 128.698 cv
102.755 128.456 102.913 128.126 102.913 127.708 cv
102.913 127.291 102.766 126.967 102.472 126.739 cv
102.18 126.51 101.649 126.284 100.88 126.062 cv
cp
f
107.39 128.276 mo
108.866 123.525 li
110.026 123.525 li
107.478 130.843 li
107.083 131.898 106.456 132.426 105.598 132.426 cv
105.391 132.407 li
104.988 132.332 li
104.988 131.452 li
105.281 131.475 li
105.648 131.475 105.935 131.401 106.14 131.252 cv
106.345 131.104 106.513 130.833 106.646 130.438 cv
106.886 129.793 li
104.625 123.525 li
105.808 123.525 li
107.39 128.276 li
cp
f
112.012 123.525 mo
112.042 124.228 li
112.507 123.681 113.134 123.407 113.923 123.407 cv
114.809 123.407 115.413 123.747 115.734 124.427 cv
115.944 124.122 116.218 123.876 116.555 123.688 cv
116.894 123.501 117.294 123.407 117.755 123.407 cv
119.145 123.407 119.852 124.143 119.876 125.616 cv
119.876 129.864 li
118.792 129.864 li
118.792 125.681 li
118.792 125.228 118.689 124.889 118.481 124.665 cv
118.275 124.44 117.927 124.327 117.439 124.327 cv
117.036 124.327 116.702 124.448 116.435 124.688 cv
116.17 124.927 116.017 125.251 115.974 125.657 cv
115.974 129.864 li
114.885 129.864 li
114.885 125.709 li
114.885 124.788 114.434 124.327 113.531 124.327 cv
112.82 124.327 112.334 124.63 112.072 125.235 cv
112.072 129.864 li
110.987 129.864 li
110.987 123.525 li
112.012 123.525 li
cp
f
125.794 126.641 mo
125.794 125.904 125.652 125.334 125.367 124.931 cv
125.082 124.529 124.672 124.327 124.137 124.327 cv
123.422 124.327 122.908 124.659 122.595 125.323 cv
122.595 128.066 li
122.927 128.73 123.444 129.062 124.148 129.062 cv
124.667 129.062 125.07 128.861 125.359 128.458 cv
125.649 128.056 125.794 127.45 125.794 126.641 cv
cp
126.878 126.765 mo
126.878 127.734 126.655 128.512 126.21 129.101 cv
125.765 129.689 125.168 129.982 124.418 129.982 cv
123.617 129.982 122.997 129.699 122.56 129.131 cv
122.507 129.864 li
121.512 129.864 li
121.512 120.864 li
122.595 120.864 li
122.595 124.223 li
123.033 123.679 123.636 123.407 124.405 123.407 cv
125.175 123.407 125.779 123.698 126.218 124.281 cv
126.658 124.862 126.878 125.659 126.878 126.671 cv
126.878 126.765 li
cp
f
129.047 126.765 mo
129.047 127.467 129.21 128.032 129.536 128.458 cv
129.862 128.884 130.299 129.098 130.845 129.098 cv
131.396 129.098 131.834 128.882 132.157 128.451 cv
132.481 128.018 132.643 127.413 132.643 126.636 cv
132.643 125.941 132.478 125.378 132.148 124.946 cv
131.818 124.514 131.38 124.298 130.834 124.298 cv
130.299 124.298 129.867 124.511 129.538 124.937 cv
129.21 125.362 129.047 125.971 129.047 126.765 cv
cp
127.955 126.636 mo
127.955 126.014 128.077 125.456 128.321 124.959 cv
128.566 124.463 128.906 124.081 129.341 123.812 cv
129.777 123.542 130.275 123.407 130.834 123.407 cv
131.696 123.407 132.394 123.706 132.928 124.303 cv
133.462 124.901 133.729 125.696 133.729 126.688 cv
133.729 126.765 li
133.729 127.382 133.61 127.936 133.372 128.426 cv
133.136 128.916 132.798 129.298 132.358 129.572 cv
131.919 129.846 131.415 129.982 130.845 129.982 cv
129.986 129.982 129.29 129.684 128.756 129.086 cv
128.222 128.488 127.955 127.696 127.955 126.713 cv
127.955 126.636 li
cp
f
136.265 129.864 mo
135.182 129.864 li
135.182 120.864 li
136.265 120.864 li
136.265 129.864 li
cp
f
138.006 121.843 mo
138.006 121.667 138.059 121.518 138.167 121.397 cv
138.274 121.276 138.433 121.215 138.643 121.215 cv
138.854 121.215 139.014 121.276 139.123 121.397 cv
139.233 121.518 139.288 121.667 139.288 121.843 cv
139.288 122.018 139.233 122.164 139.123 122.282 cv
139.014 122.399 138.854 122.458 138.643 122.458 cv
138.433 122.458 138.274 122.399 138.167 122.282 cv
138.059 122.164 138.006 122.018 138.006 121.843 cv
cp
139.177 129.864 mo
138.094 129.864 li
138.094 123.525 li
139.177 123.525 li
139.177 129.864 li
cp
f
143.455 129.098 mo
143.841 129.098 144.178 128.981 144.467 128.747 cv
144.757 128.512 144.918 128.218 144.949 127.866 cv
145.975 127.866 li
145.955 128.229 145.829 128.576 145.598 128.904 cv
145.368 129.232 145.06 129.494 144.675 129.69 cv
144.291 129.885 143.885 129.982 143.455 129.982 cv
142.591 129.982 141.904 129.694 141.394 129.118 cv
140.885 128.542 140.631 127.754 140.631 126.754 cv
140.631 126.572 li
140.631 125.954 140.744 125.406 140.97 124.926 cv
141.196 124.444 141.521 124.071 141.945 123.806 cv
142.369 123.54 142.87 123.407 143.449 123.407 cv
144.159 123.407 144.75 123.62 145.221 124.046 cv
145.692 124.471 145.943 125.024 145.975 125.704 cv
144.949 125.704 li
144.918 125.294 144.762 124.957 144.482 124.693 cv
144.203 124.429 143.859 124.298 143.449 124.298 cv
142.898 124.298 142.471 124.496 142.168 124.894 cv
141.866 125.29 141.715 125.863 141.715 126.613 cv
141.715 126.818 li
141.715 127.548 141.865 128.11 142.165 128.505 cv
142.466 128.9 142.896 129.098 143.455 129.098 cv
cp
f
153.372 81.8764 mo
149.872 81.8764 li
f
153.372 81.8764 mo
149.872 81.8764 li
@
47.8688 82.0995 mo
48.3019 77.8451 li
52.6725 77.8451 li
52.6725 78.8464 li
49.2225 78.8464 li
48.9638 81.1733 li
49.3825 80.927 49.8575 80.8039 50.3888 80.8039 cv
51.165 80.8039 51.7819 81.0608 52.2394 81.5745 cv
52.6969 82.0882 52.9256 82.7826 52.9256 83.6576 cv
52.9256 84.5364 52.6881 85.2289 52.2131 85.7351 cv
51.7381 86.2414 51.075 86.4945 50.2238 86.4945 cv
49.47 86.4945 48.8544 86.2858 48.3769 85.8683 cv
47.9006 85.4495 47.6294 84.8708 47.5631 84.132 cv
48.5888 84.132 li
48.655 84.6208 48.8288 84.9895 49.11 85.2383 cv
49.3913 85.4858 49.7625 85.6095 50.2238 85.6095 cv
50.7275 85.6095 51.1231 85.4376 51.4106 85.0939 cv
51.6981 84.7501 51.8419 84.2751 51.8419 83.6689 cv
51.8419 83.0989 51.6863 82.6414 51.375 82.2964 cv
51.065 81.9501 50.6519 81.777 50.1356 81.777 cv
49.6631 81.777 49.2919 81.8801 49.0219 82.0864 cv
48.735 82.3208 li
47.8688 82.0995 li
cp
f
54.2433 85.8083 mo
54.2433 85.6208 54.2989 85.4645 54.4102 85.3395 cv
54.5214 85.2145 54.6883 85.152 54.9108 85.152 cv
55.1333 85.152 55.302 85.2145 55.417 85.3395 cv
55.5333 85.4645 55.5914 85.6208 55.5914 85.8083 cv
55.5914 85.9883 55.5333 86.1389 55.417 86.2601 cv
55.302 86.3801 55.1333 86.4401 54.9108 86.4401 cv
54.6883 86.4401 54.5214 86.3801 54.4102 86.2601 cv
54.2989 86.1389 54.2433 85.9883 54.2433 85.8083 cv
cp
f
67.0753 86.3764 mo
65.9447 86.3764 li
61.6491 79.8026 li
61.6491 86.3764 li
60.5184 86.3764 li
60.5184 77.8451 li
61.6491 77.8451 li
65.9559 84.4489 li
65.9559 77.8451 li
67.0753 77.8451 li
67.0753 86.3764 li
cp
f
71.4 80.8095 mo
70.9625 80.8095 70.595 80.9689 70.2975 81.2876 cv
70.0013 81.6064 69.8181 82.0526 69.7481 82.6264 cv
72.9225 82.6264 li
72.9225 82.5439 li
72.8913 81.9939 72.7425 81.5676 72.4762 81.2651 cv
72.2113 80.9614 71.8525 80.8095 71.4 80.8095 cv
cp
71.535 86.4945 mo
70.675 86.4945 69.9756 86.212 69.4369 85.647 cv
68.8981 85.082 68.6288 84.327 68.6288 83.382 cv
68.6288 83.1833 li
68.6288 82.5545 68.7487 81.9933 68.9888 81.4995 cv
69.2288 81.0045 69.5644 80.6176 69.9956 80.3389 cv
70.4281 80.0589 70.8962 79.9189 71.4 79.9189 cv
72.2237 79.9189 72.8638 80.1908 73.32 80.7345 cv
73.7775 81.277 74.0062 82.0539 74.0062 83.0651 cv
74.0062 83.517 li
69.7125 83.517 li
69.7275 84.142 69.91 84.647 70.26 85.032 cv
70.61 85.417 71.0544 85.6095 71.5931 85.6095 cv
71.9756 85.6095 72.2994 85.5314 72.5644 85.3751 cv
72.8306 85.2189 73.0638 85.0114 73.2637 84.7526 cv
73.9256 85.2682 li
73.3944 86.0858 72.5975 86.4945 71.535 86.4945 cv
cp
f
79.1749 85.7501 mo
78.7537 86.2464 78.1343 86.4945 77.3168 86.4945 cv
76.6418 86.4945 76.1274 86.2983 75.7737 85.9058 cv
75.4199 85.512 75.2412 84.9308 75.2374 84.162 cv
75.2374 80.037 li
76.3212 80.037 li
76.3212 84.132 li
76.3212 85.0933 76.7118 85.5739 77.493 85.5739 cv
78.3218 85.5739 78.8724 85.2651 79.1449 84.6476 cv
79.1449 80.037 li
80.2305 80.037 li
80.2305 86.3764 li
79.1993 86.3764 li
79.1749 85.7501 li
cp
f
84.9408 81.0083 mo
84.777 80.982 84.5995 80.9689 84.4083 80.9689 cv
83.697 80.9689 83.2145 81.2714 82.9608 81.8764 cv
82.9608 86.3764 li
81.877 86.3764 li
81.877 80.037 li
82.9308 80.037 li
82.9477 80.7682 li
83.3039 80.202 83.8083 79.9189 84.4608 79.9189 cv
84.6708 79.9189 84.8308 79.9464 84.9408 80.0014 cv
84.9408 81.0083 li
cp
f
86.7401 83.277 mo
86.7401 83.9795 86.9032 84.5439 87.2295 84.9701 cv
87.5557 85.3964 87.992 85.6095 88.5382 85.6095 cv
89.0895 85.6095 89.527 85.3939 89.8507 84.9626 cv
90.1745 84.5301 90.3363 83.9251 90.3363 83.1476 cv
90.3363 82.4526 90.1713 81.8895 89.8413 81.4583 cv
89.5113 81.0257 89.0732 80.8095 88.527 80.8095 cv
87.992 80.8095 87.5601 81.0226 87.2313 81.4489 cv
86.9038 81.8739 86.7401 82.4833 86.7401 83.277 cv
cp
85.6488 83.1476 mo
85.6488 82.5264 85.7707 81.9676 86.0145 81.4714 cv
86.2595 80.9751 86.5995 80.5926 87.0345 80.3239 cv
87.4707 80.0539 87.9682 79.9189 88.527 79.9189 cv
89.3895 79.9189 90.0876 80.2176 90.6213 80.8151 cv
91.1551 81.4126 91.422 82.2076 91.422 83.2001 cv
91.422 83.277 li
91.422 83.8945 91.3032 84.4482 91.0657 84.9383 cv
90.8295 85.4283 90.4913 85.8101 90.0513 86.0839 cv
89.6126 86.3576 89.1082 86.4945 88.5382 86.4945 cv
87.6795 86.4945 86.9832 86.1958 86.4495 85.5983 cv
85.9157 84.9995 85.6488 84.2083 85.6488 83.2245 cv
85.6488 83.1476 li
cp
f
97.3507 87.2614 mo
91.9845 87.2614 li
91.9845 86.3764 li
97.3507 86.3764 li
97.3507 87.2614 li
cp
f
100.879 82.5739 mo
99.9135 82.2964 99.211 81.9557 98.771 81.552 cv
98.3323 81.147 98.1129 80.6476 98.1129 80.0539 cv
98.1129 79.3826 98.381 78.827 98.9173 78.387 cv
99.4548 77.947 100.154 77.727 101.014 77.727 cv
101.599 77.727 102.12 77.8408 102.579 78.0683 cv
103.039 78.2945 103.395 78.607 103.646 79.0058 cv
103.899 79.4033 104.025 79.8389 104.025 80.3126 cv
102.894 80.3126 li
102.894 79.7964 102.73 79.3908 102.401 79.0957 cv
102.074 78.8008 101.611 78.6533 101.014 78.6533 cv
100.459 78.6533 100.025 78.7757 99.7141 79.0208 cv
99.4041 79.2645 99.2491 79.6033 99.2491 80.037 cv
99.2491 80.3845 99.3966 80.6783 99.6916 80.9183 cv
99.9866 81.1582 100.489 81.3783 101.197 81.5783 cv
101.906 81.777 102.46 81.9964 102.86 82.2364 cv
103.262 82.4764 103.559 82.757 103.751 83.0783 cv
103.945 83.3983 104.042 83.7751 104.042 84.2089 cv
104.042 84.9001 103.772 85.4539 103.234 85.8701 cv
102.695 86.2864 101.974 86.4945 101.072 86.4945 cv
100.485 86.4945 99.9385 86.382 99.431 86.157 cv
98.9235 85.932 98.5316 85.6245 98.2554 85.2345 cv
97.9804 84.8433 97.8429 84.3995 97.8429 83.9033 cv
98.9735 83.9033 li
98.9735 84.4195 99.1641 84.827 99.5454 85.1258 cv
99.9266 85.4245 100.435 85.5739 101.072 85.5739 cv
101.665 85.5739 102.12 85.4526 102.437 85.2101 cv
102.753 84.9676 102.911 84.6376 102.911 84.2201 cv
102.911 83.8026 102.764 83.4795 102.47 83.2508 cv
102.178 83.022 101.647 82.7964 100.879 82.5739 cv
cp
f
107.388 84.7883 mo
108.864 80.037 li
110.025 80.037 li
107.476 87.3551 li
107.081 88.4101 106.455 88.9376 105.596 88.9376 cv
105.39 88.9189 li
104.986 88.8439 li
104.986 87.9645 li
105.279 87.987 li
105.646 87.987 105.933 87.9126 106.138 87.7639 cv
106.343 87.6164 106.511 87.3451 106.644 86.9501 cv
106.884 86.3051 li
104.623 80.037 li
105.806 80.037 li
107.388 84.7883 li
cp
f
112.01 80.037 mo
112.04 80.7401 li
112.505 80.1926 113.132 79.9189 113.921 79.9189 cv
114.807 79.9189 115.411 80.2589 115.732 80.9389 cv
115.942 80.6339 116.216 80.3876 116.554 80.2001 cv
116.892 80.0126 117.292 79.9189 117.754 79.9189 cv
119.144 79.9189 119.85 80.6551 119.874 82.1276 cv
119.874 86.3764 li
118.79 86.3764 li
118.79 82.1933 li
118.79 81.7395 118.687 81.4007 118.479 81.177 cv
118.273 80.952 117.925 80.8395 117.437 80.8395 cv
117.034 80.8395 116.7 80.9595 116.434 81.1995 cv
116.169 81.4395 116.015 81.7626 115.972 82.1689 cv
115.972 86.3764 li
114.883 86.3764 li
114.883 82.2214 li
114.883 81.3001 114.432 80.8395 113.529 80.8395 cv
112.818 80.8395 112.332 81.142 112.07 81.747 cv
112.07 86.3764 li
110.985 86.3764 li
110.985 80.037 li
112.01 80.037 li
cp
f
125.792 83.1533 mo
125.792 82.4158 125.65 81.8457 125.365 81.4433 cv
125.08 81.0407 124.67 80.8395 124.135 80.8395 cv
123.42 80.8395 122.906 81.1714 122.594 81.8351 cv
122.594 84.5783 li
122.925 85.242 123.442 85.5739 124.146 85.5739 cv
124.665 85.5739 125.069 85.3726 125.357 84.9701 cv
125.647 84.5676 125.792 83.962 125.792 83.1533 cv
cp
126.876 83.277 mo
126.876 84.2458 126.654 85.0245 126.209 85.6133 cv
125.764 86.2008 125.166 86.4945 124.416 86.4945 cv
123.615 86.4945 122.995 86.2108 122.558 85.6432 cv
122.505 86.3764 li
121.51 86.3764 li
121.51 77.3764 li
122.594 77.3764 li
122.594 80.7345 li
123.031 80.1908 123.634 79.9189 124.403 79.9189 cv
125.173 79.9189 125.777 80.2101 126.216 80.7926 cv
126.656 81.3739 126.876 82.1708 126.876 83.1833 cv
126.876 83.277 li
cp
f
129.045 83.277 mo
129.045 83.9795 129.208 84.5439 129.534 84.9701 cv
129.86 85.3964 130.297 85.6095 130.843 85.6095 cv
131.394 85.6095 131.832 85.3939 132.155 84.9626 cv
132.479 84.5301 132.641 83.9251 132.641 83.1476 cv
132.641 82.4526 132.476 81.8895 132.146 81.4583 cv
131.816 81.0257 131.378 80.8095 130.832 80.8095 cv
130.297 80.8095 129.865 81.0226 129.536 81.4489 cv
129.209 81.8739 129.045 82.4833 129.045 83.277 cv
cp
127.954 83.1476 mo
127.954 82.5264 128.075 81.9676 128.319 81.4714 cv
128.564 80.9751 128.904 80.5926 129.339 80.3239 cv
129.775 80.0539 130.273 79.9189 130.832 79.9189 cv
131.694 79.9189 132.392 80.2176 132.926 80.8151 cv
133.46 81.4126 133.727 82.2076 133.727 83.2001 cv
133.727 83.277 li
133.727 83.8945 133.608 84.4482 133.37 84.9383 cv
133.134 85.4283 132.796 85.8101 132.356 86.0839 cv
131.917 86.3576 131.413 86.4945 130.843 86.4945 cv
129.984 86.4945 129.288 86.1958 128.754 85.5983 cv
128.22 84.9995 127.954 84.2083 127.954 83.2245 cv
127.954 83.1476 li
cp
f
136.264 86.3764 mo
135.18 86.3764 li
135.18 77.3764 li
136.264 77.3764 li
136.264 86.3764 li
cp
f
138.004 78.3551 mo
138.004 78.1789 138.057 78.0301 138.165 77.9089 cv
138.273 77.7876 138.431 77.727 138.641 77.727 cv
138.852 77.727 139.012 77.7876 139.121 77.9089 cv
139.231 78.0301 139.286 78.1789 139.286 78.3551 cv
139.286 78.5301 139.231 78.6764 139.121 78.7939 cv
139.012 78.9114 138.852 78.9701 138.641 78.9701 cv
138.431 78.9701 138.273 78.9114 138.165 78.7939 cv
138.057 78.6764 138.004 78.5301 138.004 78.3551 cv
cp
139.176 86.3764 mo
138.092 86.3764 li
138.092 80.037 li
139.176 80.037 li
139.176 86.3764 li
cp
f
143.453 85.6095 mo
143.839 85.6095 144.176 85.4926 144.465 85.2589 cv
144.755 85.0239 144.916 84.7301 144.947 84.3776 cv
145.973 84.3776 li
145.953 84.7414 145.827 85.0876 145.596 85.4164 cv
145.366 85.7439 145.058 86.0058 144.673 86.202 cv
144.29 86.397 143.883 86.4945 143.453 86.4945 cv
142.589 86.4945 141.902 86.2064 141.392 85.6301 cv
140.883 85.0539 140.629 84.2658 140.629 83.2658 cv
140.629 83.0839 li
140.629 82.4664 140.742 81.9176 140.968 81.4376 cv
141.195 80.9564 141.52 80.5833 141.943 80.3183 cv
142.367 80.052 142.868 79.9189 143.447 79.9189 cv
144.157 79.9189 144.748 80.132 145.219 80.5583 cv
145.69 80.9833 145.941 81.5358 145.973 82.2158 cv
144.947 82.2158 li
144.916 81.8058 144.76 81.4689 144.48 81.2051 cv
144.201 80.9414 143.857 80.8095 143.447 80.8095 cv
142.896 80.8095 142.469 81.0083 142.166 81.4058 cv
141.864 81.802 141.713 82.3751 141.713 83.1251 cv
141.713 83.3295 li
141.713 84.0595 141.863 84.622 142.163 85.017 cv
142.464 85.412 142.894 85.6095 143.453 85.6095 cv
cp
f
153.372 38.3884 mo
149.872 38.3884 li
f
153.372 38.3884 mo
149.872 38.3884 li
@
52.0106 43.2634 mo
46.4213 43.2634 li
46.4213 42.4834 li
49.3744 39.2021 li
49.8119 38.7059 50.1138 38.3027 50.28 37.9927 cv
50.4463 37.6828 50.5294 37.3615 50.5294 37.029 cv
50.5294 36.584 50.3944 36.219 50.1244 35.934 cv
49.8556 35.6478 49.4963 35.5046 49.0463 35.5046 cv
48.5075 35.5046 48.0888 35.6584 47.79 35.9659 cv
47.4913 36.2721 47.3419 36.699 47.3419 37.2465 cv
46.2581 37.2465 li
46.2581 36.4603 46.5106 35.8252 47.0156 35.3415 cv
47.5219 34.8565 48.1988 34.614 49.0463 34.614 cv
49.84 34.614 50.4669 34.8221 50.9269 35.2384 cv
51.3881 35.6546 51.6188 36.2084 51.6188 36.8996 cv
51.6188 37.7396 51.0838 38.7396 50.0138 39.8996 cv
47.7281 42.3784 li
52.0106 42.3784 li
52.0106 43.2634 li
cp
f
53.2945 42.6952 mo
53.2945 42.5077 53.3502 42.3515 53.4614 42.2265 cv
53.5727 42.1015 53.7395 42.039 53.962 42.039 cv
54.1845 42.039 54.3533 42.1015 54.4683 42.2265 cv
54.5845 42.3515 54.6427 42.5077 54.6427 42.6952 cv
54.6427 42.8752 54.5845 43.0259 54.4683 43.1471 cv
54.3533 43.2671 54.1845 43.3271 53.962 43.3271 cv
53.7395 43.3271 53.5727 43.2671 53.4614 43.1471 cv
53.3502 43.0259 53.2945 42.8752 53.2945 42.6952 cv
cp
f
62.0841 39.4609 mo
61.1191 39.1834 60.4166 38.8428 59.9766 38.439 cv
59.5378 38.034 59.3184 37.5346 59.3184 36.9409 cv
59.3184 36.2696 59.5866 35.714 60.1228 35.274 cv
60.6603 34.834 61.3591 34.614 62.2191 34.614 cv
62.8041 34.614 63.3259 34.7277 63.7847 34.9552 cv
64.2447 35.1815 64.6003 35.494 64.8516 35.8927 cv
65.1041 36.2902 65.2303 36.7259 65.2303 37.1996 cv
64.0997 37.1996 li
64.0997 36.6834 63.9353 36.2777 63.6066 35.9827 cv
63.2791 35.6877 62.8166 35.5402 62.2191 35.5402 cv
61.6641 35.5402 61.2309 35.6628 60.9197 35.9077 cv
60.6097 36.1515 60.4547 36.4902 60.4547 36.924 cv
60.4547 37.2715 60.6022 37.5653 60.8972 37.8052 cv
61.1922 38.0452 61.6941 38.2653 62.4028 38.4652 cv
63.1116 38.664 63.6659 38.8834 64.0659 39.1234 cv
64.4672 39.3634 64.7641 39.644 64.9566 39.9652 cv
65.1503 40.2852 65.2472 40.6621 65.2472 41.0959 cv
65.2472 41.7871 64.9778 42.3409 64.4391 42.7571 cv
63.9003 43.1734 63.1797 43.3815 62.2772 43.3815 cv
61.6909 43.3815 61.1441 43.269 60.6366 43.044 cv
60.1291 42.819 59.7372 42.5115 59.4609 42.1215 cv
59.1859 41.7303 59.0484 41.2865 59.0484 40.7902 cv
60.1791 40.7902 li
60.1791 41.3065 60.3697 41.714 60.7509 42.0127 cv
61.1322 42.3115 61.6409 42.4609 62.2772 42.4609 cv
62.8709 42.4609 63.3259 42.3396 63.6422 42.0971 cv
63.9584 41.8546 64.1166 41.5246 64.1166 41.1071 cv
64.1166 40.6896 63.9697 40.3665 63.6759 40.1377 cv
63.3834 39.909 62.8528 39.6834 62.0841 39.4609 cv
cp
f
68.5938 41.6753 mo
70.0695 36.924 li
71.2301 36.924 li
68.682 44.2421 li
68.287 45.2971 67.6601 45.8246 66.8013 45.8246 cv
66.5951 45.8059 li
66.192 45.7309 li
66.192 44.8515 li
66.4845 44.874 li
66.852 44.874 67.1382 44.7996 67.3432 44.6509 cv
67.5482 44.5034 67.717 44.2321 67.8495 43.8371 cv
68.0895 43.1921 li
65.8282 36.924 li
67.0113 36.924 li
68.5938 41.6753 li
cp
f
73.2159 36.924 mo
73.2459 37.6271 li
73.7109 37.0796 74.3378 36.8059 75.1266 36.8059 cv
76.0128 36.8059 76.6166 37.1459 76.9378 37.8259 cv
77.1478 37.5209 77.4216 37.2746 77.7591 37.0871 cv
78.0978 36.8996 78.4978 36.8059 78.9591 36.8059 cv
80.3491 36.8059 81.0559 37.5421 81.0797 39.0146 cv
81.0797 43.2634 li
79.9959 43.2634 li
79.9959 39.0802 li
79.9959 38.6265 79.8922 38.2878 79.6847 38.064 cv
79.4784 37.839 79.1309 37.7265 78.6422 37.7265 cv
78.2397 37.7265 77.9053 37.8465 77.6391 38.0865 cv
77.3741 38.3265 77.2203 38.6496 77.1778 39.0559 cv
77.1778 43.2634 li
76.0884 43.2634 li
76.0884 39.1084 li
76.0884 38.1871 75.6372 37.7265 74.7347 37.7265 cv
74.0234 37.7265 73.5372 38.029 73.2759 38.634 cv
73.2759 43.2634 li
72.1903 43.2634 li
72.1903 36.924 li
73.2159 36.924 li
cp
f
86.9979 40.0402 mo
86.9979 39.3027 86.8554 38.7327 86.5704 38.3302 cv
86.2854 37.9277 85.8754 37.7265 85.3404 37.7265 cv
84.6254 37.7265 84.1116 38.0584 83.7991 38.7221 cv
83.7991 41.4652 li
84.1304 42.129 84.6479 42.4609 85.3516 42.4609 cv
85.8704 42.4609 86.2741 42.2596 86.5629 41.8571 cv
86.8529 41.4546 86.9979 40.849 86.9979 40.0402 cv
cp
88.0816 40.164 mo
88.0816 41.1327 87.8591 41.9115 87.4141 42.5002 cv
86.9691 43.0877 86.3716 43.3815 85.6216 43.3815 cv
84.8204 43.3815 84.201 43.0977 83.7635 42.5303 cv
83.711 43.2634 li
82.7154 43.2634 li
82.7154 34.2634 li
83.7991 34.2634 li
83.7991 37.6215 li
84.2366 37.0778 84.8398 36.8059 85.6085 36.8059 cv
86.3785 36.8059 86.9829 37.0971 87.4216 37.6796 cv
87.8616 38.2609 88.0816 39.0578 88.0816 40.0703 cv
88.0816 40.164 li
cp
f
90.2503 40.164 mo
90.2503 40.8665 90.4134 41.4309 90.7397 41.8571 cv
91.0659 42.2834 91.5022 42.4965 92.0484 42.4965 cv
92.5997 42.4965 93.0372 42.2809 93.3609 41.8496 cv
93.6847 41.4171 93.8466 40.8121 93.8466 40.0346 cv
93.8466 39.3396 93.6816 38.7765 93.3516 38.3452 cv
93.0216 37.9128 92.5834 37.6965 92.0372 37.6965 cv
91.5022 37.6965 91.0703 37.9096 90.7416 38.3359 cv
90.4141 38.7609 90.2503 39.3703 90.2503 40.164 cv
cp
89.1591 40.0346 mo
89.1591 39.4134 89.2809 38.8546 89.5247 38.3584 cv
89.7697 37.8621 90.1097 37.4796 90.5447 37.2109 cv
90.9809 36.9409 91.4784 36.8059 92.0372 36.8059 cv
92.8997 36.8059 93.5978 37.1046 94.1316 37.7021 cv
94.6653 38.2996 94.9322 39.0946 94.9322 40.0871 cv
94.9322 40.164 li
94.9322 40.7815 94.8134 41.3353 94.5759 41.8252 cv
94.3397 42.3153 94.0016 42.6971 93.5616 42.9709 cv
93.1228 43.2446 92.6184 43.3815 92.0484 43.3815 cv
91.1897 43.3815 90.4934 43.0827 89.9597 42.4852 cv
89.4259 41.8865 89.1591 41.0952 89.1591 40.1115 cv
89.1591 40.0346 li
cp
f
97.4691 43.2634 mo
96.3853 43.2634 li
96.3853 34.2634 li
97.4691 34.2634 li
97.4691 43.2634 li
cp
f
99.2093 35.2421 mo
99.2093 35.0659 99.263 34.9171 99.3705 34.7959 cv
99.4781 34.6746 99.6368 34.614 99.8468 34.614 cv
100.058 34.614 100.218 34.6746 100.327 34.7959 cv
100.437 34.9171 100.492 35.0659 100.492 35.2421 cv
100.492 35.4171 100.437 35.5634 100.327 35.6809 cv
100.218 35.7984 100.058 35.8571 99.8468 35.8571 cv
99.6368 35.8571 99.4781 35.7984 99.3705 35.6809 cv
99.263 35.5634 99.2093 35.4171 99.2093 35.2421 cv
cp
100.381 43.2634 mo
99.2974 43.2634 li
99.2974 36.924 li
100.381 36.924 li
100.381 43.2634 li
cp
f
104.658 42.4965 mo
105.045 42.4965 105.382 42.3796 105.671 42.1459 cv
105.961 41.9109 106.121 41.6171 106.153 41.2646 cv
107.178 41.2646 li
107.158 41.6284 107.033 41.9746 106.801 42.3034 cv
106.571 42.6309 106.264 42.8927 105.879 43.089 cv
105.495 43.284 105.088 43.3815 104.658 43.3815 cv
103.795 43.3815 103.108 43.0934 102.598 42.5171 cv
102.089 41.9409 101.835 41.1527 101.835 40.1527 cv
101.835 39.9709 li
101.835 39.3534 101.948 38.8046 102.174 38.3246 cv
102.4 37.8434 102.725 37.4702 103.149 37.2052 cv
103.573 36.939 104.074 36.8059 104.653 36.8059 cv
105.363 36.8059 105.953 37.019 106.425 37.4453 cv
106.896 37.8703 107.147 38.4227 107.178 39.1027 cv
106.153 39.1027 li
106.121 38.6927 105.966 38.3559 105.686 38.0921 cv
105.407 37.8284 105.063 37.6965 104.653 37.6965 cv
104.101 37.6965 103.675 37.8952 103.372 38.2928 cv
103.07 38.689 102.918 39.2621 102.918 40.0121 cv
102.918 40.2165 li
102.918 40.9465 103.068 41.509 103.368 41.904 cv
103.67 42.299 104.1 42.4965 104.658 42.4965 cv
cp
f
110.64 34.404 mo
109.522 34.404 li
109.522 44.2009 li
110.64 44.2009 li
110.64 45.0915 li
108.431 45.0915 li
108.431 33.5134 li
110.64 33.5134 li
110.64 34.404 li
cp
f
118.304 43.2634 mo
117.174 43.2634 li
112.878 36.6896 li
112.878 43.2634 li
111.747 43.2634 li
111.747 34.7321 li
112.878 34.7321 li
117.185 41.3359 li
117.185 34.7321 li
118.304 34.7321 li
118.304 43.2634 li
cp
f
122.629 37.6965 mo
122.191 37.6965 121.824 37.8559 121.526 38.1746 cv
121.23 38.4934 121.047 38.9396 120.977 39.5134 cv
124.151 39.5134 li
124.151 39.4309 li
124.12 38.8809 123.971 38.4546 123.705 38.1521 cv
123.44 37.8484 123.081 37.6965 122.629 37.6965 cv
cp
122.764 43.3815 mo
121.904 43.3815 121.205 43.099 120.666 42.534 cv
120.127 41.969 119.858 41.214 119.858 40.269 cv
119.858 40.0703 li
119.858 39.4415 119.978 38.8802 120.218 38.3865 cv
120.458 37.8915 120.793 37.5046 121.225 37.2259 cv
121.657 36.9459 122.125 36.8059 122.629 36.8059 cv
123.453 36.8059 124.093 37.0778 124.549 37.6215 cv
125.006 38.164 125.235 38.9409 125.235 39.9521 cv
125.235 40.404 li
120.941 40.404 li
120.956 41.029 121.139 41.534 121.489 41.919 cv
121.839 42.304 122.283 42.4965 122.822 42.4965 cv
123.205 42.4965 123.528 42.4184 123.793 42.2621 cv
124.06 42.1059 124.293 41.8984 124.493 41.6396 cv
125.155 42.1553 li
124.623 42.9727 123.826 43.3815 122.764 43.3815 cv
cp
f
130.404 42.6371 mo
129.983 43.1334 129.363 43.3815 128.546 43.3815 cv
127.871 43.3815 127.356 43.1852 127.003 42.7928 cv
126.649 42.399 126.47 41.8177 126.466 41.049 cv
126.466 36.924 li
127.55 36.924 li
127.55 41.019 li
127.55 41.9803 127.941 42.4609 128.722 42.4609 cv
129.551 42.4609 130.101 42.1521 130.374 41.5346 cv
130.374 36.924 li
131.46 36.924 li
131.46 43.2634 li
130.428 43.2634 li
130.404 42.6371 li
cp
f
136.17 37.8952 mo
136.006 37.869 135.829 37.8559 135.637 37.8559 cv
134.926 37.8559 134.444 38.1584 134.19 38.7634 cv
134.19 43.2634 li
133.106 43.2634 li
133.106 36.924 li
134.16 36.924 li
134.177 37.6553 li
134.533 37.089 135.037 36.8059 135.69 36.8059 cv
135.9 36.8059 136.06 36.8334 136.17 36.8884 cv
136.17 37.8952 li
cp
f
137.969 40.164 mo
137.969 40.8665 138.132 41.4309 138.458 41.8571 cv
138.785 42.2834 139.221 42.4965 139.767 42.4965 cv
140.318 42.4965 140.756 42.2809 141.08 41.8496 cv
141.403 41.4171 141.565 40.8121 141.565 40.0346 cv
141.565 39.3396 141.4 38.7765 141.07 38.3452 cv
140.74 37.9128 140.302 37.6965 139.756 37.6965 cv
139.221 37.6965 138.789 37.9096 138.46 38.3359 cv
138.133 38.7609 137.969 39.3703 137.969 40.164 cv
cp
136.878 40.0346 mo
136.878 39.4134 137 38.8546 137.243 38.3584 cv
137.488 37.8621 137.828 37.4796 138.263 37.2109 cv
138.7 36.9409 139.197 36.8059 139.756 36.8059 cv
140.618 36.8059 141.317 37.1046 141.85 37.7021 cv
142.384 38.2996 142.651 39.0946 142.651 40.0871 cv
142.651 40.164 li
142.651 40.7815 142.532 41.3353 142.295 41.8252 cv
142.058 42.3153 141.72 42.6971 141.28 42.9709 cv
140.842 43.2446 140.337 43.3815 139.767 43.3815 cv
138.908 43.3815 138.212 43.0827 137.678 42.4852 cv
137.145 41.8865 136.878 41.0952 136.878 40.1115 cv
136.878 40.0346 li
cp
f
143.242 33.5134 mo
145.456 33.5134 li
145.456 45.0915 li
143.242 45.0915 li
143.242 44.2009 li
144.372 44.2009 li
144.372 34.404 li
143.242 34.404 li
143.242 33.5134 li
cp
f
481.304 216.689 mo
476.646 216.689 li
476.646 216.039 li
479.107 213.305 li
479.471 212.891 479.723 212.555 479.862 212.297 cv
480 212.039 480.069 211.771 480.069 211.494 cv
480.069 211.123 479.957 210.819 479.732 210.581 cv
479.508 210.343 479.208 210.224 478.833 210.224 cv
478.384 210.224 478.035 210.352 477.787 210.608 cv
477.538 210.863 477.413 211.219 477.413 211.675 cv
476.51 211.675 li
476.51 211.02 476.72 210.491 477.141 210.088 cv
477.563 209.683 478.127 209.481 478.833 209.481 cv
479.495 209.481 480.017 209.655 480.401 210.002 cv
480.785 210.349 480.977 210.81 480.977 211.386 cv
480.977 212.086 480.531 212.919 479.64 213.886 cv
477.735 215.952 li
481.304 215.952 li
481.304 216.689 li
cp
f
482.677 213.125 mo
483.038 209.58 li
486.68 209.58 li
486.68 210.414 li
483.805 210.414 li
483.589 212.353 li
483.938 212.148 484.334 212.045 484.777 212.045 cv
485.424 212.045 485.938 212.259 486.319 212.688 cv
486.7 213.116 486.891 213.694 486.891 214.424 cv
486.891 215.156 486.693 215.733 486.297 216.155 cv
485.901 216.577 485.349 216.788 484.639 216.788 cv
484.011 216.788 483.498 216.614 483.1 216.266 cv
482.703 215.917 482.477 215.434 482.422 214.819 cv
483.277 214.819 li
483.332 215.226 483.477 215.533 483.711 215.741 cv
483.946 215.947 484.255 216.05 484.639 216.05 cv
485.059 216.05 485.389 215.907 485.628 215.62 cv
485.868 215.334 485.988 214.938 485.988 214.433 cv
485.988 213.958 485.858 213.577 485.599 213.289 cv
485.34 213.001 484.996 212.856 484.566 212.856 cv
484.172 212.856 483.863 212.942 483.638 213.114 cv
483.399 213.309 li
482.677 213.125 li
cp
f
339.318 173.201 mo
338.41 173.201 li
338.41 167.181 li
336.588 167.85 li
336.588 167.029 li
339.177 166.057 li
339.318 166.057 li
339.318 173.201 li
cp
f
342.658 170.814 mo
344.87 170.814 li
344.87 167.328 li
344.762 167.523 li
342.658 170.814 li
cp
345.778 170.814 mo
346.764 170.814 li
346.764 171.551 li
345.778 171.551 li
345.778 173.201 li
344.87 173.201 li
344.87 171.551 li
341.633 171.551 li
341.633 171.018 li
344.816 166.092 li
345.778 166.092 li
345.778 170.814 li
cp
f
274.648 126.588 mo
274.951 126.588 275.23 126.495 275.485 126.31 cv
275.74 126.125 275.927 125.895 276.045 125.621 cv
276.045 125.26 li
276.045 124.667 275.916 124.186 275.659 123.815 cv
275.401 123.444 275.076 123.258 274.682 123.258 cv
274.285 123.258 273.966 123.411 273.724 123.715 cv
273.484 124.019 273.363 124.42 273.363 124.918 cv
273.363 125.403 273.479 125.803 273.712 126.118 cv
273.945 126.431 274.257 126.588 274.648 126.588 cv
cp
276.04 126.588 mo
275.851 126.813 275.626 126.994 275.363 127.13 cv
275.101 127.267 274.813 127.335 274.501 127.335 cv
274.091 127.335 273.734 127.235 273.429 127.033 cv
273.125 126.831 272.89 126.547 272.724 126.18 cv
272.559 125.814 272.476 125.409 272.476 124.966 cv
272.476 124.491 272.566 124.064 272.746 123.683 cv
272.926 123.302 273.183 123.011 273.515 122.808 cv
273.847 122.606 274.235 122.505 274.677 122.505 cv
275.38 122.505 275.935 122.768 276.34 123.294 cv
276.745 123.82 276.948 124.538 276.948 125.446 cv
276.948 125.708 li
276.948 127.093 276.674 128.103 276.127 128.74 cv
275.58 129.375 274.755 129.701 273.652 129.718 cv
273.476 129.718 li
273.476 128.957 li
273.666 128.957 li
274.412 128.943 274.985 128.749 275.385 128.373 cv
275.785 127.997 276.003 127.402 276.04 126.588 cv
cp
f
251.659 79.6236 mo
248.714 86.2252 li
247.767 86.2252 li
250.702 79.858 li
246.855 79.858 li
246.855 79.1158 li
251.659 79.1158 li
251.659 79.6236 li
cp
f
209.5 40.3497 mo
211.712 40.3497 li
211.712 36.8637 li
211.604 37.0591 li
209.5 40.3497 li
cp
212.62 40.3497 mo
213.606 40.3497 li
213.606 41.0872 li
212.62 41.0872 li
212.62 42.7372 li
211.712 42.7372 li
211.712 41.0872 li
208.475 41.0872 li
208.475 40.5544 li
211.658 35.6278 li
212.62 35.6278 li
212.62 40.3497 li
cp
f
211.897 10.6444 mo
210.578 10.6444 li
205.566 2.975 li
205.566 10.6444 li
204.247 10.6444 li
204.247 .69125 li
205.566 .69125 li
210.591 8.39563 li
210.591 .69125 li
211.897 .69125 li
211.897 10.6444 li
cp
f
218.596 9.91375 mo
218.104 10.4927 217.382 10.7822 216.428 10.7822 cv
215.641 10.7822 215.041 10.5532 214.628 10.0953 cv
214.215 9.63594 214.007 8.95781 214.002 8.06094 cv
214.002 3.24844 li
215.267 3.24844 li
215.267 8.02594 li
215.267 9.1474 215.722 9.70813 216.634 9.70813 cv
217.601 9.70813 218.243 9.34792 218.561 8.6275 cv
218.561 3.24844 li
219.827 3.24844 li
219.827 10.6444 li
218.624 10.6444 li
218.596 9.91375 li
cp
f
222.936 3.24844 mo
222.971 4.06875 li
223.514 3.43 224.245 3.11063 225.165 3.11063 cv
226.199 3.11063 226.904 3.50729 227.278 4.30062 cv
227.523 3.94479 227.843 3.6575 228.237 3.43875 cv
228.632 3.22 229.098 3.11063 229.637 3.11063 cv
231.258 3.11063 232.083 3.96958 232.111 5.6875 cv
232.111 10.6444 li
230.846 10.6444 li
230.846 5.76406 li
230.846 5.23469 230.725 4.83948 230.483 4.57844 cv
230.242 4.31594 229.837 4.18469 229.267 4.18469 cv
228.797 4.18469 228.407 4.32469 228.097 4.60469 cv
227.787 4.88469 227.608 5.26167 227.558 5.73562 cv
227.558 10.6444 li
226.287 10.6444 li
226.287 5.79688 li
226.287 4.72208 225.761 4.18469 224.708 4.18469 cv
223.878 4.18469 223.311 4.5376 223.006 5.24344 cv
223.006 10.6444 li
221.74 10.6444 li
221.74 3.24844 li
222.936 3.24844 li
cp
f
239.015 6.88406 mo
239.015 6.02365 238.849 5.35865 238.516 4.88906 cv
238.184 4.41948 237.706 4.18469 237.081 4.18469 cv
236.247 4.18469 235.648 4.57188 235.283 5.34625 cv
235.283 8.54656 li
235.67 9.32094 236.273 9.70813 237.095 9.70813 cv
237.7 9.70813 238.171 9.47333 238.508 9.00375 cv
238.846 8.53417 239.015 7.8276 239.015 6.88406 cv
cp
240.28 7.02844 mo
240.28 8.15865 240.02 9.06719 239.501 9.75406 cv
238.982 10.4395 238.285 10.7822 237.41 10.7822 cv
236.475 10.7822 235.752 10.4511 235.242 9.78906 cv
235.18 10.6444 li
234.019 10.6444 li
234.019 .144375 li
235.283 .144375 li
235.283 4.06219 li
235.794 3.42781 236.497 3.11063 237.394 3.11063 cv
238.293 3.11063 238.998 3.45042 239.51 4.13 cv
240.023 4.80813 240.28 5.73781 240.28 6.91906 cv
240.28 7.02844 li
cp
f
244.785 4.14969 mo
244.275 4.14969 243.846 4.33563 243.499 4.7075 cv
243.153 5.07937 242.939 5.6 242.858 6.26937 cv
246.561 6.26937 li
246.561 6.17312 li
246.525 5.53146 246.351 5.03417 246.041 4.68125 cv
245.731 4.32688 245.313 4.14969 244.785 4.14969 cv
cp
244.942 10.7822 mo
243.939 10.7822 243.123 10.4526 242.495 9.79344 cv
241.866 9.13427 241.552 8.25344 241.552 7.15094 cv
241.552 6.91906 li
241.552 6.18552 241.692 5.53073 241.972 4.95469 cv
242.252 4.37719 242.643 3.92583 243.147 3.60063 cv
243.651 3.27396 244.197 3.11063 244.785 3.11063 cv
245.746 3.11063 246.493 3.42781 247.025 4.06219 cv
247.559 4.6951 247.826 5.60146 247.826 6.78125 cv
247.826 7.30844 li
242.816 7.30844 li
242.834 8.0376 243.047 8.62677 243.455 9.07594 cv
243.863 9.5251 244.382 9.74969 245.01 9.74969 cv
245.457 9.74969 245.834 9.65854 246.143 9.47625 cv
246.454 9.29396 246.726 9.05188 246.959 8.75 cv
247.732 9.35156 li
247.112 10.3053 246.182 10.7822 244.942 10.7822 cv
cp
f
252.865 4.38156 mo
252.674 4.35094 252.467 4.33563 252.244 4.33563 cv
251.414 4.33563 250.851 4.68854 250.555 5.39437 cv
250.555 10.6444 li
249.29 10.6444 li
249.29 3.24844 li
250.52 3.24844 li
250.539 4.10156 li
250.955 3.44094 251.544 3.11063 252.305 3.11063 cv
252.55 3.11063 252.736 3.14271 252.865 3.20688 cv
252.865 4.38156 li
cp
f
258.43 7.02844 mo
258.43 7.84802 258.62 8.50646 259.001 9.00375 cv
259.381 9.50104 259.89 9.74969 260.528 9.74969 cv
261.171 9.74969 261.681 9.49813 262.059 8.995 cv
262.437 8.49042 262.625 7.78458 262.625 6.8775 cv
262.625 6.06667 262.433 5.40969 262.048 4.90656 cv
261.663 4.40198 261.152 4.14969 260.514 4.14969 cv
259.89 4.14969 259.386 4.39833 259.003 4.89563 cv
258.621 5.39146 258.43 6.1024 258.43 7.02844 cv
cp
257.157 6.8775 mo
257.157 6.15271 257.299 5.50083 257.583 4.92188 cv
257.869 4.34292 258.266 3.89667 258.773 3.58313 cv
259.282 3.26813 259.863 3.11063 260.514 3.11063 cv
261.521 3.11063 262.335 3.45917 262.958 4.15625 cv
263.581 4.85333 263.892 5.78083 263.892 6.93875 cv
263.892 7.02844 li
263.892 7.74885 263.753 8.3949 263.476 8.96656 cv
263.201 9.53823 262.806 9.98375 262.293 10.3031 cv
261.781 10.6225 261.193 10.7822 260.528 10.7822 cv
259.526 10.7822 258.713 10.4336 258.091 9.73656 cv
257.468 9.03802 257.157 8.1149 257.157 6.96719 cv
257.157 6.8775 li
cp
f
266.099 10.6444 mo
266.099 4.22625 li
264.931 4.22625 li
264.931 3.24844 li
266.099 3.24844 li
266.099 2.48938 li
266.099 1.69604 266.311 1.08281 266.734 .649688 cv
267.158 .216562 267.757 0 268.532 0 cv
268.823 0 269.113 .0386455 269.4 .115938 cv
269.332 1.14188 li
269.118 1.10104 268.89 1.08063 268.65 1.08063 cv
268.239 1.08063 267.921 1.20021 267.698 1.43938 cv
267.475 1.67854 267.364 2.02125 267.364 2.4675 cv
267.364 3.24844 li
268.943 3.24844 li
268.943 4.22625 li
267.364 4.22625 li
267.364 10.6444 li
266.099 10.6444 li
cp
f
278.109 8.68219 mo
278.109 8.34094 277.98 8.07552 277.722 7.88594 cv
277.465 7.69635 277.017 7.53375 276.377 7.39813 cv
275.736 7.26104 275.228 7.09698 274.852 6.90594 cv
274.476 6.71344 274.198 6.48521 274.018 6.22125 cv
273.839 5.95729 273.749 5.64302 273.749 5.27844 cv
273.749 4.67177 274.005 4.15917 274.517 3.74062 cv
275.031 3.32063 275.686 3.11063 276.484 3.11063 cv
277.322 3.11063 278.002 3.32719 278.522 3.76031 cv
279.045 4.19344 279.306 4.74687 279.306 5.42063 cv
278.035 5.42063 li
278.035 5.075 277.887 4.77677 277.593 4.52594 cv
277.3 4.2751 276.93 4.14969 276.484 4.14969 cv
276.023 4.14969 275.663 4.25031 275.403 4.45156 cv
275.144 4.65135 275.014 4.91313 275.014 5.23688 cv
275.014 5.54167 275.134 5.77208 275.375 5.92812 cv
275.617 6.08271 276.054 6.23073 276.685 6.37219 cv
277.316 6.51365 277.828 6.68208 278.218 6.8775 cv
278.611 7.07292 278.901 7.30917 279.089 7.58625 cv
279.279 7.86188 279.373 8.19729 279.373 8.5925 cv
279.373 9.25458 279.109 9.78542 278.579 10.185 cv
278.051 10.5831 277.366 10.7822 276.523 10.7822 cv
275.931 10.7822 275.407 10.6772 274.95 10.4672 cv
274.495 10.2572 274.139 9.96406 273.881 9.58781 cv
273.624 9.21156 273.496 8.80469 273.496 8.36719 cv
274.76 8.36719 li
274.783 8.79156 274.953 9.12844 275.27 9.37781 cv
275.586 9.62573 276.004 9.74969 276.523 9.74969 cv
277.001 9.74969 277.385 9.65271 277.674 9.45875 cv
277.964 9.26479 278.109 9.00594 278.109 8.68219 cv
cp
f
282.738 1.45687 mo
282.738 3.24844 li
284.118 3.24844 li
284.118 4.22625 li
282.738 4.22625 li
282.738 8.81125 li
282.738 9.10875 282.799 9.33187 282.922 9.48063 cv
283.046 9.62792 283.256 9.70156 283.552 9.70156 cv
283.697 9.70156 283.898 9.67385 284.153 9.61844 cv
284.153 10.6444 li
283.821 10.7362 283.497 10.7822 283.182 10.7822 cv
282.617 10.7822 282.192 10.6116 281.904 10.2703 cv
281.617 9.9276 281.473 9.44125 281.473 8.81125 cv
281.473 4.22625 li
280.126 4.22625 li
280.126 3.24844 li
281.473 3.24844 li
281.473 1.45687 li
282.738 1.45687 li
cp
f
290.161 9.91375 mo
289.67 10.4927 288.947 10.7822 287.994 10.7822 cv
287.206 10.7822 286.606 10.5532 286.193 10.0953 cv
285.781 9.63594 285.572 8.95781 285.568 8.06094 cv
285.568 3.24844 li
286.832 3.24844 li
286.832 8.02594 li
286.832 9.1474 287.288 9.70813 288.199 9.70813 cv
289.166 9.70813 289.808 9.34792 290.126 8.6275 cv
290.126 3.24844 li
291.393 3.24844 li
291.393 10.6444 li
290.19 10.6444 li
290.161 9.91375 li
cp
f
294.27 7.02844 mo
294.27 7.86698 294.443 8.52323 294.788 8.99719 cv
295.135 9.47115 295.614 9.70813 296.225 9.70813 cv
297.027 9.70813 297.613 9.34792 297.982 8.6275 cv
297.982 5.23031 li
297.604 4.53323 297.023 4.18469 296.239 4.18469 cv
295.619 4.18469 295.135 4.42385 294.788 4.90219 cv
294.443 5.38052 294.27 6.08927 294.27 7.02844 cv
cp
293.005 6.88406 mo
293.005 5.74948 293.274 4.83729 293.81 4.1475 cv
294.349 3.45625 295.053 3.11063 295.924 3.11063 cv
296.79 3.11063 297.476 3.40667 297.982 3.99875 cv
297.982 .144375 li
299.246 .144375 li
299.246 10.6444 li
298.085 10.6444 li
298.024 9.85031 li
297.517 10.4716 296.813 10.7822 295.91 10.7822 cv
295.054 10.7822 294.356 10.4315 293.815 9.73 cv
293.275 9.02708 293.005 8.11052 293.005 6.98031 cv
293.005 6.88406 li
cp
f
301.216 1.28625 mo
301.216 1.08063 301.279 .907083 301.404 .765625 cv
301.529 .624167 301.715 .553438 301.96 .553438 cv
302.206 .553438 302.393 .624167 302.52 .765625 cv
302.648 .907083 302.712 1.08063 302.712 1.28625 cv
302.712 1.49042 302.648 1.66104 302.52 1.79813 cv
302.393 1.93521 302.206 2.00375 301.96 2.00375 cv
301.715 2.00375 301.529 1.93521 301.404 1.79813 cv
301.279 1.66104 301.216 1.49042 301.216 1.28625 cv
cp
302.583 10.6444 mo
301.319 10.6444 li
301.319 3.24844 li
302.583 3.24844 li
302.583 10.6444 li
cp
f
307.518 4.14969 mo
307.008 4.14969 306.579 4.33563 306.232 4.7075 cv
305.886 5.07937 305.673 5.6 305.591 6.26937 cv
309.295 6.26937 li
309.295 6.17312 li
309.258 5.53146 309.085 5.03417 308.774 4.68125 cv
308.465 4.32688 308.046 4.14969 307.518 4.14969 cv
cp
307.676 10.7822 mo
306.673 10.7822 305.857 10.4526 305.228 9.79344 cv
304.6 9.13427 304.285 8.25344 304.285 7.15094 cv
304.285 6.91906 li
304.285 6.18552 304.425 5.53073 304.705 4.95469 cv
304.985 4.37719 305.377 3.92583 305.88 3.60063 cv
306.385 3.27396 306.931 3.11063 307.518 3.11063 cv
308.479 3.11063 309.226 3.42781 309.758 4.06219 cv
310.292 4.6951 310.559 5.60146 310.559 6.78125 cv
310.559 7.30844 li
305.55 7.30844 li
305.567 8.0376 305.78 8.62677 306.188 9.07594 cv
306.597 9.5251 307.115 9.74969 307.744 9.74969 cv
308.19 9.74969 308.568 9.65854 308.877 9.47625 cv
309.187 9.29396 309.459 9.05188 309.693 8.75 cv
310.465 9.35156 li
309.845 10.3053 308.915 10.7822 307.676 10.7822 cv
cp
f
316.329 8.68219 mo
316.329 8.34094 316.2 8.07552 315.942 7.88594 cv
315.685 7.69635 315.237 7.53375 314.596 7.39813 cv
313.956 7.26104 313.448 7.09698 313.072 6.90594 cv
312.695 6.71344 312.418 6.48521 312.238 6.22125 cv
312.059 5.95729 311.969 5.64302 311.969 5.27844 cv
311.969 4.67177 312.225 4.15917 312.737 3.74062 cv
313.25 3.32063 313.906 3.11063 314.703 3.11063 cv
315.542 3.11063 316.222 3.32719 316.742 3.76031 cv
317.264 4.19344 317.525 4.74687 317.525 5.42063 cv
316.254 5.42063 li
316.254 5.075 316.107 4.77677 315.813 4.52594 cv
315.519 4.2751 315.15 4.14969 314.703 4.14969 cv
314.243 4.14969 313.882 4.25031 313.623 4.45156 cv
313.363 4.65135 313.233 4.91313 313.233 5.23688 cv
313.233 5.54167 313.354 5.77208 313.594 5.92812 cv
313.836 6.08271 314.273 6.23073 314.905 6.37219 cv
315.536 6.51365 316.047 6.68208 316.438 6.8775 cv
316.83 7.07292 317.121 7.30917 317.309 7.58625 cv
317.498 7.86188 317.593 8.19729 317.593 8.5925 cv
317.593 9.25458 317.328 9.78542 316.799 10.185 cv
316.271 10.5831 315.586 10.7822 314.743 10.7822 cv
314.151 10.7822 313.626 10.6772 313.17 10.4672 cv
312.715 10.2572 312.358 9.96406 312.1 9.58781 cv
311.844 9.21156 311.715 8.80469 311.715 8.36719 cv
312.98 8.36719 li
313.003 8.79156 313.173 9.12844 313.489 9.37781 cv
313.806 9.62573 314.224 9.74969 314.743 9.74969 cv
315.221 9.74969 315.605 9.65271 315.893 9.45875 cv
316.184 9.26479 316.329 9.00594 316.329 8.68219 cv
cp
f
327.691 6.88406 mo
327.691 6.0499 327.514 5.39146 327.158 4.90875 cv
326.802 4.42604 326.314 4.18469 325.694 4.18469 cv
324.929 4.18469 324.355 4.52375 323.973 5.20188 cv
323.973 8.73687 li
324.35 9.41208 324.929 9.74969 325.707 9.74969 cv
326.314 9.74969 326.796 9.50906 327.153 9.02781 cv
327.512 8.54656 327.691 7.83198 327.691 6.88406 cv
cp
328.956 7.02844 mo
328.956 8.15427 328.698 9.06135 328.184 9.74969 cv
327.669 10.438 326.971 10.7822 326.09 10.7822 cv
325.193 10.7822 324.488 10.4971 323.973 9.92688 cv
323.973 13.4881 li
322.708 13.4881 li
322.708 3.24844 li
323.863 3.24844 li
323.925 4.06875 li
324.439 3.43 325.155 3.11063 326.071 3.11063 cv
326.959 3.11063 327.662 3.44604 328.179 4.11688 cv
328.697 4.78625 328.956 5.71812 328.956 6.9125 cv
328.956 7.02844 li
cp
f
333.474 4.14969 mo
332.964 4.14969 332.535 4.33563 332.188 4.7075 cv
331.843 5.07937 331.629 5.6 331.547 6.26937 cv
335.251 6.26937 li
335.251 6.17312 li
335.214 5.53146 335.041 5.03417 334.73 4.68125 cv
334.421 4.32688 334.002 4.14969 333.474 4.14969 cv
cp
333.632 10.7822 mo
332.629 10.7822 331.813 10.4526 331.184 9.79344 cv
330.556 9.13427 330.241 8.25344 330.241 7.15094 cv
330.241 6.91906 li
330.241 6.18552 330.381 5.53073 330.661 4.95469 cv
330.941 4.37719 331.333 3.92583 331.836 3.60063 cv
332.341 3.27396 332.887 3.11063 333.474 3.11063 cv
334.435 3.11063 335.182 3.42781 335.714 4.06219 cv
336.248 4.6951 336.515 5.60146 336.515 6.78125 cv
336.515 7.30844 li
331.506 7.30844 li
331.523 8.0376 331.736 8.62677 332.144 9.07594 cv
332.553 9.5251 333.071 9.74969 333.7 9.74969 cv
334.146 9.74969 334.524 9.65854 334.833 9.47625 cv
335.143 9.29396 335.415 9.05188 335.649 8.75 cv
336.421 9.35156 li
335.801 10.3053 334.871 10.7822 333.632 10.7822 cv
cp
f
341.554 4.38156 mo
341.363 4.35094 341.156 4.33563 340.933 4.33563 cv
340.103 4.33563 339.54 4.68854 339.244 5.39437 cv
339.244 10.6444 li
337.98 10.6444 li
337.98 3.24844 li
339.209 3.24844 li
339.229 4.10156 li
339.645 3.44094 340.233 3.11063 340.994 3.11063 cv
341.239 3.11063 341.426 3.14271 341.554 3.20688 cv
341.554 4.38156 li
cp
f
348.909 6.01563 mo
347.692 7.28 li
347.692 10.6444 li
346.38 10.6444 li
346.38 .69125 li
347.692 .69125 li
347.692 5.61312 li
352.115 .69125 li
353.701 .69125 li
349.784 5.08594 li
354.01 10.6444 li
352.437 10.6444 li
348.909 6.01563 li
cp
f
357.428 9.67969 mo
357.824 9.67969 358.2 9.5776 358.554 9.37344 cv
358.91 9.16781 359.168 8.90094 359.327 8.57281 cv
359.327 7.05469 li
358.336 7.05469 li
356.787 7.05469 356.013 7.50823 356.013 8.41531 cv
356.013 8.81198 356.144 9.12187 356.408 9.345 cv
356.672 9.56812 357.012 9.67969 357.428 9.67969 cv
cp
359.526 10.6444 mo
359.453 10.4985 359.394 10.239 359.348 9.86563 cv
358.761 10.4767 358.059 10.7822 357.242 10.7822 cv
356.513 10.7822 355.915 10.5758 355.448 10.1631 cv
354.981 9.75042 354.748 9.22688 354.748 8.5925 cv
354.748 7.8225 355.041 7.22458 355.625 6.79875 cv
356.212 6.37292 357.036 6.16 358.097 6.16 cv
359.327 6.16 li
359.327 5.57813 li
359.327 5.13625 359.195 4.78479 358.931 4.52375 cv
358.667 4.26125 358.277 4.13 357.763 4.13 cv
357.31 4.13 356.932 4.24375 356.627 4.47125 cv
356.322 4.69875 356.17 4.97438 356.17 5.29812 cv
354.897 5.29812 li
354.897 4.92917 355.028 4.5726 355.291 4.22844 cv
355.553 3.88427 355.908 3.61229 356.356 3.4125 cv
356.805 3.21125 357.299 3.11063 357.837 3.11063 cv
358.69 3.11063 359.358 3.32427 359.841 3.75156 cv
360.323 4.1774 360.574 4.76365 360.593 5.51031 cv
360.593 8.91406 li
360.593 9.59365 360.679 10.134 360.851 10.535 cv
360.851 10.6444 li
359.526 10.6444 li
cp
f
367.141 9.91375 mo
366.649 10.4927 365.927 10.7822 364.973 10.7822 cv
364.186 10.7822 363.585 10.5532 363.173 10.0953 cv
362.76 9.63594 362.551 8.95781 362.547 8.06094 cv
362.547 3.24844 li
363.811 3.24844 li
363.811 8.02594 li
363.811 9.1474 364.267 9.70813 365.179 9.70813 cv
366.146 9.70813 366.788 9.34792 367.106 8.6275 cv
367.106 3.24844 li
368.372 3.24844 li
368.372 10.6444 li
367.169 10.6444 li
367.141 9.91375 li
cp
f
372.008 1.45687 mo
372.008 3.24844 li
373.389 3.24844 li
373.389 4.22625 li
372.008 4.22625 li
372.008 8.81125 li
372.008 9.10875 372.07 9.33187 372.192 9.48063 cv
372.316 9.62792 372.526 9.70156 372.822 9.70156 cv
372.968 9.70156 373.168 9.67385 373.424 9.61844 cv
373.424 10.6444 li
373.091 10.7362 372.767 10.7822 372.452 10.7822 cv
371.888 10.7822 371.462 10.6116 371.175 10.2703 cv
370.888 9.9276 370.744 9.44125 370.744 8.81125 cv
370.744 4.22625 li
369.396 4.22625 li
369.396 3.24844 li
370.744 3.24844 li
370.744 1.45687 li
372.008 1.45687 li
cp
f
376.054 9.61187 mo
380.381 9.61187 li
380.381 10.6444 li
374.51 10.6444 li
374.51 9.71469 li
378.592 4.29406 li
374.571 4.29406 li
374.571 3.24844 li
380.178 3.24844 li
380.178 4.14313 li
376.054 9.61187 li
cp
f
388.237 9.74969 mo
388.688 9.74969 389.081 9.61333 389.418 9.34062 cv
389.757 9.06646 389.944 8.72375 389.981 8.3125 cv
391.177 8.3125 li
391.154 8.73687 391.007 9.14083 390.737 9.52437 cv
390.469 9.90646 390.11 10.212 389.661 10.4409 cv
389.213 10.6684 388.739 10.7822 388.237 10.7822 cv
387.229 10.7822 386.428 10.446 385.833 9.77375 cv
385.24 9.10146 384.943 8.18198 384.943 7.01531 cv
384.943 6.80312 li
384.943 6.08271 385.075 5.4425 385.339 4.8825 cv
385.603 4.32104 385.982 3.88573 386.476 3.57656 cv
386.971 3.26594 387.555 3.11063 388.231 3.11063 cv
389.059 3.11063 389.748 3.35927 390.298 3.85656 cv
390.848 4.3524 391.141 4.99698 391.177 5.79031 cv
389.981 5.79031 li
389.944 5.31198 389.763 4.91896 389.436 4.61125 cv
389.111 4.30354 388.709 4.14969 388.231 4.14969 cv
387.587 4.14969 387.089 4.38156 386.736 4.84531 cv
386.384 5.3076 386.207 5.97625 386.207 6.85125 cv
386.207 7.08969 li
386.207 7.94135 386.382 8.5976 386.732 9.05844 cv
387.084 9.51927 387.585 9.74969 388.237 9.74969 cv
cp
f
395.066 9.67969 mo
395.463 9.67969 395.839 9.5776 396.193 9.37344 cv
396.549 9.16781 396.806 8.90094 396.965 8.57281 cv
396.965 7.05469 li
395.974 7.05469 li
394.426 7.05469 393.651 7.50823 393.651 8.41531 cv
393.651 8.81198 393.783 9.12187 394.047 9.345 cv
394.311 9.56812 394.651 9.67969 395.066 9.67969 cv
cp
397.164 10.6444 mo
397.091 10.4985 397.032 10.239 396.987 9.86563 cv
396.399 10.4767 395.697 10.7822 394.881 10.7822 cv
394.151 10.7822 393.553 10.5758 393.087 10.1631 cv
392.62 9.75042 392.387 9.22688 392.387 8.5925 cv
392.387 7.8225 392.679 7.22458 393.264 6.79875 cv
393.85 6.37292 394.674 6.16 395.736 6.16 cv
396.965 6.16 li
396.965 5.57813 li
396.965 5.13625 396.833 4.78479 396.569 4.52375 cv
396.305 4.26125 395.916 4.13 395.401 4.13 cv
394.949 4.13 394.571 4.24375 394.266 4.47125 cv
393.961 4.69875 393.809 4.97438 393.809 5.29812 cv
392.536 5.29812 li
392.536 4.92917 392.667 4.5726 392.929 4.22844 cv
393.192 3.88427 393.547 3.61229 393.995 3.4125 cv
394.444 3.21125 394.937 3.11063 395.476 3.11063 cv
396.329 3.11063 396.997 3.32427 397.479 3.75156 cv
397.962 4.1774 398.213 4.76365 398.232 5.51031 cv
398.232 8.91406 li
398.232 9.59365 398.318 10.134 398.49 10.535 cv
398.49 10.6444 li
397.164 10.6444 li
cp
f
401.929 1.45687 mo
401.929 3.24844 li
403.31 3.24844 li
403.31 4.22625 li
401.929 4.22625 li
401.929 8.81125 li
401.929 9.10875 401.99 9.33187 402.113 9.48063 cv
402.237 9.62792 402.447 9.70156 402.743 9.70156 cv
402.889 9.70156 403.089 9.67385 403.345 9.61844 cv
403.345 10.6444 li
403.012 10.7362 402.688 10.7822 402.373 10.7822 cv
401.809 10.7822 401.383 10.6116 401.096 10.2703 cv
400.809 9.9276 400.665 9.44125 400.665 8.81125 cv
400.665 4.22625 li
399.317 4.22625 li
399.317 3.24844 li
400.665 3.24844 li
400.665 1.45687 li
401.929 1.45687 li
cp
f
407.699 4.14969 mo
407.189 4.14969 406.76 4.33563 406.413 4.7075 cv
406.067 5.07937 405.854 5.6 405.772 6.26937 cv
409.475 6.26937 li
409.475 6.17312 li
409.439 5.53146 409.265 5.03417 408.955 4.68125 cv
408.645 4.32688 408.227 4.14969 407.699 4.14969 cv
cp
407.857 10.7822 mo
406.853 10.7822 406.037 10.4526 405.409 9.79344 cv
404.78 9.13427 404.466 8.25344 404.466 7.15094 cv
404.466 6.91906 li
404.466 6.18552 404.606 5.53073 404.886 4.95469 cv
405.166 4.37719 405.557 3.92583 406.061 3.60063 cv
406.565 3.27396 407.111 3.11063 407.699 3.11063 cv
408.66 3.11063 409.407 3.42781 409.939 4.06219 cv
410.473 4.6951 410.74 5.60146 410.74 6.78125 cv
410.74 7.30844 li
405.73 7.30844 li
405.748 8.0376 405.961 8.62677 406.369 9.07594 cv
406.777 9.5251 407.296 9.74969 407.924 9.74969 cv
408.371 9.74969 408.748 9.65854 409.057 9.47625 cv
409.368 9.29396 409.64 9.05188 409.873 8.75 cv
410.646 9.35156 li
410.026 10.3053 409.096 10.7822 407.857 10.7822 cv
cp
f
413.174 7.02844 mo
413.174 7.8626 413.344 8.51812 413.685 8.995 cv
414.028 9.47042 414.507 9.70813 415.123 9.70813 cv
415.92 9.70813 416.506 9.34573 416.879 8.62094 cv
416.879 5.24344 li
416.491 4.5376 415.91 4.18469 415.136 4.18469 cv
414.52 4.18469 414.039 4.42385 413.692 4.90219 cv
413.346 5.38052 413.174 6.08927 413.174 7.02844 cv
cp
411.903 6.88406 mo
411.903 5.73198 412.169 4.81542 412.701 4.13438 cv
413.235 3.45187 413.941 3.11063 414.821 3.11063 cv
415.723 3.11063 416.428 3.43 416.934 4.06875 cv
416.995 3.24844 li
418.15 3.24844 li
418.15 10.4672 li
418.15 11.4239 417.866 12.1778 417.299 12.7291 cv
416.732 13.2803 415.97 13.5559 415.013 13.5559 cv
414.479 13.5559 413.957 13.4422 413.447 13.2147 cv
412.937 12.9872 412.547 12.6751 412.279 12.2784 cv
412.935 11.5194 li
413.478 12.1888 414.14 12.5234 414.924 12.5234 cv
415.539 12.5234 416.019 12.3499 416.363 12.0028 cv
416.707 11.6572 416.879 11.1701 416.879 10.5416 cv
416.879 9.905 li
416.373 10.4898 415.683 10.7822 414.808 10.7822 cv
413.941 10.7822 413.241 10.4336 412.705 9.73656 cv
412.17 9.03802 411.903 8.08719 411.903 6.88406 cv
cp
f
420.995 7.02844 mo
420.995 7.84802 421.186 8.50646 421.566 9.00375 cv
421.947 9.50104 422.456 9.74969 423.093 9.74969 cv
423.736 9.74969 424.247 9.49813 424.624 8.995 cv
425.002 8.49042 425.191 7.78458 425.191 6.8775 cv
425.191 6.06667 424.998 5.40969 424.613 4.90656 cv
424.228 4.40198 423.717 4.14969 423.08 4.14969 cv
422.456 4.14969 421.952 4.39833 421.568 4.89563 cv
421.186 5.39146 420.995 6.1024 420.995 7.02844 cv
cp
419.722 6.8775 mo
419.722 6.15271 419.864 5.50083 420.149 4.92188 cv
420.434 4.34292 420.831 3.89667 421.339 3.58313 cv
421.848 3.26813 422.428 3.11063 423.08 3.11063 cv
424.086 3.11063 424.901 3.45917 425.523 4.15625 cv
426.146 4.85333 426.457 5.78083 426.457 6.93875 cv
426.457 7.02844 li
426.457 7.74885 426.319 8.3949 426.042 8.96656 cv
425.766 9.53823 425.372 9.98375 424.858 10.3031 cv
424.346 10.6225 423.758 10.7822 423.093 10.7822 cv
422.091 10.7822 421.279 10.4336 420.656 9.73656 cv
420.033 9.03802 419.722 8.1149 419.722 6.96719 cv
419.722 6.8775 li
cp
f
431.618 4.38156 mo
431.427 4.35094 431.22 4.33563 430.996 4.33563 cv
430.167 4.33563 429.604 4.68854 429.308 5.39437 cv
429.308 10.6444 li
428.043 10.6444 li
428.043 3.24844 li
429.273 3.24844 li
429.292 4.10156 li
429.708 3.44094 430.296 3.11063 431.058 3.11063 cv
431.303 3.11063 431.489 3.14271 431.618 3.20688 cv
431.618 4.38156 li
cp
f
435.2 8.79156 mo
436.922 3.24844 li
438.276 3.24844 li
435.303 11.7863 li
434.842 13.0171 434.111 13.6325 433.109 13.6325 cv
432.868 13.6106 li
432.398 13.5231 li
432.398 12.4972 li
432.739 12.5234 li
433.168 12.5234 433.502 12.4367 433.741 12.2631 cv
433.98 12.091 434.177 11.7746 434.332 11.3138 cv
434.612 10.5612 li
431.973 3.24844 li
433.354 3.24844 li
435.2 8.79156 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 24.0%%AI8_CreatorVersion: 26.3.1%%For: (kyle Hamilton) ()%%Title: (Kautz_category.eps)%%CreationDate: 6/21/22 5:53 AM%%Canvassize: 16383%AI5_FileFormat 14.0%AI24_DataStream%.((`,!*Gc@"4#+YoF<F67&76r!+<%a-V4U+Jp>*C)h+UpYd?ImD_&qIZ@*?L#_teJ!'g_g!&t8>%dX_=%k4CAF9:-<%[n-,PGuDe%(V,Po2dcX)j119)'Od+00]L%cA$gWGoSOM%``t]/<tgF(#9jd@#)KE$0S&-"^:R7=@V2TJmjW1q/idO#?+c0%=`)4`K-.XO%M&dg%.o@K%CCluPHo1+X^k6SBA6j[9Je7'@+L,0DQ3*pbe<:"a-<^)OFk(et1CHSr8iX/KY*?+7i5!21"&q-Hjoo<$o6"'p_/_UYbU:e3%?K4RF_"hVA%[=@:.MEn3Mj:c""q2>fH'KF%OHfrl6#k@"o,s_7bQLBY^P7LZf^Q<M"*>a*>S`T)8.6r3/t!(_R'NoO$na]M@<C>i%drh43"S%(d?.V?Wkdm"RkdgfOG5AeQq]HMWQW&S>m(l#-FPVHJ!sT2'[Z;VRKpP>c_$[$[!H5Y2S6JkpD)#E`k`/J?ZCi>F-Z;QB%l4W+>D7LhA#Y7b/@$(g071-rZpdct2EP[m2qJ[R/,2jh4.\.!*20,?XfRjmX7H4`&^k@7rQEnaG/Gl=o(V]7nFe.31TV*tNKST1>%9?`B;?)L.Y+M#tj5^eWZY3WY#8Cr!p!9RiZLp$&WO07dk,07iMgVLhUFWJX+jM_-ff6)m=f6+H:i'io!V/Ti<<!7T_#]M[O'SaHf%]$Bi]0XC&JlT3WAF':16O6F1#_!AQaemdk&6.^6bWp%%^D@BDNm^fP?nA04TpGN/Pd<,`7U[(I8U[&*m(dRCt(8\'4qY1(<:\jjf%jWh$`1j[R&KXC%P"EGmK@>QV#e2'aKYPEi^VGKn@l,!K")Q)g]DhE!V\c$+rMStU?E0i@MH`aQAk6taUB!9KpAod5(I'(ULF0a4-%'KZK25TFG,7XSnO5[?1.8Q/EQ=eMX,U6gb_?6"aG\BjVt$U^G71Ic`17Zi&"1QgDod>&Bd0HY0WEqjN?PVq3k:eiQRhAE7rV<FnU%B7McA;lIUXN2:2@QjT]eLU/ioe$EW*@cg\(85A6sfh:6c@i#kPSna7;.F\B0V6nk^>\>V5@\Kch8jSiG`L=KcQ:X_LB.S2N?8:$A%!b&AM##hH&!*0hfa]^M?@%Fu/RMecE!&Km4"]qZQp0,:4W]FWE<->>s<rfUr$IT'QJ#BYT9Q`W@iV[%H@Q*!f'2mF"WhQ109n5g!%TrK%6<Ea^O9U?*d!Mgi45R(4lCfSk_V4hU=V_m*Fi0BHF!)hV;S@r#Pg%ZS1m@L>Wi&YAu<]!c=;jn+pJLXBk!bh^Fk6dKVBJ_EO%W]$^$?iZ:f>Up0(<$4n#J#tL?U^7$")@^&&Y-Som;pf8/0Xdu<!OJ1#JCL+&;Q<lZ'hat$'3*F\Wh-QIN3Ur4"]_#E3bP+cMU>D'%.s;+VA"ZG(SM:[LBs][.Wmi!'"h&+&.bt2)e4"`'=PtZ/Xg@VaU>RMTWQ\HOV5\6V#+2)60TE&4W!l@0WeP><V,['*6LClI;U6)F%663k+7T6/!'^?6a=FI0o'U0Jl<+ooeVIZ(<8Ao7o1*[C2RUIrr;._)JRAA%t[*I#R1D7s\P5nm(U4DhX1D5fTA7d)j<O9$+"X1?9%="1.16fAGRSYB+Y?_r9o2;>@\NrSkII_#K)Ndo87pT1]b\]t$G=R7%'c(=MCn#UqQp2[.9R5m;1]N-h3L3@)B^!tYiL*$761K.P/%889gSC7Qe$i/H&oW/@@`@OcMk]i&$[#!clZ'Z?OoZdtS5SWc<E:K8.U=NXlIPU6ADY,W;khum<Mkuhf/[J&SY7^SRf99*N?A@:%S%oIMh";(P`u2^/[S+NKJm9KZ<eWDt`q<F99Pp'T`*NP%1$X0q,nrRYEE2+)>j?D2ETJ6?#fB4#KRmXFJ)%38r`F56Lh=Y*E$G)eA#%^ahi2G\*G:^%jr`?d/%OAY#CX^CPJDEE8L7:PtmOo!E_>)7qbc"9I_?L8O">jst%aYB=Gt(n.TWGKsO"[>&_dal;[CLc.CteI6H]%=qeH+fLTMN8uo._\QYCXSlJ\n^1aR]U,3U+*c&F;1MrtubGAk\<LMY"H#Kj+X&n$7!2,dOWC^$$B"E#4,IY+iL;HpR%!KWggprk.%<./cA]s4$mV/kfl1MPVL_"rr%;W]Ie4Q+Kbl)C7'Lq@jUSc`:<d:[o$,Q[*TJFbWZAO[jR[#NVHWm96G;E*2C>Rm'g*WVQ^Ree5M%%0FBr2:9pBMQ*_%a51`5hhXL"5*F6VNc_s7&_698j\r-J8-Ib4[m<'aT)8>-4@<KA91;,Umc84.oH8=3f%CE7=j]?1ObTa.4a@tl%!1&M:Q]Sg0lg2^>F[]41"DHT$f=bha/Z:IK[9fa=!!'eho*g=Xn)!rerTtEn?G"e=.fb^s'tXLNe/:;OSM1cs]<>2MHAYTV5QHY0%RK61KC_8qO!]"jtCT<RZ>;XRS,gR<%Au_#pY,CKBV9E"U##MG=$f:B3SL]stSY7eVW]C6p<%=D7B+Y1,3WjmN@BIr``Z_eLs8V3]%^]4EAJ@.uql7=7q+:CPn8m>@5#JjdPEr[icMQLQN[[Nf?qH>2Fea.+/&sXq8=7]*c0q!Qq'gN5SQ770_VCY/=g%YHU"`K^Z/_TjU%iX!"*N%JoQ37l)Sc':])JoCeV\^jZ^FBqT\MnN.gGgZSr^1=6DW*4nW'Equ\N>@6]g:Fj6WjIM\B.@>ldb1%k@P='?5b_Gu;D^\6%;O(c`_HNf1>bS1L$mF[Ok%_'CootkY.Y]b[XQs[9Ek`AG".["5_DtAZ3BL=+/97o?=\L08_6mmYF;9M"A!L_t/$tu0+TW]CBBX,2%]u]^(D%\H`rRD<tdTGO0I<@089a07Z!MgFn>h:cDJlX[d!67.BOP9oTD+3G:GIJ-?ZeLAD$k&S\Z^2&M]:8t93=][\!0B1PM'UAa%+jOsPM7[s.E;#7<A1pfi6+Bj*(5/31@?&f2ek%JN2@2;M!1a^TRsN'SY_q"2r/o&a"2$\[C3ITLS4gd\:7CD[EN<4OV9.*S>[K?#%Q_(82Mre,:&8=:?Adl&l?=kQBB4_S%i#FR1Fp==BA1>Y^aT/MEFjee3">r//C\CYoklH":9\H;Z3EF\pOSWpsF20:p=4K</]j*BM%D7sC5F$*AW<iT]nWWGG-``0-!2*j"j'gknT!/T.SX5d*[AcO#-7G$,u_l]p%TY4#QL8"og.Q06kkD5hq!U!?rl%O2\-><+@V<>FY%+RVps/$Z@QXP&>/6ds9GeZ-SR-XX*cB!6@N8jP8?i'aWJVl5<hckN:YZVr2<7rpQ0eI:J\O6N&"D&BPP;-SCPqiYOIgY53b^%\6I%b>Dbsn%GLi2J^"Ng[L$@P3h#Z8<P5]8U;?/Yum<8PGK)/c.\*E[U_sqUV7S/A]LD/hM-6pQn5r7D;I0cr%V>\`euLi(h7qP=aD#&%]nkq.gG1-L07"S:8"KCQHS<Q_PNBLP?8$JnZ+#">]i^SFP9#S<G'itlZIG=i)s3s*?,j1gh:oZbag-,/_moHHm$oU]@dhlWlttO@%V&+:C\DrV>mb$:ff4=V"hHh0Z=n[lh9tY#9acc!,j&(.B`a6S-feFM*H$e;b(Lq85WNBjU9k&LX,tknafJ,k^*W(abm6tsBHBZ&>%;4$CQA6JItQ?ctfESb8`4'?kK(.[1BhS&YiQN':;AN?(5<gMI&V&-Tf]o=T5p,95:9m1Bq&oTFd*H/%$'(9\ZZK$teNjfhH:A0^k%Nld<*a52P0ftE2ca*;YuQ=S#TmuGLrQ<BEClsB<.g%"d1(VQq%bL2;nQ_bM3kf'hQ45%_^Q91;let^7>gT2u"CG?Z!P29e((FtC"%HZ+8?H[D74g1#H3^";#Oc.gCHoX::'m=0%)bHh%q*6[pQZ5gpba)N*4/a%+)bQ%Saa0PX#g\r9bDu7:#bH`\BZ7J$!S9)t902'SN%+%OU:s52SRP&kQbg"N__bFJScbFCRGbFHar*-31AEQm+jrZB1N3?Q;Ir'0@ar'0BEs3I,)s1PNc3R;sj3R@MNc?&-<o<QS#kAe^+%kPoVKRIcqip9pK40$CQ-pA_G*f%W/;95AT$95D^k*3C7%EO>H>EO;&'EO7XeEO</*s0m.ks0pS6rr:kZcMt@3kPr_gF)/gYF)1g=%gfhu`[l.mE]r`i,[eB`kXlVZXCNIdH*3HXBIqu1JgfeK7[anW#;pQ0Y(J_cFiN1Y$PF/CBHJ[dEbrLh<-],O\=\;_9*JchN[@ZoA%BBQjpYnHBgpZ;@'r%7pB=q=rb>M_Zi=0FH%lBq%P6-F8$ZWTdDZWHIXIa45cnp1<!CU@1+kd6de!]X8&QC_kc4S>g:c8gsYjXg.p%lQ8VVanZjK#IBWf3EaU@/6Q2T)>[7[1Vek?3j#`0SY>(Xp1g.b;nm'n!l40DC'C2mbg=sFMkTDR>0g5a*aCL%`m,=aq3R;80iKAr%blBP@4Bnf<3GH,<]o@(GFa_LGdPFo3=f_5W,j0]EBMHIphMC#hQCEL=`(:"i?NEoOZ,Rp#Rc@FUXmti4GHb;sD%($*,Fnbfn(fk`%(P<^b8F6#cN%_Y+]^`P$0q.GkfKF#R6*E#0YK,L8]0"nX[[XUnjWl<,2.\U$FYM%df4q1`qJ)RpKa)`ScZe,nqpsAJcuPcIml/gf%Ir2UFRd]"9rqCUH>&Nr8^[>?6gqW9MjWjsTcffYDjWnSVp0-'HFLFlrk0u>a[rIS;AZ?$6]Fhh/gNtqPHDY5\JlV/;]:ABHLu&>7%RB[,9!#gcd--fb.B?Tpd1D9a5-W*f!L5r9[WmDHec;%M:Kp&%:FoHO7\nCCbGW"Wdn%3Z=FlsY'?ZZ6VNP5>hs8Ob)3IgM*h04kS%rYJP[cqEDE)qLDB?ZVe0S4!@'C!Btb=Ui&h?B*+KpstGB`nM-,b()D\Nc(^L?qeS_DB(F(&olus8m+Z3,$hFMQ2),4Zf%fM+J?fE%Q@f1dW-fKdN-)lr7JScBds@r%U^MXEXHX5_ZpI-s,!@V^2R=<m%L=HR[,.*F^a9J;$(2+F=1I24.e>*KeDq?f+6IDO$j:>_$M.k1%):F1h0-N.EYQo%7=TCsXrOf7PJNVkTLS87198rt=Acq%\0JK8Fg3ab!.j&_fG.gUEALNr]@GVQ(4fq.A0;#_E16aF;9piO8aCH3"%97X">`AB,VTFBrR2Tu4*SV]n:6Z=OtAn8b0\dW/(PSOa.-;pRc(iP=DBTNi6=on/598Lcs%rY+f8f<OXi"J@irDE/'81G_W$$Dop%KjZ$f%tZP*Hstma$3MZsdhR2`AJ?6\&i*;p`5>D,.KegZ)nD(+'U%]4:`9^.aF"<s7/9@g]m*aJC@V]pDfb7kA6MA/F9/+`#,)R(%=b'`[aL*"h)DoS_AB&@1jhn``<?6BR`m<C)NfH[=Gaeg[8Jms#nk>b!//2J_"pOuWl':T$/.N0:dUH@9:eNiD^!0O:%uCE"aTMf3%n=jZsU4F/;AHY%HP1KDu==dK;P!Q&'L,(oqO-ee`W^Mq@)XRaALMM6#.Y5q#,+o5E,>sWA^oJ<*ppc@6j:s"("0>6%(V5/SXcXs(%A^%e7>_pc=&r`?RI,:/X3j^`kVL0IOGSs!dGT"<uMun9$.M^$&Y8icO@gt$H>sHfX-@?T#],1cL=@Hqqd+]IEl,tnFE,T<]Q+>uV%"(\B*@T]_Anii>4V)cP5a1QDCZ*NC71)bfgqI<C$<"ok0prK*<#/H@4]re"I*.42,d#^(H-5`f:&r-O4i^Hg#a4hABas1@2&(>.<%/NTWU9]_Bb)KWPC?pOP##"f2cH(2VRO'ikEBQ[/D"qNSROJW/!lb\mQn<'K6Lm(/e+>1hu#eW?Ss1i$A#QpNL`bSI%`(,@N8Teu`%p2s=A$S43'0(3YUci\WYA-;*BKPSRj9KhdZl$ArZrH.PKDp]m+JeT<Yj_ZjcV6R1cll)*6BYsm;Zh_^*m/cK?&`0DTTRinZOZ70b%j.N<;VKS7\do=^(GT4II;.NXWVEnHK6?"FpTb7(N0sUgK3j]n25u#$%dLC#1l%0o`VQ'GBlXYRHBf]Cum(nO"(Cq"R>3]r9OUeKA%H(\uoUhNXBpgJ=[*#e:eWDc%3dKdm'AMFc$9BU/J8:fsF?5SSsl9:>sc6AaAosX5e7n.PJLr<6slV6JUQQ3YT"8ac+0GlX:0GG$h%:e@m`'p1M9&fe`]N@"an'#Db^!?/eqAen8m".,rD@uM<9KnY+W6\'-G6oM@/D)R;IK$4c;KaL]_Mr\=,D4feGZ"-54K(T7*'c&ir%f$REK:qc79,J@Rl'M=`!A")V5MT2\?fSGbAOMpF$V;=0LU<OfM-qM@H,s?Qd0JC8m&1e\99'^=9/.3nQX$dZS?eSCLB?gn&iS*.3%9,**fl*s9qTnCijU8ErgJ0ABU4lb'(oX9@(842$5+mbE2&PA$";?h&tAbpu'GQn7<;+MO%<%h:<Z#23B+>Vdsd\5c1Ppo-u"k(oT%4M&F=FO3FqL-2Z#-_Ze2D_nmCPh&g^T-`D1#sM1jV)<r@WJ1IBeP^=\TaHOc5RbFrmq^0Bn7q6*3+@VeC.)/G(fF<?b6FHs#Rm]A%\ThdC]8Mr&82*@\Hl9+G6oq[rd_V$.<.Ql+4"4..L,7\]@T@d0U<?BIRdXc`0:8Wd`C#gj'tn]+.C:a+VlADG6>L(g#>;q^4`J;$%2cp5h@$YqR$GpeVQ+F;V!>`l"K'JLsR$j?*#UZ1QERZ:FdKU[Jao[b>+4ifPq34un;a)+&>-,Yu#k_'c_]\KXd]T941b'52MeCk6%a(r,FHrO>qH>4MNV:JYpF?E>;90mtUHF=H&MoWUVnOSq\ZC1e&$E"d3KOouF:O$9OTXl,oCQU-5e7f^?PlZ6$W\FT%_El(0lqA;J%R$R*H?K&+j@PFH>,7(-N1<ubE&_0r++VbAN(Z>GFA\n%>85HNKU1T`!j9$_DgYULY-JrC%5\=JBZ/Jg1#>u*kY_$(5q#PLjHiSk#%7475dat3/%kFfnrp,3#nf^2fX+4pEe$Q(Y-@2ME@RH"AF>7kgS8-SR25R`g,Q5Wpnk9U-baW-tfAud'\,<+_bE)7H'9(5mj&`cCK%(biBeF'4=9'(&W['Tp1=Dc=E>7iWBS?<0$+R6:"1BS<DqCFLRQ,0`\-Tn-c=MnH+rPq6=),mFGiHbRkheQ)E3cPP:h26)$E[41"H%)_p,K!U%;4)c8k-P/DJg2E68O[o!4r=e8"*oZ&C$0n>S^"ETnRbY>slVP*j>[rJtiV4gX.&2!FWQo73$\^6#2iLh^R+m?k!WgW*,%0Jg^e0P6gf2ooO(!K2m\,9^U\Xd*AP!&G0BBauVoMrY/PMCh#.Z>%]+A=lHSYYft]K=<Qr"gcg4"Ms"Bi%XCsR_iO:OXpXG"D.kk%eY+IoF]sSbX\HgGPq=O(X%#_VYZ).%bR+Z8Z1F\D!M.tco]]Hpa]>B@)6=f]&ABnY"K6(oWZm_;NRe07$DeeX$8bqG;BSe,+CtQ,%e4^IqU0o=,//?Wug*fYF]$PtZh:[UaD6sE<\O``!^Q$JEK7Ern&0Cf#^f'A[%1-q;L)rEA)*/rD"GW/:5_-]*(*Gub5bY#J-A@dF%RQB!;@A9P9<XTA=9X+"_=a-S"^rR3d$04@FdW%hm=>.!Zn9BMXPX8b#93m,F8h(@Q71s9]+-H_YL6F;*<gnR.]KuZ$X!K*;Rhf9L%#nE=+CZM2!4JOuPfHZd!6&K&X&Lehn#So#uM37(SOCG>oK24i93Z+e8pk-nGkRM9d:P1&1$8WlZ`>OOm#R.M1-1ms/GK?&2"bhqt%K7>ESDt=nI@t6g;DbspuF9ZNuH32VjPmo-M\hJp@_`W;h28m?:gBR3n:jTnfBc<'J'I7ig_#f@L"g1o+$9E`rK*T.&%Qre57Ic>J%lgQkbN*Mp/a:NL,m=J,t:+>jqcMCGK#ekS=#Y#71'*<=8dib<R,8Z-OFWf[kM3Ge*^bl?Ec$Y;kW*2I=3&ho;L-fhZfsG3!R>-<5%OYj9V6u#2CD`+NSHcUG2*^ds%^&l>%e)2H41N>ssN4OI9,m*Ea.).8H-rl$*7Tkm;?5Tq'+^c9#J&/cGM\%-(TP1.b8mic-nA?F"%Jkmaq23NP2AQ#UlZ`^$bd_Xq1*sLTdD4`;S>nWPu_^2]IJr?^Bn1P9U!QN)i1)r\_67Y?<Pu\al[:!SY`mE(h1mi)jl+Dbl_T6#i%KUGVLq'I\qOH@nlJ3(&5Kcr%@<+'2];H_@Q1lAbbO2?aZGn:Zd(fKFJOqM:JPe9#`$%ZQ-R]'J'_8NU):aT\O&t,C,=:YKDP;`_)%.MldVjY0jBG+rCM'!/VN0K9@hJIVd-+J:J\;P;6m=oaNo-j72BS/f0e1tPlnA1@kFUdL@ZM*^D!O?a"4m5$.ce/rX<$pJO8\9nk(%M*JFr'&UMlnF?_a'EtZn,Cub,1]or#j,&"8[8Ql(9ii?i.AKW^BZP:6.p%bg\McVIU@]OPX:\+qP:1Og7H(*()V"GmEd9clIm>'`%D+.FYnHff92ia;ckQuaB&(n?k796gr.%PZa4@gC\PrO*;#:B9df2-g`r?NMmDfm&*7I_6NkL)X6!O]t,EbM%W,1;SkM9Z4kU2u#E%i.H\U%3kn6@8I=1(__kIf7SiK+O08Ij%Wh7;2"8?k2s5pU<*ib"o!=IVm5bE/E3)NSIJITJS^<^!jluaC$pk4,nR@&&/u(JC&gDM%S"X5D%3,M)0X$X8fV#4'iD-J%QjSNkiBZNJ_Use\"#U>e-E%dFN51+dL]I(U:30RR=DGZ<cbecGX[9'(EJ6Y[`04Rq7C$Wg+t+s2%&4q*p&0kXPdN]jQMaUqX1INJhQBFNf)5Vpq&46be:fSUYX&Lg8"Z.t7.G0k%E_2c>&9$kX`;5&Aj7%=D_Yd;p-fKuGOFiO);<4'1%BEZ$_lLDpAE]Cde'=p@C(gaG%ac*&;%4>>*R-;EFE@S9V!RmL[j+1b!O2Sm:I!cI#pXh\'i:+1t!TiDckYRKg@H<Li.i8P4W8p=c%!NHSD#Goo6%a[.h%b5i53"Q4Z[DD5Vf'(I?X+nbRR2QI\m%?Wf5>QnW:gt?DGF134r::-WZbT$hTeIDA<jBG@`bEna0tn950g)UB%",#0L,qpe_'8Wn+I5VLn&mQ8#!<W?,a=u$N;KtYJOT]gC88pt3$S[.%/Je'5>3M;1(TE@E_I<RL*%Y\UP%R'7igGM028khmZ#E!l%K`Ik5"\lE*(BuB,A"h.I[udRk1_57#3I(J`YjriCYm-8r,"eF1llsb1+n0_/"'<JUZ0]H)/.)To:L(Fh1CL?u@amTF;a=N2hDV>>%F<6fPBo8@:Jgjq-*gU7Y+Ya_);.rj<,[c45U-_2(Sa^n=&M\&8N(]1gN^c924If)P+[bJ%_LXtf.U8Br:XL(($jE^&5q#pr6;=u0%cn+-m%KtE-+VV9/6u%=t"G6=b&e%:)P_`!Q%MIL2"A2?q$(XIu7@M/M;a;ZD*(#qo9)pi2:ed?RI!Mt1^6EP&_aT\U6L*Z'\12fe%:o#:'Jg2sMKXYe\Lk]<1-"Mge'#G$-2ZbO`#0To#;^XUL&2DRc&27r-EA1Q.&2Sr@#baD^&)s?=FV(ee_Zle@)G5Z2j;JU@V::)6%0GtRXBdOEW1`-B;_3$]nKX]&c2^8H!O%#^(21i&tnO"F\>ReUqEEODH(Kpl;1H-=@K->%)OJ$p`1>iE)*_I&JVm-V3\!j7rlVLW`%:-g,,3`0RTl6,s(eX9kN%:)IHR6#8-9hl$9#(i"!KL9V++cn6AV`btrpC^C/h1dRJS`?abF=5E$FCHggcm<@t9kU2GRa1I(.Q^)1%^iZKm_Ust]aeen&bgNmGUIt:>:afUF=A1bo>?*/(Y+\4EF;eHa/pf.`92E$@%1*=/3!5)pEJ.N`'Pen:B30"a!0Z#QnnNlL,E`*i%#E1+[N>b9JmXd.f3`(@bd@hbCUK`OS)I:?T(nJ/'cXbFGY3pG3%kG3m&sDH($k#J4kdmqg,$ie0n1BE1q-oHh5/;KO;'rlWlPLPr%!(>F%^?![)O9usJK&PZRFC!M#S4_Cm!T)DDhI[@-keu5gc.bM.at\&YU'XVNduKL0j7.@NW7\mR1-1345r(G?,a6.)n9g7!8Z+tP%`\n_Ece%Y-1ROud-oF+oKB-kmlmjid`'?!n$sInKjS>`l%Dt@m![9TH5R,I[E*O%3Vde4TDeh0<//^eN/C[?;PoL&eWZ1H5"iVq5%LD-<@==gD^l[C46>qMf`k$9B@dM*@h*NA#n&EbFJ-tlQ%c[7!?*`oX>W=8Ph^`F#`"%EX"D)GjAj8=S=?XsYj30g31[OmXoCbiR<%>tH9>=B:l4*=")G\d)'3k+OmprfGL+K+TIB%&E-4W`BtajMUlb@?f*m0$7*B1#D&0hM+V[YCWnL2H%L`*"1S<CbROUSYk5B%./sh%E'QAo9oi+>d_Vrd-0Y#CD)DG<:580Tf9:2?T^(i,,S-[Q(DI>,_mI6dM%Of^Nt<j"d04,JN$nj<JcM(I',`BCB;&Ak-5nMX/O]q)%hWA[K8]BH6KX^'nag4g(mM#,Q:&n_l0fZZc*M]=tFl)gt2I66^2BFTJ(pPV=+Vh=VdXYSkk5qu3V-OXe$jJE<dh^J^6q2)FKbu$B%.X[Ud?l5,bZ$9L7UEX^@D'p(@`2(I/9+nT8M_nNH.X;.AKpI;T+<;_%*M%rGJTRqD7QO-W,FtdOONobC+J#<9^sSDiW;8OV)!1'E%N%i\*>DMnPklqcZ7mVtTh$$c+h,c"DFF5Z'7+XTk*f1%gqD]<<2)Og"PpltVNW[f`&N1\-6qJYiK^Pj58p)I&7m2ehjeIBQ,u)(t%gX=$XUT:LVjs.2<A&[<eD<H^SN"@BUDtCD8W^/3I,f[og0$;dZ=V!"8gB8Qi'BV>JPL+al&D<mhSp@ungI/NZ1UuR%hqJ\[;L'R"%"*,&&(rt&oe.Xn08Rb8I*!P>J*<kFkVVpRhAj*84"G,FlD;ODlR)]MaU7en8S[WlZld9ts85`%.FQU-N#I(9<=:gI\8EB8o%G>\3%3"Sr6P9khboXW1:eWqO3UP#@V`dh@7OliC;TuAX#NG'Mq@N!=iUEIo+Bh0u8##TZi[qIJX+sK#UA(kdZ85NGV91O(q^iV>DN>u%F%!s8^`!n?<e^bqj?F,frX+9kDU<=CPf+,e/Y\<gT27:HLm-jW26#EZpZ3`>&O2743O7HR<]=\k.^B2jRB"ORU75fMKlakI4LQ.0We%)H0T@,Yp%VJE:cK@4a6C]M0_f1rre4c."EgLaR5e'%6qP@SnQC6RE=3fHcY(9r*A+?pPC'(c3/8bNm);/>8(LE@POiDGd0VLu6<^%JbgQD2b'+u9=?"_:jfM&(J'/b_)ML^bHRS\KE2W0EItZRV_YV("6t"]*h'T`B_&\F.g6@&0MP4gUj;1.oUc2!_WX8W2OD;H_l*kq%Ca9]A.EPu]e<"F\+r-P/&A>2%d/&P)%HLL"4rf:@%b=RhR1P<.k=E"C/O&UH_n[!(jm-a$7ln`QiTS8o6b3=qof3ot?cQ<?+C1sV%?Y=($HsHatN-%$I6:`U?L_!`$OZ;>;PaS8MW%J-GE(f@_EJ`Q7!4"`GA^umR%>=r+I2HeCQU;M4osS)/.Gl^%RTn&KZ&:u+FMWu3%-FAdf'3`d/5-EpCYUSJ-AMBeQ_^4>[QXEb+$:/E2gS(]:(i%QZ3op_U/ct)HHkQj>UJjLKG*KujX;Wo&6,BL_3>_ccrZmRA\<:/A%"<:R1TsHF,""dBa:\-_'=:WTQI,F1-1,S<2;a.FjL:3dAVbKgRnjOTnRcmV;KEi4sUshkL?cQT.OfkBSi)iea@MY#Y"(H2taCqPW%l_R&Li(Y"b;aKDbi>%$'9nJb7joN:2U:Rpjp-6>lR"b9<jG#sTnnj+Uq%Au]+DOec^iH)o/2F)b.<*L4]&;@I6gJS2a+V!r-pB8N%5\Y&EYRYdE_LRmH'SZ^"erhQgb`Ic3E6@?@S+:8cKM#!VKh_BU#@gB^WZW]pE!i)=af$n36]?9[EGl%i?4[,Qg6dZDf\K/RFu)s)%^nk%`7aYb#$\!mY$lg-.bR5RgQjZKY1_pLr6L/JDE3Z\qUm".,K2)0iXs7>"O]7?qa2/#[%T[_h9KWl#"Pkr0";V:&.%)2sM\(V8%U"t+5a"F!I]1/*]i=te7?S_C*$/G&j^J-/a%T)-"$?1/baWs\reWn:-Db=TV2?X@=fE$]7(>44)$eaP"IO"'[VT(e4.#l1ORF$97%.f5,$D=MW5-PP4<P6l)`0O`mo8==2e//^qZV6LM%`nP=MdSOER91l,!^_"\>U]GNY&kSk'ZJNUJd$2o6d!Ufhg8L0/#mga/L,?bp%+UEZE7'e<a"E@QTc),k!R!LYIS"\MD!i<0%Bi?2^Pf?$bU^L4bV^pQ!#m1hl3)6;AVD.INUM5rM%mk^S#mga/g-K;E\#eEk<F9Ao%Qpj&.m,dFL(1F!@AMMU>^aNR16(!d(7nW898@=W>&P=HRj:Xt:78UgQ^t(cn,'T"&7;jCgSX:l#^_;#RTe;KN&5;pdQoAQ#V-RV1%,1Q0>@BRMBdj#^YWF9blip4]UKOQ>p<%TD/hTC"PM?cbkoDNU'l6nX)9u*U0hFCD(ckZ&<-%/T4\4$25:.@`1K6\Y%&h,*=TnE\=%V:^JC/e!M.2%_3I7k>Cr<W0Ku-9!%n0mfBY-OR]pdCnW0!tgA=632u[>0W3P;@U[X33jD/g6?Mu.]di5:l=)Q;sPJ,,fq5&=a[pQ%<3\id+T)Lu#BMIV)%js%`!!^S7.M+SY,/ofZESe/k+c(m,)d87ko/!DD>7$]*R/IR'gPK.)Ih,O2/%52f%V%;N3[4/SLf]KcsT(o%'SCNN5SS$E'M5O:8]/Wh<]dT<Q\o0@YK_Xsfd!f*1\S(*QE4Rl"e1O3I"RCF][5)a"pCcf6l[m=FMM98$@<e@hGssi%"/)+,4LF!%'<lOl)Ao%?\;Y=qRCk.05mJKE?k"]k&4KIm%EpLR?VX7g"03abKcuI8ZE,oQ-@=K>X.1jlc$7/B82`!Vk9mVbM"5et$)Qda\I^q3%@0hmp#WT+@fT<=R31;P:L4hr=jn+eB%1.mP5gd6hU<o"+*_[*A"B#S8SjpY0f`]A%Os\C410BiCU6RL@;MHst[W!2u@&g[r@-VGJ%VZSn2<d&"aa2pGT+E%pM80ZI`6tu!9"(c!cceA^`&##-mBG,tjAf+&gT3VsWR3R(RMX51")5fc>3M8d&$#YG!DB)n2"5Z"R**euX%`dqr*<!hi@:b:q#TmRc<8m+$?(=oih%2ae;"%LgAN7nRsBV`li]E"'"&ZL)?OeGD]b_f"V46CMQW25BATR7<tKRjlJ7)33sLnMP=%1gV>6OPu)@#t5VC0>TpV"Jl:H'#EMQZ%YffiS*Oj1K;"QhU)e>^sn*iTTI6*>)=qu1kR%&'qU14m?NbQ]!O.`-lNUGN=p!);EuES%%(n&aUse!_RBJsJ%u!ag6skW^ER"]T^^2[SKolTRboURo%-\"&/.fW&$cgG$U5#NfEE]*.O?lfL2[)&[nae1a2`rPl(/R(>be95P%QW4sEXJRUG:DlcN8l+>s.>)[eK".o'K.2A9cq"EcbWA"U18`9/0cDVV-52-M@^$]NXcs\>Rn.p3$r]rK@HqPoR!Mp@8n2ETa2pF]%-hAUV&U4SHS3$cjJ\s`Nq$[PAN_mh%OpV3j/Z`qE8&iX]?W#igNi\p#$BC(oO=5/3aD.5L=XPQP@G-XXM0-S&<Xpu*mt#SsQNVVg%QNTWsQ'JXQ^'/IdAQB.?"+Q<Y,YaY!RP:'4.:F,YdY,/uL+ZB@1gE?ok!9Rb,7eeqP7&YHcq%rKXFV!YY5KMP)BNLr>(]2N;A^Dm%s3H<'K;D4[7L/8a>eP,4[)u4n%9OBD'\JHoW*3AFBQ%+:.39lU+$*[6<HK\Z/(KJt(SUu^FXRhO#,+lA$'#HuGi4L1W*6bt%"&@N%B^_t#Mh`(*hoXdn+s@s3<.1=V_$0'5**eT.oJr;bM0'20N-(GA&YqK+bT`Ue[8^s/`39N95V/?`"u/b[Xdh*/D[O>_`^B#PN;g8!%_GEc;-Q.q%TQ);cn),o'8![.RR?F=5.RDS6"\4k1JIYS(,41+Q2^GmVWAR?d,gle`#?-A?n3C70LU\m./($tr'!7ClN(PG@*PM,U%_LN.*eqiD^cqsufTq`%8gCVA$7ss)h/]GaN@Hr^=31,P7+p1\snqfmp$VFpLPBklGH.nI-g=j['3WhsMApO0/>iXTH8&i@U?]f,o%>N$,uNf8T5\<S!"/$d=.Q0iP$<!M\s?lG;!@qEH8b/OJ2W,086b()A+VG^I;kA>!G]a#+kG7UpTV,GmOB4dmkKRjj[Q<A2W/*4sQ%kQUWi<Z0H*.%^OcX?LPQ9=(^^&149t:qe^6+=0\`Bu84>,tt,qD3tM9UdQ.rQl2]1aT^&G*Y/AUoLLRnj#/*XKPU[`1d[f=A?iE]%lr6WiaTlf45-%jQj<?iA,!BWURhF-Y+Rk&`o<ne"V5=lp6'rs:98u9*(Xb"i<iMnDPkIYP4C#Ju+XRc+(bg%6Br^^6P\)[oGF=1`%Jq*Ql[#p(U@<-$`8<IYs[LGN/D0,k6F@,f9D4_(Xh$Bd'*GBSIF>_**UH;SK+J#H>"R-Oc,c&$R"HVsbnWBsVUO8WR_$0)7,1PgW%hoVO$5nW^Di0Clsm9X8!i.8`$<j#Vf><=,nU'r1h$MF?)6inEMi/k4RAD6aVWRA7@PV/>U,KjtDAD%BOXNj8Gi3>\-PXlU<8YZRo%O1ZWE=`6r/kp\tk:YsZaYjAqT@:6;_JM\W'lYR6P]cMi@4UBMh0L65doH;A;\.>GFjhYKM:_H;0*JA^Q%)TXca9.(&Go-n>0GGkp%J\fL9;J&=;N(>2A`e:n_"+t/,%h+b@>TifoWMc;7W%/:mLk,91%fu3?`sbmBMiQ-r3m&S,2H1kaY%*BN)rej%J94'!I*)K3i;g@.%kA?97"/W9_4di45JMJuWL*?_2-mDOkV6QeQ?5O!5`\P1YG6X3;!KB?50A8dlF9W?ZRU^qGaTSupVg'#OOr"7h9L*rH*^V0V+A(\T%m"_dc29r=sUC?8E4T*HF0WO1a;<1s733i\h+]7=EO_$][>ffG=eISMcjkI:;LWe_\A/ag'ZPrHk%f:0)pGhUNG.j$nASn"+H,ol$%I!b!`^Dukc`u/OG\(05XmIgGTCVSd%qM]^/hs9_%#.ql<GH6)Aq1DpjWh";+q<+>,^ED,Jn%F4jI/aUmc/%^a[Wc6\0u#VbD?&5_%pTLprf3?U2m^qrFs0$VN[GEt"mN6561Bt2bH["e*mTsfVVg%SH?b_*j\`\GuW&<`ihV*#+^ZF27meQ:Desl9g^"8YG$uWbXY2.[l%IR1-I`ts7*FiPTbRd42DS[lMiEr3\E^$XH]mJm4aK3`O_j.C8!>OU?)kV\\ck.5JmF0E4<2LFo-m[8]6hlZVI[Z`_s=*G3o,KDgR%gA:htp::4[3V`:)QYW)*"Z?=0s1^etI=jS!Wf;MjgN(!pa5G72BCE=<q-T4rmXK/'hr*Cb^DpJWZ.9oU\aOJ(hH]r,F1+42D)'Ue%hqKgQ*UK3kq"L;,hYr"Q0E*'nmBQB[@]m>Ws'O,c:32p#c?O:-D85mRXuH&Yn,5?3o;8gcs*qkW3IcIc3:DnehnO6Y_4Na4^W6-G%D"lg/lYJkf[uoDas,J`;J)C*@]rf;Ie_J`"DgsY>s3?"-la6r!k-Y0Bl>+5>\_WU)?L-KsrqlH%2e_m8l1aL^qptL[]m&m,oD^])%]Q\0Hk.ffs_5hjj4QD@7[NDl&;q_.'hr)i3A)+id4DtW,bk;#7[F]>8IEn=75(Ca-k.c9C/cPTYctAAGO6t2\kH'%1@*dWR4aW4X%f%>/MkAB:cjVV@.Dmrc"4`gQ#s#8g5Ia7E$)YXX5r9r1ehqP^))ru9Cjik?F*8J*nIJ(:EkO1^-\W$QsR,?`in!="!3<ln!hcgWR%]ZKZhfm_+o^V,7[@uP?G<q?dohmp0Z?`uE>GN8_.^Gg)U6*L+I]DM'ec<g+V]@M;ogU4H_B&%gC(\IUmNjn+TF3OI)G5#mhcM;r"%G+?&!I9R/(X0;3LK=Gjfn'+m;ctE?i#P$(]s5-%c1[_i,*,ckcJ,ZRp3+oiVf^UkKI_4M:qg<7h]46olr`S:M2pWD\R+p?kCUFC1%hE%1pf5coEp"];#_2gVEIs7Lap)UeklYp*ENNMZ@oBeUED;Jfmqs1fU?XN<_H`u!AgmrB^0CKh/)s`EikPTdFn\/,kmm#G"K,NRZ%qrX:;s$+O@BC<1r*Q4?:G447*p>"]sH2d^+h>P*5DiD0NrS)a?f/N#s\[N@/cS;m'qMmYjria$&i5KnES%J[V>AQTc3IUG<*42+1%hfF8Dot:1W60l;3qY0?[h4NGK1Uc34h_3!?kMGglepag=X1S=7l[4-TT6IF-h)8aSA+$c!q;Qbkh%t\]F5Qi>Fk0i.h_3kgIkY@B%GQ+keeo(Jp^KYo?\c$dETC^@\mbY;5fAHHiW%j(pjka>"q6aAsr&Y/XVW.<i?<`B]#!(g`[[_imDt`m7DgVK7msFfcT%e+e^"VeE%mG47MqmjIi@uU*\eo&.f#!:spa5$./ZhDu0rboPpGMG420pchHrc3t,^7"/U1T3%+pW$@qmr/6\?Z,o<@(m^mIP9oghmn*(^"rI,%I-p'a?b`f$)>'<ff44_9LpQPqH[To%)0:`7a#mkh4169OSF6=PO$2\c'pl&Z<aTY0n$_t\Fl"#6R.DA+lgY35k-D]#q@.ntnbi"(%f'BLu^)LFl48:Q)4m.'"&7b/-bV.!7>(+0#Hsa'CXM))+rsiMNWUdb$?[HqHs'CaHIr3dXn"-la3G4qs#BTq>F6n1eh<(7]W%l>>%^;'!WH1*q0h=J%dpPZlFl$$Wr5PJF?D7S3nK:_+ODn[.fR*4.]rr(qZ>Q4<(\:=!X%c=Ja[eOJ#1Uus5Er'[4n(j@HS[Z9RkF_Lp%[p/;UetC#as,4)"ghQ`&N&ML/r87JAc.cTBrVtGtXEW6=K,A[BA"W.rG$j#jRlRVFn(2a/J,WPoJ+(XTboF`lJ,d(Bs(h+5Na&],%[hc?=qc\Km/U0#E2nlus%=Xo?e_5W4kM5h3*V>`RG\:kFk5/m(>0LQI5I]>"ICTPFk-3,N>MHLXpOa6".ZXP$s1W[:SMB=_a8<XO%J*nuXf'[Fj[@kRqjaI0ToA:C;(N]@]n+kd&kNfI_s'KY$fAOpPDVR+Y)/&D"GVQ\6p]'!-\b6s.R,\uehZ)^2gC%K7FcL=I2hN,l%g\6]8m@J+,62\:mf3`;P`u+01]Dl'J5L2B?$YIWEXge#UDJ\bF46HCsH?7F2`L;DsF.MoMn(lgSrr:SuH].^^fT'4W+5_Qlce`uM%Z,cn8br#\_k.JJ(G0N=5\c"b<pttC!^UiaU/\W@JSEJO/r-?l-DbssA1!\l-gR$[=J+f=\$herC2Y,,ep)2AMeei2)6&i/+=(AkI%jVu^:>Fi%,qg&`e:2d:Zp7U8AQLhl_"hF[1>OH@jG8mgE4*,=ghu!$$Z*rQdDRB`DeQlBt^WdO<hK/G&H^jc])Vg\F\T`Mm[C0H0%D71HpE*mM[S,'KtDsd;5Q<S=c9uV8"^VtGADnQ?6k'6$SHb\tBqLeWb*9ZbacJZ]Ik$<K)pZ=Vc:g`YINVWTU`aPuf`Z&94/\!OE%oC(R`Rk==SeGec)C;t"j1DE,V1kg[ibo:S:mH3#P3HM\$h/E=#A"1;][gqU$p>+G^mIoJoeoGQpmXB3fg:VR<S2nXHm[cT)i6@gq%p%>l]m]Xs0eY'oehS87.^W*`un:(3@T<hT-+iUa2qp.mV/mHAJIc!ln6'"1!joTM[0"-#*W@n9!c[>1sXlg_K(O&'OgM3ni#4_@n%>E8[^)-[[Ph*:nPqu;/dT^A:g0BPCOh6dLTcG/CdZaDo6ctg>0kL]b6n*_C>*PS_j^K\E.a?/6hh#5poX0)'KK%o.@n^i)6CTY#_%be@S2`tu*DD_fW$s8Us6jWr_a,gPD59=:3FKIqbn3?$]1$r3@YpZIoRrVsSQr42DNs52h\2:eGnHBW>uqn4`Hf&CR5IkbTHX*qJT%?YmL6\EB?hn,?Yln]oeaD)q=CCQ.Z\]'$`>k+:acXm[+6gu\&)2r!(ImQ^^]g?lf2NTBMD9A!L?c6hSak20e]C4*QAEdE)2D5YJ.%/H?Dr2j(H$akHq0el4b7c>cXMKHiD]CFY&dDo7C$h.@\QEOj)Tl>W'D)ulM$!&-L8)<Q&07L=S`.;0t@]PZfa'Q<S$Dt>l+gq/2=%/RgDUWjb8@41)#!Z*H@-?j)'GS2Vbm7aFJ<Ep.B8L+&%h+W*Zki>7*_OW]9Q'-'BP%:UIl#YJSM&-rCBn[<3RW%A,mhY*W_+o3ln%'G%EVV(as5,aHi47tP0CdVpnk;a./hi.uKkTr0&T]a[:Pb^1-/(-*RH_V@T^V6R:!j!B:JUi7PR>F#dV;kY<F\b$gX;c/Jqjoob'%3).rK#U,36Mi&Sl:hXVb67%CBB>LHmTnJ`B.G:YIhA.PRaP<uW1!)9-%jeRu*T3$&Ud6UMDCD3,#YciaRQ!Pc!GZ3i[m@5I?YH^K%RSE<=%G6cQi58W,Mi(j-LigH[MM"6:5KOBeC,'/"hOt*sBN;9Fm4)=j&?cX5^d>([HnZ0?E\ItgMn*Nr)Hsc_Pf=[ZNouRUBqQOP%anTk,/>br&b6oB395Gk]Ag6M;%4n/L:MA\'bf!8ri6*:,$,iJ^ChVK$8/E.$0VHKlOuf_SD:oh25Or4)dc!E2/<*K&JS*Q!:U`HE%N%`)GI#Wdljg,Abo%B(6O[4^r;2hT,V8;[F(f(k+$JPRs>&R?TaK3a=;:m?HW(m\hno:&t7OOiYHMMTuVL3'o:"Y]V_2tC=2BbcH%PV4!c8/t2toa6QK6#J*)f%]W/VL0/d;S]pZ23HP^$4N>$!F#5/dP2Re2%G!O]+"eo@AuMd[lmo&lk0r8<#dl<YUNpI8(*U@IL27Y%-3b*I0-_=4$o[5=Ru6Kc#+P2>8OR^7mG`[f\jBu4.3J>m;E'pSc*\=@k(3cJQ+>`U.7c<-*Y4U]D2kplljXMEMl=A8B<L,XE,mZU%<YLc<*-Z)F"k!Q1-9JTA%Doc+L\<L=]`931e7n&Z-r!%OkcjNQ3h@o0(_A7g97`?H=qIa>J9r4aP[PC`[8hf(SYZBj)a-q^U]_%C%O[_uLO@.)6endh7'iAt->mBtTScm7]B,"r"CU,3tU;H)@W6PQ(=Kn_1;$t0l7DutSP::m\V4dp12(\ug%g3Ro:/S5!$uNeLgat:V%p+:=(A+5-jM[*bnPuM,a2RT6q@_/3TnUbF[A<iE@ca6)A1B`7<_M.mLN=pc0USt!ZV.@,ENFE/2AIP<$RFqcNo+D$g+=nKE$R`8p%f=D%uJ-8VN-r<)s-nHR,87Sni/.;f),_]Y@8263HMD:uqR3hoiW5/o"p((rJR)=E]#4=gis!EJPN1c=LQLUqmf$>eOAXXE"S0c.H%K8PL80Cs91FlU'I?Hakt^bS4umKTjF.4M/K7Xa+?JC@h9fNN#ChADTTl6g^&`-h7Z-Ri-KG>I*FIY%lN")(VfPDsoi<+9,1L9P;%%]pS4L=hpet@W3"($cs];>r"(X:"m#Oj-&ukp,O-["bR9L9cb[`(4g4^_E3r"X8eHhN:#tY68f*"+&fmaTXu'H/k'.V!1Tt)68V_"%ig]C&6/#iX#DM8I;^Np:Xi`!!-sr#X[GXfX*/l##4u?[2+Fhq&&g#V1@36kOUpW,q*@^-X_s+G]CrcVKIW7Dq\#P`Hj&q%EXj2WY%8/`U=?#RNqK"N<Bg>%`E^qX9X#kK``[NSnYAq2P35S$0F:cq"(KK[bF,@5B)cP8p]q\p(,2-gr(*M?YAN:FK-Uj;^tM7s=XJI+Jd%@XhjgH1T7?JOp<$[b0S9E)X!q[c)43!9GiXh[&@X"'u05@L'm$7A&kX^1og/:p[TEmPJueQ3Lt#YR=KT,+LVg1&%6YZ3l8ur!Rjn%PZ<)5f^f/#%qQo/N*MW/n;\iXRON#LnMGJCLt6ZkTB8k$lf]Y/;$*76`ESN,#9ikqOVmca:)LQ)VfYV!\9g);,+8]V6(I\FiQ>II%H_*9=giJ;2K$iH&b+ET*E;Uk!_gn\[QnnRR8/;K#\O;<tWBi)ok2G7PW<4do_o.V0:94,t3'J=BUBD9qL@MSC.UWDJ2F__lhsDGc%DnGJneYL-)"rGJ?DWa$NQ\973Z3#9;#]U_E3ckK;Gh.9/1@mL"P))e(Z!q*'\<#Yr:50V/eeM4O:8=QrZ"!4,`M(RK808TY46kCX%qE.,MYp7HYkON2:#kuk0K1XpDp&Cne]Wk)]U$U.J$R((C8^L0Ca7.!)g5,d]=80Rl7ko/pX"e%Rfd8MU\a%*>W5sf#JPAk7hh"<@%LW^g(AZWj-?V3cMpino[Xe#:rF^^c4Bmr=3RlglN>ee>(9;YOjc[$'8U$57lH2mk?`P-'C:A#Hj8?fonG[JB*'n@WCNdIMKgcCpp%q7CF)YBA,Cm2E%NaX'EKB$G2sfd6r5hr7BPW$Z3ieiE%F8Bj@G!VSAA9DYeVGomMUU15DY"gU;EY(b!85=90i6a^\L;Sb[Aer/RK%L8d1i"#dnZ8$_N<lkE?T8!F2;=]sG8-MB/MLtq\DNZN6@FS8:gFQlpR<pTj,[!09[G^iXVqbHggUNuWthqAEZMt#m]l4Eqd<PlCO%N;dm!.]DlES/!RBaK12)'*<=eHY'khiKtP2;VO6!C3@XDe#8h&Th?g^n>PS$Rj&_U2b2AL$XRPFA!b[rri9F9KWeC!fl.\H/8Viq%Wu<s;^ZW&Z<!K3^\&&G8%;riFA0l9eIj4LSZ-#9Vn*+XNHTu/Z64Z4H78:T"qfRnc:_.?[):19RWRqNRB/F5JmrLdqXO,kQ&>*&@%o7@a9U3GC+YV8^=64OHN>6HBP[Vu'O]B%BBNbB9p7]/<35YUA+c1&F]BNB^WV8TrfafC`jF^87n4rC7gI3ou5CFld]Co9AZTJ-\:%*>L5iX[?IA+&#t&C%Rh0@m3COEZ:;fYs[E#<(/!Jc$c5tUt)K%Q9FD$.XggALRVM'>bKaS>Q,1r968kN!*d!NOR'pmna/rm]sCN'%oMd+6GCm$IL(P0aSj*/GlK3QYWW3\trH%p?^YkV6f3@7CicakjA+IcjPbhtcJAOOKXS@%uV!MOg2TooT,A(JChAuG'kB:"]/)LTl%?&p.dih)oUqY-;[cY;&WXk3l<:PKS&5=E]ePCPoddu(sVA*X7lK^umOV>;_@R?PuqhJgb\C%'H\n+3<80SUAB,d-!T6ag6=c^gi)%.To]sKhrH5SsUI;@>qlMibRqsQ?p.BUfG1'(OUc:<g+2@QHO.%SlTu'8QW)U**T3_F-"s,F,GB8_;'?P=5NnW]lu+=4mMj^kN[F=%T<FRN\Eba.X:oQ_Vd;+l6,3]d>n=8T*AoGFj(J[-[@q;/DdeYalQYcXMcQZt9Y7C4M54HS!Gn*/?rc:-:3h.ah$*%u)1Z+\kpMu=%j#GMKBJF+]R;>*EJUSZ+EAVh1$aF7/Q*Q!Nkr?Y,-"nXJU0(S_&JComQAW=QTV5IKDC3#Z,EJ[T#O;.DpG^Y_+jO2!q/30Kj"J!]%'MD(tp37mAP%#j[e&!VP`+/&q9UC.'E.'9c$'`hE.;9ul4rPuXJ#,ZUdU"G!<lk>&PC@I02(=4o7A0ZD]E@]/\>JF;klMTt=a<p(%bOL0u%ZjJA8dAN5rKRW\)a0iRn]mDPgJWjAhDjO#V^k^umc@44)YZY,IE"f-isS#)g_l</]1ar7TL2Er>')KcW'EY6JI(+H%i!o4%519t32><7:8N5srX?G]Dm-H*Qa?ZQ]bH-DW@1h!_Z(7Y@9N_C/J7VJB+`&S'rs/670sVcMk+"<IWF7h=a[%\`j*&4-.^2m0A_^H?%M@<(p@^A9`^8j$+90*h?R/PA^+d;E(LdbO55#*i&O/A^l6_jq<*%mKCD`?ie!Pe_@keucTOK(j<'T'P70]';XB)889]eACDM`m=Z%rJOFJ=Rl\a7_sbUlLq];NBR"Pj<SFk"bK+KDDgNoffoX]<LL+Y\dSes+<7'u/Tt6F/21]f`$gbLV&=NhXtq/C)ucIj]ocT'@DRhf%\7.2ie&Cgt[i3jn:V6I<.Hc#RZ,lgo;;=CFXZfDP_Po4CHhVJ0`qh2_g3uYl`QK,r`Q`\j;'7jPbbDp*nJODQXC;mI,'VmhF1bjg%$O0SE>>^6#l=P:"W^9"-nmeShR?rL4?l\pp%@9<n')*E%2>0;<G/0F9A&,=*nZd6]KpJ.f^[pn/@XPnWL_EdSoIq#P=BMeAKF$lo%Ig8^R)IND@8k4UO(Q'nRePqi?7rmTp'A%EXP@#4^lK4k&EnKI$JQ>[+*g[Rr_RCg6bUV!EgJ8qA,3D5ejjE9N_#V'k1:[6\`;E,#%+Mn]WWmTG>>_/:@KUjEtbpn?<&^=Jj[M"t'R!^.LE?[eT'koHe0FuM.,ASePNBkpKEKSj8>;O4Q<4aNt,,i;_m4hNja!l23Pfb&-%q,r7ugGd8Q);.:>n-P`A=o&=mA01P/Z5ELI#)C-*-m@$=\ki(#Ll"[OJm"e`9BH^fMc"l",:;-r*6%M3X.WD`U*?:o6'^"tb')sb%:$.+&W7d8]&;D"5`sV`+R.luU")qb*6pN+\%86j$)oZmePSE\\#!a`l<LEeBO%lS8oAm75bB:+DH7Ik4#E:=J3kfDR=lO#Mdae%Z%HG;N9!YUQuJ(pYsn-1*%Vd;LYh%=Q=W4/"U+Gjr>g`PlRQMSi3fU<R?fD2>7]L!l5F@T@oC)$X0Q)TeW&^%WJ_;h!MoiomRa5#+B%-+I8oSnc4P:_N*E$>Y-)>"T@l3p))p;HR!<Z%a<f]hqm!6XhWOGZ?/n,Q)oC>Lk^d)-%6Xf/.uh<WdQe.-j?P)\aR;0NdVU9qTG$%Yl8gV>_]u.XhE&9cemk'\FKI]F6@ICr^QN4jhC9-UoDn$)hVZ5;J[D?bKB5$:N#^)gr6H583FGj:ZX2D8K48ViCi8J$4a^iEW_c8%-+n8"4la$SETO@=P<0/F</i)=ELm\MD7C$+rJ7:M3RY.;V>ps:n=(W;bGEA;,pf8^3EEXI_j'?pCksC'#W(u^V=BO(YSb.GjDk_>%LK:7=-Go)r_;$E4E/%5=#G-=Uoo,:X/-D05qK_iRV,grb-ob<A9T[7lfDS.tB=K/_l#T<18u_KPn8g@b#DCl=du:Z$(hin\W)nu8%_OiV%%;a"!;mtSuP6&fHT6]VC<(lUKi"o9VU_-UUN9j7"RnJMJ`f+bT7hLtC9QM`I.NQ<pC#G;NSnX&gQQ%J63L7;>Yits1PFj5j%L^Y/P/&iZ"4qS1$lN#2:NcOD!,crfhkf[g0\rRSgN',s[C6Tc8g>9^MW2&1OLlIQ+6'V\C_S$m>,P4X^WX;uu6$NBb'39H*24(!r%6qG`=*R!ItrrVH\\EYjg:a+k/p4u%lA[2@^S5"m&BYdHB['q^r5b@^(7\I3FWXO*T7a%947aZ4=q\X-$&Ic#PKZ@+fW5I/AI^cl9%S:T62$:8S&BY2J.1.+Yn4@N;d;J7TrF9C,`>\X290B2NM,ZX5DZ4B`!XYl#Fd=*G8*1KsUnIYHT?0UT?C=C"Y-5?^s&Vd"6YQu`%%-ERS(S(Fa@ZK`BKSu7dhIHN<_;%_/mU?P69Xl]1>-B2f4@2gm69!1'PHkKU.gU=I4eH_]6/@a'4X[0A!T9,$CK5k?--!fOZe)=/c%'_T#Q$&!"tLQ"4(]XFLAF?CVqpoWY8cjbCTm\Ve&547K]J<%jD/UVtnqB"I_1H+7^YC^Xs8_T2jNIQYO0oTnF?U=j8`i1L2?l4Bq%N3MlJr&jr1.\b]dQcgL7AdlhMi72Z1&&!L`Z_sg9aT7Y%:Kg\q(B"d+dbS6U31$@B4unpm7P.@p@@##b`YrR:RPMep+G7DWP0g7j%MmpmZBnl]BVs8HfWWC8@I\%$(`77i#TJ+i3DH%""mlu<f#')Jai>obt;.fVQ[RMsr/a3p04i'HJQiP.N$<I+4]B5Aq=j_Gteq9na%'&\%i0^n!YeaG5LB0Q38pRH?OA@dYMIb"Z(pLQLueQ`k+O+S2+>BSbh%SDnsC=MrP[rj;Q\OK;X97;BU.Hipc5!r*>E@Q"8*[dto%%d\M87ohIHi!f,;WH9NKrDtqOnCOAtA#NZRd8Yd^c`.A)"WBDq`bFjk?Rl4rmldHUV1Okm]lS')-`7h.O)5[P1VAnX#"=n"lQTP@%VRAkCFk:";+T#S1%LSsjhcgH#I<TT+QP.k]H?,:3naR`dcb4IR#\2r[**UjLj@P"`+I4LLBdT45J%]KMCQ_gg%7d@rA-[YZM7PZQ%W']I2"'!C*nLF-i>K1=mR6N/_Q2r:SLPN'nV"+F(H8LdU$W%NcoF!ZSd]oNsL;6;6d%n2(H#9$,,@^\&Dsn"YhnZOS`<Cp*W5.I%%=DGt.<,3[p40][r-'*S5LtdF!iElm1Rs++E2em./YDQsn>!Fh[IqC]@(3!ht=7K8PZLZ?qFR6_.L%]u]NVoFl;;sT)^@`k%5,amD%_28,Z-L*UbbJs?SDu!fKC.h5G&6AK9/;To+r<oY%;fBX/*]W[F0P*kY-::-pj&=!'?uG.-fS.HOhM"?/M?r=7A=/S>oiI`.$WN,E%?'JD*!1D"!DH3:9`qJ=NlU_MO-W6u@9R*hHEm=C!Nn9dWb8=q@_ieia[2TY%pf'W0Cb[Wl(0a/2m,_@)_>Moe-*W1_^8H$WZJb\K%5t/[=.V`t<R;f0a0%Z\K"ZRi6#aePbd]/_YM=9.>+/96sn:gkbO*c[9qo-Wn1unLm?ePNJ*dX!(hgZ45=+3q:?^>\D.''oqiN2)q%n]LD0<s%8tQA#PWpiDCjcb?00`t3s6'4J3iB-%fVE:"&W$bHW.!WC9KF8'+&c,./j\,h4)gF8p/;!-CVrZKBuOht,XLA\W"Y*r)Z%mf*jpoVj)B03lurW%r95*7_,B,tVG`S-3;j/FZ*:%YeR7?qGd^@cdtlhjV,2HGoR_'fZP^D4<tuh8*4PJIFLu`C!*l^i^h1*WZ/=%BGHa"8O,\IqY)!g)uMFa#,^EKP;Qd.3H.]@i2\5:rBIO4D<J;8XblBGBt[;6'@>IP_Jda7STS$&W:P_\OAEJ1OWj,MPi=0ZBU+^:%2&[qI))k&@&O1q=%KPp[iC%a%&n5f^dP+ZVha;,Z0Ob+Q+b:;8<\>f89sKNq-$)eNC"g]9'tk4Nm^#DtMfV\pco"pu7d`JMcEcd/%V.]CYm@HH%0b-1+Bk/,!<Gp;H'BU<%["oCT9>(M5F0*Fb@L0IRb<$U90rU\JE`9r&jb!R2@lbh[Kopte.*BsU&l6_->^O2Pn_\d3%Zad^l15j0==uK.]kLSkB&-9FQV+q$8mpG\A2^e`k@cd`E(;=IPX'g%q=B8G&7KfO';fY9/YL#;b\*n8*=*T`n.0YCGqo'MbF,]>B%C>UpM`pTL2cK'R3i*)iFhpc`Pkj_;6p9/:S'j<=$h/W@MCmg)@+GQ2+GB#6es,c\]<'`33QX_L!"JnJgY2,G4l1Wg:W<8;cq+lma%c[1qi5+d<XWX/E-l^!`Sci<i,7,Yr!lh3V0j4pug`h;.Bo)ABQEYZf*plllG-tu\qLBr1%Rrrb<j:YuFe@UfWl<gWtOsK%-RLF$5%0a-(AI)bst1$:0pf0V`TkH/02`KPA6D@d07WN@nb&>^p46r)!JJ<=MjN8pRUg;)POFsU6*4:Zbe!uMbKV;\'[+\"RobF$GOAT3_r%j)5ui)YhTiT+mEoDZZ;eilUb=J&UXGdD!0!\em"GI*AUB;Zn6[@J4p4^IJ[s9/UGH[/-_e:$cK#]+COHRLk:g2,MFdQoNKL[Y)KU%IPJq%.E+gmhRJI)UY+K,*%W+PD(PRkoQW7$R[gWM8E/1^$q83YE[>XhpAhO;(p/L<3UR'pNf7.JG?IS;!QoDhS3P?QEa?4ZRoNj^%T)rPb(Kd+G'lEMhLERQABg-c;*[L0GU29e&"1(['>bpe!T[,.fqETMbAILnL8U7R!lA'k^Ks0Ou)-@_+q7SPc+jE%m,lg]V!-Y0+%s'f,/+H[g2&c)dW*0?3^I@EX!I(G;)np9HP"4[D)V'O'l[)hp-+Kfb(jRJ-#FZol(0e;DO8B&:I&)JYI7!s)S:b5<aAK2(8)'j)^%/SUgGo8lt%4RFm0";)dkh_s9lO.RiO.m*0&A"A8l:W6L=mpi_@Tf"%hHR7_5[09%IpeegN"1"1H4,p/*_W<S=`tOc_HVh,.6pIt/%,hD3%:V8PN;10[&j,'Z02%[V_$op;?TdMAq5p]Zh["[Lg;NO@-d)tc^c*6BVb<tE(k[hp8RdCVSdghs]q%<$+^g/V=:ZIO-e>\<r%JXb4"^$oWBA:$H^q#j1_.oJ*+V"(t@*`G&X>#`fBdp@3Sb'NdSS<bD>0Kj,V`J%YI>t,E8A*.idSH6R$l"fHVC,!Y7%8[K%lqAc$%X^NS"L;%RZJ\</XiS%LG(N=?&V:kN?c:5<q2e!.L5=u&iYKTFDL:',IBr-(=7R5S",V&bP^`2Z;__Cn,;Tjb9](N[3I[tPJP*nLc%QN3uD=?"Y_8tl(\XPI4)Y3g0gF<Dpa.p]X#(J,ICX1OIBmT6^QZ6I#sWPR),-GFc4orIB#m<NsZaiR#Z,<eLe_RXOX3d?K;+OBph%k+DB+G-(`g-UKR,2sn[!aO,:m>4jg#SMAb*im]ksG"]Nli(:Pn`J3U&[3tP_V<T0[?@A\XR0FYkce`#BB0[e)a6aI'9ZN.TDGin6%E^ot*qMke^m5OZ=GoQNKrQ"+`Cc$$PFBI)k]HP1U-Wid+DI0HCREsWuFbOK"5O$><ZIA$tQ5!AX)mhJFrrb!\Y-`OV$?VuN>-<Za%9Qh%F9;<X6W`r5G##a]V5%2FJ1>c@O+/kt[`MW=7\$W9dl2WFI%aarA6><sYT+AjY#BR,5A'l2S()YeQ.`)bc/4F/')#L,rm:'ML%DSckj->'Mp^CjH$.8/5ZLcr:NFI]AYg/%/p8FT#<K%g3s"(HWGTmS+t)n;'R*an+%jInEj]N!8;+<ktC$?=aFTB#&O:RPEuPh;`H%c/=Qb$5b+Bb,6D1F8AOR?bsW>`eornWUYPIW<Pb]SEq-4on!!E3K+0k(u%,]k\!@H)_Y#fWnZ5]g[\[f-Vdqlp"0FHdXG`\91CL9%Lb,PjeZ__]s0D][IS3"`Q,lf)"TNpm@iZt=;\U/Y7@OL(`gE(nrL7"S2#3%ZgA`_@$4';n@S_`;K>Ys^^I\s@69]V<9i67p"q(D,%*JPh[kSX,V$3$dl6n1X7PPuRnJZ:<N0.VL[0K4+\,*XNV!@7Xr<;d3:Z9Q=_j:f>WqY-^k'c[>_Ue13^9<\YVU5K#t)ZH!4M5XtO%.HBXe=$0&DHL#JFpL"kE,E,QT=Y:9reA!(5l!?Z);ZHEV8'%fE;m<a*0i,tQOs1?hM?j._gu)"=m76GKSh3CHPQm76f,d]VkaJ;l%NLX/Lg\-<kX8Zu"PT<$e>LMt6d.W60D9K-`s8Ge%/JpKmp$[mt@dM?]D>d,FMuh<=s7Y4q3:i>UPEs&O24\-8\"^;_\\!PkV3Y\N%0O@RM"eiK4VUVIYMdf^n<U+ihdXMn9`%Cljo^K#d?`Ed\3HR('Mj7r^<sjDR@SHh;Y#^`Fm+j8RNa&@,ROd7j2q.MmTVqlT_SYh/%BFjB$6`L"l\-<hfFgNKN.m_pp0V+6^(m)G&2Lj?2/(J4ul-1A$C-UjUEG6n`Oe4JH&Zo`ZqKH6gd[@r:8^V1V:Jl\78<eQXHf.%2%4#'[fX1[LYA].sS$#OZNfMp/?$e=sM?L\'Y-btCdh+Blf:T+G9iU'-4Jn(ZC.8@Nbj":9'e7.O*dcFpeeSV`WA[r%.[=_2fRNqC_%:j.G=9[2+FmDpshgcN=/^0k?)I_N@e=fPKH@J<I`/T?/*Ba*)qPG;iB2S"a2-JHma2ba'Jk4EmQ&B>!=e<eTl332IFZNYC9nU1_X%HS$e`,\86GKm\dp1kh:?CP5.@]UJ%$*.i]%XbUs_A+I`F>.jq2D-.#UG&AF?&ui=@)S$mge8Bb!.)^Ptq;=fc+T<GDi+k:uimQ:(%EbKMe]p+bA3L"#-<[q4Z6j$2CrBDm7$`KCN+\:t$$FQClG,Vko0fF,m.UOO[Fq&b2l"*B@..=4Lf!-cl>sl<&DLp<l]h)[0n(;&b%n+,2eYpdE=;QjH5ml%k'@Z$o^_Y(%1koJ5de\OOpLi9QJ10;+kQQi^_bQ_OVd,ipSolD+d@ffk!7,j$!^/l/[=E<),@tC30@&(0O%#Onre$[114et=I.K<Z%g7iADZl%H6H2"DsYJE)]@n+"6<SZ&=\JV\."HV3""mP6XoZtj0WK.Ud"%C`PL`*R8gTHt@8@NI(R6<hSl%e)V:R']hJ%P:7q5T#jXV1iAW`X9Y2,YF(F2B(S[aF!MD\P4R6g'ssqoEJd3FeePMf*<)OH/QBd`3$tS^0o.7_J'Nh2@k=0(on_4#%/1#8=G=D:5Q.BsuLZln@[5c1A<q&e&N/Thg*W1s:Ei1Hk&nK='.M7("W=s(*>ac?C*XJh13<pNC1iQbGQ40?^4tgjB0sTTn%D%(F%):AhZ>e-7c3hpjj!>^Lml0)_/Bnu`@^$9!@.Kj%`+p>Q3-/(Xi-48-P4e;2"B/u]jh1P=P3/(@Q`dI:R?M,cd'T622nL*eTX&fiS%/9%odlg[:tpZaWjh]^HHp!Um:3.4\1YBn$rktn'f@f!=/G7j,aTfkIf>curT,*""D'`r$f6d'M8\t3lSQ1^D8\YjK@"u;!8]u3'd%Rp;/kl:oZ8k/a\Y@OI:>Dl3,]@%Ha+G7q413/hHk,YD'T<p]O0Xl"<J,77MWZ4IdiL.._?J-*b[>/UTj+1_U\r*)UT-oF.7%4:RS%F_PT_=pY'SkPInLVc?]2gj!<j\&Xj%E8MopdEkd:a2a@i$Tb!<LK+#Z%R,WV-/P6I=?C\aEFK6ICd+n(QtU_#aIiofC_Q*LlT]uN%jsD42%,npI2P^u/QZThoUV#X9coiQ+)7K\'2JHS/9Ct!5)7pnq1@bi#KaH_=HWq&rJO3$/+F-'"a<0+7KagJsa[g29M(Q$h1.5d\%jl!$#b8:-)Z+<@8r7.]hdN%+UerU6ui!D+<Ac;):^(P2Ye_=M<m=4L);\A`GiGQiJ_"EG(Om6k:cqX:@G#qSGh^cK9bV,7_XEW%6%@$eH'kb2-[3Ydg$)"[72pIE.F!db+t$sW%C3i9^ko-4^9P&fW,A>tbAbjR0<Z-m+>Dcjdt$Z:5ULTDC<cr"=fG0o*\6tQba!UIDs%#-N2PPl\1+8dg5JWN7iQ)#"r%Y]G@);-cnrTQ6)oodS_7CrX*J%U:p7]0!t[9BP_`QLaH!iYC1)kber-)jbDkqVEkW$2O##lX#;1%X+Du'ZbF&aJ+qh5N!+Q0@c4Urn6tc<Fnd=b#G$+kqso2lIN2+BGKkEpO=<H`DK`"l7BG7K]c/H0%ioE8_31HaOU[cPpQ09ZjY0Yk%@3"/]U`ATVm^!/trd@[oU/5I3s#o.bnSQYr*3Li!9lqAdB2R?q2<u?N/d4K2N(GOBIG=ecfJe_Q,DIU)JLjOW'YCfQAi59P_?Xd1%F[*PuPK37SG<lGG"J'q:bD?BF]F$O^Z7kUT9_Yf\EV2(AF,;r5:L._`;HDM`P.?alI-_7R$lNShf@1_[Q6ab38P*2:7AM@<oSjNo%.Yu8bad2E2ERs;J$;UgiVLlnc6JR@P3mJp:m"^WF>o"AdDT)db<JllmhM=FhY/@OmeK*S]Y.DkcTdk`4jdIoWId#q.,D@DkE3N;Q%Y!+HS_F(fPkjtl*B#1\Vb_r^HD>MjQbqoa6]IL[`;@6<)PtL@b%-+7Mhg"Q^dg9r?.R&RP\E8KLG>WhsbW].@688j4V)?hc$9Uu?%dlQP#*]P*4gA)Aa4dW/!`V91c7:=ne^Ph$pPsf7^&1*/O$L403kW`kY`d0#LU9jn?s'\bJ(c<nj%QjHHhU:Fr1))IKKADBF;Jo@.%P&W#+a7J+4<RS.Q*lKO;[aN6''h0%]AXH4)h`TalJSuFDB&X1*]^8Q\MUM8"#K%OuGQS<]$Y2C_Q/)X21^`cca%1c`1_#Qf*da:a%WIt5`<1EZpH^BmQ3hS+ulP*A`PhRaT,LR'hfbu]EE+,3O]V7bL%e4u]#ZEBViZ^iZED5Aj)-?2V_4iFroP8+A@ObAt8Lu'Rj4_;8%WM\nMUDP,]UjXI4_l;kBY.=ug<!8^]\$_S-#rQiq<ui!\@BH8n$_^'LEcDn=ZM-kur9lEMgr2,W*PZa3MR<2JRFAE2(\^X,/:8IX%F?+i=%Fc-`l2BJU-kk;H$fX_DRI;[E%KZoeEq@!4*9OZmAKXjl0KgDp>)SE:Ao/+NH`Nlc:#jD>4pWb9/'_>*rNu^4_AC2+=6-dn%0jCAsO8M%O"`?#$&a]\5kP+<e9QspOA:85R&@X6KMK>+HLpmKf@ZVSK0=paMRnPd0afc#iU&5D>kA"l[ahEZj9&.G!&tJEnpa')p%+8[;Rl6WrWBfa'h6LQRGMbQku2,u>);Br<9I6>DjcK%4tjbFZ:\9J:,$Q?M#8-qW6Qa5;NR<io2C=="-+`fr7SWG%t%O^*,4kO$^%d93OZN,J.#CaFQf/p<(?]"I^;dn\jup'J(s7]HV$Y!BU("Vni?B1X)(.U=-U).9qa1NO2"?gYGH*MA&g<<Qh6[NgbI3BcT_<"[&O%f4[127N!PS$kHY[hN\j*3*m*1OsI`&*18G?/,c?]`nLhh--CV"s'f5%;"L7ZX#WeEi/]&&:pd"SO-B(7r#QKgbgdX+1[i"Acs]\?%5Ojt9B"HE^Fe0pR`H4sH;m]3dc[fB(i@:44Q2'b7d[Wog6QtY4VAk.k!m/.U'.iNeHt@e$(WSRZ^21^-eO&LQQ%1;=h:_DugIF<$%3M5Os[IA0ug+?hC1>T)/;S?VPl#<OpaJ1-_^j0LE):u:1T<l/3p4`?ZEdNF:BW7^FVk^F(?u6(im,*Aa9@1/K\h`ce39fITrKV@e%S1GNI#oNZh]2WGkclhkT<%+ltbs!aiG%I1*rP;i3Id>mhStX#<PnBd0RMWtOK5i!9ZtRsSlpe;BCH9T@ULkuT2UU>,].u@tf5qtX%_JT=_&u,p&8!DK"`MIh+k$#];BuZ-a(TEgFanOm^5N.*(16:ET`&!j%l^cPagkm0HVe$Q)4Pc8GFm4eGYfannDF64%he6^?YL+oc%LEIlj?'HKWT':A/m`7A\pS'icVU,6F,iUA23"?G:YnB)#Ye*,Ud/77/%_j`-m+,*2,1Fk9Wk\Zt<&'KXLmMBY12Pe^#Rf?=(sX>7%jNdg-G\#'aCQ8^j3btZfpq""VUX:7A$uBpN-,6F@C%+KmG$fBLF=4MrQl*d$HuEq7ceUq1?^+<#*i^PO:ak8dJllX*BEAPf5gEl6%30Vg-61ig)%d*dof7o!\4o=)4/1;[/@XO^4n?NSIZt8b2[M;/2Wot5UK"?N_C$7#Wbnb=4lu0PKSF.U2_jbYh^j1FI^SC0o;Vl!:%Wrp6G-RgmY98f+pMMRr!$RmU[nuZ=Q;['p#cHFMXn75Y?o+V`p(=,Nr,]?0$.G#F7LiUXL#004H.-!UY^+8CW_k*AR^T9j,4l5GE%,85?76/;(8Gc^A^@ttA0JXdEgV*#YjgLL6DHrPhE28U*KaF::G%WbA_efX3Z$?dF:C.ZE#nPXIm3-T7LZCLUKRJ'<5HbGK.HP+`\%K0/hl5h^F!(tl`Kl_Uc)?B0($d05&_B'h'MPakiNSE8;2:Eo!?eOsrEhXsEU]aoPW*!(!Ihb9;ugEKZ+<FDJ%CDSuG:d#ST-R=k+%Ysd]@L897a[ZE2=(JNeUd1:q589`7"cOi2.1qm9oi]4UcL"&B"KJf]$lV^n">Z^ds+h(.7pd\'%\*UV1bI`S`/oVl>9o#\g1\REI%J88/t^uW_i0gPK63P\Yh/%RR,.BY/I-3Q=ATgok/^"r)qj,7/%1!"$VD;I&N+C]HLGlFVea@&aRdGS@_'CsQ?Y0Um90n;\<bsoNo%[Y5'B$Q2??QPHL)0I,TT*XrU&dh(-arH*"%&l7UfeZ9"Q-MkFaG-/7Z=o?K/9Xc*ah-,M!iOuno_Z*&5Q'R:bE!/,2^6jU3Bnsn,%GRKeAZa'r,j-/DlDVO4I?`U;9:g34<TtBO,fQ1=!l".#'W(!:ce6-sgh$%>)IFJU_WF72k8'J-Qe:m'tp@tJ?7g,FgZ4([uC/uJ'%./^cC`1nW@Bh(,c`o(Z^ijAGFkVM4\F$4DhcRH.BdJ1K[/@8.qD<=SI^9[aiaKnQAYDL1S2,X01)/]l"!7qkqI>XmfL.PT8fnEYD%U9q-=Q(<]3qV%_@AeNUFgGF2UP;+Qr2G=LfOV#=L$bP9l65*Z2hj*1#H1g+1('s[/T&3]GC5(.D+'A+83-=nl:r;!FP1-j?&$1ZI%e7';3VUa8q+o\;YRmbKYi>["dG.e<p4PY.Y9hOcEPBf.&/32,2TYs@1KOh5TZ:#(Kh*4(K*nKT7PDL8Z;oaZNkt_B'>Q>l)M3t9V%dL@:cDg.7<cWPoJj/\A.\&MW+D3Tpk1O]r!4e+$hg#E;Lf.A@E.P`<'.c&$=L\6s)b#[33HW&!qG\KT_i\]9]l2O=pP=<1)s'L'B%,R&k:Z\$"YVMsn.C\M#[H;]9>GnO9lh\dseoL"*l,^1Q+@4#CSVi%5'IGB2+jhY7G9uZ]@jg[;3@C)Mr$R3\75WXt>"J(%''q@0V%qiRPtfTspKn$F"0ma7'[0,P83);m_Op"IKG45H2ZiOQ+GPP_CuAuYT=e^Prs7&:gs)FR,,oK9d$E;B_GnUjcg^:1uXbD;cndH&5j%?qM@e6iK$BE/cq0"'VMdd?.MjM`-+EV:,AD&m'doNu$J[4C+[6$V934qqq]B-9iq)faYN[N#OreZnZ]DJ@qq7@DspJFr:Fbei8?u%E*gc=E&76Fk*eFg=7(ptmi1fC>@p["l@.+!%mQG<R`=YMmo6;4H)i*@2eCt4TlRVCR^SreakO^NJ:NlUj4Uc!(Zl"l07VV+\JjRs%:4-E:k<8jIM$!tp!K>\;=MNRrm9>ftl]SXgJ[8GG=E*(+bWI*B.a4>[X8geUFqN]s)!iq'cTBl"[S=.Zc0".F'l9bI0+uA@@3sm=%T)IfYe^eo$;Yd9.1JB=*JM"g&Hq[oAH?H(NLY[-K+4dp%O+L(8qk*NXO`Ash&]`4"'fh5>O`&F=QJp)DWR+&%iKU&8R#?F/VNEY\%+gGuVYeZdDR.Xr/B51SYegm7\)[sL.@^[Q%F.=JqL!22q7jjfE_Gd*+Mh8J`@,=PF6`jATjFK/6GaD=Y[pE=(GRh,Sq@+dD1+ER7%@[Kff;Rphr.[g\RdM<NT?FX2uf8*SFG,k%H)@<Wrfa45e`Y??YJE'i'D[XK1iM<=.,4Lac>Rtm>LE#_fF6YKW`.fZs*hbQJ_@7?Z%:&=CAObH^7(UQ812)CCA_CXi$(k=&/ImFr<(J9WpDn1G6`46c'nHhn>@:Zq0@Pl7./qOMX=DHd9c]]mWr6)H3j=3]lPDR3k\fS.-%B.D+B+du64I"rinR1iO8FB6/9\\+SjCiT>Ua=Q#mZ=kmf%MnrK@%U)Ig)lLrl@k=bLIe/n;-rQG'V+OgCAQ0n'4eQC<3q:oBQ6r@%"iiA(E1T)*:`1d:9K!3C8uJ[U.`Sr^(/bZAU5*)l*TH)VmaopMPu&k#3<>:._!>_^Y(DtXd5da$k'I&8G5-Rgh'l/C"+Q>@c_2%g%"W'oWj%in@`cSonG0((XrQ/eRj@6]6,>/RKq5!0DUV!BIA3bWH`mp;NShGk/0M!%I3h"$1FV65pCn1d#H,DF`M\8M&`dT[MCR\X5%=;jYkN6%@`VX,%f*&`cU(.[*1fWVrJFc$XK]c.ul[A.t3O>qNhdSHnR?&e@T9s\Poaj4p(XndHND./cEj)?@M6CglJi.W$U,UN?=%]r*$*@]R$Dj!![R]dN<n+D!dQ,(dY3Mq'#>&2I-/%44(j/,?X[eUc,PAWi];R0Cn.)rj77&a^6kHmS\ED:ssW0LPlUZ8piPBODMc%'nP;RZ;:'.i9\GMqqRNN:-9WGiO0!GFZCL*S&f)m=KXG7#4ujGP$jMXC:.Ze@UMftG$#rU6:=&!*M6IFA1OE.;eZZ@$Go_=K)*c8%@qs2WO^iYRXpKE66%((J(6A)N/>\nHS;=>ddR<[ANENeYjIT&.aLSruV]H*jA-e)91tt&ZkgcO5%'1?6fEMSl/Z(KW0\?2Qp<N\%%S3k3?'0s:UkWXB;m(fo?..fZiPo?t(lpH!iLKbi1LMkKM;>8=ANpBu)HMr=NdDT4U;d.e<.^XdaM&5[c)<S9>Y:bH[*tP`u>GDT<%NpZBi(Q6s&6UQYK?\Chg#fT+n)-.o1fn3C;.A#<qR<sA`1VtZ:P+Z=!1a5H;K_g@[6WNh[?\S91)^S!2U7HEj*74X56?KRXHr-:&%+dken^X]NO[b!30C;?`aJh0^50$:Y]*_;7"!KF+h508#[XP-Ja$)p/_o#5k/o]Tq>oNj`da?Xo:Z_aQ0oRdh9GS&.(+%@SO,Ri]S%:8`h7"Cg%A"!L:e:`soiqociVL1\VJ,bQh,[*$$b\IlrJ1SDV@iD0WUP/\ZlGZ5Li_QXt+2IXeIYS`[mm%[l(!^CJa.A\ObgPU$@%Batu5!kfEaLIt^uDu8r3`l+BaA<C:9.!UVE(8HW>99t;hcc8S7Y.\7JOrE>7Pm<49o7q2-l%eWu0*fko2%0X.@*8&5]sB9)=,#+m%/NhtTj;P/ZJ'IJb@/=kP('TYL068O+6H4:e@Blr=IS8tmPYL)co9U?d(=D/uA/Y<j_lu;BJ2i)qj/3P=1AL5@L!CaX)"'F4;W-9R%WD#c</-JcS:Z6VXH2@m"/f]i"qr!LIJ-WTg[Jg`%[T<^pY'f'aRQZ5]HWErM<E8<QNVmRa?e`tTid['$iF7W<:HB[EaZB''2YTGT%,1G!n]!LPYTGgh6#1eg=08.%"c)R;lF3T*)1J4SUbnK.i[THNCf)oB>)l]lPs3uDCr4CJn_1AaWDP=.7Gj4mp>DLqXp!,/Wo6'^\%q<+I1;JTM:NKBmT'(#bnDJr,/ot3Aj1%pZ<()`)5*E>?2i48tj-0?!YT@=*J$h_ZONW+AtSchCXJFPC3k&CgJ&/pL3YpZK9=<_P(%piaX3Ll&@m!4hfA"=eY5V7:;NHj-U?`6i^lNEJ]hEB2k].60nb>^.^\(`VV.:Y+T^gpe7fmf[oDWL>ldWUXhqn&[mJW.+:0IhnGC%TotPYL%6];2mm4rLRs]Cb]QIX'Z[V@=e`K)+B,C;-QtaPn&O/uTU,s5eUHmC$We'"!c5F?!H.iErk=fkYR@'6a>/F@A=nN:T!pKJ%1-/1_;CI*''i[kKgHm;M0!-I47N/^t^Wm23d*0I5Wg2lt]ulA`7Y$I_eLZC8%P6!UCr1:819Aq&M1YH&peRUr;jI8R!Uk4IOMj==%I7H<M1/r']D@$iWALL4>QUNL.A3L*e=!r[a#rL,(WE7GIDK/&A27l<rO;;>DGLic%7l_oa%.V-H'NNh$T;^^Z4U:J`r_Yd(O/_SC%@'qu5)tqXQN"TG:rXUn&l/JH";PV7CD(WD);@H$56$+NOK\9r"phO[KiJt]P3F<oL2'a3\f^^j@o@:nAANpJab`o>@Ln<36rZX^n%6""\V?HI;seW_Kt\TgQ-ebmPYk;^K/'-ML3$u?-t3-2DsZM#)`m(<*a`,=/.j%Q\V?cCB8[;dq1]CPsJ8)b='\MFkDs7R=!%]:KY%N8kpE;)!gX`3KA[+!]D`b,hm<Ld$T4W)+IDQjhM+_h]E(W.c8jVn0G0'_k5td2hjBnL>,JL@J_YMIf?^QbTRu_u(8OMg3\CM.$(+%0<9o>esA*O"U%nbKHs>37]Q(!r4MNNr.']CnKYWaF7cU/&uW\DbK^Z`?<6hrC"`"jP`C9A/;YF+A#=!K_raU[f1s=!TiF!;UTD$h%0U:oa!*(1B7bp_?Wp-(s^=T'JT>4#E,f$$6cL[auQ_i6Zf&Hp9RmSk.".=rkAhVH0E=@Yb.GAq&9[%<#GMbuF-u3&Ko/-/V@\*T?%Kp?BI:gl65gB)7sJqr8DHm#\<T_r&=>uiOeY'+'nBP,ZfO7Y?...:6215jb]#@SEV!07,m@5=O8aN[]5@(Vi!DMI@Sm/;QQL,9&g%KLHgkF.hlHD;>`Bns:J_0R:b7clq^ljtSKu@R,[;CuS@]iLKMjReKBCBd_)SWakes`N@ufn[C6qJ]U*JP/m>%)8X-7jur[A%\@k<%EHum<eic><F^Z;Gm!8<X(B%E;Q!&2"eF%?:MQAh4N&.sdBZ20h9`p9!..FkAnOQUn'A0[E[kX2QLKeP>WgdS'nQb8E%l6/)q*npK%r468HOH>>L4%k2d=AGPp-UMEor2h0aeWL%s1p$umZ?m0(*eE)!LOLnH7SUpAUA&gLb8hbMH"o!L+/@l.*.c!iW3R;a2:d'@^>2g!%dQG^+&6J#6"@5s\<C40j]cIPq4@G9*f8B$;(_ppt<pXtm)Wf0@Rs3.]LU5B,^7"SSK._e$d&_\'HsdXE^iLSh0;[8O))5p2(laLS%[WtX47Bek^_[2768Y[3R8;mjo-bd^W.uCN[U8WrY6O`4U:=A'`'%fHi]i)V.^grc_;bVj<3ho^R7AOm.HiPG%%#WGM(dpVhmY+FQ%_'4XeaLCI`_+Q&$.C;0Z!Nl7Aa=HErkcOC;W/?W[E`%"eBds-$VGg\4/Sb7j72I07fn-C^jPFXp?`G<m=upqt`4:"+%e;IpOjG&g%%b`R-:_R*d0pAeeW-<g1nu>'k4sYqAX&AA/@=j#<AeAW<Upd+JIqp\#n^24YMii,G#M6<G<T?#Us&e)jf/ppMioq,?r]BZ()#uKr%GkuRKRFH+6o`m)L<ND\0\6;!UOF&).\./M6GQ'RoJ)E<*S"aNK9Y*2W&s1):9F2Y.DiR1RaR<W].C(a\$S#%2Q>P#I%j7aM9`^kF%5+F0.f-$.MAt0BNf!P&NHj4k6*37CR8:aJ:TJrsd%)bEQ/`nf%>mqWThj'=K#"\34muDM[F'kF[;nbc?"NZ,<57(L9""s2L*a#<E%RCJp%3T9j:'.nH7^>E4DgGX5o2;7`<&C"#PoLV^;b-%t8a&fH"npKn_ROTTRdlsT#?F9Pr_O%4SP$IdrQb\/s4Zr/)/.+NEY4NX3%Na1.j?Z]M%$!<k2K]4*<*VcC'%'_stVA)9;GH1hC](\]U8Zku%T9YU8QmA(dJT(QmjE(h/4>]2\CZAn4IN0%uRXqFZ*k46d!E8Lc%i9tTK5k'?j/16QS/LM'](IT9JgBS\P?W'0D[^9M_0:!'j)=0Un!P;8]LY!jSN]?8hn6IN-)`P@X)q*M+GY\.M[="t\MD`D#)7NmM%qHm\M4!ghs5FdaYB\XZ_orIs,07uUHUaVK5]n<tKd;6$9p6;e-HTaWu+,'%;j,*#S'j#:7bX0HQ($<'f;LQ`A$XL@m`#fS@kU2uC%posV+TPN?#DW9&A_aSS"UDfHBQoI9JCMAn&cG%?Sn?l$/!8MFfSY"mX5_;_Pn+?5W\GKX(^GhbHQfWh5<%I?4@:J[_aON*h('#Lj%jui^#qj[hQJ"1S(_g?,j)!d^nD01A)+rO`;T58Ca2I5IQdn`Bkbqsn^CqJN%?(m`dAJWA@>>*7nSI=ZcZQeUYOYMhka5?u<5(YqS%G-'sZ+t3^B3q\Xdi!OmI7!+@"[K+4n9n%CJM:&U?\(@I,LQS"VMJ3Kl.D?5)6E`/[Ccm*Xri$F\W'iF<MIEsu][A!F%Nu132%cs@%h*&u:$1ta!JrN$<@TLcr8-h!E=%U?AiDKSgg8C*sCHkhh:qA'5jtK]*P31J!s-+rkU<V.hd(f&moEb\''2l)[Qb\5O@,UTs]&5Te%<B2HVU!bA5p(l'&T9.Ciot?Msno1FcksUiEE+9SGJoO_0OYKoQjF^9.WG*GddhX@Lg4RR<cU0\``\H#r<I^h2fc"1t78`KiA>a>4%G).!K[b_ELKH$U6og<KhOZCW\r$mtNWEMPQl]8h;Y'k$.g1R7W-AqPJi9#-@oIJs3:<&5&=a%/$O9r$QEK7`so:O7Ld]1@6">1S:%Fnl=;@j0)0Te]=.9[I'BbN.EHG=%c/Mt@HD59*._gl-fD#1U95G&k7UTAAp*<2#Xee&%HrV->B0Ssh\7c9K)Z%K80$W:GNkY\+!d%.rr)qEjE5['^156e79$5Rn\CUG=L4MB0FsNAnTDC,C+:Wna.hp=&@F->T7n_";:((X:8MWo9T(GEto!I/usRSb@^'*PQeb&-TJJu%]6Ng"Y:DQ[X3/L@Sb-+7^<.oQ<cm/pIQVkdP"EEuXHtMRa)C^"^IL:W\+/5`<>))5nICH18SO]p/Yu,7aGY9&7KKc']!>Pc$=&lJ%X6VCA1;+4GVtZ$Gg-")=fG?MeQtDRKoN$*rYYcq28ULEL62Ul?'D1bOH6_X1.6OFARQ2.&QfY[]jUO=&?(3W>rh2Pa5tt"K3"H3e%jnB/*<+=kI^bC8I6cUQ$dKZJ9D4Rj[GrtfONMk8r#"!3^AHTlR)(TP$94GP:$*@.[CL$Jf=`:dBhD@Cf&@OCb!F$%"pLVeK9*qCW%k>5nu]Zfh8&;=h3'2/eIr"SIJ>gDd)8ja90EtqWd[)4\"T8no[%G4U)D%UoHA9pC6VJb&W)m(9FB+R^,r_Q(go=Zk>mgjj<2!58&%Uo_lQL&XQjYIfDP1I7)$0P![t+OhDd2%+q>S@_m</$f1%osG'%&Mc''pS(qpnpB2?+1E&f:GY%4e)K2T$g[g&-M9GMn.s8XH2INg%1=%/]qu?;0Jj&ijchE[8-*ZBMcZ$VbOnnSh=/SHEm/D*GCEo(`Z[Rdh?+tVt8c9:QFqL51*B&SEXf?fBkl6eRc+&Z)llr"N6U]`)%s--3^:HnQ4q7CJf`eZUBEX]Huopg+"``ndXJGNFXr^r,II+]E'P-bjq_:@-FBuf\NHY?Y>@rc*f_B23jWGh/O177-SX+_oS1Lko5%_p1$t:-'RRd%;U`orhJ#his.q2B7OAd]g.ugT&j`*Gc+:;JVmpILlDF="?.+'qaX_)p0;RZ(7>>"YYM1>-kXRT'p=!)sU2c;Hk8Z%[2Haf6DD#!%%=9+l$E7RF#Wre&G(-pOE4d&E63Tj=)bcd+8a'SMOtm^HLb;!qIji/NV;[Sg^EiR)<#U36J\qNquts]WRAYDlFiad%&X)"WIkA-LpY`k>N8kJ`fH.YY1TbK[.K-?]ka)0o?$+#[be<'J`KWSX46^S=9D$mVl#\OW-qLpF$fe0(W4_NA$b%T+ZC`d^!3*fl%<[gK9PJ(lFrHR.FEX+isTB>tL6UEDlS![!SmJH;4Ksns4O=s59:+l`$J#n)'?(8P?03"cQPDhE2B:?KfgVGt&.#Qh:f1OrH25QuM%5F??CC7BC_iS$B02`n1u]@o^>osS5d.Rr)/>_moqF1hT$s!%Ma.W*EA9+L9`27)i)^M>0J7s5slm@oA+X@(*8/]$BEM'XK>BYmq_%;mULZYUt*9>9+"[\>\[SYS"SCHsR!Zp5hPc2l2bL.N;hA[DO(WZ<IOmjVV$(?"_NiOl:OE/34ROkph+hc32LsR9(Ttn3lSJ/6VZb%1!!3<OGTSN3\'j3#2He4XDa[f&R>5kmf19:Pir6feV:+5+>?ZU63kIj.Aki-XpiRt\DWEA.4$ESZ<g:-?pGA@&Gcg&%!`9=J4`H*%rBh+aTI_bFKPtgeg,J\OJO+]pj9tEaUfB&+-NXGBQ6nVR#FmF\6.^<>McV$.@.*f`5E[.Y5`q.3b*54U6.s<P5'F3:7@9T#oNMTu%K"#qMX&)4r]_ZH"nDIe[9MkQmggnJI:PVqLn""DTUAqnpS2WchK(o<SO:!8+^]lj(!=hY.!u/hl"sT^j!'gMa"TerT,/G1J5QVqP%J,fudO9#b`5QD=VKcn/r(*W_hOFRKYO?`mLGQ9lm&P-FT_#\e2"?$el$O!+&+Uej5I"(nr8SU\rMMP(+96'rB,GJ0d>$:d]BZ)!9%6?!R02FP_%WMq)#$X'SFr^;k=NR/rYqSR:"Nl#b9Q9%o=!\-QbWX.Wi,-kl"Js.)cT1$]&AlKu7e:aR,$Um-W33BCZ[lg0MIn6@Z%O&33Q@ke[75pD6+6?"[Y]n-A1i`F-lJoDa@-Pc0(E*c)SPVCn80O2joc#lm?5[:h!dh0E@aq[#m0hFo,9j8I;0&mhSJoLaKg)sXK%rm2=3HY`VoJd^)L&5U?$OX_ERU&5OuDG"s_EYt\a5Nh8F9^@X+-<MV2[%`tNi)@M?:(*>+0b's:LfWJ58^qiG+]B"QQBXSLZ:ujZ%^a`n=H%K`uH&4=7PLdGsW`j5q*cLKR6S#[^V!CN-P"aJcpDM/UHGnk=,I\J09"C<fXr1ua70kq;$51iN"DrmcTQkEBd)mNO`)C`F%.XF^EdFL[iY/Ut*IQJgk1[\1>UX0l/F=+7knE^OT'dW9FKUQambaJ94[h(r&pa[im/#iqBHRFcnguVIP4H-c_GDJYV^HEN*7C"W$%Jpb%:#bq.[Tk4H7U`N%)q<V$HX0@@gk.$1U@_jiD<U.raP_\7.kcDo>3kN2e*si`E.mUlm-73*/,.#>f6ZETo_ACp<-7SnEU6AUu%cK$EF&2G^RBe#s9L!BBM7V4!gXS2N6Za,7PmIW0XN'qlTI!V15.a3oAf%&0dTBD+:RA,fTfo2b",]%)('J>P0=b_N!;b5-,6*#\K%H1nIF5lum436:HNHF8Vk@:jUqKpf3uC6=,MbsZ7)/J:7oliN^p.fs@+%oKuE:<HQKXtOfMPrZ.RgA+'PeS<2M7#YO[=\T]@Z@W3"%OqGZ'dBSECdibq5eZ5R9M,ZR#5Vgq^7^ZZ(qg'C<:s;J'bS*Aa9aU1p.aJeYo.5],;%jups%lkSHA0KiYFufV06A'8#u.Y*+9>J6%"j/)=-rB&+"Ni39+IQ`<;'Qq^/WbpOs"mWSMM@7mXq>)Q>HMWJ+tI)U<4A8L=\2;^&djDUGqQ>G3=6q1aD)A'6RF`c.gLc[gu9\]%PDDIL&$k$a#i&IKW!_6Pq&F'hOZ"+pSd!hA;WtH*;ja[rK"`qnVANnqGi3M:kd+-KUOfl-eP"giJ&QB1>#%F0'#"f^EG5Po,OJ:!%cbN8Tq?c+b0B/4DH(mL@iJ9C5d=dm3VBHpBapl=uXc;V_A$e^ECfo*nN`D!`l53G6d\)"G;XhXR\%g,:WjnEiC>JQB6XQ4HNf.5D%L2F#^VFVE0L&5!)2UTq:,s0%WW?ODULPh(JK$f@o2KG583Z;N9O&a)-Su;f[,ZO-:7;NeT_,',l1c/g#NAOC-*b%Jj+qqDB*(>sK%7M`W1YjE*qYYD]R6og\I>=!k@7I23-'cXVNUS^q:n;d`;O-!]_*"th!aq>[%#H,WLN\qXno/&E`D/a<57as.1M1ipHMC""t(u&P#%PMfCK6cCr?;tQA#`5Y5^XXXOg+gtNS<ABF>Yu009MPk]fVeARFRNF?uRp_V>(9-^;AJ;-rU4bAo%<7B30IC9I@2Z@IjV"T59]dF*%Z&][$N+3S<PMq=bF)kA6(6b`g&KN>gQ,pi1b^<!7Lr(ZYR_35G?Gb%93X(i]-,PT"@sH+#R5mV@<<W]mQu/jB9\p>cH,usl=DTOZ%a@L-i0I91$X(d[JCQ@'Y&rWG;c`/+mKuiT>+L-fYN3F'C<]dDmM\Tl.+^tT]*&A\A&2?0kA<$sN<"2"3E0Mb;<QR_Xn=&j_RBO?W%Rcu:p9kR3qFcP#V4;j&JE!]AXH\`Q\jsL,rCA?@`+%^,\,To/]TiE>0$*;.dU5@]TTIN2\R(C&#b_^AW5f3g/2/"'=;t.T\-AQd'%9>a"PYXmlm;"sED78uof'dPc\n<6p]%2go@)DAH%/k7N[_PuIH<l"r32JdYU/>O=B'I-I;X9p!c9K"6D+_n5(R3InF;2CBh=V(2!%fN<!D\o=iGp]m+E4U8Qq`_)dVp#&bkFs:5+rF4dOi#_a2KUcRRq,E'^i.8^<3`C'meML"i#:l:"JRZ:7/0$2tZ@uYI?jfIfr6pIZ%Kfg@?K;"*idugA=R1NA;JXDgL)jR$8U'_GcLtPsMLr+O9N"$jY,"N^B0X$fsP`-GI;D46'5T`g\j4SMu36BEA:ofe:DO5@*a^o0\%&:,\>[tZl2@BYM*L6AM2=@Op'0$*4S&dmp.!!.]e9V<MZK2sm-4l\dI[fX5C_-l9%#m47+A@b.f;Bs)Hc5o'\#5Xu9Mm!kdR1`Co%T[sj6Z=`;:a,A(qI[GmmWj5Ak\-m@2jO,.mN-%Cb)@Q+f"9YfYDDtVfcaXp7oG%!b.EYl&A2-M-'1>."KY7B%TGNH'K'BQp*UG5T%A]?IC`>SFO:R4WW?grTe:t/b`:W.Q-d&BL9b@+_=J>Rq2Aj[ap9L1j%BqjIKKL>rg_#je=<KO7]L4+$09<6,i37eA"jg20%WZ!.p%2qgWHS-`1G9u#bcP>$cCl4G"uE!-g]k01J-(Ks?rHm!4W)jc5F6G+GWi1=/c$7\+Q@3:<+*%=VhM\u.IM5!`Xj96?mF=?FZ0^i:'%(=KG^20oR]7nCOr+;95uBVZhC0uOe=2M63W+qhm!#UWII)!lh^"@ZLb=98R(6me]rKHrHR&[?:l[1P,9nBQibVON:K>TXHq6Zh>3%6_sA@J^R0<0dI0eO[c)b>m(7VU+QeUdTd5>_o,C`eYY#@CedsHOA5!r0f,-&;IN2'a.+puW&5s>E(O_g.!]$J,qiIiETHd3LH$W7%eWMCK+eYNgC\U/Ls$^NllG&")4.)XtVEQ"L\.pj"`[g<fYBZ$q;-O2k],J!%pf1]0'"AthC]dhWZ`gZ"j%#2tKh5O3dLj+@::fmD%6Ar/;Ql=L$0,)`*.`;u=-Q&Ytn5cj4%C.<O#F1uDMP^T7P%E$$(T%;'a]TW.*f\X'l"MqOTATie5m#(4L")'[JK8i0,,)A$M_Tr3%W0Q#6VP2?H3&RKpO:4<C;,(?.*CUTl+s[P67>+46#?AtSm_GI^s-oJIB5e)dd34R6qM^0E'A9-m1_+E>",!jX78t2EBRDeH%LH2&%L3>8MBoBnZ2=277Jd2LFY/[3<VA0F)5ZSednOuuuVZL(heL.)B/\$=D25<`N)$L<NF-S"#N$V!$Y,\0)mW7Y;M3<Gn;O=6dldiT3%JY>j/B6gmPFJ@?D#R\t1m(o?-auB.78hEF9>uf!8QD&doVl6!hd=MLRYtnU.RDD(IT7SO-MM%'q3^K0b)q7g9pJ;icXJ/RQVhWE'%KSFs8=GNVqj=e^GTic8be'=;5VaC"]VBfbuUC(SK"^3,uL(m44F#sg[JoY$lWT\LE;@taWp#UZUQZNTJn.]D)9kEHBePs\EUgaW;%)*]t.\r6dO^m(e]KGPnI4f"kcLnc_bGZ,/bdg0-2iSYBCR>Q_/0+>B75G+n$XJ@0/9>WZMR:%Be'r+*7+OR[jcjR(piAD[."UGr=%TE%9uoA%]DGX?lp-F:?d-n9IL+=C6DIWQp!",fr#N=hlj,8G]K(^gsQ2&_-![Ob(m$c;umSpj3>pMLg;4_'[33c/?gFpOKE_u[uP%W9O'LJQVdOA[=W3m,8a<9<&ZH!Q?9]Ta1uH(_g[oO$$d)MW,>k!Dt[[7<VLcV@IMgJLj>Gn@Z2sM_p+b#3)<+./&kR!c`f<OeaZ^%82.JU#%>m>'b3@:6sEq7`e"F"0)o%t6nF9!NoWgZ=Or5b?kG8e:6S5:&1i'60FZB'W)HB!4@4!`<Fk&afpLmH6d`\&@`0orH-P!8%VuQjNGR^<R!X/mBs,7I/;7oVua:AWTYY;LplG5;)$D`f1<QRTKHk]/+`WoAjKN(?mo:J,gJM\M+h]JqdMJ>I+Q#eGI$C<5H.*--*%&P:@D&_-u_;(h_k)[[nGVTB,"ok-0MDe6aA+>5$B35t/.>N#h5L-^[cg"9/nnCb_l1?7lL9L>^T6OlEB9L1-d_Iu@'$nY5\+aJ0N%R:V8=n7l)X^4Zm1+68*,bY2!&n0]^,Ca4n;0U3k=+\mVMH^OF#&"Ip@%@g:n63!I71U]$;(X\#E3q9Hmb#l-#r$>qgr@RX*)ZJ!L%"O0=@B0s>:j9ZY8BVNf&"P%JM"dtKW;ARl;c%rM1BnA3>'+C@m=[SS\RCHL0FaJ;'@U^NTN:nTRN,TV/QgKNZJA[\)%$q]6?nnfn%Mb+MY6u5Y$kej("KU7eG3*iJ"`E2B6h3^KG.XE*t9kat^rpnBGUiM=AI$K^Q,=UQCZOc[n-u)Z#VASBJabHr5ki%E[><"+kRt:r7%7I#]&$[?:7D^$3V4d!"S1*_B:5ul?CH;/3/&k?TDbeGE(&(<H95oIG<<Er-B=+$I'jW,Tik,p4&/(:[7/3-B?Oe/s@8NWVe&f8[\%ckoao\O'd]_/hgNLW;@thF1a64(c-<&0mk5TIpoXMOpKNPS8eI2H"141C^VV+VLc3fI8]ZkoGPZ&n)YRXPeYc,*n'4MRQ!%')/o+%nQQH]&Li/?a,DiKm[,CI`$-5<J;?\[[=[,C<2$82N$\%`rX%BW<W*r]7mTG71"n)i]S\o324_Xc-=m*N7S5=KT"g5H7S0DhhkOEq%fdfC*Y9d.X4=*?m;cSS;";+IIZC2u*N2L?r.T7/n$5FN08QVq`,#^fC/,"rnm1di1p$I$8/jL&q&fud(Lo$i_T,CF</dGA*E<8^K%)0en$#,Vnk;ht2I^nn1j9JODJH]&1D.nDo5'77t`o,3]dD-nQn,ZII?_SRq4Vj;1!Wb0XdOI/KP02V]9L5Do*aW#8QW'^ocTf_+o%We(VCbrS6(7>Y!gBkAS1A+]b:763_3]BjiH*ccS5&m;Ob2ka4lSf1e[bnXE+=b[\se=%$i=s_R^d'..C:mIhVVK^R8"KGH-mDLFs%mh*GOLHG_h)2I90<<gWTl7Gr-.S)h,9cPVI.^37/ThAKT+*(MAr?\tl%5)SY#?O^[2)@[,,eW9+KX?>H>f"Al;E_C5HD+?#J1K@f%8.(50EA^(f"=hSa%oYc&MWD2XVJ&^jAHo+APXO_HP8%P@>`h`>\l;OpMU]W<GjI%m64@%@Ard^e1#gQ_&oYujYH;JkEW3h%<>GF_%a;GBE9F(fgbc8esN@Dra/_8_1'6.4DQq.Cq+9CNms,MM8W`1W[BQJ?%MI2B@gkY`Vj<62,j"DGe0#Xa!WRP';;FuZoG^qV.RKXRn%a@JGbe'@d/&a';qF7EplKPm_),^>QO0rN=6?Oh;*%"mNZGub'?VY+'"4XQ*6f:j<BG!p;2[>*:o)2UiP#=T4Gib%PO@)!]Q[OJ>q%+6U9Gog+;MZLb.kr*R>bAmB"5\Zd!nU\$>)T!4r/9`5R#Yth)E=2b_Q3"ZL>8]I!PCDP3uYbi7COJ".I%,++Zl`7%)&)=qB#h'W:%"S'it*'^,Zg*jo82orUk+[1.A,WXZl06eVX)coHs:\/spKEQE1G[ncXn3%Y7ZC4n=9U.N#SjAB[OFMj![#P#f#a%>&OYMK588&Cj%0EkT.$1e3$jO7?ZW_+NU`\M(Y'Bh_L6k/a]Og"sK3UDC,3`QcI:efU2C)O24*>0'Eb6KZIN4Ag-+!3'Lb3go;XI)g:8DlNh$F`]8%,RsI?C3F_gee)>F0jR%6<lRsoLK[q7_@@aZY[TrKL5%$aT21j?dr;8&/!U[r?D//QWtA6pd6kG%JH:DRdYS]:2'&A\c&3VMi@-fl%J7*=lc(E>mI#%"64J<H(X&EC2>duFP0R.B4f0ct(J`&K[l"qo9bBhEZ?jH<nljTY[,o'!O=B)hD\\^Ta5VP(gnCe3/JdVuRaAo&R%k!(Pe9P!RR(tr0PJ_PKL1Hs^;j)=WXGi7d[i?mN&8+sib3aK-9$D,hVPOduh@YuobGo,1kIEM4,R?qETfL5"ThLC1elMaUK5SU)3%g_@UQMYEWpU[_YhOpr;)5mLQ[/b)H'b/[q(@O'?ipsc"1RR0(\Yu-VkSs4oFW?uMC2r$VM7UeoSn5]o0$s$5T&5?t4d[KAf.Q!Qe%b\THR>&m,couRa9?oY/peC6kRA.pd5+&B+?P*OU7`XG1#'O&3&/.&<\[XJDM5Wl(SeA4gPbr^&Cor2(g(n2@"[6Paobf>s$Jf+0,%QkH74'I;mFRrHX8A9-4+4=I-XS1B.3S4$kMkr0#m9+4c]?;d!soO+37(Kq_9FYM0p>21r-l8,3FF?oJ\Gn"I90d.dKFN?]Q3msI)%$&W\U1!pU%(mH1t\);gg4+SGl,sQB0/S7c1hJ-N:Fc'4I=:tgt(u16]([Ahhl4MfZD<b#4\3a5lTljp)'Q4?lE")*+*Yg.l4X^M)%BI;42.Oka^M0;Rl5S(l!eL4+*Ud,H(81+<Y*H3T''dOpTOU@93)Pi!h(_8M\'T=3[K>]BcKeerJ*OKmYoXP7f136^UJdVuX'f;=,%me?oC=Jj**;o0Xa:Y<XC^DJ7'1Fep%6l>Y-nKX"UO>-BW=!ikX[J:NV*#VP.R"S`#n&s5!#il;1`Y7HQ)o`$lOQ^3mc4?$%i[CK*%dmTOB>=B6"E`#IBEfjai7De+n(*j_IPZ79O5)M0haP<J*3RrRlP)'Us]7esD2q-buP_[M(dTqi)aA>Tr.23C)dlY2Fh("/E.>Z'B%oUC,%rXfmZV>@0];%SX%on!;fOnf=B5pb`kK]reb)>d8D>CKMnZm4jE32jE#01O3JALagiJeOdG7)fpt6&M"O:D`WJ8B%0m&EA2=%ONQu9bas9i_._e&W"+KI^(*TMDr-11KkP+?d4Q&?^FaS&n_rG0ZtZ7q*0s0oYf7<F9F22dKUsJ01NQ]JI*=c:<?[=GWdUgHD$j![%'W)FYCFXT\XMTm)l%mT?BUNuY,\AKkY`Pea1Ymq!6JAjY5)MH9&lrRp:<P:XqP0?j)2'f0g2us;<MM(tQO'!4brLa'WU#n(?qeNa%q2gTb3C+Xf*O2og78F`^JL_lh+lQLMB"Sgje:g?CA0MX\[1SE*1t\W^oY\ca+`fUX,To*=`D+U0Bi'cm@dn@TRU@U10NcYg)9)cm%6<O_^PPc0:iOC<!),,\6M#9_e0#ac_"B-CQa2(`:J3jrFe&eN*q43Wce@i]X]NN0D"RY9,6l%7*8g>!)&J67in1B]HVAY_A58&^,%/ju4/<<AGq^+_At8^T2#EQb^a&1U4)@UaFG1(9q/N%\'tLS-p`<jdVGBCfGcZe]^iN.e5.bS#`1VhOVjos5]3-Tn(t[`#\/RXo_N%^38(n'IhO%%#Ps<.Ag]i&RKJoU55W:p4f7(]Q1l&C:<-WnUf+Q(3dZ)&onO5\A1ANnm/\W-=LSHT>\<,OZG]5qc+T/bL?W,E/C;$%=W3N$Om7UZ$LQmsmbFKlR&T%u*%slna:b9eJP9W]Ti:H2n.#!IoR$N#_b<W]L^05dSYT0tETn%SXA8a'(_1FqS];[_9T(n+M[5gY%6RSjIkR9GFP&Dfoi>ka"E`)<?+;e(e&]H$h$6ErI99VJ@LiN7VQrgUsTsL(@;k4-+j`2S^RoZ-fSX,%")X4:^"1J-%MO,Q,##umK%/+G%dBA=Jqe4Tkf@%7tFYG[()Hr@?+LIP0.>Rhpb\s+?EUN+TaM%[aZH-kRs,t7TR,)ga:]*E7\@@B<!$D,(>=#]dfaFfXa?PGP"%WO/e$^_pt9<?&#8+:m$0Yt3$:5SIUZ72![oY<qq4RXtbKoiHf>(pEJ,7$`jJ(_<G-LplKZIq$9>n>UC?Au7'7s*,*1&/k/c\-_.\%7>a%a'cOo]/?)rX_#o<[</!$F/F#[O99JQms&p[-;&*W=TCjGKW^pk31K#Bdkc8BS737m"NVWC&4$@l1%%Ied;(@IL,A>#U.,Mm8%\\Sb^R^4IX<H_#'"Ts$(/"Ht.`LiqlY>Ff4$uKDd$^sJF9W':2`JV2C6E$]V4r`1&\o-+l.ht0COFX.e5'ScFW)W8$B',q[U;aIM%JW.Yo4:O/XW"hGQMAfEG8d[FKBq/##Ra2ALJcnFIhk4CA3/3O;>0QA5&ZUKO->@[giN$PIs44,;$ROl?`D:"p$,nZ"W/*FGMQq-#%?m<o([E.I'DM[I3:C;"!nbNO67#<lIguhr9n]$fUO-OVtF!6um>Te+1C!\seqC/Kb%0$rg2O4q8lP1&m:$KOI(7*LtJQdqV-:G_J%+JB%7W'IYM\VN(DUnf5Z)"U2UO]bi)csg<:l_4rSX8X7I2'sB4M&GBQ7OY6fAAWDLmQjet\JZ)9Ol-Yi8@P=BP<aRV6j-KJXNHc+%X"\'NO,6]/SV"Dl]W<"1KuMu)(;XqE=#eAL<s^aS(&R%h_B07(EV2[K,5?1<+a\#^-#0-D)_G3HKuR;-,7,>VEs#\],MF\!782+,%7&3r&G1,:\`(W>$LNnI[jp%('E98'mP-\<$A3WXA)Ch1Y:s>o]`"e5*V//fY.B06=f?D1:]2Q"giZ-#K^*";QSuFH+<Q8937OU3_%<:M]sX>JR==tlHcbUbPYZIVM]P^8-miD:L'Koh>9r0.OWPt%Z(4U4n"V\#+&=Z%Qpr=9&J,23m-)m&VPe5KUf(*N*COHE"(C+)d1%.2)LLKjo`QVH.YWC>[G\Q#/F#Q%MDC1\MA;=9kS$C9c,IR3/[?94)P]X[5Q.BV[38`]bfj@H\:L9?RbYe,<1FRk^V&ENKg"*@!ll%.Q'LO_l@"ICK5okW9>)_5U>tjeu:MGq]iqrqI0hhl>7@i%N]>Ze<quo?YH<uRKVBKg-VAE9'kb>NRRW$9d#3+*`Wd]_arl):J7-q%)_(!=U9`IFlK0W>hI=ua]EmL'12VW)QE%p$;'MDs%1rl.N5CfjUI7P7D4A_)RDKjle_F9\<o-O^3@>)*d>A9pKXQaMn$_^C&"D[+%bU:6$]8HUWQ)^SXC[oD264[&:-?u=d75:6FbBo0a6_X.<s%jmr/eVM2atmBWo(mBh`[%UYfnaH<<?743AKO6=Y'@<B+clT^MO;@.%*^\h2,g"8pY%098;SLfY.P4ip[DC/NOT2IH+o_\[I1;U&YE9^#>Rhs),6&c6C?%+EaAb9lP.JpMZu*,T7>q14V+H>bFt'^t@>#&#%`nRLZ1W(\rb:RGY`5<!s82r[#T%I7Vd#&JYg&u+=UG!Rq't=93_[M_sR@1L:RJ2XHSP*,%($?IZ/L>sFX_=BBrdZhEYaHBH#7>Ko%7OM8"$!oJ@76!Ep]_RF$$(I>*>/_K@d5W+<W%A=2-rRSE(fgl31E+qL204%u'&?6W0?u$srbR0cCTCR"@ES,NWK*(>rNIKc2.p:T%=Wf[mBTQ+,;MLi9s)?,U_`ZA3FbqkFMaF1gKIM/=1dRa%k\-NEC`&FGENS(S%jd[%IJItPr^[bbftsVRg);FN\l=&d=@O^ddD1U3%s0`s,,a7\>FVYod8j5TV-lZ!m&gn1T&L`!b-V3[C2sK2K*ZR"IMH=0]c5K+si/HP]-gk@$+8Oe.jj;YRaY7L>gls+<MSa'"I;]FS%O;&mR#<IjWWk8nM33-d+@M=Penk]jO$jG0L+V,mice'M:>,E9O'mY$TfKbFZMQ%mu*jpdu\:G;B$!DmmE@IB@&Ock9,*0Y*i1*_]%aq"'B$3ju<;,!X"<?X?_OKDu#aGPJ!F^KrqL+&IWZ_;BVH*LUT'sn/_Ec>!f1Bd4S_tSXjRinMV`#qu(9t1?5mTpUfUM*cR84Q%>%<i%&>(fjdnR$nbudEl2dF&(A?,WN^:Ma.k1dX+>4F"0MnEhEnB(j-M%Sc,Wla&tI?@LarmN=!"&+ZcS/oa5EP44SZ-%i*9;DW.dt%(YR<86o,<Srf&`[6<,Q`djh?^e;0>hiDOqD@QqLCJmDW]2hI4lF;85ZR?L^<R+6k.Iln8sT!5/?Cml!ZX8$C!_F?9sLT8jr<^n!6%`M-q1B/.B!/"WJjWX/Je"d/$/TN>6a,F&Fd(F0icdf0uM&B;*>V_2CkChlj=/0a['m@Z^n>BnYlN_hI!`eHS"7(pW5kWE?'jID+c%"#X!88PQaNLl,)aq.NEd&*m(_64\us'LnAI->ZPZYcu'Aie>VV$@*!km=Gh3LDF>L)Q@14X<\,o#VO,O7`[rT>+lQ>PUb.SC.^=6%QtD*8_I@^C"\nJU%hZPZ]<m[O'6e%''FXW6VCWQ+.U('Da@Jj8'te@[2M$LL.2?9tr#']L[<9+1#$+"k#E?a'(VGilL:tlcNf&^B%UB5!nT$Kr86%U;<R\:6hGRZ-8,n-'=Mq<495qZ.>^,k5/Bh+uh+2:;b=S1rGHq,"DH&]j5?k(bk2KOHJCPAbg!<[Y9JSoZcG,/:E%>*'o`C@i*?>Ud@u$JuG4-.9UudZHVN%$l8)";t@POE^C@1T:^U6:Q-e(f`XuK0n,(SgQ!]X2;h@hT-SedC:m,-FE>BKLupng5o_`%'Sk:jr:sI&n1%Hbps"Lo*,D_,,ddtL,$>_`5q,]qeg-tu[gSU!TOJ<W3*jV75W,3s0+T=j+/Yo?]YM=+.k[qQFI3\eQ,g%#FDg-X%fLo0M#7ij1hc3)U^82R?l3&D21_hZH%6P@=j"2N)X9oLIW&PJ']Nn:5[4[NEU=o--alOhE7Tb@lp%jK7"Dioo]5h%h+J)Lo1hcL,%3lTGKh'F>(0K%k;L8#p#X(Gl_%nZ;bEPa)8%s*1J_&na_hao<#L0%I?X!ED5+9;X[ZJ9cEUq-eWbX&stEHTY?\l]qWnA&Y3.%QLG%.A]RXc>Z8jL<fW66Dh(MO/V#S,g]+Oq@Jo`@L*./V"dLE]iV`t\,aLj6OEa=ef9"dNbi6g02Z;<(N$<V4T9&[)<,SpNt3#ueH>2H%PmDsI)]oISb)\Mg_&ciNl3h0gKa`^]XJbPd4EPXiiIVFG>+oAf`Z,a@.LQ'/KQdQEAO[i7U!NX:WKX%n4XAOs5-L?e]P:/GiZn%M%AM4kBK/qu#_u7n$`05Ye4c&oG@A+gYA4-pIA;ViV8BA2ZOcT[%*[;[lEpe][N)--%d5Y?bnt;^&I[Pkb3;O\ag^JDC!s93"hQ!Q)%MsZR$HsdKuH:IkL*_\R<1]Le:d.A4hT8f'rIGLS<ZsRVpL+6HKN.7Wh%&VK$k2Rm\\7KD$j_u#@TJLL7fAZO_]Z<&r&i:PEQ_$Nb%c\iCVVVGaGYsM"uh?!g''#@Nk4[#c3T,Ch-]Kjr4+Am7G)Bkgu%X!YB4=XJPeO]rk;55hJ@<%/BQ"oMK@4DtS@Rs^;*[2:3;BFLT%$4.<Po@0<;Z6H$-P7%dm;SL#\0MRWA5s4Wk'\UPfQoTRp(#sKQ-n7h='F-E$M=JV=-?Y0/`,r.eWf".SSdY:e='['cmGsB9;JT8l%k8.P@GrC,d+<(L7IG+hW6tO1cG[O@Dq:t4eaLiOFg*I`%1+;d!_c0X[P-HBr"0'qoaI3E<FZ2Zj`-4PR)3CZ2Rd22rP)q]#dE#9A%19%gDVoiH5\V*fWqI68UUnf*K0j'hT*L)Km$dC&!f+a'(0IYToSi:d@1)hks6WG+^\3a2N_:Q2LR[K<Gh+UfB`5q'Rb`ZYD/;QDf%%+2m^#T"eed%fmf:fXe4aidC"U/7B.mZfEp<+@=E-!_imdSNDu:b.DjTd5rMfVa;e-QE.[:Q__*OE-0_S'KmOiPta7<6DjYA5S,#%"/uU#W@ACV8=.e-PTl/)9G>N'*#D1:6<4P/Yqo"H&iCoMgOM-D6IH]<EBkElT4C9n+Mg<Znlc["32kOX&#h$%:YF\H1a`-^cN47/%#oW;1+3]<E$n1!YF;m3^c]Bt#_7WI>1IJfd)O?L!7I6qf:#m$E`&F>G_BCfVPpNG)j5=D%4;=TT[*^(a/fhMc.uO&3AY,=^ZWJPr%e*I7s.][ZhP(]S>FgEN@Vfa.BdiXJ@+I:RK,asB&MKV!I&PKj"d#)McE]sfHFi'i`0is%e.&L0$m^.DG7ton?Z/WbMMd/Fq;3*VI%.?u\He7jVVh,n8tSCBMF3YKq=1m_S*#X^r+BHuk565iT<chhG97YqaQ.hQ[]>OJ$-pc]m93Pg*lH?,S5)NfS^"p6:c")2jW%*^#T%Jcrnh7IT@4>X41DI=LpMLdi=@X1f04j&T\%)G)i@d6?"d6),#mPYBPq:p]+4'g@hS.fh.c0W:A5>3HQg=O6&_cb*JSj!]R%H\hl&%]8ZW.)R1f$'DG0+Rpuc*4b?4P%'m-9/sg_6Ng:fjKV@D%]J(MiQ!-JdZU*oWLd4?XS5Pa4G!AZ^\.qK(U38PbTY3&7Z2M[%!enhj%0G-02'P>5NAhc]d.,o4R1)*[YXZi@9>YKgD:!>,C=2jn^mkV.W`E^82.R]0+UT!;\Zor)#28%eWC4]K^KIW-Qi:1n$,'Gt@TWW0M%_OEeVYH$mFs$;[FcMe!h"mSPdH[7S>$(4XQ"kKU+O97-]B7p$\$,\t?8qeHO7Rt[\\sC8T2qUOX[@N04^a"t=UuF[=9[O%;30?0?%%Om6=qPdT5"lc@:0H(Q>+^^$KVcCtlN3+3Y0<--\1B6,RP6d(&LS.Mh3hD;6+OUV7ik^+#@hj7s7b)<cP$lCe)m[F8;ccO7</ij8%8hrh6nkZm-^s$/WKj?aI&Ajls)sm&4Od#9tG:#FEg8CJG&LAJ5iFVg]e5l.4CI.[&_M^r%,jJHJABG`hXe0<,7(K]SK]d]Y?W;t\%.gT/I1qG+L,XuOUa(B(C&d].clnMKJ<?""$"e"5oB/XR+O;MUgAgN+Q<VR@IbQJ05<6`L%P:,XhJgW0e)S.l@a<X'I5S]b5_JFq.%R%G3/[Zn796Ie&J$quQc;B[9i.@R+sifmMdEk*e8WP^@.R;mS)_'LXCC4Z&.KFs?2WstoN7iF-\T4,ba-`@k37k6%B\Je46>H%Z,%2gJ(o'is=u6S@b8Wt7.g4'Jo+.R$/N-/cX>LTVQ/VCo)BfXde%pOoQ8(nigp&/U^j$FXD:BMEU_0q%^Zj)W9f@L-^4+f7\L&Cgnh%`aSG`At1OkC4mc)9-Bsc9]4+nb;C&@#2W7c0LT4hpf!`lId3e<Yoin?OBYCe@VRfG7*=S9k(>ms$5,3\_EVFuU.)Zs$'CVG"ULtT%lnF5.l@YG"(C;B%dW:uM\R:R:)gW;nm)`sFrt=XnMT(DDQ%$dgAt/$W8?.R,1lY/$(F8d'0FF8B6qECn4Ct;)?@^rd?(ft$m)95S%=6_M%,VUJFq2L:$3_<>pUe"$ZW>q]>?+lteHrJ.B*9`iJWT5/88j4aj5XhC.'pU$#5d$fTcm_Q:WfmOqi.74i`+i;;74_<'I%]X;%=<nPY&R6(JU#guaVAmX6LdGAeZT]J6eB9*a1<l?UBUN;kM<,P+KL-rq&0W!JWmtd\@itMY.Xka`JcmaAr_T`d&t)Ck.OqHEC(s(N%NPOKZmtR_O+[r(sL*X8s[cCeonjlSrfeqgU'UB%Y-+rB/oC31f;,[b(aKPQ6D2JW(_Wh#cLZ;N'JjI-_+]P(>aEnBD"*4fR7<%mU%)ZTKg75Jqg)gOu.Yuaqa4K)M?auE6lfNB;BEDogK-9eTUE99qEWenQp5)5!,_QDuIME4RQUf3BlkXdmaK#gmF<`)lJ>ED+q0eGp7%]ID&OH0V")c+G,MJs%7:U(mc!(pci/_H7^3VXR!ar'u%+,ZN+0"V2#8ZBBLP/2`oAKmDUe#T7C+4l[iGW^:qs-$pPmV#J);&^#Df%c$PU'j:Ne]?%H`S<LK(%M>9SNSqrV%U>daq<,!#G"W%aGlgMbqV+N\\kj^?dh4#E"&J7F-(Hh1r"\2#V)7+;)5jSj30:1";bg!mg%<fT3q84u.KRl)"XK?$LqWbD59l[Yd.mcCeE-Wf,$1=8D4*)h"U3]O\@"U=/4>SMlLf_0epeNK'O+0B3-6B7cR_h>BL1495ON2%`"%UdR79.-:\%(5eq,O/3:-A)gh;M=uUC5SP+l&6CHkQqYRHN)@,U;#H)*Se1F<#)Z<HJK.X/l5)QJT"lcQ<Vj5B&`W+r/"9'pf.9!;%W9!fU4f["geONc!4<p!qRAuq%_a\%TTUc28''NOk<II>I8@iK%O?q:LVM7%P'IKh:Kl\rKLbkpR"m\=m$[s(HY\PB$#)u8T,t'u3%-8&P_qa+ifBqiWLLg&7\+,D)JNEJPG0,b9g3#U<g%qH+'MO7'C`iPkMK]#8>o]0UAMQ#s,:inT@'IV\u`At2\Ah6i?*jb)8ko4Ah%.Yr9UKjYgmaJ%nj$W6_ik:B<d@r@a/$8RpAPG=ie7%@nC;OJ(:G=J<5e&@!7D@^C[7Bf?)mRB7@4$qK8BA"JEKG\o'ODk+`SC*;b%QANh=XI7[:(eF=.`</+8-9Fs;Y2Tuo?79\52.N=7PZ9N;D.+=mSVPN]q.PC;AuteVc"SfrZ1s?QnV2o\TVrK!O;8".>;]eKfS[V/%hn!C?&JFG)8N^u1Otb^HA4*UU+frsUWPt5KR9(PQarJ5AC03l_/qbYC=4Bh\%d/q2QGY:f6joI-KJZ+4IXH$'=OUbZ<3`f^qAH%T%W70;;EB[V%lgcGm.KjV9&<7u?e1cJ8.]N:CGDf9a,nk$40aSW]WX,3H$lP*`NJm1>M#GGM^6mP^JkJ]Z6M3sfbc:1M`ZfMX.caVG%MO;Yg,U")7`2$6GfgDHLc:asgOf2(PT!NB^Tbcap&JTgI71h]%G=j2qkTs.!\KYHZThjt&+MG^4W1q!m;k3BX.e?R)r8,`/=CHsH%#1@lc0aS:GSHt7Dcb#.52=&JDkWj(p6a9!Bg2JFX@5E!s)PIqDdD^d4(dTE%)2j2ka`PH.*OIE\)NO9FgVhUG-?h)Y;"oXaqWVts%3ioBsPa"p87?&]rQ`6?G<Cs,V5.Ph#&31I[+\JQ1RRn^)[&SiZc\>[UJg!0bOlE,ib`I0/].bFj/[G^[/e<'X4C;B2Qr/&&84@]i%R6WQ(XW?p\kVV_G6uOHs-jXUp$2N-hL\W:<qm%Me,/^B2cnRk\`S16+`>FWb17tTh.`tBYR&5!MS8F(f<?^M1E:X@4(p.6;BIPQ7%^7lYc,ZHS9KhBCIZCK1jLE_g5lBktBVL,6Qcd:TD-tbM1Ueig5*#b$cMAF9O1Z;TI!c^OR6M;;M4HNQ4QqXI65t*Sd\WJ!hHLS.t%+I$i&OG2Y'3c#N)B$?,]bfrO'MMndh=H'%\;f?p-<fp0HLdYfeE!2Sh&Cl]/22N,83b5Z3Up@>0W8M,/iGo\Q0&gr*.R*)Z.dOjB%[MZlI\uA#4V_A7G]dgs*e;4;O\gHaA-;kH]Fn@@r(Sic4.:Oa\8JjLV,17VAdmgmHBu1B`I#;>n:Zq7AR*H-N$gY:?4R*QS+;J@>%'dT0!6g+63&oBEM*(Rl>W3qRnkRUE;:;%lOX9nu(GJm!p(`7[('3&E-25b@61_]HFP:[h>R-YlJ@\Xo@a_4*X`Cae2Oq;2$\4.-W%.,)n8SWVLK$YPWa'&&oGEcEkI9IW0u5ggah<$f@\oDLL?K[($.'Ng!M#[]]P0u4ZfkWBdB?Z?Z?TTE.*"fg6^W^Gn\aDlP%]g+fd%rm3.SjY\R2LD06'n4>sVl6gX#I!f=TWiD.WS#_4B!K#>%0S[8?q=P'N6m(BcG8K):_+U@qS[(TsN[VGHNl1-'?3?\P7Tb9a$(m=g%nID/,PgZ8ucl/-:<)p0PLfT>',Cq^#Q8k(0%FHrr+k*]?O;+WUl.8"+15V'f'rL7KYP=!64`VEm':YHhVdD&bK2_"I@5a0n]0WHm%,"U6Hnd'#50gnL:Yi7^)&ET:(K0$3]ns>83=I"7kQ^)Td-5r[hBU<4kcoRXXX-3-QQUi%$<hsaPMA4SDhlBS`V.:=E.5'&A1%YVU%aSd(Q_.Y`87Hf@U[+mC_4=1C#9i_Zs<,np*@6UmuP/oN)+#4GV7F1..W@::`OEXWV4:h(O;M8Qhr(]YBIP@1HII;)H;,(``V2M#C%\#?8&N]k?t@PTGIMgg:F8Bd"4V)?mV'/^GaRcjF]QUF<iRla@'E/I4%4H=B#6Zr=D?*B(0E,SEG+t,jYb`aT>F/]F,)l%oJO9[_O%3A8BO_EK@c[lD-TD`q-PUiLk@cP.Bj@8Vh>\iZ->>!c4[]Lis':nC&^-Un[a)ae9`Fod3G_.-6W8X$nX0bWdA7AHr0>[\ld@Yg37%a&Gbo'i`tHb3D[A.:obF;=mp%b(F+77DcWuL3m+S,#VQ+QB^15&,*f)/]@*aEX8Z'W$DgD#%d@%$p(8M,,tqL,7sne!+:@S1a!;8%VNYKd'S$>rP9:<d!&-)T(lnljPSjH$z!Y>on$88O`<95br%Qj3[BA+8:0n:?U7mh#c2mB-H[DcPnIh,?)F(@INTpMSUNDDo3%%@?*RF";OsGBK@G7,QG.T!#;gg*9c#&K$;De-TEB?+gOlMI%0Z5:Z.AdQ2LcS7mkK@^I.JJu?Ji74$(c^m];J)u(kiH()-@L9Wnn%\jUn,%17WAML09TN.n!M##4Pf3`;u-R#TpdCrC\\_O/U(TbKQd>-MLDq.7`aU3YA4X)X]uF^]D&M+HZ.2sD5>/gWY%m^m=W!Ktq#%Uo&XEppo;b^^6#5.s1#9Eccil.'0Y@-oc^L5l.&3G-%+O!mBcBh]V`\,/#]=b459lQ9!(fDKFnHA>27M\!8'Y19MTkb<^-op2I#n%#5d%"3#=M5>"5?X<bTT[mT,-k8W"_^2pro0I^&L!nCaftUk!aiObM,4\t(JTI\q'rR7@ujT.1^CA:I*sM`eaEkT]mZ8m,p7@%cQ:%-Ju]Y"tUgs#*br@YcpNgW%)d]X8>jE<WYT;G44-A$u8$NM*O'ZJ._=gaZJjZmb_/O;>bg+ao#%K#f4[lk?Ct.D".Wh0n:IFFbcsQ%,N1>S;8-Cc8hEnN$l<Vmbj5@dOqtV,il.XFm+F>"9JKs=K.L8aBN'^.4=6%S,%c^5H:\6.o765nmHbnT"7@Pb^."c(IDeoKbu@YS%%GL0aDGu"p$G3uUe47J]RJI3`r9Gia(g5N`Kpq\iSpdtsRh>_D0m=jE6.kU$N"dJ6qM;DQ7M6/uH_i=3P)6d4BU2tbGT6nj1[5T%%h?Z;\JQh@b$qb-dL=#?q";[X)0ru+NT<:/6UfiTL=:=je*5rPNJFQIe\$QfO,2c\"4gbmrcf#iWFs[9-.2q8%]:ZoG%2iQrS'Gnf%Y>?3K,8SO/]PB^nV)WXAL1X&R`/Ac$1a^pFEF5l;o,T<8E4,Db3#tUN9PBBcK!L.<k)9(7\l1k`+O!u&aiA0GM\aUZ![GpN*P0:S%O56P+(=S6`UfW:j-VTu3fVAa;<"]MPGrMBG8qOGtAG`QLPMJ<B/ni8K0anP-\PcAejHQkjEuZ]FZt]o&Q^ANif#Xt;::F+5rJ((1%3Oc+'._\AL8m/c[V8plrk5%o6:P5n_OD5pK]YHf>GP;=9d]i":*6DR?[j=:420U:+Qm\sA"qT#qMfec)j@D`gf0>pQd4(7#S];4,%`FO99Oq!Jk/hO>8Qup0!PW2l;.-0i9\U\VS.Oo-4e(rXPOS'8^`t3'8]le<`SkQ,>RUgdqD_@Cq7-Ka@[ZM2jX=5"HXA!8'Gf3%D%FGt^c8I5Cd;?X\T/<R/cNENRs]Cu_u)Djr3^L,$n"-%.pImMP5.C\E`LP+]eG%;#nmSJ`I$kGVK:C$qK8)8#[pV^8c=A7iEVQ3AC%o>>B-=.'g'6T]UJr5b?j!iBDC@&=+t3n.+>Glgj(o`'&N)/JYYp6&Qaae4'[=uknh8^MchC1)GCd<25m2?q->"4k/;`43[k@!7(Q%'JQLQHDbotT\se&Mc709l1;$;Z,]/cMT1[X!eGRAU6jjerbZd&HkC=6MUb2*Q$(Fqg+D`Zr)8mrFf[]Ceqa`P>n'6?TclQSAH@Od%jV>gI1)te-neQGqV&CuilY(T=+Y9krI#S3>g60k)!M=pWJuG-mh7IlkE'B80mU(uT@tbs^c:J*m(*36AUAM:&>oZl[[=]-+0J*7`%I^kOh(si)R^gR8\#+qiZ!R"',DSun?EgVmS[u7T5f&i4.PcV.70@0pOG'/.7brc!S#aoXSp4CLPEMiQb"j9^oRa9b(n?q.Hn("7`%^'P7l"+&^&nbM5.qroGjGb\`ehE9CU917986mN:Z>,mc9*Z*lFh&QmCF50kGM/c6bh-)GP.pZCL_YJ`URV>$p8op/1ar6AYncmg-%q@jmbi$^Ni6YtKn4FcDDHS\2N$!KN/T]Km86TE>G.K^2m+0k(4*$b\I,8]<doLnYe[/Qfp<XH;g_bUVPk<^Xsb[`2T9.5;P+A5Jo%g::%nY.E)K+W:TjKoVHH5)sNJ]YFKA:__R^_^Ju"$'0GVK-`*;igKc)1s_Y(.M*os$E98W9]rO"OjpE_7VLZ6K.eSGLH4Z3aV,AC%pY-5SbF%:`Y"Bmj6lt\b4qnc#LclXL@pY+)/7JNr1:IE"<fu]ET%%R<m[W?NpOga[%=HMUX+J`\^8O-IkCmT);erV'/n3Scc,dt/%H/.PWdWB5t8.]rt-KKJq1K@[^:AMOnF:6e(I9INqct7+@:#t492Q*oX"HN<,Ytc#c6m>DT[6#[fYUWg\jFTHPO_0ZE4*$6?5C$Q<%jclG`#j;H]&>]O'-oHQ&5J73!!5cE%&\F>p-;>Mj_U,_SL]hVF+Z=<XHufg6<45I0MihOt^Pk(MO7NBkrchn5kTtO[:@O-5(NJlf%AMSkGR7187IkH?'%ldR@gBhCY;O_^s\?''V8knD04UED,K-s864ikpMcG9?*1VA/G^S12Opi?:CA@-4I<-9:\Xl9"J`<+F+JQmc6%]M_HoLq=='.i]:;WstT01]W3gEb3MtqgJ&r71#9J#;1WS$K`^44TIk:!@\X$i@;263KSeHOC<.2C5oQ1.J^t5M?LQ1Gn[3!KKTu]%Bii6CjGVZ\SIU%<o/;>/Ii<eL%D^L,4oOJ?o0tfEPOgBU"Vk"4f]_S0^M=YkKX3IcJLNuBd387FL#$>\8i5WS<?rDQjZIVQFFA(m%nqtIk%%o>g]H?TpY(91rS^aNUJAG]NXe.KjG32gHD4)l[HK,S#8t<9#;t-rn`gKh[ILXV&MfLLEXIRH:o9<e_T^.9a_&TtflIED[%'/eWlB,qO;!ph)b_!Mk""nYBBi)uj?`lr\aJJ4NI/Cr\39h9RPfeQX*7HgUlW0l>[T3FsE"5ZM3ZAHLnH[u7f9"npE;T"oDi:c"@%]Ti'$`C<(ppXul#On[jY02Fgp_X>_R2((L\F13Pi&#0>nN2BD7eSNAdPSd6Y<1U9jZ*Nno&O=t0be(AKY$?3s*>DAW>'-QT4f7u.%O[WB=N<SsdAWul\+KO;Bh@q3<;s^j+]=JUB&A5MMpQU6ljmrCR!&fa87=<V]>'<JjltVg2bNcA5mgNLcFulQmo2leC-EsgkIC/10%;W3tM8n_0.5oYBL&eu[^bbkl<UirK4,VANl5]mZ/DK1/t%cHPOgF<kb5^@1?6&@GZD:X">HbJHZ86j>iI`CA0,cB*/ktiinZ/B.P%FYth=Moi3JZ&6DcK4hB)'MW+>j_2uAPo\Ft"=#mnk2hBdD.@Wf?6gKgH/aBV..Z2W;kAYl$2VTUS2>f=eh48S0iM24gb:tcHJ?ra%lJZ2D9M[B`k-FSlX@e29Y4$OmbQkba9t_gl&\cDj8@PGETLs<l1MD]_NeBi(,Aas0?H`mSl;W9$&)+=$g:YV%-8*=U8Y&@lHi+5q%/^L3-S'/Y$7(V&>&N.E<(<B"kCMr^>Yo>!()+C]%D,psiNkBfrL:\kHDg)^(.$;3KR6#.'XQKcC_Rfo4C6sYAU>.h8ik9VfPK$5n%#lN0f$IlTDB/,,O4&2MkXqj<qAS_HAbMk'Wp4**[pli53Z0smO^;MS2;o?]%=N1<bA#8pFN5X9V?R"*@&lJK\\hHsMB\7@NJb1r:%V\j@]j7j"OK@1?F_?`3K*]HDR$UFZ%:@l=RA"#)&Zm_5Y*_DfdCW@RAR*7CbmqU@+FCq3b:_KKYS,;j\B-4Y'F>/YJUo:q1)'_9+%TqO"'[-Wuq$j-e^,hSrflc4A)_,>;$lEo`*nn@eqQ(uPL"FF%1_Y1fZ^h217fOULYj@D0]e)(TtEV.rjZS'8]2,gI3]g"];HO:/e%M*-%^m4H)<*Uc6-km&iu?tDX8P@<X6g*Mbn0?*m3LZ#$Vnqe^8Q["u8<]$:E:E`[b_iX8XnC>8<5-j"15seUC9&!Rd,+famMc)WC%^hjF&X@:'(:Nb2M';/s'&gIe0WF2V\B\X1N@DPWh/$nukB,J?&*kUtQMpj5#j3>`[oa0s`74X*gDu5_XhL5A!%:^MtU<oauVL'sB%"G?V':BL56SUEk^`64i:.%%J7TD/C#2Hn7<ei"?kO1")R6sKDIdmS:9\lMFE;OfF?8A55kCH,Ga#0mb>B1s>U6o0ZO6cnLh%L3!:%d.%H"VO,=Roua%?)m-J_q2Ls/%a*t*%.oD>1LHV97Q'D8A=ekL1b3,$JnmWLLno\omQ:O%-'LkJr,6D0E[i7g02?/63\/2(6.'+R%7ELScV66[M4tX0WOl7Rg]o*@Gd\gKSZA^7C78JKnoI\3ISBCj,EtU<YX`Vsb[4k-k0i50TI**IUO':RN5!uAJf<5GWK^#KGD'REX%Fdg>\J(5^bns-M!H.X\gjg+fTJ7B&Z3^b^<5ue=DG.!s1Sd&HKlHesGW12SZ%l-9?^d_@n?m-;"2+oQPDe5V'9#c%:+&Z_5iSla5%V7f)Cj\J5kUARk$kkJ9FBIuMpN4R;c+@D%;2FHqbM#7(^iS\>>;fI)ZD%_oR*AEW/%-*GW+Zr%5)!ldl=>[F?&<RIdloHN+^$1BA%oqDbhQ<YGOH7:<o??>,!/?\O@M$Btj3C41'2/Y$V,P*4A+7/%1RKDB84Om1\9.k1*NO5G&mg>+HreQT?3;<X:MjJB8EFWhp^WDZg%9C1WQ!nZ%iJ,,n+E8P(<o41]2(atr,67?@1P):L:N:0]NL?\[tVd4]`1&7m-[=HIjBGgM3q0h:r*a-_=E]e]WIj%_6g)6m02XSAK%q?1Ab$-1X!h$Y`X/oi\_Lko53V].RVPShZ<]Gi1>+GCHX55+-`NHWl6alluXL/]@]'qM7p6sX4bdnEGtfTYYLFqX!b3\)LMBIK+-%Dl")F`1r?N]delOe_Xo'p0*^J6EV4AQ6Aun]7b=-;!mKk8Hs-?cW1mN.,'5ucNNoa'up_;=QSFabkXdmOgc-gOSa-MI,8q7(_9i)%I&]hZNT=SlWI<kc0s2eCZB"I;-4],8e@PLoSPglYTOYat;L*0+2>#i+1?c>:B9nh1*Ja2%1@(Y8GuXE/hd+[CYW4:7S#-Ji`b+&B%<[UkD1-csQp:F0O1g#HFD#cUEHmRE6-V'=:>oR[b`^V0515K=d$/YjV^;"at^55KGN<.o7(1:tFV;rGe(J1Mg+6kXMUrXW-P:,[A%+KB4!?SPBR#RV/+EDb;B@FM*d0'1?L<[i0h.7famiJS23^VQtt,a.CgNH?aO-C)6"f^4M=Mc.tEUI"bC:g3iT]gF"Llj(b6>fP#3%n(CEPqNagH<,.D9+,\4aFF"Be[VXr2g;/rZlkQo5m53$hXr1[[V<b,L4l&AZ8\g5\-o:;,rP+<gB]b,4;-j4mb]:C2$"8Pc#9ulb%BUM)$RXfjd<,AjaTpdO/8EMuN@O!rX%*&p:#OS(N1kTt<!!>^Mon<$Jli8"%dHRS*r#F&M5Y1HY7N"8J[i]1g\Qaagm6TM<hGARD%J<@H+2*F,@BW&71aGm1&rlGl2&3-&bYfdmS+8F]ud:Zn-d#%E5>@bZGEO&O;^*'K_^#AP0FdE)b8[6HrKX3Y(C:i"'GSI(3n-nV#%d1(H8>anSkZ>J8=-%o0)=<&5m!_X=6G(R,Z_ZJpY%<^)_PSS#[F2LueUP_Wq_Zifnr00pRc@1=&&Z><'31X_$&2hlP"esp!ojF8+%U5Sd7ogSM_H,(R@0\-]r&t2)^km"[O'VnVl#,0N>P8`,+i"nbLW@iTc'4ldI3l3f]hfdifYZ!<--Kkhu(?UT8r"bo"AOj0Nckk;N%&QS,[]e2Kn9U;biQj;PWk]6Cj_Vu'3>'R]YVebqCmkJ(gGaT.=e&M\J+VrJ_Yfg)KJ7M7qIfk0fQE5Yrob.*Yq!mjAV]&?n?U^/4%amMEN92GsZV]A]^6f(f`eA>7EVe6,.a,2'7@sBtSdE6gu#@BX3EOuPkTlOi;HT+82][5dqs.]of9p>8q;X%/K4);AGhTiV:>p7`:%n(c`\nd\C79\):VY-ilT$('K:2kX\i:&WlZ%@(XbI`O.2Wp5?%hX2u2j),o[:QY-@kuSfTVhU1l^@>UJD`3-/ZB2=^@$+@-Yk)(:%aO[lESqUt9!>+s5:DLL"Ifn.W6(:O"fb+L/_p\`=2(<o#e*4G\=c%+..#s#iIY`<o4.+5@8UWU0GVp,LAtrMf*(9Y3/.PfQ44_?R%M'cmrr?uP7^jLD^Pl>erXHS>#,p]H^Xg6P#*iOPc<j&;U2CN*V)"IodF7O":#1P!(=`VD2+Ld7`B4R,ciQk7t,*6XP'5,"mT@k,5%+ISDJ0Ik)#'@UAl@N,h!ZDq?n!m[$gUh7R$IshAN?gPA_GA%*+2XQpM2!]nr:ZiuPjd#-sGjB^EP'POdP@5hqqP'^NEO[:;[uD5"%W+ARDdb!GcFQ9k\i]#N+h],:W;,i.M-f*`OUK]GA6]5JZX)K`kcjeZJ.NE/_*9kkn3aFd@3+morDQu*675lJHBJ7?0>/:_KlL6h5%,-Y&nZl>m6'SGUl;]!4UN9^k#Y6^9WfA5nZ;i3M]?@MJVTc+_,5Qh]I11>5dM\?5e8G3S;mqWEm$\)'@G!g'>nKA+\Kf9>5:i@Gm%4o>&oJ1pne2f(*C"*1le%tf/q`HE+A=aDVfV8(qoq_HRoTMf^j%F5CplZ.kA7"-]:Yf#@aN4Y32[.JT7\%/fW+oZ]1N[s0Bm[:JA%SUEq98h<Zo>\bt(oh_0FalCTt^9Op;XoG#B-0d^4a<_Ug-gc*02urPY%[-VgJ(2gg#/3<A_^E&FjMfS#(b\M'`qHVJk'1AGOY:KL%QkO@kE5i0?)s.8]@$sk(3.VjhEBeM))fn"/cV8*&D]^S7l%UuAF5E^5AsslJk/>'+>VBcfd:H'ZB#phgj3O)[SWgkcTShcg\cV'V%BOPI/0LTuU-!ZIf\-ifo4R-tLBB!(=[j#rK@[G")]q)!-nR;3F#gDgBG099Zh"V?/=&T&(\`YsqH^Nj^K&S&-G/NX.7h]KVG'L82%g$&V4jT&Ej87kHn0ZR.J*o4%V/,0r]hohSi4=A'oB;_&X"M`K8(RQFDU9H0XL>=NibUIkCd/;F3kTS.f=GH9iGKO?De^O@92S(PV%N=P1]Ub0pRD,u*#\Qo-gDHJlcEuo<Lq%Uu`+YGDqN$8Rp#k>CObK2*&o"mRS]c=bnlo%Y^)nPh+84ONsgBaRe@DS;*81X#>T``Ag%/7BXt4tFgm*'PSf7rr)Tg&uI2jP^*pn84OKp+Y$o)[6CcW'Yo`5eQ9_Ui+'h'&'$>T@p#Bd"ZUV0m.[tZia.W9m<D3gb@1\F*Ob,%%1s37<#jS'"EWWmbT>1`\KMp9H),grEPp!SLX*g(EC2_%*:f+?G':`m6]5(ni/-M\Q,+l8O]2]k3MF/dWVNHZ\C^kIEPhtL7MiY3%DIq<uL%qleB4ABEPeK_l\k]*!1rGn>DYVY,+:JbX+UE]>&rP&2L;60hglK/6g=4bLGKc?>>]dmEd]".Pb8ZU)G&W#42giJ+T`?>5%T]Soc]HNNNjY>fgp]O&`ZrQob@?&-FnjoVcN=6@-k(pUlY/?q">/Y;L-'nuDHC39p)j4[$JjQm/LP.f=Ku_euG#R+-]L4#]Ag=a,%7J>X6-!G[I;r"hB7pr7LTf>!d!V2;`,FA2.]=>E1(5k@(,%^%o6AnAba[[#FH,rA<%B6]m^5/r[j:B@<_AbsNJY,jI%DGDU=$"1E%g]Rl(GY_eqTu`N2P"Mmc_f9<SU+"EYr.:sbao)rcR]K!j5d$8to^^dR.2^P*^E7@_hsF)"87m(IZ;:,V#-4biJ6/WKc&(;3R(u'3%UR/$cJ[u;-NuFc`N%(O*\L7Eu/#Y<<P3;LA_At/o#&Ir@%g!g-U*8Pt%C2"%l(sD^kM!/(Xmh.n51gLGWdX$]`Hj$_,+"8\O2O(=%XC#tT$0HGLkUVW@%j-@*ed\[PahJp!^eV#:)Tkn70<bu9(@$VYaOU]EqSU[aX6d]Ak=RV'hm]Zqq=uK%GcD%+ZQD((\*aE7[7n;Y%-2Z6a]V'VU_@:u7)@e_W8dTCVI*)dld*6]FD8"YH7i$h_P's3i$X?_N6NO_\KJjk:o.Tm%=EYX)dBhM*"4]/p1@:I9_-1gu$Ygd0%\%U(KR&cblMkJ@0FAB/(Gu<#j\D\;VN6eYH2_tTdW/cJ^M%q;TcW_u0m^1:eM)i\R/6:V^]H8HZ:]idmEF\\K2,Km?>q6B3<IH"m%6.5uBMqLqno8>Dnb81_RU6tN`;eM4bfOrF*#A$VSAuI5j]Egl9$?!uoSXa>Pi.kmOOQa$fiB1=)jbfPVR<"_Ri.J:`OmJtkr7`!Y%3ZNF<CQUlnZQ\W'\E)#jcA!UVB_K43&f:HNU6-*g?&[$_0O3=]a1Gm)f__YB&!4G4r"E!2qKYou:95l<AoHBm+H@RHdk`a@d_,<P%@J)OmPRQD\[`bb^m+S]+*$f%l!*1$c?(O&!L=85J#N\1V4]>6Z[%SR=Z?>sQ+ED*6@M%jf%_9ZM'+Z@s+[i1WT"igqXH^q]d\f=R%"Eb@plN3:RFE)o>%GT'M8bE^nX@+7g67;)AWC^&Z2co9;dFa2S*'[X@QGPim8M\7gg2351L1Wbc8Jp;LV,e9-OJ`"J*.2Wk6CPRR%CH=,==q.-/^44C#ika.)kpNOG;._=7U*(@Qh!f%Lls`3]`$XXU1a#U;lU!Yl'-P"C\%OipE-Fjg1JLr5Pn(I+%-@ILJ;6:TlOE0Y%jb#cVA6PC'HE^W8o:V=)IHY&,[^bWhYm+%kN-Jk5;e'Fm60d]t(BG2W.p#IFf1#e3<>/'.d0k7s5g1<r`@UXc_RX+.l+TeAHf(q(%ogn>%5@[glaX1r^.^m%5D1c%:nb,G'\<iRG+*GK=`U>F0BB$B:"WKu/WPu9Q`lJO)*"dkOg8`r.p`guZnjbs!OpS=`;*'795lLd_%]1\5NDCAhk_j\0p3;g'RU5m`RRgUD7o0#gaH*EW"drIg`O>6?)S]Z*04H>5,5N/Mhn"jr*orjc\NhU1O]=4d7BoD2t;"3>6(;A.Z%RZ#?.5pmhq&MdGtWKa3bp;\-'3?fL5:X_XF][<CcoT-tXrq9;_MAS^W$V=5W@l;J,YfN>.\RmHcHe=H@WBB%4P?u3o^,JGFW)MQH%R[<^_(mSGN*STiVO5A:)mLY(-Y$5/+HQ'+-"#/Pd'a@h:.XAq/&U!dN>5:]f10=d=e<^)n!b^[*'.HH-,%n'>DLMusg.7Qs.LW7c%&6@V#P<>Nb>pm;D.mhj+Z<9(S\4HYL[ZqV\)b@&ukCu_A?!/VJmr2ll[W5U(,bA!RjB)K$r7076N-A..dZ1lHk2s]cd]nj"7'5VV%!@]LVH%tJJQOUod(^noQ5:<`qF<q;eqFY*@`;1o..m>-[2u3$AE,G^e*hQ(84,s;cPVOp"k*VcFg#VA>S,e:aP[PbID&L.bi7d<k%fS2nqAdW8?ni\QG,,d8QTcTLU3B,$`&-Y'&rYFsY6p>oJKqNU?7m5o-nI9V`MrYHn0uD7FhRn2i]9)'6p!*l0Ls.PlaH\'hI9%/Z%iS27G9b,@+@('-7-qba8klnp`=VP!TSeuOP([H8T"$N`=Y=HlK-$s8[?eO*[-MDuo^Y+<'n0^)AN%i<8H7r)m)R$lZFI(X3\Ro)^%Kt6$DA`(-l0('JXns)Cl9S]P\g`^a.Q[/u@P0KBm2`6V5Qr7Gn5i49pI$0<o,GCsODag20L#_*"Kq<PA`;,7?Ao;kA%,fgaM\PHK%>6ITV@2fll/92N0O'QQ[2dGb`iM"kW=#R.5,pDA!+;<?4%&.;Ka`W[?#@S>2c%LNO%Q><;iFUfg+c"S@Q#1>[6f@7XQsSsn,eUX!%O^#UYnOP$\K#)iB*8a&o&I!%(Z<lj4%QtCH&$d&p%+fL:`N&G&(iaX-Z!D!Dl:UBBGb.Lg70-l)`U>I0TLi_Ng>\oMm%+a)4"btU%l!$'A[?E.(>4F3rU/Rf1W#';!RDlP3#gA\QMqX>A'Gd>C;oqu029UTZRob*do;mUBR=BSASk':lEg@Ft%>C@0V..#XAQ%,"fPlY)%YABY#2ImsY?k7Fda=2u4[KFr;g<sbQ80,#J)k$FPK>2`@0qDXFlh&2Wn@Fri$(PW"=:E83((lRpCcY3h&']&f-Rh)X-gm`dHSa"`%Q6/dKB&9j"_ngfA[kB$5%c#"LM4eM5MS\hE0*at?n]nP.$]@;H-=2jfGi1meGo0a#1rM,="4jt@g'cR*6YN5+ob9"#R7g%`?8pNW%boU9n7Y1IZcj%T3T?ih?q7p140$3Kdi*#:ulAW/BP`o1up9Tb#Xdmr+aJ=LBH;XhB6B]]<MBk_o`J?o,HOU_'Ln:_3\le"DeSPeO%W!<tgbB>!9a%k'q/4&N!X!k;">V[bhXotH`D-DB%FV_=r)KcJQne5Sioo;C'IKN)GV\Xn_TI=qbkIF>GO8'[B@<,j+k=HY19;OWr%l=2#JC90P2Li8*hYe%eFFh6t!]oicRq(@9:KFYo]Ecq(;RqJCL5i=D3/dq>4lVo)8;4ZkV#$aRpX9.e-*!t8RN5:BdgO4t*5E6Sd%9ouMp@M?r8-[ocUSW:BF#(*Z-(]Ges?\!4o"su"*;5]_)4P"&a*F%!r7iP77S)qrT$N+R=q<?3C*IJH\0iG5S,bjg-aO>Ej1Jl98%/tJ9iMIFG/!<BCF_!Mr%8:6]+lla=IOa7^KQk/o>UtLTIhR6@FNc]8#.Fl/=6CNs:^5Kd45UMWR&0-M(F4KBG5sgtA*t7uQr,)uP%A;*s]0odd3U1N8m.Y0R8d_2eC@J]QG*.i7^a)QB8#!X@Mrh@QUJ/X4h^?tH4h8W1K*jDO9pS_V^Q*`9aRNlcX;l>uAL*tM#&$Sr!%(2BaB<U6c/LAJkn"Cflq;%KB^Bj-\2`BSNhP?=lIlMM)CJ99JhIU\c>q+1bS[hMAUlL6)E`@g`O)2gu],k"$!pj#=[j<bS&(Tk^g%@fr:\8U:gL9^b]e]dR;N,#pYPj@,iV38.&%7S>*Uk5oP<8soq'n#Ls)TjI(BOp*uCA*ouB_XmRV"P<k=0D0YW2!r]M-W7sO0)ob9%Qc`\ZUiumOk`P"pjDIH)G>TdF9Afo)AED6>b6;Q5@2UI-\'ZabZ"dZm[1X;h<)4baTPIIE1+"HPYY?Al5sCK8V\MIs8Kj&7_WE-S%[n:/c=<tFlYaO2uqD!_;Wnh^a%2+.R!K;\<e;HdGdtHS1i'P)YCV=@M-=6oSHVm1QoSeT(?7sM7r;9Uc]jd6a!0C&#]5nFA[UT2q%rHs*r,G&T$p%H:i>S?[nYXYL/%>EkTK,9U'VnQPRoU&!@7R_P&bbDW$J(`E/f@C-+R.0E9`i,42+Wn3JD4aH[SXCUJ-u$:Sfo-V]%rTeFj`N)qgJ1K&I]$rNE$%#,[;)(3+5d=I5YUT&?d%YG#35h!kBYPQH9[0m%M,#"XShDL9Krrh18!&m-)[_urMGCDkbpk7B-C@b=%F"5Q151m,??6a]Nr[0g41Xu5LqI!ka/\C)dHO8j!5ac7/UI6K#9oW^LlN?/jQXu^K<h/7!/c[Uqhap?GX>nI5DNVR`T&_i&"t.Ft%#jU7Kb)`G&M^NZ@4h3]:ln^DMW]UBH0@hF4,Gt/8b.$=bGdC7n5,cOUkS^fi9==`h*Y`mZj3?+4ci+6B:Ql=?H#/9nX[$b=Wa>mP%gH1a`eWs&n=YaP+Pk`Dk^]+DDpnH`*?2$?qkA#OU;g(<o<'s`bX5l06!*'e+5qE`'433u[[=rpGhGPqa(FFLWM0fbRIL_9_ZQlc]%[^-l!QhY')Y1IsE'1>A"8aqt,aG@p?c@+b3IaL-n*@?`V>YqWp=>1$M;7QT?`&m,HHoZQ"K:3;,C#nPaE&B&qK?dYS]@!8GlFJ=0%iB-PAB$FVPDiceO^GYStDo3/:hbl\3o2_7Z"H^bD):.?,<46M*G^dT[p=3k*'a3L.UL!A!b^"$!Kg>fOXo*rbl:;c>=^)s<\UfR;%3ZgDQZS?7m5OmN8B-TTqI$+Bab!X(A]KrK?/IhOZl>RHnFc%=`F1'bk>\3I<b#Y&WQJt%S3fu0]0&c!J*JVbhnu5A50*MZB$=j-:%Th'h+F%g`9YD<fk;'5jGZ>e&j7PN4jn:UhH;Y$S`$*\SDJ`db8'1;W!Qji/G8Il9;>K*OED9I-X\^b^dq^PJk<[dqF#/[)j')KZp%"*DV8*%5K,@2*^Zl)3B9J<fX&Y>j-=],]M:!&J]/rhg%mR7EQrEWD't:3ac>MPf-jqn(5.(oic[>C\`-86l-]TK858Gbi![<?%Ef%m7bfI:fGao%CaFVP499>oY?G9!l`RRiu-"ol02<'1CRD5Ee]cZO,Lh14a1?l&Zn?hN$]oS`"1Xe<#K<fW;@0P[0bSZl5DZ7!,Ze]%`Y[+NS"7d(BkEY<h-+_K-oum`R,t0e_^E\qZV[A:-:a9gYV&_H5Jh;N^Su<O41mPEFj^uH*gC,#k5Wq!8U[Q84'<QAmk2a60UZTO%.Z&p_EUrnpbSb&8K!F>K?7a5mr?2n%<;SA%/kr<(1Ap1^="kAAn\X<mmgp[!SK#0Zk_^K@Gkk__@RU<LP#"1'??^^c@-XdI&#:A]%4,:)uFOdTZEVnm:TAU:*:Dm<6"l6s\kV),YfSMq)/trksAG7&MU_S*[G$%X&3s+5=ijeX68[dR36bd,B6<L[8M\a7Sar:rDjdV'<%c$ZjBq'#]G)OoV_9_UsU8jX++h0/g+jg-kjDHldcX-+)H5mkk!(%']A_d,^ln^uZt-Q!m\9Pqj'P<qY&0._QM-=1Yo3m52(R=Pko%ikn7Ebg6I5-7fUBg,QRYcqNkY>?XCE9Nf03`Y]jpQd]$UIM'#%j[/$7>f>NHUF$L@,I'e&jRiKqnG257+p@;`\/1"eH9&817iu7V%>d1UFINp;k:*#V_3mU7Q'[Z8ZO*L"s0*T$2H9R>RY*3^tl3mm?MG.?L;$BdI07OsRpZ&Y#(M4TTgjQ23LD-p0LWaEk'CgC2(5&R4%A>7Q*W:JO4hX4/+km109!(C(oE[1\T43Zb&C8*uC0l9,ZRc6Za<Gn?#YK$VqQHlBPU6ui![f?].DS@L,c$*)XN-kWr/Qj'Tkd5G>%rtkTiH1B[!^58e)qm>+`YQ_R7S:Oh-m3Ia8BQrhja/IEl?c4Q.f&UL'Df-.4$%WK-"e<nG>2>1$cm<k=+4ts@FKtHRe@&,V$+r*-%Jh#*[+iPt6W'">U-hh"=%ZUeSJq+;eY-=]UQo#cfK#j#kC3-(/>A8*;7SFA0nmXlDRgkoi0nTi[o\'1=PaSZjR3)6F.DUZH=j%.Q%>bgrEXV.r7!M;>jOb-r=__T&fY9GjX6&q;LmM:Ip?7AUKo"Jtu!^>CqhY1;qkV%QFcBGQ0q8iKAp5[*Y(oWO0pT`!&7:<BOSWj5F%R6Q8*M!3tXb#;pU?3tY'Lm%o&_Hsma1N[R@13JE_\IZr6Yu0>KN<<()Rq^5c`'pj</f(I`)P\'hVJZog=2;0W>/YeVD@ahUl:Q5L%[Hjd(DiE\/<8,TB@J*iECArtCY0\<Y`YOo/!pjIT2naG2adPLURjH`=3X%&u-/)&n4g=0fbs;LULg]tJN+([gCjegYhXIRMdgplM%k]W"[p%*bNNCBte?YVV+Rppp`'7Rn0EmRqABe8,^c0d_p?Re&gB2Z4eN;o.Hm5f2B1WCUcRr5f(NAu?uiK9EuJP;etB4;Au837E2%Mihd7=[>%$Ptc``AFOcHg_+9:d;DCp(3$&gWpJ*7$GkCcDAOmbU@PQh<-bMGDu7UH-b<:pP&$hR?,/_gXdEN?KfY54),RG3;Qc&>%kO\,./@F]QRpk#o8ip;i32.:]mt'Ph+EX%n-M`'oF'.IneQfZ]ka7i+H-sdRJ[kPZ(Or=009#aqYl`t2i(@]"Ef#BX#.Hkd[k1QK%[?nP$<J\X67A"bSb,(8N98#:?^/j1Nf=?%M7oTs2LC&EBPs+0J\fVU*fPGOWQ$f[+EgU5+39qk2Pjf?!Z9.*b)#<Na(Nf#-C\j9(%ng#SF"2_\E7pmBlh0mQSs"($\3-GB-;qpD7g]G*@!aK`Z*CLG-,;o>fb>GS:J?_%EehTn=^q1ORoJ#\2L^soU\u/h\*NI:g$FqW9%).%\WcQZ@lHm!c(@=9bY@E&:b$D=<C\fh0oq!Ju2Y*onC"mnlSNaYuUd`tU+[Hsd9%5W,9'oFXDOG$J.g+rnR6K'BU_G/(!bR"MN%'QXo?X_=(*8lMUSfdudi0[&:8/NRF\9KC)dB!u[90YY-9UF)XC-8@l;6pIoSMqos/B!mE+Xl%1D;8fQO(2(3*NSXVlfj?S4#i'5?%1h1f7.cIlFD=Mh)=\qX"k9$a^cWOm4X;a,MB"H]j2f`fZYWMCqG9gZV&aa&"*4)F470PRXl[k,M?:Tf7Ao77?hRK.S^OJ:ebV%M_%s+.)oHIKpYf]d*Qlt42';8bS;+-ab4JW(JIk0c/73?edhT6=AV=f8s>oFRBgKLBHI'-Q<@!&Hi6(;"A9Qr2_Z?;g,CG4RS$<jnji%o8#,r([fN1\B1,kKEpI2N`^niR%a>J%KMoNh7OX^.Kkla9N9o:Q/44[2K]Gj;e-)k7+%0c6L"bYR:.k/gbO'EV9J^!8=V:*'>)Si%b[/5QEB^Jt`j(aC].Yf5;@:3UNnbIaTD-s?CdqbbZTCXY/U!&]bea[K<'-#oh^YsQolq2(OVPL[%5Q*[Aahl!!O:B21,IU2-(#NE%&!S6D9ct%)74*2%Fj/QZmRcb?`meB"T%rKqZoN9N)cTpXi^?c`TS!fM:$O2Qpn+:nj+W>"J$.S4W7@#[jb2IM4rTT?2&FpB7.,H3%IM"6eh8<A>r(i:7;MtC^GY6U_4<UGRItkq9`&^S/`oHBb3^XAA'u'\Y=K3M]QeOBC9kAe(8D]H=q;`@nMg0#WKi!):6g!+^\DgjO%3:$jVA.P9!\<7?6/",f3!fP6A&tP8hZHD0V*YU".54ibUAu"-SLr"F3>UQhK(:@"SD'(,o+?k\[<XVK7*9N=H)bF&Ka[Pf6aJaT,%Mj=ma:NOGoq/&(0ao34E32/mQ.*aIq$IQr;a4Q*)3eI2o6]@QPDog9EK-4?;A/!C*lJ2S+j9^MrbaS"L3(u3O<X3m<3^'BOk-@gm%^:F>5>POu)mhI0Djb"bWk0bk[3'AY\^bn5qfY+rhCp$o,Um.RC9NSFUBXU%p:T[\<P[P;+fF?r52oj8[oRTF=-0:!.kbLsf.-rD`%.);)d!+$546.i<iL-f>YjhgG&M04%l.QOR9].s0O]E_^r]o6"4fLS1HhU":&PKFkGs46P7$\YX>\BWGW?%-S8NuuoseH?,,ncCoe%]6DHFn\c@IJ#-1n-YD&h66mc#R&IOo-S.@CFd8Y!-_c+-mOV?p;OZQ`9<!n?;[!>]K.[82F=.k'/H]1FR6+Hc`hfVm\SMI38HN#P%%^4k,d6:@07\MEJ`WuUInY`di&D,?BZYSo6EI@!C<+O@cC#]p`iGH6kNAGaYIIqaI)iWT@+6M-n"qgZ%Q_t[D.IJmt7#8>f0&?C=%"]DGEmXH7E)>;QT4a0J(6mcNd1,ps6MfPLNf&'Fc9O:Ds5Y7E5@a9Sq=T\N[KC1R@#G@[HbO0m$@Tqfs(HUX?7%r;gl)d=u3<EtE%eU\LIM=NNM?SG/bpBDH(Y7#q*WQ/U^@'H&9*loP!eZam^\R9]R&3R$*)1?!%3G&(u[Y=bE2;,:44Eueu'A"rbI/7nZ!Y8qRa6lkA%p/0f@MBTYBn<kHrfKI,_/`&`0muI_e`$lKgG)tAHVE_otGg2spB8hY\BRB<0JN^9dA+t0Kp*m<ooPF0p1j15V5ZrFfN85IO[#rr)%%'XfQ1T06[-g&LPi\MG2ji1bP579,\q9@3YUR"k/ZlcnU%gsYY]YHRE"@1n_*]]!3L7l=&XmSn!1oDrM]*4!*6IS(#KX\?6LpUZ9%?/T0\7^(,ON%)'D-)S?G#7cDs\*,1P0'K^@@lH6(6[,.3S1P4g6sfbH$WWsZpZ(a/b%S8Xo.WR+`bkf8/RjZ=T%@bkK^f5neC[Kn%dQt&O:+`_0P3BM-]YW'$DLuXE$\cER"'cYV&Z?Seis+,h"O@/b'8@.3n%-'^Td!kaM;6@hj,JGPJ/n*CXi#$>6P)'hBBYCH=hHGi%@RqJ-b;2#Kic!n`[RoPg^GDE5_8Q7ZgP5f\^Z<e4hJ%]b)nLH_'HL.aKB$mA1niHe-J8\7N@in=Y'<L[I^'.'NgItnndhJ[>#up+%WQB(BBB[k)%OeCXZ02KYUS>S&J+DfcJ=oR1n:g`2^UqRl\P$7+>=]DWM^C!lVoY\:=[Jfu1<E`[M:WU2]k8)#@o@(!mnI.!jR2BO%>e/K!_@_8#R-=h/XSo<jjD"=+(n0f3`uoC7lbNUeW!lFQ#a<maPE<LT&V_Z,=2)&Pqi^;N+'rrk"E'iI/?Y[1LAF#._.b/-KF;-&%"TCVBYjk38V39L?CfnIh@p#j?,k.6-'M4YE,aD2YWYL#1<(ZpN3'X5(E2r0(:lr9Nja'MI9QMHa"#o./H>aA@PCo=TL!#llJ?t[&%a]_K6g/^]P)9N)5/7a;(=uZX.Fr_,EAp<5ai1RYLBAM%*.e5W^b'</k!)4l<iX;!gg\g"(Q9mfGQYME1bGG%c])YJ-2B%:#[GkM(%^>kH-'65M.b3K!'>k7k',6j>Y\4Rd<>1&ou(??;=*O8;t,2(G/T%=Jt-30ma]3*-5QH(cC?&%MhC##&/j`B"q+W0.'5#eZFfRi<l%RoW'9GO)N_"$*&.D"#C&GHG]0^cd!d@.2mi(1tDrJ/q;:musB[B8J24e*G.Aq_1E?iC3_=[J?$,0E=p$cS615PXetiiKp*eZ@Z83%U!JjGk8B]&;]P\c]8(Ys]Jp9Z'5cXU+kM(-m::]/9\E9&QHK*Y:I*0G7K6$deV1?+*S+E^VL\_-*,``&_a0<+7]a0=(K0N=O:,//%J;`?-q$`"V%1uLK>qfW;'e#WX`F5aFeV3[3lt:UK%-mg6(KWYMNns7^9a-GFaSMZA(l&V&p/41nMkQe9IDch.%a.E*BJ=E5JQ\gF%HOL*h60"YL*b&n3k/RD53ipb?%6XA@!/L_f"u3=i(DrZl?Ftl/i5\ZMSB^*Y>50qfnsJ@CipiO_+T8<0k2O:L6Y\uTGs<.dp?=,t%[6.lM+#0F[g!/+O'pJg*)q\=c*s^Zf?_6a6d*uJ1Ng_>m3J&1#L1.Hg1^70qW74b]ol"[]G9A<,P2NX/#L=iNX<6SsFjhe^Bp`:G%[Y,I/E]g,gWD(ARQa;ZE&Ro>D`5T&COk4"n@psiG:J&HXRG0.cYE)=Z`W&&1!!:@m.i.A>5"IhP'/XhhfR!me'oo3nk7RBA,[1U8%TmI3B!<OWSFIkT;=\.>nj/e)`!c#GUOln"Nh#&)l!?XW!f`:UY)q1unJ=gC>J(>t=lEn"^4.?h7@s*Vk+"TmEei$"jIa\dcR8hOY%f["sFCXV7iIR`(F!]V0UCHJ`D5dW419C<'`(#G6+-"NCg`EO7rkd8Zh&!BhC7aTi27(/o7V9DOn8k]0/?ec=B(d#1Wp*E4^Uks5a%T8)Ye(t";$O/$hHN"EU"Vd.Ln[Cm'.@(n-GGlV!CPQFW1Z-kJ?bGlfHSK?0[0([Hu4TiI"5l185'gV3Mf$Hfs4CirA%](ZK&?Mp$%Mm0o)YfWG.*ngQhX4TRXrF,f*O=LL6f8p<FH<<qnT<sRDkMP<R8q\LV*MV-_(A=KI09D.*P"8.KO"Qq?PN3-tUDt68gYPQ$Q!P4g%;[8jgR=F-[+%*cHJ8W/!6@]+?O-QJnZF,AL-'&X!%ADj+gA(eS-d(Z^K9=fr#"PMNN21$-=jVXg2h_(3`MD(R&tmfAH.A1)Nk`@/%Q6-1Ka"puP.5R8C`m4T_12*kd&riG]#g-=9X$?=sTO6WgjhQVTo(RIoT5@g3LiNVM%OK]q;qs:go$-;00K%kCjeQU'PYRcT6G"/i%]E?Z:?7A_T[a&f,J4W]poZEAXE1h@Iei/'qGgZu\(::]k_4]?"2kO\%lE&CnRL/F5(d0'lR`f^<X?_q)3ac\)OhYIG\X6e7Fp8+%%$SGf=1jM1FU4G^5DBP)G#so8Jc(#;p9,GBq"tN0.4l[Gj';Ydol`AJq<rQ!`r3r%N#<cW?*DmFeWg)'"'k?a,6cPd"?=Q`"kp8oB%Y@X%:T2:dljg4:nE8D="^^ajf-#D9Tf=e:?):#XA"Ba.d)cj!s9K7aWG5M/IA=5S6B36cI]iM7nrRgXPSXU%<-9u`IEcd;1[0acT%bTYEQ*G-udWKNIDjiSWWRC-<T[5(Et5>b#?TH`[b/.St.nVSiW3-6hW+Q;7nCkG7/7,$eOP&c&fmM?`H`<6qB@R@bpO>,nQ<1UJ<%bHZSeLYj1e]qUY$L:bV-fZYl\@UD;NAn]T23d?9G-^\EB:H$?okbt0Eq\GRQ4DitlIcEGCM`)YO9SQ/5f)$p`MB&EPL9>e6<^t/h%?DS;U`dh<H$S`W0;*?(gOb$;HW2(c0'_MJt-aGIAQn,,E)<O7I]SQNtodo%f`Ljse=ZkHiMcqL=T[G%kcC,s'O&5L?-)CY._2o`?%hLW.W^cc2Vqde@*.H]<'P>Lt*_nkN:BjrN!B]Z"?;oh@,Z:NE2^69MTKs30F7C>lOVD1/_62V(i[?:"WIB-VXnqep79Zm^8lACCB%6EG-6:l2Xi$_F+dr3tlIaZ%oI1G(Jk:`ZfW+*ckR>7?n$(a$WaHth%</)q<jdMXm3`;4DN_ijR-K8mYuXr1+TEbWRG5N&oD$JPT!%gN%j,^is1E!q+2m"pOS])bT''=7PQbi*:7mn:r]j/_V$cSkoma!(crg5^b6oN3`$-5sQi&Jihc2Gu5BXVJ?VS7:re=N"q"4'gB/9%Ca<o-M3@n+enUF!_J@Aa/er-/bb>EGius*qf_Nm99[Y]r_2@6a3Z>"dV2V<u-6tSs&?d8[.0pQ/(tYtj3>;aLAoPi">O'N1/Z'L1%WP5>B,^;H(:9[$K5?f40%*d>3iq"LPPa4X!md^2lO-b7hFDE(E=uBPAFXikghgpAaYJV:_.WtW.j>k]ZSJTZpG3&C+a`&4D#jqKl%a+cu%5ST!0!)WP&N)BlWnh1kDobRhn\&&QlL!c+JOtkaTqma`=g$>qQgC#E&]HO8_>X#q#0:-lZY@dlc:]f?r^.T,d5j.L#:GPM?%2!0H>7!$-B9<7gHdR>LC$-$0ZXr1#j`M>K0"?TB!p%Q`6$\]X3;!Nn(?-d.59)OV;2rg6sQTH#.V;L>,(b),,Jg+q=$2f7DZF-Wi%PQ<!9_*mS5C*7L!kU:WVg?:%H;4Z;e*=Ofu9:fIG4T!BTkTF;4Q-h9p5I01`69b.k%5S%bH<D:F[g3-H<54Y+4>h/MN/Dk'U#;uD%r-T,TrLbhiiR$!"-X;Gg5>Y;"&Q,#EW)llZOj!#?ZP)uM3C*7Mb$#%1=.BVrF\CP%l(LJLT/X.9n;Le,Yj+_$KV<m#fB_0YWZ/G4%eF%4Gg2RoXLRdMq+m%S@VR\r#(_/p9]E:u*j>0oM"@elfGIB.E:s+1Xs3#nt/4.Z\_a07"4!+O#=HQfDPa=3imP6/tn4'8cAR+7'%CSr7Y$2hZ_TE9pkRk=0?k3EZT(uFK&f%oqR]D-WL32+pTb.7Zc4\f2D^7:#_]Ykh4-n@!=pdmsn3Ds-0V45JZ$$eCs>p*]97RcB=%353,*dL>Sjcd="ZABC0VCC@VRAY.Rb6<iu>%13J@!7.1XgkifnimaZi`2`D'glLd."%J5n6\]f]:hZ;b'JLOBn+'9mfjXm"kp)SL%AX%D,9c#5j(>cL4[?HUZ<F8\;pT=T2Wl+K"XF`@*qW/u=n9WmHRdR#YMR'VKe-fbFd2B$abH0mNATGoL>5]@s`_%6"6rmj&l,.H\%jXUpu*\+uGfhZ]9O_L(aWUj!FHbVGg=XlCE+j?-YCaBjq\LY5lHZf\tLZ1dlG<bS,r3;(OcX,7l+*b]]!;,^Y4>Imi&;?b0J`:)8%Hfr2edKCW\&7SLEk3Q0P/=Vn86`^>,a!++jRI?d/Os>^/1r\lmiq#JkO1PerI.Xnmd9!)Bi%ff&YGS!s)]/Hr:F[r:U7_T^PlQU*%1[2ZGbeJ];mD42d;@miV]@UI_+eT=->G!/ZJBT0pMG^?0>luAT]7cN6oALgT3,_p4Xc#@Sb"!4+1]K$e?6c1`JB6"4B)hC`DeQ(.%2m>f.C-4),7IU/UgQ3_>*r0id^'jcrK1<WM@5;6U-!AC2HV,S3e#>?pAktYZb,c/MU7$ID?f/D'kQ*DU.`g2'l?UQK`+(7sj<>5a%*5V&?TPngQmaC&TE$9<p:NUhL(S9<CG)o:D$_jAnX<2Knr;mID<O(+$@4"<Xd`5SXbZMdX/GmM@?D*XmGYAo@D%[_$[X-QQ@g2Q%%UOWLhWDMD^<)aQl,4\kApK3r#]aWKI:3QW]I]M8AL.oPt(,VQXL%KCNh$>BPc/L>9n@E0m;SGoC&Nj#l7[qQ;-tbZ=\EKt[@1THI%5]-tBc9fI:c6uiT%Z9S7\QA@ECe4m@;pc!6a>o2k@`oi@,o0LNN)u?4qOIkR$0E3+1(VlkWlo\iJ3"JT0")LflBFWprB)]7m-i.i%CRnZ7n7S>e^jK-QhYFlg)(LGN.;KFdpR<JTEcQPK\r)\4aU/ugNSG+<nPU!W48/[Yl#a[;2WVB#iQg-o`<GpaJa6b1$Eq"^Xinb*%D!,nr(Dd?ZFK2:ifk&(]-u+!I5_A%h,;LVQbFeQUq!;<bd5ZbGRR`-(;7df&aT)!)S:1_UYWZ^p6]&$R(!QR1D`Sn64W^/cqVt.>%"G%VM)P"`*=+])PO6mUma+uEn\ucSIO6;'<_V+l!^j%&Vr'JIh^k1dB43l0Icru^ked^?P'^Xif8^S^KT$Z.gYD-,"IDJ4pCj=fo%F/WJEkIQ%gLuQ#cVDK1MdNJ$!*mCDMJmQ>n_?*ZZ3I^T_%IYG9-c:@GI,Fjs>EiT.%M,8c[$M)*_r2mA(]m6`kC3bb*F?jZZj4W*%0r.8:1.=]Cf$H@$6Dd\GVs2dK#.tZp!m@<"g0V=lYq*`8Gm4JXM;ZJ#&]84**E/'m?[#[jIV9RKqk"^sdmYSZKYXshUJSM9qATqa%hV&>M88!O9dMqGpYn5II\^SN<+Y&FC3D8654dq"!iagHIc&M,`EWU,6R=EN,/NVoll43tT--2faG`\1-lNn(55j2)]m+Sp==MjYZ%]U4PYjA-&O-+_#fi-.A0$l)(J_8E.f!D`\ME*9toUA6NK2N<K-$4EU&Y!=->*[^u\L`Lu+s1t`DhH^b',fL3'*eR1S63AO-T^IBg%%,Q?2f</7p)g99(_*^S&]X7K,hXCS$]^[;;)/an::in;oL`Mb!`7)2.7\b"2M,)#:*P)TUFi*jA,]:]/cY#hIQ'0(e*[+rI[R/'L%U:[Ed4h?O$;UM%/C7s@;6M<!p`=%".VfY+IV!>c"^6G0s0:7+A:it$j\[HaX<D@SX!EucoL9>O-bNm&/;s90)VH4PE3\hH<'r/'I%V%jUT7Zlo;<Ilpl4XVW=5;V'>1bVr`\)t/;lknAV)h+=T+$o71l@;9h;D+69G=p`46WmHR0F!Ie3-&2se!)^O2aRaSU4^K>l[nDL%96;qjjdq[*;YsqkZ0lc?(Wn<h+h'64#)[K/hG+gK89DP9mr+DXL^o`g31CO$X+<DgD@6Z1kU8DX$&O\iR<<fnBSk"ET.uPnoW_SL%E3`K-q-ThO;Xn!t8-CDr&<ZWf#`;H8NmiGDiKNJ4U2p\0O>[k?:81)g]QPH.eimT'H.4I.+Yl$k#&D.`eo._f_a<#J*N,1dN8\//%dlQDVU'#K(*Q5T)#=42!AH`o5n@$8P._1e/kW0am,Wb1TSrJrX_$gRa:/='e_00]Z8Ha`S$"o'sW\<HNhq/FdNV#=X=[pXHh1Mf<%^d(KBABAR<A7dkJ6/V)Z&9%2a@Edb(o?aV>fYYS7q@=%S#]6PfkXqRJrr18EVfY^"r.F5.<<IqQ!hr%MVX%6B<eq6];m>I:9G`@=%7!CMrFUlg\);UTuI$q:>[Zh*U#eFR?QQn6,/qNIfjoAkJ!q=Pk'7>Zsp<YrT(tl=$9+ep&FFOm!S<m0Qa$V4CEX0/tCLf/Ql5@VQ%^5I2kcE0UMTa8_*FN-H8>BBio*&euOhU_",C1[2(nKSh28hm?CA6WTR@+.^6j3/ZT6dcPee9C=5&F$bgD++-Hm"'&oM-1GH_(MPU%+M)[no7()p`,ZE[L_3Z*#*[%jLsC7NDnsLugb+fbM5;;MXuCM1TH:pVb_9mDd3[U5C!5D2+Za7Hgpt(dHDmMdQ^6iZ[0!'q8F;YV%-IJ4ECPM%>W_D2dEq7*q[7#i[E.DjUeNPEIG9eRiB+9Z7&"%%_?]*?3pp]7a61t0Md1O?P5tSjg8Tntk3[ZEhK*mgl<lB6U8nFXu%MB5](jGGd$Z(^48JoQH8X2Ti)8MZ&'TKZ4!G9"#1h21^W"G`VRj?tin#^bp@gHTD`:;[!X4$EM?R$8CF;hQgHW;jG[C>fg0'4@T/%#h8?.7`pda:ANs.3S##dTj%IQ^\V"&6;F2n@)k0?]9B,>B2;VQ[CW[E8+VYQ4Dg6fdO+]KHeF]%q(&A"OD@1tk`@9dGS0Ma*]8"K%'O]>\q\X8aT='&d&hfB<E!->!e-_smfDCq2hufkPqU^32p\!G0gMuAr[!ked\*h^9*'DBZ_:0aYj[F"4nX\b"ZCCYD+U`8^0W*#U%YaOJ_#3'"&Ao\Dfc\!r9R1Z%!k.fu-^FWS!<*F["-PN<d%d6<9b67J<BO_EmmTHdP)-;=nZUEqBAV%dWH+<H_3i'9X<TWg0cL9s&%.Q8"?(2/[%II+jA&`Q*MgHQ:B((-"Q=1;Xf@OHf?nrCAt-c`a_J7!jNdk7sQ;:;(GeBBZDe1m^'-`qjsN@pTNgV:oWK)L7Se=ZUT%?]MtR(oN.d5R#V!8bjP?:;[[aBl^^F1Fe^QKGg,:i:mXX/AsKT2-od[lBk_ga'Ff6'IJH_ast\^mWa&U'J9u_Nk*o^rNQ8Fi*\q4%(_L"$BjI[[5#=D?EF9W@<`Ql&<+n<S.pA;l14AVjQs+kh8SMFJ-F4u*q[l])28N5*fS%O@.Jo3YpZ'%-Gg!-O:fF"2/Tem&,UBEm%@9rEu^P3VMk$6!RM4u?,].1M(/#NKQ9gsLBR=_ke4>)Y-GZFPLba%4YX3EaSPmS:;'nqp=#7\R=>[Y+gaN:#Iec\isF_Y'_!7I\1%GV"a%Z\".1S'_?/LZ@)4nYFr,#bQ<a-hBXJ8d03FI?4IaEZSIs)B4p;UfB/9/p$O"W9JfDoh/MT*T+!e*gZRD21ZKqk/<^kHc[[;%A?llMmDJQ,%gWkt<,>;i9hc/K1_>iRJk/pD,hc@2HPuU5N7-mKob-$%6Nr`^j!)f$)oM<$,gZL86IIQS]>d*/MN_ll`pr>JW7'BZ%<HMb1/B&Gb"o#pOjbl3,qY&TS(<VZWP1j%EmY+/h&)5[9T\:12R.9NU"uVhNimhiSi2?]EYspG,6KS@"I>)Yo@hFOZ@Ro!QT&)Ko%*$5"^bAerDe"f-+X:Afjq#kRHhjPH!MJjgUOPeg/Y?k'Z]&3j0nfJ*l?f3oP_QpU2]u9G7l0C?gGW"0B3'UNIS@8g=/C>fmf.<_l%Mgo_gZ2gkJkAZGo91T?#/eXhQi7""V]b*"AA2s+drGIqp%g$'RlII#2*_IJT]^?QFjA2.+\A'_!!:\>XFHSP86O.<sh4_W.p>dXj%Db5:qKqC<0VVj5cp0^gWHkfnlrr(]h7`!VdL4PYZ,%:`-g#_dU<D'.Ar^bgTMMF#T<ignBGSEmaQ6CNZE.T"q%W1+9i@"(_WRlb!%+%j>qK)7sV<`:5-.NE$9Kj[drklZ5Igk[66XDi_b;JpUbb/=GN,Qmj"Na&[;"?MeP64L);j*^A\Tb/0%GC"o5k.@l,DE<i]bI0+:%/qP,?j,101T`id?SAEk`<IV3,!sO=(6Un-"i/T",3nd-;Q^\dL_dt^-jAE;.D-@ee`<XfKR&2SL7tY:fd-s%TEf@4r*b[_s7_QIa%VgWr3&OF$fE#&.-@F\J4E#)(+F;W<n%LuS9]tkl0UP(u=#9;N?Vh;%hMJ@qnb;d!7%Q?qq:],0bi)@!]=Y$4TR:D%l5.1]/GZ0Dd%fN\q^!P^cbc2YVV'L`B[RQTfM_5*rW+e0G1Xq#:Y'#O1u5sqK6'T+LK2kc;*;Z='&Li,Nr>Zei-d=c'qaN+#Ek0"Cm?d=s2n<"2m%Ut)$iRp+Md#6D@G%mS@D5i3V9M`+*[(cgeR@;Lu0M/t49iQ="e7'7-_+GB/NLVT'kKD?'904V'BF/Uc1G>YjSF5"MtjUr-$7A!08%9+P;VC_05&SjetE3##ltR0'N.dRYB)-/r-f0r8\qA*ko6'TuA_09^"p&N)j:]fbk$9eU[Nc7ZAZ-\&?FaSED8,W)1[XZI6nUg0'0%\Zt2f+>^TmiBG8^"^<Z_\[s4Anl7!A`$@_^_gl%8RJ^)F*ULs[R7*^`c>I5G2&V7UkkC:#'sf01Y(?f^j9'[a>ieX>b9QJa3tnZL%a3m&<*aH>a$DbV[>O\UEa]QVkI-#.5bY]"h!%?"<,nM?k.A%ZD:E;4=9*Bj"hi&QtPHJhM!ig`\3E8-j^a[0nNLX$T&?B?grTqqq%(+N'j$QnN^kT-m4o07Zdl!YuRC\N3-l(`BlHif3B!8gVfE_7Jb-I)%rFp][COa@,Lh^DPID`_EU8mW.nJ&-f_60[!;>[;+s-C@+4%^X]&?>(i_A0Z?=>BC\[fn').ZcGg-hbX@dK7n,O<:"$t9e3D4*l-j>_e]FUSC/oa7pVtS+Ad>V#F*7;ph"=1U:78/J#9>eO*6:]T%)l@D,j?pRl2Yr,`p(E/:Q/i!q+RM.ANm\<0aZdXnD8W_kLIRgJ>0%-D93E>1FALO/#@!3#bGCTf`&\GQQ3T+j6dS=9Gf&I;5a$,W%QVQ_,(*enp@eI@n]145L/XLFQ>.H#3I":OfbEnZ>.QZRe`_u'EI!)<`#A=-O38cmM33&h*?,N^nqLt@oaZ?cM1GDr$a3]B!MA\b^%Ca9T@Z9$d-MRPSPojUsD-24<HK;L=d`,*e>El^[dI.KAq=T4,'_`l44ZK&Z>nsn:)34Z-_(7^7ZJo!1mJ\P&!d$oYU?u!6MQsm5:%"Gn@2(Z<oeJ9ggofY@@!R$l$:\Ye^YZ9&\VQ\#Gj$4+PB3&-SHTZ"(uZ\2G^UX<&W0+,\#X\*n3DpeCm$id#f;E\K)Ig//"-m]3_%!\54>;oms2n#<Ra1Dd[%<j&o(#lOn^Vpu7@(6XS?'*J_XS;e3ab6"Y&4,lmW@^,Y!3pA#@?'iJc.UC`\Q@Wh:iPtbZ+Ep8F[;7`L%o?hXYf[J!ej!X$VF;;[#ennB_L*_?Q01+\,JHbKSJ]0\/1`U6%-('eUkcUUPYb;A(ipkSLlsk5hprAKrk:TJ5Ki%,96^'P%B#WoG%k<B+$20_3gNN0Me\u"MfiVPYV^g*'*?@)`CQq@#!W4W#D(CHOO03Vs'BQgo.-np?4UJE;!gI\cVSbFudL![\(L=S)K2(]Gd"o)m@%/P60$BaTJaQ;OeM3lqEf'o"^EC/6@6':)rKC)L4r3#se?r^SA&j&2k/8u?=#_!<rM(D$^,oMKQ_=Fg1,DP[h^+/W^GL^3N50[C%d%[8DML@<AorHnt/9,j^"='(,4'@LGV"G(ZP>P_p0r"VfUIRd=`qG^O!3!NGs*8"s85ES>Js"kA]Kdt(XA8n-^]!f3TS9\Lf.CpjJt%QWBUma)/:)D^3O]UQ?P`&uEU!W(+B2Mouh9R2bgI.^p#KU$/'O])KFk$23M?69(6!)Rc@3MhpgI`ZSYI#R7-igN#l?GHj)imP80_%TBO;+XiiTq4qOmb]Stpd:15k<*Q=2mr,3A1YZp9TOCgSr[k5C3;8d;_%>s*`JgVDrm#j=W"1=q\L'ogT?d,D-8dc-jf(p[;,U2$;%9pp4Ei(nX6$:=*i6k"L"'p"dDbGOdA2:2:OKF+']\0GCcH\HI'L/Ad\WBRMlle'tpLq9ftZ,=QSaD2re"I8UPPGLVkMXOg1;C6Fg%8P)(e,q)hkVV7X5:(S^NLuaBXJ^+X-ipb0mn7R^,7/8-(1=Y*O@lFX#'b$?(f=&nq5e]"E+IfD8`W_VV-+Tq$?bLtM?k=/P)#DsH%%kO@F/ND&/\[*o)QVSmCB8g'q7Hq.?8bAtcVa1e4Pc%M^*Foj(s4S:GY[%[l[QIR!F&VUr71*\XRZb(:JYG;i+aSVsb'914(5.>m%T_CulPUeeu70ZV@IroS@@\P4`PH,!\0]Xrll#:Sr3jJV)b^%WdC/NCC^afA!g(+Q4E7Y.,0nD1]Z;opMq^'"ZSR5eRr!9.:+dp`i%/Y*U4-]P2C^#l2=N1t'4RN4phe0.k`=TJiEBQ/IC:`X\2f9_N]=otX.MjJN1!Y=E+*EX/4C\rL]`B^,6Ki<:CS06-;VBV8rDfbDY%"Q`JXF8bl=8mqQD(dadg8NX:Nf>-T&b^^AK"Y$0?_#5Fdgd4umTWQ=]3V:"r@pDV)L;?O[I5+SdL\3?mq)!-<Kls5\KCFp^NT;f=%?uZ&])WN\#cU?4\b.8(rRMJB-<P1FW@",6u-&,54qCp!k67uRCbUgrq&CPf(5Q@DVCp%(KRLf+X_0f#K6SVo`lc'8piP:8,W16q2%2R=h)EnPX\%=1:iESIE9\b">QfV/Y\AM[Y@hC*D>GPp8b[\3o+!?hc$;*8G_([gVS4ncSV?iV*Z(UW=0XG)KUe.Y"Cc@X(dll%3P%YZ2Z)a5=EbjLqW`m)*Q=O9dn"2pgKkHrEQ<ZmSS$$reD\6jnReoiI:/O"O9KBnLrH!;1BWgTRHkfoT_0)4Us;Wl;8b_0Y^f(f9`S%)"*[s_iIYEUoL+q1hV`[&oJsNhMZ5teL2/Jr(#]C!MW#ko.oW)L7,hAWJ_%K\)]5WcZ/5$[u1B=h!=RG)Dr<^bV`>q@ErIOR;4l4%XBB)UmeN8k+YB_MbgV_U=VV3*Npo\sbK/c_S=SVq79\9-r2MO1!e_r`C%QFG0!2[pf8)C!;)H]P]@D89E3($2CT`f3\Zi-X\2K!C%QLlX55*Y5`@tV^Zo)O6MJGkXV?72VoRB:&T!5N\N6a_u3CUoQ("2,3)'$B)=pB>3cZ:FW[=Qjc+*frW5Md-*?locs+q'\-34(V:6%DK<Sf+>f="_'Kn@ie$fAab:sa`c]Hj['`*[iJ!G"HNUVdl;7G=lQnLlo=c,X;0VdrA3gb\o1^qWZp,gT+I5Wqb6Tl]1Xc^UQ3Ic5%R`YP#d+F/5O^EWCh^H5Y:MM,D.GAa'U;]Ud7u[QqoncX7JVEnrn.@@r>8#'LR+)]AL%a0<4iFOX=e/>,H<K)GFQHB,.<ZhoI$ug\%eZR&ZMAmuNU/C3@85NG2WA1CM73-Zme#QDQr^Ec0b+C1@3pHrqFR\tr6(AjqO..[JP"&O%JF2)fl7d;Iq[^cA'Qr9W2@]UP<hruW%K8Q'HfjcL6"$F#T>:=RW1\"/C-22:bZdTT*c^)Se[)-H%]*UqFUPb*o(@`VC_^PbZSSWfnp(@IpnN*/W\;Xlp2EL_kL%aJ@lkr34%9U`+&0`"t52)XmK)s$'*\^OkgL9#P#[Id,8YRKiY]qSjp7B,p38p!_@XnpekG1-!k!tYNQB]g7.?"E>-mgQ%?+khG#\MH$mV;li-%10/?)Y5$\>K=leK]`Ko]#M#i3\L3\Ok5:j(1uQoP^2:6I2q1@:Dk^W+E4>ooc=^SSmgoZLS05tb+^O,UqmL1`;L(1H\UQ[IR7K/Y%VX,?c*KmlYXEdi?Q6NR%2V-'#c6dtWI459$H)%jB>4I2".)*j6BtO'"RTu&j6D*U9/YE.BE&t[/#0;`a8kWWM/TLK)Aqk6XPEbi/%n;bNh);T+2A@*SF%WpW.>]5$AKY;`AE6K]cg;jEtjTP&m>R?Tlar<_P+`Ss9U#]04h+R;"'m-3,\;WJ;$pqP'+/)"7L"`2%%VHs_%)5utaU6&4I1Lh6tj<m1PEY?dtV`LAI7`Se2/(3*8$sH/QW*OeaO3/?,k6*0-GE;PJ(74&5r8-\A401X-mbspgVTYsl4DpDT\dda>%<7>CYONU5eFTIbmPaU:.bB3<OB2H-iET3Po"t4#!:2A'`iJ52i+^rs@FWXNnFiU'NfG6u5;1,r5]@37d7)2fEap4<a6=eZc(c-Mj%SgOL!n2+^p,DeF<ZY2`KR@Cf3s7aAD33,ZG*Qhper%Hqs*<#XGQjW']h8&(kp"7.l(UJPPC0q3^91D49ogE,#R'1;:BWGTQ>V41_%%`\FS[HjWgi3Y^YFqk,jo/7[f=Gib%$0uABahnmQe`7WH,?;LMOHdS,3i@Rj26&]6bS.A>6B;Vi1!7aK$rp%kb!9Jo2c7f:=P>A0%Ka3E-q"01(=b8;<fqT2[LIWqt+pn!^>lSmm-[)**pI)MSf`Ggr;KsdnDk2C0)N"t:jWSK:BHE"C,=[H6*!AnR7lh\?5UiNeAB2gc%dk&?r#rTK$Kc\83gV51b3%:RYBsO\/D5k\AcO0"CPYo(.?N.r`[]R"?4!pX:FEQQH@R=6D$0KS%aKrc<m<cb7MK;!U*RSYOf$/G&%AGCWh41V$:f%<oA%ToL1D9Bp/@h^/m6X,%]oN'1F,rSsS+kZe\IN^Yo?P#E/,to3D!<Em?hL_QH&V-Ir@6VJ8'gV4,9,ML_d2bt9%U2,Gn65@k4\A+._q#_2T)9--Ynt\]8aje\N<=)r9@t_dtpoZdG+3Zco`H]!JIRJfh(69EJ"gQq:VeO=OjHc2-/a+7ZTCj>6"Z[.p%-p@#A[\+t5nGbH`K>,n_IQU?Y:n6Ep<720E(,WDg@$2Ec>EAlQkoA1JN#jBSdKHJgMZM8V<r:XZ01lU=`hboeokQin*m^SO'i>%?%+:k4`mDZ9<[Rlg1a[l^[79CBt$X,7"2.pKESe`m`;3,)"(.@5E_nm$^[ig8jDZTSLOH0Xo&8I,e(4F:-HWQTUnpo_bRbMin5.(Ra%9f[S]pHSM#$VD%VFep\2"t_6bcSp=IZs"%2\*C/cmA5:>EBNa$#bFgmM"Q_DE=3+'Q.^bX7XtK[@;><m6Vn8!X/84aFdICW2RuYp%TLVhLK*`>n*VB:jp+<3nI+pu6ap"KI:u.ZGQc''XK##0t$Ng!hm[K5sOVMf[AA#p5d,'O/MIae%,Lu>D%!Y>ra?2UJ)&IBcL&a<.%6!7?sZW[,3dRenR;S3\M.Q&bPoXe&3gW.&l8!Li"M*Gnb$CAI^8e1$>1`202#)UtBP<hJSPme6&Gci*;mVb`E+%)[pB?8bGlhOq'%Bn@q.95_D+Fte,hA9>+L:U'[\TTW0RcNLhXor08L<p:6P21VHWhb,*<Pu'#4f8/%#1.ti8E<Qn0d&5:'&AAsSEjWqRO9l&#jHUL&%rp_Oj<1`t+fO#MPJf[[h?ukLl;F`ulS3kSu=o`]>ZOG2A*PTG<.T`=G.tm[Ui"6;U<VY?dlT,4a/cl>qe629Q_"IA#;?gCP`A38K%@DEo&JK.%5q421/()X:hb7a\@G&H*'G@pVINsst0.Rsbs=L.7i:>t?GEnAB]h7,5r\?llVQJ?H%&?G3^*6NEQhRGfi_X-DE5QZ-U%#,V4cZdSQLG_+\@E-&0o-],1f-__D$#%IqtB<sV1D%uPh2c>ak[`^O.paM,*FH0^N-<USnB6&m+_IW%df5c:c$L-LKhe*:aNuf:E%%7a5=?\[_RKAR,`"&7dXpIQ8tKLU/_iR`RO#Jsk%HpF_SqYMZPgKVYQZsk_K,>iZK?p/3c%d`co+Rr<;V-%Rq(ml/WCb2od;]IN;%VX^lAh2QC(6$YDRX#f!ZTC7lR+3un$NF^4+W4^ks%ThUccR!Y&GI%Pnh2N>47^l,&`22lKkC/!hE>l7^49aaCg'TqJ1#C+7!";F#%`Pu8"'=q\Wq`q!$ELNruDU'_WBrD`?+XsG`)HYj1Z4KBsNUoSa2\Y(?U9^^,Db<2`8-?N&QVW&Vj\k$3>QS/JFUehP[g9sjVZA.q%7=6(0$;8C"'GJo/T\kB\0a`^I+;5GjU-'P7B/TrMpr+ImZKJYPj!fW0/h[b^0XQA@!:_5@fD]X*>$j?N9&Ln0;;rgL8J?\&BM)]8%ZC'Lu+M!h4T2MC=7#.?<9?9lf_tfQSP*dLY\2*um3DUZ'M2uFG.)cE8&_$4&=$=4a[&R9V&<,?j(E]J8_4Op?9UQNc'T,3+i)tqH%`(/#*gDJT#8o>mZ0'u7!M*<=-jf9b?&>+"%`Fr,.'cHNB\uAnd_[`SDar>LiR6_oDK_lX'U1f.:p^!SiHk@Ie^c)[K%8$^]O).h5%m;pJS\0=8I&Kccsp-1f!9@tLRO?@<m#ug3E4::$;KK6*^D?T'!d]KoE`(TRuG37<%8IAN+@t.KS-F$c]<BXK`"r9t"s&:dY]cM8!%jII:s"\[04e^NFoe$P1mFYnkE`WNa9fpBqXbsqm=7':iRjZoV6,,rYa*]Y8();hmfq/ru5^hb7OGS2TV`:BP*V%"d3TqseC8b_*r%gXXPHobb3@q(R6j@[R&)<7U$r,]9\e0&)O5i;m6W>bkIc'$F:9=%f;B!%[HT[TDNhZ]k9c"L3L)PN>c)T<<!;fNRt7I@Ob!)22'd%j(C-Al<.5GWEg"8HMg:CWWiSO,-kB8*S)e7WnmGa^@)qu!$:Lkf#?p*BQIBRVe6(XR;"q/b7fkO=mO=Q?9"3k1TbmE-U#>J541F\%]Q)8*h@B$QMi'X/?/]u_OI&BWE\QPjH,<f)L:f.+R`H_75.Xk@LHGfL$iT\O3QM<=Q,LleMs(c*h4kSmIcp@djO%/TZ^a9%>.Jnh%nf5?Ci;r52/Wg\*VYkX]k`\(NNu5$a#4e"pP`ORi/IE$ZR-p\n#`:.n\Ih[jLdUVP)dNp[AAJelhj$A_<S&POSHjseJe%bqOkZE5%N[U85[Q>m09Hn^d8*#Dj_/J?BQBYEpMWK9f)sT:1_joPRjmV.a.)%e=`H2\8aE(bNh-ik\.o.PN+m3@o]2O0=pge5<h^poV?F%1)%d'1"&'LX/>8($a\1dA/S;FY:j]2Kn7;d2o,;^.oG5fG6&Dg-L@@:<0-)en-r&4]G0aD#O;,9GCI>+Oln@KQNj3RJ"`o2\PT\[s)c%/[VDd<=(X#G6b:BCU(F^F/M7/*bI>o#:Z"%*cQ>W`+3:rgmq`TcL)/l:(e68(<tV)q*=\$Q?RPY`SSK8G'CuN:M9jih&W[rde^XK%G'@K1+]U,%ND3Xa3)F,@SK57Zqji6dU:UL5ir"3Ym-`64BYli7O)N0&$6h+K(Lp*$]efGDki]U223(eHf9tJ-@sdU<>$OGXfqVV_%4.F_Z;MDEX!0i+1n+>*Xil$am,^D2MhDoM)koIA:pXq/j#dLb^b(_M;g%s"V*Ze^`GAObk1"i-BkT+!@<30Y;3u7:X?KfmJ21q)4%@Jigf,jX<il('dY&ui[4hJnm]Jdt$4G?V?SFG&2@_>H?fGBf>_V^"TVHAD%;`tp]'eAC\G6LUG)=!=5\9]6`ATQc4(:jYInST6HJ%p'tgOdWFJ:!!uUC:EUWia)u_6%-Bp1RU^\WCUECpjeajD`T#BSlZ<Lr\>i&Xos,0QC<qtg6^;I8ocA2rgIVDOdM1%;Pckf[dS30V%CV>F].'8R^<dJ9>)YsDh&H,,kiK3X(J3iK$_R[dNBNE4^gM>kD2'I&'S2CBH)m>KGC38%J+7=!`[KIR$=%fTqd7&]X`s7Y_nuBL,%0h?;8--R:\`%sT,coicX3>UM'-"VDq,itZS-WHXSlJOMi)e_`KSe??Zlkf'E'G*^^BW<>!29W,Wa3l&tWCOG#5>mXp(7qeFjO6Z.%P`m2f;=YhcJ+0.$P5?KB2U9Ft!L0NjbjGVJ_CZpdc%0r.B]P<6-<k?EGXA/nPF%":0JYJb&KfWj(X8W#!2I?c07e*Q(e@-m\FZMp%)4I1U>q-%p%*=X90nc%BkUjBqf1Ssm&.IUoW^<YQR%HC6TV@9(OZK6I2af'bdHE$No/*53kEMq`/akCsQV%P?N0ne@E5d7M_L[=)%Vi[O%1:R88X6(8[*84gC';LFcmMq]=:=r`O::aACi&DtP3i:_'BYGl,Ppsb*d':b8as-K\b]nr(j#QMmA8k>#*Ql\nm'S5?f/l%=%RFb%LY?A;\)5*;Y3P^9b>S8AFWmkV8[VM$\23p`5B[j9K-#UtiTFji_l1n`u@m@g;B/&PW1@IG(C(g'N,f2X:S?n0pgiR$WLQ0"f%UeLV-E%YYgZlSlGR#3^$>TY+'D]TB:U)0tt[0Skf7?7\L$-B4a=IsG;?aA7c=-Gm4\olDA!2kma'#>#U0?D]WP,lEKogUTdp:irm%0eUm-+\F7H4)%r44Hc\7C_GDC@7\<1%o?BpoFP<Z/)il$FG&1;7/f/"/6;o'M-ebAg*Tg!Q+bs-8m$5%JUt@&(qLJT!LR)CmL1"'%:m"od!?ud^;&^"1N&@O=g#ihtacZaYW';:n)n-bclpBEkD'mW\FN_fTgU%LI3es2nqushKZXE@ThKZO.`2eg-]H8^AY:d>,1X7b5%>cfb?+O"f2[VW+C.d-Q#*`S\?_MPe@=I?1:@brd"cLbBWcE.Ac4H;b3QnpRD(I\qU?r&GhP)$B6#kr$n9q-K1O9>3%s7'\3!/&0"%U_=iU*KG2S/1F*^CiIp[=sLlI\]:'&M1S)465D%__2jXM8r-`^#]hL,EgSjG_)NqLKcPR&a$h_e1&(U+qF#6.GWVEDO!+XTH1RJ(%MK'&ZB'&502J.uQ%Q+0-3Qq+iQ%$i*jDuE#rfj>XUK>TH'>;ssQdSiQmp)@;5Z2V8(!(1tX<8VKa4mGCd]m[2T5or*&D?+eC;kJY%a!@:ec^U&D<+?b-inL<8jA;sl_d""s;)I=C00@Kt`?Ru0?8peYdNC!J$.(W7H`T2I5o8,93).5Ybr*F,.Ij5G30k&djaTUb]g*@g%]p%irl[m$(ru_\@$"/[_;7)/u2F,T!VOmU-c48V\POO3"#P%!\W(uS[PP_MR\nH::)e7O7+'PZXE3)6\A*ofAc]pJAjK4R@3Qr,j%_]EUkWj.3ain/^069"XpQWei)^0EU:fA]h#S.9L.K^Hu[EXK0CXj"Tg\8>6MmCR?lE0Llb:,qi.%'O^a7@o_EBCS1Xng%_tpF5:D%#-@7ie!Xe"QSVI9+ufbjI3C=dB%5$c,h*tk].nl[_j_H1<q+bmNdVic,0lF5$^G0;)-bE&5Ih-#(MHgoORk>Q<PcTf*+fA_!t-r)%c9:kSE.==9#=!b^+r/L(X@Ke%kqTi2nc&pePeag5_?PH!oU#<?TIfGjZ1Rs;J7p6O3iq3p'-)15.:-a!"Eb)C[g;+"C37OH)&SYo%4-XI7^>*?u08pe^"8U681GgG857ktKqYGRS>hg(H#)f_`>OFuW,Q]!U4O'=>89&^0>],<=+YG=$?)uHmZPq[uHc&68qKI*_,P@m;%Wa-%40.4J,+mn=<F&L?Yb`*'#55Ma@SQ::d8O[[)ncXsd=^lO:f"K<De3YcjCqS+tklf<'O5`u$68TH$DWf*qa3DtBmX6*_SM".5%]Q0g*[PK(PY.!:ghDB(FbVOim@9;F2!Rg5(S\ACYWYK6p$?Q9C\QmUJ[B_6nc^(k+_u(&'3mYN*oBO2V+fT0Q:pHB<]QIBi"<\hQ%aCHV>T]V=)Ai*JK!D!D435uEGqo?t.Itl8H;\[3k04dYnI!0P-.R:\:n*@tbkcnGSB]8N7361:EfP#n'8oXTQ6U?Qcg_pSNgi,"F%c/EG_[7J5@<itBO%-VTBS"mgg3^q=?-J\#tN$RfhL'/p`Ypch-P8Yq^W&F@12Ss7B4'RZJ<iigLKBXFjLBCnT%,:+j]7Q<!R>^<u%l#GZRQDbX!2=afmKjRbDCc=-5/Oo,+<MAT7_CVlGW;-P_[0A6P3"82?/_#YBr-LuhJ2#PBqY_Zq<\WE@cKtrjH<X5+"H@k:X9-(c%#Om#c5'X)m14]I5^+BUFg"4,'i^JBD6D?dkY"%]$CtsouqSDQtablYF2N2"d*A"0VLUJ!!4:&5t?o`J+:D'YNB@<h&YEb&plX^Ks%dD-'eH>QSE%+Yh$!JQRInPafgU1!i&nH^6VlQDhjEiU&-Ju4jOpNG.]V-Al)%ZQ?7`iUioIo0S;X3g)fI=!H=lHgNK`W87_Y0OpE%(-JP<CS/t#=Xd)j]Ff#1h6E"SY[CPW%#NY9Lro8QY9]m[@5as;YIoUi253sPg&bHl#%"GPft5UQ4n0R^,s/R5hPBe!k&Ukc6)@ol%r$)/`itc+%-O'O:-U6cb=r2o*[1X%=ZD6tfA#u:Kc4t5a(I'<!W0"NSRKt(Fp/"s"ObeZa5JAr"%JMF3&?88`@2[210h,SM`nb*t%,E=BHkW2ig2GDraoZFkMr#[g`H^T563;=`-'=m[#,6U,@_bp5;hF9ci)CcLDE8X_G_R%D4I6?,\;EbE\8ouH'UqWu]PP^M9XTQ+3%$@T#X$J8N^*`,X1kmu)saS?u99.@/&;Um%hPUWGlrgXU2-;4q6"\T"U"[SsLUJld()m^\ciDNrIh*"G7$W3,pgZ;iI:VI$$kYaO%%+VRmRX<8`h265m-.A@4r]<(5(W)@IJ=StuhW[bs6MQ+c\*sZgdB[CMOODK_(/EM+6a@7el8G^bG<L43#VOGt)KJK\HqO35UiX$;a%cp623.Ya6gK^%7oGA.dLC8")M\5O$fi.MOd0q"0KjI-S'coQGfF0R.#fWcaJdR(Ws._+\En0]KWjK-ar_JBA`.2H$!_@J8&U+VH<%L4oD\-]o"0PDU,'g4`B/((7(<KSC_,U'M'<<n']TG"GeUrfHV::iJcb&KHn,ehE@<9b!5=657\$QnU(5I1K1++K5]Rn]`Km-42Z4%Uah$0'm%6lFt9X2$nN#2bQO56aGiOGF]nn]#n@:l1kjFL5(g<O$',g)*'*d>r&>0#YT8i<)@MHe%oJUI]#%At`hAa+TGSM^\9@J,%pOOP"V$!cC8g:(:&q3.1/O$+(k[K6M81$[B?o@^MGS*RT%WIr2TN\0*f;,WKA:)qLLE(pbY!Qk1FpSS3b%0uK6UF/0?n:HK"EJ4t%Jm$#e@;qX2IRmm]Og*82Q"eZ3Fl'?$cj`uQ:A:HNMdi*_O(E'a^/RE`&&a&kKt@i"+@;sbQ.2[C2H`joLsS@"Vf9^gDP8cV-6cCB%2d6)TbC38]QeHpqi#T!Ia>cL9*+VWo@0+nT=:Dn[8,%[uBrlpa'Kg(rg]d[IC^MiP^`F)@2pFVqW_bogpPT98epQ(%.!:8rJm%"]%\u1uen9J>66Fe!-U`u'f<ag_7M6RHb@!+Agq12fcRCH_o"lK"9:$>;jnA)Xc5GLj%D10XjERF^3R2Ds^f1R)?/]6]aM?U'mG>"`r%0[ZrA`=sL,6>:/d5V*J?.#CmUSk`.Jj?j8SQ;*'SHY`26V(?pLVS$@-_+0W/3G3q@jVPs6-?=M9acmk`/YJZUEcn&uAIcs$eq0UF%[-[G'LiU=C,@iK$:iMib1(GB>cC6p0,<lLZm@fr4$g9__F_-q8AupfO0P,ig3DauYB#U8tKo+7+.l%X75&!h9O,KJ%5brBDit*fq%.68]!d@GrsT]dFl,=ijc)-*Y$A4@3*aou]@r(=2djcg-FB\1K'aodd#aRo7>&-K+0E53d9/>.g;.P4SP*'t!c]C<ToRDU:26ll*_%EDa1W8Tg/C>kHgFI/-:8(^`4XUFf?''$B_*M)L0&TuEPGIAf+]7tgb\\D)e.BHb;;A.=YM8h`ZMiuh)POQUh$i\2Dk`Z+H\&b!M,%[DrT53#F2JU9f+Y1b`ie_/L%]`crKUNn;!)?3cTA8:d@&M^EUf")WVoU)rMBa6=>/+%tC[_!8aA1F(O&E-\+:gT-N26SWaMdQ!*?%GrDs(OfIGkEiYrX*K]U:<DkP+"mJZNdLDJZKt&=pTj#EH$4g5)it9Gs)Dj>_:/7/\MLFS1^LjNgj)[u->LuEI,**<jXAj=UN:X8P%Ho9oi,h4(W'ZD)PAiO:0P/g\s@oT#>\l^U<QL+>[:V4Ot7:L"kJ)biH@3(Whea.UE6Sq.%/ZOPlP6pDUD)bZaMO<t@@TV&s)g7Y,%62FJV99A%Er>;:1q_9-d$j/RorMY@FN&SMP%?=4(:?%)qeOnrs?]$j+Zqu.<7URp<VkU+@Q(!k!+E;[*@Y]"M5Ob%XaAF%UBY<&5%UOt+V]$uFI,rt7GDmCP(\/66Js##X3T\q7cSfags$rk0-&u\/S(&ZS(q81Y4a`erF!DuW+>ToVu,+S4YFAQ@bJQe7ge8Sp-@>&nR%#\bJ5L^d6<.W!CBD"eD*`'n?K[*$:p;iIa'O!MP!+Vacn$rYI`Vc$g5TbH.48C\8GrA>2[H-nSiVC7eBA\<b<DS&UW,\,<#Z6L])%[Nm34F@cbGMZ-t2"d->>K^#UV4X.^nLg)ZpNZ3P*_@6!M:bRLFm>JJO&RU`JY%XIA#nB;W+r7Zt67`\'qZufJ+@Po:VXqVIb[Ji+%9#>B?oaDX/r6,c:5[-T>K8B^5R)D17MnWAV!XZ`K_m?>*)r=J[W+#PiXe8Su_1Bu%,*>Aed(jFc<[+uV2si#I:WGd7Z0ar9Hq8iD%3t[GT#n&4G&<-;t:7,I3(+Ra%'Z1?U6?KVjM*OF[K9ARG:fe:2l@e)s%ps/AUWOPIF]]UQH=N[_k7+38coMIXJ(cjL="MbW$5pu(%%o4%)i4o^W.1>pDYT=OE&4Dr..f(=)5uik@&iD5=`42G\J`plKZt^Xoc;P9S"*IJg)<+4M1!r,DM(h;K#3JjkMC?Q?77#"=OC>sa%1D6#YRIO*h;,T,G1]01lO-F;-d@gmuTc0^<_[D0OQm%/BkR*X^j;Nm_.>8DC,c2PPC4np]j<F7V_Ik,RR+YV=HhIcpOTYmrrk?2k%?UcSQ74^7pVMB%fSeW4WQ^q%a)S@:p+Y+N?=$jE6-tk#&3<+1V9^d<deO--9R?H_om3h9/1`E+Z+biO&^kp0h7'DDX6%fD1c[/^f%?uc*QdYWflr49]S@S98Q7>=DI%!>oTU'l\J`=T!]&i4W@M6^*7":"MFR';39p3rgt=A\!M_Q\\3&.1J!.(^]bo+.Vu,oXaJ>indB%T-mJ(R#DMJ`@tg<%jMQ-<$c6ua.B7ILu0TkaV=0)"bm<[RQg-V@XLKJ$Q'SQBp_`<?(d;;JB1'2"9U%XWR?Ei>)>]g=toLY;4sbm%RA0ceboBrAeJ1uNRKNk.&HC2Se;FBD9+)TcROZfe;m`H&e&4G'VHQ!&FLAq^QuJ2E,/l6,a[k4'[B"l&#3+Ar;D>TCrNFWbW&+\K%llnDC]d/EUBtIaXV#kd3KRKDG=qro#0?cg-*Wo+<K6[n&>$-]R"`[]jnj?+YR[O?aN<s&UN*3Bk.OCL2-*6,Vo";t1l57YpW49n_%8\!+L"eWL[=NO7&3q8E!f:_1kPWkTHbV:VBOO9I=ntcUC#nG`&Il8>iWG"<EUSq"NQB/!?X]KDl=XR*Xp*h2+re&5HTm_ZM17R$B%<E(!=A<EN=Q+O*Dnu7f8'`6C-CJ]W0>qJ!g=l@]Gj5fkBZ&DQ=-,IFl'a&T#KPK<R;jL\R+_*+mkG%8SmWfS5FU:skbR[Vf>Snf[%7HGUWaspb'&fe:D_1Ih.-LhamVdV$,!]*YU0[%[kG$M.l'G3aFjK3%i`']C79GiL0_[1=aG=!^P6mS@Q3+PB)S5Tu^i*`A0PK7t%%6WoT[4S@a]DL@+ppp=#pWoc14)M@\ZRTYIM%D3J-s!:f%$.1N8r":!ZC2+.hLQD]%bijmPoY>6;=V)4#PSd]e,b&4a:9=jS$eXq_%KsJ6q6J1XP.aTdUqumlt&f?k_@Mr_X?U[_/Eu2@\<0atNWau)"eoZKR4tqG-X@[eCPdX'&_oLLXrhIf4-k@O/%MW8U<!_nFi+[ch%<[8oh=^ZkJ'<ViDO^=_tiCKR/&cj/'KMJ:NqC#ugO,t)=>t?E!36RQE+NTd<l9!,%fWiTkA+5W/5`DdhL7.O_PZ=$K4LgaQ.,7'Z%pq_"$V.S\+BESN><+m2U^JdG*;#2^a%@n9a//:P`T"Wil.k#X7E:BPkK?T-*bd;m@;,dhcoR&6N0\0jq>OY+a-q'?`!6$F(!/T:N%9T+J.<eMI$hQZ.I28k`pTO*icb8W>s-u*kg@lVoA5dL/u3YU6E"@&K:\!j-\Ni@-plYr1q>-qb)AS>V`PcBmq+]0l._;,cY]-7LF%X\?Y*D*AV9Q/"-G*_SU(3-GBJQFEW6<cr22F'4l%KVPNi80$ZYT\5f2gES)X9[WO.5drXhjbmT8rO:d@E(fflrhX!-"`N!DKZFiX%_*NabEsTgf&]-.mGfp]UW).?Cc]Ai@oqmI&gf4O&P+[M2@4o@rB&h72+D%lqU9I61NJFqG,=/+4)j6k]dTI>9_R,QY:NP&94/8-?%7B'!cdiMK\+>m+5U_7i)3>&(F-([9;T?MZLN$K.6Fff=5]?C^m8D=;+>,o%gNJEmTW&Kk62QSL.D8CmEMF+D7<^U)CK*W9G>OlJ9%8;OTm#nC3)hZ>!sllMF+PfbMO4;ZT2?Hnr<6p#S9WE<EM*(h+oA3o=?<)HA\D!;jSeG+.]a,XOtT,BPGC`rU=OE>bL6h509bc1ud%`^>?^Y;HSIjHuBD[QW<;Ce^f]QJNfmXN=m%73FZ9bC0r0,(eKn(rGt_#@XT6.6j3%E]d;^+?T9u+M0D)6H+Bhp*&'2NR)"q1UGtk%rHoqoa"%9c__AOlKX"L-CscnQ.?J,oF!Ndl<Q[d)?%Q42!W6rLhaf1dI81X`mBpn\,^.B?\Tt/"<(%IR\;@)YVF"@jKFV>#TEiSb%`l\Rp'&=0VU"65/.s2bDV3qUredtL,%K3TP:olt6Ki%8BO_XA8.rcu7d.J]Y:b.Z#CJ]j-BWZCLil'f-XH&*[.nrQ$f8p2<Y%2R_%c6_1Ea>@[F?G-skn1'pSC.]$Wd,l#J<Hae>7#1Nq/XXXQnsI!,(r^+7Kr]mH#Bc/_=AL)6%aDm*N0t4bT'#Z!rUQnE(F"a^LX2_"%0fhmNPi.(kl?EaA7H6\HC)BUjUuc]S5,9+3+Bgm,^I_ZrU-o3B&fblSi2F[n&iGkf6_cI.BXM01TqT80Fm()lBJ5C7'&Rr=PD$:M%EW`L(,YlQ-Un.\urF8_oSA&)q6,I%>@[O+k+^&M;-g4E*/,>I/N#s%q\A;$;ap_k.Mp`prOCU_B74UY64BaHi3<'HLEX7NWQ_JFe%W:SJ'-c&*fg^eES7ZcBk.J,d()Z2"]76YK&%WW1%gc'SGV]o&jcA"@h`eGsp#)N3.KN!NZLoYL_Mm*^(,@7bmW>ac<^nS'BL`p:D%dB<k?.@3>Wbp/=tf0M..c@T4?FpTAGL@g?2]3OV);k'5V2=Lk7:H2Z86M",D7"+?VBkVN`/D4SV="u$q,e-1aPgC>2"j5!r'tUs#%M[W;?rq.WiE([hOX,T(QJ\kLQ*8b^s]hj")`&&gJBYlVGH.7XK60@Ku6PQCM)/?j^LD<c#>(.G`1c\Bpi<cWa8E*H8`^=4':cV3h%[Z`GQZA^L#$jA:n.TdC3E#hqH&UI$&Ac57=T<f%`s'94"0VPo=rIP=)(5:C=A$?MaKI`CB1,>PWKbP/s,ANTTJ]AmbWt5C;0E;+R%zJ04k#5X5H)!!*9tTHF7JJ,fa"O8oS<THF7C5X5Gb5QM!a!!3[U!!3K??i^C(?i^BC8:Ud\J,flq5QCkI5QW]k!!@iV8>$"l%BRg-sJ,oeSG0pY7gFa=GXm;?D'Dk+\Lp''*S3dNE8]>R2QGg]k0-dp868>3akn@Y6VZu%r[$PIC2M&[a@5^CR6&4,m'588ANM-QO%&(_lV'oG_)TXK]KM6f^K#%'Ci3^cM&(n8B]1-DSV"4a$K?B6#'*i^0Z-9-hN>3><XMDW/##$!XABmdirRAu_n`<kR'p=MZ<"kGO,%h5#2G[HZpY9uH4)W:J$MSD"H@U8k=glrQ(X=q>Hk=uXO\HGl$*g*%,7h]p7eNuE`'iV)$Q4:t)sW*=`#2DgA3>/ZKcKVF7qVWp@l%#7AW9;?_?cAK[E7TeN=?ju&t!Qjst0.n21$OH`<E&rH$Uorg('U"lPS;Xq[tj;!7n,)=/OClG;Zl(+VD_/geX/E4'5YnTLfnlTWD%&$AqbS>=>H8j*B>7U2CKY+#)>/Of!a)(Y"#5h0RP3+T%O>+S=4I&K[$!\+e%XImoUBn?GuTL'i#TPdN@FMZ<m[35p2AE&5uU5E8E%p;2G7fI1!d3/B[_EInD]RGa`O*2+@5cilhD@e7<2LXGdR3=\DD9$daImsq6.0S#n?2FApS?8M:(kV0=OA",o#L`m-_gPlGtamP2I%H&+Fen8&]J9)E4$W;6&/j(K3:TUDu*AhM6IbY6?\D-HEkZJaCn/NOD:c*VFm/i9Q<@S3sKOZHTt?U<h/e=UE9=W[8r@Qnld?Q+*Z%3=BCSJMYPZ^3*-5>R&LbL/a8&huH35H"(&6BJ,jl(aoY.&2m(>WDMR+,/V7gE0qE=8r2#5,fKWUlsMF.jE&hR32"GgG,l*-a';P`%RJ9%"6Hmu[WY2F"H]5":1OPoN&Nrl3Fj<"]0MRtH#S(5(5WK5^01;T_9Xlle12"TA%ML1WL'_(Y1F'Z$#G"]/CN%5S'U"1/NWFjE%LcT:%@@nC>RZU<`:_F4-mig!#,J*@m3)#_E#ofr]ZNasWSU3=Bk&>B]=ErV"6A-A&pnf`#_1CK_nJ)t&im&)?$+o3>e,`_k,TQN8%Lf31YVAa_R@s47sMdLG%b#10_7?3G%J_%Z64FEh8_pk@bq*+J/oTW^W%l:D*_K_>[=B=uVLd;T-:bdpI:7TlMlbffanCLS1L0PfI%q5+WAPBjNc'B?"Id!$C(r?4#FaEKUa$0r98;naHRbnVL]jp!R42$j5C&N^c^GRI8Xm0krGD;Wm_T_O`br152oW5EPi=C.lJ*Y/L%%`2)fo.:9,Ec\-UmTun,`m5NU*Q?j\d%"H1(!NgBg?u2d=7*LVHJtga1W3:D4E`UCMH7,T,]EAJ87'AmSWg]i!Td.3`0L&CaBGFVq%0_d(jQ,'&)Zm#snU8it*Y7]`][^SYLN.)2TV'&&+m<@h7:)1c?QVK%@>b2MW=L:JDbc4Un,H]B,*6]V.H;]Q6X],1//n*;=3#dJ^%&O`*4KL-Ei#`0H+6X>YH'+6hi:d_4'E?%N7#c%g&EcXO3OV5'R@RX_TXVs_V304E>&p<.?V@&TdT8TfC)g;$VDi]hk$d236COn$^%i\ekWP1P=(*)m@uI1+h(94A@sCRAhC6qX]r$J-SUN56]!A6IP0`f;WAdVZ+#0Oj5s#qsZHO\jNAV?Iog/qKn)"%G,aN1?XfaOENM%+sRa-T"6X8(?%MiR6mgD4Z]Rq-k'>=.?)*!.N4[CW)O8MQMP"86:Na;!"%*c!"],q@5&rH%#-%V&[<AkJ--XF*"@K"0JF1f8gI-Q%&:a`\!!!"2!!Al$QNC$fTrA"?FQ;U3A/DaR21"pm-dgD]<s]SKrt"q&l7t*a$Hs.tV<sVEOf[S_\CXAI4F7bgB";Unh;2:c;kF?Y%e-sNtjfH6(8oEVW\,ffWo_LF(=Ptla1R9Hm>EgYD8J3^%$\eJACo^Il1/34!%[20mC2?`nPN_>%,fc_eY56)VcpC(e?#uo.JNinq%=>K6'V%JIeQaARaXGdH$%046ZY94rk@uXqRp(L]5*)2t*%i3ZMn9X3Pio<.8fe#3jdEKj`)8P#Y.)-l#HQ)Hc4%PZ-(Q(O_Qg'p$%dTbdn0>HjF=W5(Rd3dfl([MHIS":_S+jB#9?%&90"*U<=RZCJu\.TK,0'.u/1JYD2C-;G9T;P,fpo+<VNmq*C1+S8=S==1<EY&Yi%(`KJ*+c\oHP5uGG"`R=^TH!.maE.;pl=N/3a'P.3d"@ibrLht:"[6C!Cs4@"Yb/EO[NLbR&BdD9PqE,[ZRm3Yj<&f`<n8uMoKM<5%l1(&._XVqOdA>E$fr=q:=o+?ZLH[:g>$=0GIM%DZ-cei-`"bVj^!AHa-Fc%M>o2QaR6/iKr2Z*fSKQ(C.TKL&HCs;qhF@'ZMZGj2%Q\"HNm,l_sO.qT@V7-CHN<iAAW%_2Yl,m8@;D2dP((biq+Y^2pQ7c$7]jFh?l^eY9UbStejrb,JTJBi/0!mQ4Ji!gNPWtkLU_r]Z%<DEh+F$gKd3(n,$e,h;!ac1M"]Lg`7T-2Ce"iI*M6k0qKUd5m"ZeuV$!eI[@:&mC;%FV>2@`7lkQ3M&,7^9;=H[6u96(6JH1Q1X+%<?OhbpuDQ57CM3G>NV"Mg2G;iQ",NoA(`u[p`ReK^oE#."DMgeB4fsdmj'2mO<uHoL`fjPf!$8kiG(@N9,b]6RT0mFW5BjFC85Ld%IuMI]3"Co@r.?i9;:YEUF)IU[Y4,P4H8Z#]#\f1V:QZr8Tc4U"[[2utCh>0Y)o3IcWC=i0-tuu)KLE3bd`<20''Rt[`*a$ARc:$I%>&eKXdpYf=/JXV.``H7cbpI-o"ncg@BeJ)bQ&ucR;+Mqj0SDR5a,lC;8]``f+s!7?)W?Ri*t@VUg=FrUm66u:EHJjb;<XbU#*/pS%<=mGGUH];LMjB[F:*6m6*_,V=#[lCd"Z9Y08UV>:Z"1.8s"]H34dojQX?@#>8Nqr'O2dUYWa'a`E]c8/i1MkJE(6GlBLWXhW:,kt%C#APrF:=67VZ9I5N>FR/\-d2eHQ!M`!(G3On:pE;9<V6GAQg`V&J#pe7Y7GP=@6afn!/F=BeU`qWL%BcDpm!?GX/`C(E&%mN*%)G%(L=20D^F'm%,b6s5aVklBh41gr#=>cUjt.$KW#Y%%%F=B!V`)&ob2Bdb_-[M4ENgW=n>+$s4E-4VuCQd%T4P1:o=6R,k$Aa32LkZ%(X#+Gh[_M?V]Jd)B#mFiU=o-g^0'AE8#GF'1mK$0T4]b-3'2i31s2F*g]jt\C'7.c!bj3GKRMqhofoq6EmsKu$etJT8M'G<J$slo%9%Mn86G+Oq0U:]D4_9E?N3@R@L[tfOZJ[38_^^Da1PdKD6-Ub(AHi+ESm'fs*N#=G*moL@'`WT</2/PiYLT*d(Xp^qFSK>0CMuO!%(W.KiSGAmC->OM#clBIAV*53eeC]0GKO\mk!+B:?rK&U\ajUR4Knm\f'nTah<TO-aEYj"O4%-f:X\G98'9cFg3g1*]fMjO>CVch?%(SD$25=*Q3`HFe\7Dpo3&>P7s1%JQ2Bj1XN^Me.(V.9mt@70?k0GW&p?!'raR2\PfmNl<jhmUZ1Zp0N)[7ELO"pN=5>,nQFpT4LN%,HGdeCc^,qZthdWSg43W8RVq^\&(m_@'mog0eS[`krg(TdM@2fg23';Gb,^+hn3^g7YA(7:'L]X5;oo))C$Y%XEGY0+A=Ke[?$+P%VQZSf]dU:rRLi2/074(*d641`,04mQ>8CZ_j2Z7%c"3uo)]GOeY(puLTEeVo9p8tS$Xj?t[Z93LIbYoA1Sj(1&m@)"2NoLZrKcTa%bOi>%D#hIG"5>M?#"C./4L^aT%n.[c/P^hg'*;ic?'EXg89e1cNQk6h6+R!3Ko1nJ,:1pj<(uP8:u*m]DJqQD1(tTdomY<U*Ih#O%P_OQd*@JdK]<*=tm)_&sm($g9RRBY!-nfLOFGbbd]\R<%Ou*B7nFej!p@K>np8^Y^iJ50uHPL@F&N\;dj6cf(7;gA^4\.[#lN'Q'%j]lPOmIk?$h9$cpL'0G]\)[5P!J/Nt]_sc[@23LtTnr[1mA6hZS/gCPMX$;G&!1<fT8Fn4+)L1RX6!.tDf=G(7#\@.Rn$c06?HdF%@`U"\PZ*cC$6.ik-?cZM8NlHcqa400J+Zl^ab^,4*Po!4UajQ>lKg'sRN:N+BtSl\IO.g^aEbDJg_WfeJM!6!Fhe?8]KM[;oJlRm%g!psmN<JO'f;ZE2#tdVP^IdVU2\qTrY@1NcnW3X_HqT3Mfr_BmG@ZC^R]<i4697B"A$930S%W*u-^EMOGb(\Nlsum')UdAA4r`):%mAp--MAe9$`k?f0qdg.AnEK5pra0ESrA>pehsN!$$b0D3-4?=$Nr?De8"5s,[M9VM`fl&_m_6fC@$[iQ339:X>lJ$RNkA'M+nU])%&7p'`]Ai$Ei!A)FLjHkr+BE3SnmOqr<]oR2gDqf=r_Fa\nQl=;Gq)U*/'e&(/\&'5PCWhtV-G;XOBDD=e`&5OaRV+FQ'<E@eftq/%b%eDq0q:SuDe7>aDsh09*7@D0&sNfJ,-Pe6!h*!WGudgtVdO19^n#%HI&@1Lm:"H#<#?QR_eQG3MW8aD:H5h2Jm=J28VPkL#M"lB%B[\Nf1[1qSX0J\<J'>j2J<F3G4Bb&dXoM#C[]O9Xb.6.I+L,eAWhj.>.n2,g1n6Kb)oR'Pr6<)<+;@Z-oiZ:P',]&TatYpH`8PsD%2bBD^kfggCb2],2Y8FY"9FH+JB9h]`a"tE%Pc]II9YrR3?$7I5T.hU!KdftpbONQeGVhp-,3<l+If6NO\1nU:S+ENt@ASL7Dgqe!%lHd$*bRW`Vm0sYA*=AEJC1:pVQTRH(\VeuT*A<V[.>K5R3kejuJ8Sg,*dm=!_H%2=%t(l*5oDaj<&=+=pR1sD('_"5Rf)DGYB[dX%TKtXKOR5FseO*!gB`u`O<=m+/B=Qft*(re=+%Y`sR`?5F.^],bidO#HN%KMK_nDq-hrF?Qa++Q]Gl"#VUJEYG@F4P7D6B3M2=O(n%U2WZ'V]$!o=%Z"YHA)NDS5'7`<BIpEb\G+qII(.Ij)78mAL']*%`(55m8h^sJR1CO(1pgD>Oj'Og[REse*p;F`o<77g[S)K<U\<$%2B+WINQ9'R_pgcEa`O6:%UPahpg)/kXp+`D4O1nK]nG-kir_pu\KD6$_@DU`+RV;4%pmcj%d:[m:/RIQK\^3)%'!u2WUeaR8Xdah%j,gK22a5SW&%bn:0WEdr1dEI]VeCLF3SKJuoa]^\4Z@[l*9ZV8lNO[qhg*$&n(KFUS]6GLLL9MdnUrfo@?gTGT:#QJ.ib1m-(-L9%2e;%B>W9jsarLGV*!$ZqBde!as48"FeWWJjj.>:PbYP7D0/U1>GE/$7o/9D&HKQE:p";<l@r23!ghuRN)$Icl-2X2WQ@EX%%Z8d+%:hA3Io#T$:So`U-75VHZXl+Ie?5KhpL0)NR^;l"%:UY7JUM"U?CO'ep(5>=lN2JC8DQRJC2+fQ$''JOrgeULrOg>lpgYDX,#pqQ,%9[8fY7pnJRL=o-Xo'j$#X_!hT;*<.jemd,m10'H]n\LPjIgZ,3?PC'lhsf!>cL&Vk%BgEBXAMkITQ]9u1Kq]"X)Vr%IKVFbGE9hZ%8Fk-$I\&eCYuZ;lTf>.DUjDe>Chl!=ZH%&$MLL=/Y[#J'/Y+aPL_,Kr.#[[>drI<W<9qb1XB1d>N2,&l"_oi*a[6d9<TE3Xb,!qr%Z:NaAT)f/7Yf'M;1fo&b+DT2n^ISh"'J>GePDpT0-jn1,%+%VW]lR!G;>EX@lPKs3/D'Sl3S2o^>Z1S6F^)CB*ETB?/s+lhJcP#s%O9BfB7m["@mLuPZ69E4EAP553&0gKW;iPrlm)ljCP!&`rMZ-op[Ji(r6g"0d/kls-O8A$4c7G>F7&p"Nj^%E/.h/L#;V:W7.3W2;%A[DY>m`2X4='u%qq>/eoXkHlS/b[(bcVcR,CC=ES10C/\lh%H8+nI9@>?fKb\[GDeV(5:s5SiZQ!u*"54m:T5dT:bP;7<Mri0!L%%<rH'M=,*I*M?UX^-3s:'rEDDL3dU(fQ/.YALC+4CB]0^ZO9@I2f=;fT,TP-XQ#1Pi^RGiL2Hu0@R!r#sBb_dBTif9n*HXfV<:Ujm%<G49-g+$2+/UQ*Y,EWDm]<`l+ir'6abS$s0k63c.@R/6d[p_R<V<AjbKogGMV[l7%NT8!]MO5/B,=WQo7r"=6BE]tb`-GRoYS7GC%]oec?fXm-fnm5R`786jT(>fuWE*NtE_FP[D+*N4'-93<d+:jK<Q\[oD=Il2f_8%?[10F(o4L2"]K[OLM('d>[S0$A4*/Gn`370Z3%q89UfqOn8=j+X8`1IEWj=8hi=K5e98=h[lhMSE5bT3E1oN#NmENYD<88k?Cb'J;[ErYi:"4Vkq5%9M(Bhd;W<Qnt<X-iU(]:4a>7%g:!gZX`*!?P!0t'n+I]W.DMAO[*Bo]k2EtW;A5L!)[?fu9]A=9Z>Q]5eZ"=D[\o43h)oYQO[;7"K&$\i?'7H"<AeqUHuGWDoa,Z#%&Na)[Y8*Gf#Uu_)ec-?g-)C?!8aL%BBe'lrm+=30piOAj>egkDE4kJVD?T]$#lD_i1)!RPB%UP.'qWY8('9u)G>m*b2V$cb8GOdJ%GqF/b'G;!:$@UUP:#3W7oF5;#G/K>rASM$".^PW&0ta6WKcZLp_:L0H-A,HQ&);"+q<>!8DW^7&h[Iu=\4-?pJq2ZD"$En"@*$'I%6J906Fo-b$(n2p5#0UNl)p7Gqg2=/e0tVgI&]4.9`@'f=_bYiA_EF)p9IDUN^g,WdcnJf;0p1;cdCe.2`&S=qgT?NiJsI6TqF$U3%s/5AtUDR&RL%mf!-LG1g3i=Zhl\I`tYFJG=E@P4592&.r8:K'_Dd8tcUN#i"Ud\2O60+>/:_M,=e=dfSQJp?P/P6ro9hSBm6Qt.Q%f2)2G*K,ba76u@-?MPX$K2I:qXfMQBhj0r!2n#RAdlgmiQ/_$OAShY!BPQ7&D(>oZ:#RYdkBs,QC@Era&(BR=pJsj*Hcrg8;I\:r%Df4-a6TSZtfk/<GF6:c@NP<)"0BO\>U%`>EU5-&sCC60K%sl=tCII%*_35SkSlPQgUn/_qU2+V_fm(0?A[GD02pC5\HYmeA1-*=h%?,6&p4.d8:s!@XC18I2L0NCJc`XYFjq6jK_0cL7A-H*cNh]WH@Vqu9BXeULA!V6SXi,(sI*9K@Lp68dFRiN8CRr.4toJeE&7C8!m%XSl<#4N'#K4dS#p7U\E(\W-?UWGL?,Nfm9GbOuYX_*ZGW-ojFhL'l/\!#Q#$icJ2C@rWgiE'j'G:T\pJmfOqO;T,?lk(i_dCA;Bp%100S@4(bSjlCa=P+rs16!SB,M%$:lHF1):@CO)g'(@?gd3:6ic/G]^@51Ja\:h>EU3T8"*!RQ/*W#c:0_Qu&I8!)q&bA_Gm3CV^@%EB[L%Mt+<_?6XZtQUkq!JYk4]D<-Mc/T1_q>Fi^Cbh[=NV+kdLp'NiPd[=^:JS?B@]PjBUZ*l4XpG='0_TrB)K^0IA(66VA3gqN(%8Q[L/\^OUF(UcY@TN60[7d=0?5HMDBQe5G$02%M^-r\5qG:NeRceo9X!2W_D&g:p?ole)Ln^Y$?hLl#k6do%""S_+h?!\M56t+Vl%4iq#tipLU4hUmo@0N9d]UB+XIdhXC,qMg-R875`:WFtPV=Js+Cqh3&e3'7Q\!%81oBkgW1OE1+a--5_HlP]UY$=R"/AnQ;!B68LC%mfqU+"2LD+LfOgHE-K&G9Zi2)6WREN-_o-7,77i8n2C-c)Qp9'#`VFFkZ$81L>&Q+b>fDla(dT4P/g9tiOEk?CTogl;/pGk<PcCY%D54'!k"?hVa8GoT^MXUV,`qVSYC9%0@_5Y^OL?7Qcu<N`Pt*GQ$Y32V(H[&lWcA]4e%n.!P<NcM52iJFb-<WY5rY6<]pS("nC$Dk%h2kobk_0A+:hr+T+4a.%+O;b69`a'ZXBB+nIJk(4@7eY7%Vgq:32<9rM8K86mRi^8:uLhVme&J[4'AK3&3>/3(W#^f7s][c151i<%B@a`4LU)*rZ7U#\kT?dDRD!i1AdA)@Lo>B,X\ZT?pV\\Z2:cV0'S!DsUXl*L;e9)6r-t,AZ$*;q"tc5#+R7EV[b=\Zh7,iIm"'Eh%*L9ufV5Q7]=PqBg81Za?,-,m?d"h@_qr#8o>-?KXRf\])[6.X/VYdC?_8bgC'>gMR@'+'2f=TWe5I2>9U:ofbYIYmO(12hi-o8J-%OJL1$E])'!Zg1Iu3'p8n;N?l6goJ;/J5lB\iC+djZ!N:i\`A!uM>m["#.(?B*1A4oHUu+S[Z&*q7%7;l$Nu*Z"N/YY,7U=jjR_(c%"@Y"r2QN9PQ/QLD@Z):Dd5\U-!QVgO"s9AC[q%G))Q[fOUIht1F4GCOSDB=YGrs/"r+PS=4gl1t3?A/0ep`4!kYitWCf\oh_qAtG%\"B6$190#M^H=*"dSCh;.q0XPY*f]gD_U5/XA>7T$XD\!_&0Zq`Fj\"F3Y;hNTAl+l<mGnX^n'R9@@SkX!#kD5`?$?:/f)QHJ6nh%g&IcA#']RqJ<P0+];C3nq2SFsM)>bi"SHH[>P%4U-6,^MGi34t"@6u\KN2U6^<atBK]pH-LQ/oIbNBH_mZ(Oo#0:;XaW0)TR'mR*%_(K`N34gd[+Kf,u_!D+g?&B'k6\L)C*6hV.@W9bj(#8ds^!U0?S2mYK;V(#="Y`hfGifQY0PDso`MrT6*"5G93EjZ;@?mkEnG<C.%o`<L%Q8uk@T@Bq0&gLF6kStEoEqop2!q&7jiF$r(Z.JWN1*lnXi6d:j^9WBH+`=2N]t<%8[LBHmSpODc_=I4":]*g]B%QO<omcK)%(rQ-D^2uQAJQc5fG5:N%bNUYKWG!jnSm-`r=@OPUS6_:@N-,.L#;\L,mB_ML9d%eC+Xp0LEh$YR'I.NlKL544@RRFqBTG=j<upL0%[)Pe:WKNVOZm,3A+g5rIYDg?T6m17<.Tj(_jZ;r<T0'`s!3?V&e!s3"j1r2./m;u`-Jb\\'O6OkKpd@0L[ri:O-pFs]p*:a\5tI^%$!=CM6^2@[MPkH[r,Ia9VKkG!+Q[Mon_@GeB-U6**cJdpEi6jJ!I!BP[;b5S<X_#6ccioXP-U;WNs5lj[;l@QYUN3GBQ+s^iI\d%%IiK1OYAQ;gcq)Y`HG0JYcZhtkZWhq0[pZ@.;-g4YoHW95=).WG_Z7R'9F3OX'GPR!BtCiAE(#D/U9\+S(!9/daR=;7+Tj'Y`j#L!%fJc[9W6"R%6>.R<,M$>d4t0]$XIJX`QX0Lb>/6/K4aS`C3pm($2b52uB^DHMd$`'h]ES>d#Ug-V3g@0[jK#"#&0ZC8CQIP##O8r<%!R.CWko8(W[6%beK*G)`!';,RGUAqF4I-0C(>FKHF@s2CiOK#JUl8(.*M58XY&[,SNcY<Y[u03cJXT0m`#rE:V'+E%8p252I"LEa%V'Pc7LEA[E<`a[:"!IXb/84ohJ-0%La,]VC7'1nAJHK>&SV$7j9PLH-1\%n&Z/uX0'C\hQK7m+PlXl1?O1cPe'8;QC^13qBR@\0u%@2,SsjVb+Q$A:+MeL(^r0LiFrN71i"[_5h0csg0>-et[mVf8@2GJP\Q,K($#TEZX2[rT2pg9Dm>Ljr>9_paGrRPpk7)tJ\[*6?>*%f=gBD6#h,dl)GP*alZ+X4H)TQNIF5\_8F>_[BH,:C`(P/A]a\7[4mQ^_B0PdO-a(*&YC&jTP2$b0WLH(=J&hJ)4`$!?.+hBfC=O`%aI>KtD2AG-**EZ;=G"GH[W^%(;:Yj)LCk\E.]WZaM<ouE@&G]$`Pe@oc5jgG6,RB,'l/inBN$uVN1M`Nid#n#0Y0j:_,@$8%jQu`%JOcE95`@IL4nl@-2Hcl5QOj+*9*2LH7R"DA6ESpfL7&[L$;m`'?[;bX`5prTgs;3)Po*(3]c'^o>6B\DCTYZ;.coY$@MG@:,`_pI%@[*LsQ%:6s^bDP(Pus>M:Q/c.O_d0I@\d[?"LsRDN#GNO:d7@$DkC78(]eRDoA+RZ[0jXOs(qg6RX6nU9O@[[Nadh@\M?4)?7Otq%>onk3,BVXs^jf<_L/CB,78=p$!BJ[N7bJI?G6.)@#\HpR2N3<SGWnoak$hkU;%Y@J@F]Z7,@F&!1`\it"10M9"D=jf$Bo-b_2rh*%Dg5'u3;ZJ_4k]I'$CerX'LmQ]E++YFkA53DrH0KH^8%2n<e`$h[DLsg7[-dS@2(']`C<+'8Jha8$V#/#fEJ&<3s3F6$0;:7Q#Lqd%n<nAPlE1+GeHR7TJ>Bb4.Xa!+<]=j]4"1<-rLF&+!#A4No3brL_.`8Ck=ZGt=f@3coVY'I"^d0!@AF83;\[EOlnB'V/T1VBacWD"%cU3[BN)Cb:]e,u`8@bjop\<98?eZ^P(Gg_#9YK%$PmkE9OJM]/<h;4.#PMJq.8QE<e2!S7@#LWMaSYObmD#fM3BV071R6lqqXLIh%;]p:AHVu(e6#_5c/,Nf^PY?b>o(gb#18Rn.g<o>&Dd&!+S[ZIJ1d>hU6bo@b;u/lJ,m\f>QFeiWZXArXedN=0?B\W854'VT/O3;b%HCtl%h'r<0MjHA#b0.s92r5hMBo>b!p94sYFP=gC@cVp;;'.pf>.7%O(FHkDg).W526lg<m/Yd,)8sJ`P6PBRL5p)d-,P7#CbG[U%ZlhdF$G0;$#H+[s%M-j./U#jr6<]!KL3T.FZ/,k-D1ok]S+`0D$l7l%>C*F/KW%bd;gOj(\Y^D#Kc5emoOus]cNJ99#3)*F1URRm%l+!9-9`'$6OQEf]cabTbn^G_0=p`(EaWbdUGIF:$C<?T-Ws#<eD=!!pA#uf#2XUWH!7;JR;gtT<M8Y%SXneQ&"7B<G#f=dm__H":%in<Y+71Vt'VC`8QcU3Ure1r/T@M[9?q\P<^p,qS;=>R+_VX7d7eQs$]\S39DgDd6f[qsd#n_%6Z0J:BUp.]Y0E9m$YM:asN$sW_a%Ndd`]I^/tVh*g9Zrl6A%Q5(%km7BA=B8>^>OUU^gk1u!FlJX+Kk';&`Z%T>^NE-`V2:f21Mo:<C$PX)=Jtu.Uk2YR6L%*Nl$\1Y/%/em0`p[7^PNE4W'On/E<AA!E5P8H'o(6ULR:7X`[D>PGQ!.OT'NY`?a`F3/T:HEfm-.tQT:@)dbXb*>l%`Z:4&r1##/u2r%ba`8*%&Mp/eC$&$(HAj/C/k_8IDQ5%[h9('>.<BB1mUSgb=GeG2MRbnZl%815Va(X.Jq)*#7EB.m<6mNHEnmi_oZgX-qa<HH!0c$EDD84<%LZU&kSl^kpG_H3o-Kkp[#2p5#:Y(D6'f<(q:k)g[VgkC.K0CSPJfE"1p^)A9TRjX0Bj->fJT1C@H\ZX1Sui12Sf<_5N#b4/^Rk1,%S>46LQsDt]oW@<^*#/KkA3B7hQD;2P$;KJpB)_9K`i)9,&sBajKbWAI8D`;Rgc.rl*%J/l.5\u=Ga3bZ]jJ66'8q`K4,d=LG*F,-%IXIMAp]LkK72:^c83=gFPn^H"YJWSPl%K]8\74#;.B7ORd1RH(2S&<@qiZ`1]_bg@4<G@r*up[8>lsC7i1Na47?mlCbbZX+QJ4'e%21"<=MX=9<o)r;$X0n!HQ;:_+F6X]qh?*Pcp[G!"@+:<IrIK*C"X*;t]MXJ%3o9CkluS5>JTmY,au]t8.j]-'M$0$iKdE,XBFhYL%)SWFA+[/rkOd;nFmX)GVYni9G9fp"Ci`Mo%3A[B2TNCU'+<DXj+iqZhb0,P_/']\=ap3"kL*_'ac76sk!j.u2[P*P",_TF+1I>$,%'%h>+Hioc>_kr`8+q0C\@MBKVi/))l<Wg,P>.(JBB>ZMZ115iE0a\;&F4,-;YW;F1`!2a4!Y1eL#OM:6ZXg<[<&WV_a+"=JMQ#^D%qA`oQ[&(&p[RrRAg\#+L]s2(TR[7<(QF%;`mpJsc<lGbp$5TKU4B`-+o+&00i<Sf:%3)FPB08fVhb[%kY['oF[`>eYO*VU!Cb)B*%I:BNk^P'DO\j"H[+/-+0`J9)WNjEKQ[%]+/Y0.__YZ67<_/3XkLCud\&m$/f++Z8^i.u4Ub'$fHe--J'=P)kkDfC5/OSiQCN`LtR%@D0i[8+*t+s1S1Vq)A&W60;Sf3-,+QaPX^Ym([)V.c%@E.Z(EXkVW$F-a&K64I-2gIP#Hu&Wfl3UnERcT3O-^U&_tb=cS6KWmG^j%_F1bXBNC-`'`+h8G6saX&]#*6g&LriTsGFSmFj[N,mp#mgNQA.s5m6d^3<p<mGI>1b]&6qVjF7CaquKmFr,j>P)2;7>>QNXcCgEE%(ZoVOi0f&r\dPFq\G_3C^.hCmF#M)>FBCjg!LAJcb9BZ:^&:2S7r,-FD9n$$d,i/)L)1B+No12N,6o]\6Hr/IE`!'8cb_&N?aF=s%a?5oW=7=KMJRrVF7*;l8!KQ*FD/3[6jt?f=Y]r5XY\OkBYqO>,r)#LI97C(3^0,AY!^.0LG@l\uj/RAR5d#2.P'7*[0d2f#p:![t%0Fcj.AH+qj<IJe;cubRsnQYh'Y$YLHnr#eQZ=HRjCN?6t$l:Aj9]=n5/P^Ka^tPn;,7LAI<JCXMp^m?cY:du2T$tkYeJZFS,&SYq%rgoTk8QF(j3VpRtn(\>>5[9(>C3_X?`:=gB#\)/NEj1pAV*tP;)iArQh;m%)n>#h0U*CUtVZaP4HTfqeR:LeXR4#TO&IefTgT]_/%GMMls2)X?>eF)c_DQ?"N,e#idb1=Ji>(!-_8jT^O`BE:3dLVUhU5T:mYLi&:O`QR=VL\e$(@,7G;)mj&U>oUUVN;F7i9GYI-@6!O%2@]od]sk\Pl[7N9?Ns=EAg:]>*+]ghSKT$qCFNUjg[O3dG\r6a1B`skTZ&Z.7/p7s%*OEZ!ligH3Kpd8DZRsode3GFe:gFdPl4_T%^8BqN^A&k-o.pKjQU.E%iXC3rH&La3G=HbLN;EH:?kTHKJ&&j+a$O0MDgFr%g7F+[@`,un(_mN)>?JHpL'[L(B"gQQQ3m3[.+G&-%HsDR^#1*:+e=NG2%rOqX->!1?[7TN$:hr&n7%lM;DC*7=gq$h``+fT5rkrY_39t2n,q$ATT*G9XMQgEG+?WnmBFQ>oPP#3*;;`j?%Mc"$?)e!9O#E>-)7.N%+1^hYn76`)['KVJ.p'%H%-Hr/%%,u>-Se>lMe(o-cV?KaA()it$5PVtFd_[?_.aC=1Q(1j["_*Is>/dsJ%]U24(*[&dQ%4=foFLjDJXHSS\176)!')*K]+]h_J=HIcW-Q&M`ddA>t:a:Eg4\`W'K8'/RE]1$6Q&csT/P?]beW&o02FRSL^/dr4%Bj==+(3h+,#c\PASCN98[@f,-a[h+A@tYAj48N(=7-hW!UOp=Gq1$a&*tG)8\=>*Uh!.JZ<)V3E;&&9:3Ts%;e'ujG>cOukBOpp,%EW&Dg/&P>pl6k?a?%fstVZ\tu(lZL"quGq0&IY&''UF/)<r^n\\;mj7'L8F!\"W%3_,HWP@u%Kja-.(%pU:FVIDbP.""Oi0%h_lV%6o(8-.do:4/dbF(1A<'->skn7$$&XSi7V^NDo2*;]0L@ijds)='P(qm.BdMXFrO@J7in4SC:I)p,*.HkF;JlI#cU;,djlY`9AcQf%RLBi@po&fZO^/AM-%a0Mj(U3-W2E[iH)u*Qk[`A:eAhTtoF<cJ\N2>]<+Kl/U5Wq9+ETQ@,JbpjoX3$aT6G4?Gk'6L7f9FZeQ/?@%'F_]h!#,)-U!7U;5]J=B[9f*9L]kT[q*,O'6`6HckZg[Ho07iMEpRRe.J9i)e7pm`Kud3f!#IeR0MU,AdYg4"E@,2(9QB$l<%I:Y%.e;p=Pn[\[\EI$"o]os#/8,-tp^"-)#FkXEb?1I1T6\h\pS#9k!n<37^*Yg;CkD=3^Zl#2S46(T,\*W/pTfE3Pn,OQ.=T\(iPgh[%'QV34\?B9!0Du"K^9bCZAWDsXqt))&_fjq<CUn'Uk0f-U'7tPo$.!>e3=b!&2A(kiM(f%ER8>T63K9KrW'H.rop.VGVQY&&r3C5q%V`%t[X+(H5\0$EMRBE@l06V""IJu0]'()h2rPP$V:U5]CZVG7NO(7;,.#M+DGZ5G<6DW2hK^Mej3Qc8\Opeh72b,]7$s1-YeTF?G%U.eGC'X7L36`Ecn'7?B?#5^2TCniU#"70eTNM^PSEKf+NKhl;,HA!,G;S)_EW<u2]<p`/V%Ue\>;-6@VPWM:"G23$)Ad7g!l_cof%M*@BWGaZ("E9eI7jus-Ln%m0;,UFTH:&&6*dpgu#>b@f9Vgtaa_moVRNsHjaciJDtb<`fhRpO!H_T@06dIVM>DdYX*h!7[0R7@.`%"^#7W`BdI:QWuOCf>5T-'+0&Bp`7(d^GO59=tDP><3ITuV\F/8=;2Ru2i,!*YEj7]'3u25&GdI&!b@iclfH0fhS9fa5i)o1n3E']%Ddd=Y6"5B>EbgjgTg3oR8`>j/h(<ib&&0Bd5Rir/6+n@!TMDW6@fd]u%cQ!H_KWliN(';#]lFBI*gn6+BlYm:X!h-lV"mA\$?Jh>%B4(>2;-oQWL<\!D?ohKG,nY;dI!.Ntk#39hF_$&/Ha!foUD?pm`F,5_6+o5`nJEb@NW^.8N(c2F%5D>A9W1i/-KlZS>3>XmUS^d1%MA=q9erHYa*XZcZQcJ^7l;H*Ek6_i5+I[K*M(IbQ2cN$e5[!Y3o'+B/k/h(FmEgeO#.[kXF*Ck4-/p/>DX?Dl+n"K;G=uIiIkQI`%X>*[_BbRM>o"l3`1-EFDOmF(U<?nN$=o_pX"oSQ4UUIC!hbZ`A2lqoU$EV@;C'bl.W?,OE7h:)-7+_8)1&2qVQTIr0A24cB)[m`U%G%*HLVGJO!5^(AEeAUL;1F6<h1`uTM#=!k_4&#k`0d3!e+l%RII:IAr0'h$#;aWuq]:qihRQ2@V%g[2K1&lT-&E0WE8%G<iDflNF%`<:MjYtCH/KGLC[_?+]]*a]54(l(?/[K@JGLrMAs"cWZ4#/"mbcXd><,FGH,&suif>h`tX?t)r#Vg]sglC('XQu-grNmijlh_2;9%`puY=l\'T"CbhH<'\It;";Q=PfIo<(]d.\:<1(S^ak*1,\HeS_'Zq^OWQM=A=.'H!.k=-JOaGE7#'5^HX#-Y0ZD7pj"^KgACKXO8%mVM2+,Um$O&.k==]4s;8d1iI+9;.q+i>;9K$aCPbmtd^^dK'1=DR:GI/>tkmQ/nM2(r_58FPf3VBfms#/CJC'W81i^1n*\bqXOQ+%<*G6Tn\_*C!(&:r"uWbR^b/MR%CN>f/in,c,5/AA6;bV:BT<?3!,:S>(R^82%F!Qg(-,%!>(Zl*Fj*'oqqH'uY<;#D[@4!;4;f:C%]]8!-qLgdrN<RQpY=23l_bq1$>O:/]Nk#_FiXMfTfuT$u\If6Hb!=`r>TBMs_6IRFg:+qs;c\Dtaam]Na4V8_c9cLtP`KgXqa;&r%g&ps+rlaW?deV+CdE1SGNm?-KAAmpU[&[kdObb:,&^3Kcib&X=T8*82I5+Ag/54`u0>mg@hEFL?3)"q\E7)-3SN//spS`@ShdL*t%13I:*E71Uh7)#0M:=5_NH8Tc#)]1_AB[&aQ#(.YRG,f;iki";3:>@H16i%+B(<Te"gHOn"L=-b>+p*N`YDm2>l&%dj1ah[_SV#u*%DfVT](Y5l8&MWW'f,',-TA4g/lcVd4k)MbR!l7nUf0Y7qb8t;r26fj/%#sgPd2)o=crKkpN\Vj_Q6,R`TlU:O56S)#GV'F%i.<5P%E(71"6P.?u'nj,JUnlbga;:DXX^P.*0]O_qO`dq[#RgT,o0+i;hit+n%7B@2\<W]9*9]+QR@=(1/\]Ll*tp6&3oiJ$ml=UW&#%OD%ablQ^7l+B_9*u&ST=rJ+;7$E]!DEr<iQ;NJ&c]6X`UcKh&YrUn<.ciaEVZJ\!$@,cDA3RPZOU`K&T;4qf$HnB75P@W?WVZ,[dLqu%(R;rd-U*JNfkc7;;2OA[A_BrtdjdjaPlcOC_^@<&btY<+_n!tf)c)&Vg`'n<2!@`+"NMhZ`W>SQFn\pc,No,&_mk\,o6sqIRb@22%^"@<O00bR"Cfk/U^K]jS+J]X9d.krf=U&9WTH#`E/Oa2s#k8o(<jEck*_9QNagj#:'I#?)U:3d:L22##/T<)/dZ*`V<2uh:@2O`V%P_&jj!SFmP`e+"e08N+EU/>>Y=R3=<1&*'k:tZdMfG$"jJ4]ZTTf$0""mmFI(=!LQ'>lgVJIc!-`/>&R=QCNKL"#R^KD/4T%gfek%[!+;Y!D?&cn`\UEBV99[UQ?$V/@<*jjp#&#r8bm<8M[9%;+Q7)&c76>VcC];JnZ@0?VYH)&:K]-=&q5\V'R\QD3s0RqbX^DaJ%R-%laN=:`R"BeE\\`/\h=ak'EZO18EgL`(n).1Eh]3OkilW>rGl_hFnuEF$grO2E$`WPg(!aiP]H$.4cnsQGT.-A1WO;QL,rM6TQb(p%,r-):4bB9<grjqff\t"!N0pKi#5d_K*A(si&:5_qlSEN4T#PCY0tcK]N!b.;;W,p$FdKA-.eQJJ#(Om?Huc7d985m1"UYTGVW8GF%g!4AfBJG`:H5^pYN#ZT(,23Hf(PMp;odFLjf5tgTSZQ9d$t*#(Getd3`YF,Q(o8\dX<;U$)<&lm4V^E+!5YenGNf.u-E:I=(!=U'%EYSUZKRNLqGHeh%2#K&]0>CmC6QJ<_2e(R`9c?P[e`Z/S[(N&!Ocs,iFG2_/?p5JSb3&1K_=FJ<+r-@/(gaYuM@S?<:*pq:Gd7kc%`:N=Q2>)F,VDU\GKFV\g^Kr?W_]:ZdCsEi"ZV)4i+fK#0MtXN0D\QQe#7:Zj2?TSYD)e/nQpjWF',HG!Zs^[]<i9Ri_D(/noAiQW%1?(m1_h(_!0f-@0liV#5B8TB;9udVX&r2>]o"kiC*IaT?+uQ?e%/8,,br\.U7-</=bmXYY@YasD\h*n<5XD)!DFc4bPb1_FkQ6Ca%Y9sH)<=Y"PI%5-*I5H%.@8[I"<&4NTd&jQ2mZ//$Jo-Jj.rm>0*5kMqA*;qLPdh_jNN"Sj[5!0KJXH!D[O0J=+FG(#qPVHe3(6s.%&R/Y>>7`*3iH\f$BRdTZjI!p_-2[Fir#fe5o"SVd0nO\tZ0h=SHNtl,,1!@1?2uF5]eq"t00[4[(TfWg8MAZ7[n0rUkGh&cd)5EL%U@SPcQfAo]$F&WZ+V6s8)qW\L([I_Y+50(1d4O$T5o1!@B/5PM$3_U6MB+25E'(]\k^=?mkH-RNNb"p'qDaK@b*V1[m+;-HOU'eD%(!/$!1GQ;lEZab0NXdD<%rXCO-Q=jq6gVEB`7UtaAG/.=Q!dXJPEZtLW'H'a<sW*1'1\59>_N"TGFhMGQMsWMVJb\?75J,cg)gsg%MN(,F7L"]#To3j]q^(P:Ql/hL8)9!\*J7P``]`=,mS!uP4]:<AL$sf$8%`Vk=$EKiK+T.]1n,p+//QKZ8``VJS-:4<oV\tL;f_R$%-1i:amO@eh-<lbW4<1?d.o]?+[ZBlMFf=G,K3WT:9n0CBn.[_p(8q]t),h;@fY-FPja'[`3OD.g&:%"d0^+t.!n"S`\>\a_"e_7(%FeY-0^5uZ3!2qf`[$e[pg,!+m'`dET!"ZK-8+5+tqL!=!oLGfXDYm<F[%)GP:WAQjl)g:#$9=s1p7R5C3mns;jG>G[&9NiYd98.+%&R]\YboLrn3cC+f_Mmq`CUF(qHq4PQ4&0ADfE<i?KDd`@2#3aMn4(%;_aOlPQg4BkM:fk+eaYA7L>5hOSfAhNi3gS?"IB0F^#h>W%E1GgkjiRmr4"f3idYqgM`'#51-hb:?8m+[Jdi&3??LjLJkiY[Ib/Oq)5tM3f2BT;1aWJ.i7G"DRfV0(#.jS]JD/\;1lu,;KneZY0%et;6<(Fh8[[iQ=desuk_PDs52d\-?r%1i)p==+laZ.O/$)=S0pJfc#d(%jor9G1#/^aFsp$kMmqWA&nSTd<);<P)AC-K]C;)@VVP%>,=Ra=BbSV0upg%Y4JGmjTm:-JR75l<WSpklDZU^&V;=N6PNW'FoNG_\ep<"U+AkH'AM:Z%4c"\#i'YB`7#%/J"SW^RBe"h#SVW#%HNrA@k]J"(SB3j=$NHq:!@ePl\?cUdO&*1;@@VAFnEO-Z8'48LQ1_=*FHDO8$Vu!lc.,\?T]7)D\U#Z.bl4-RKL4aZ8h8fe3-_9g%i2j7B5_%c2VfB1a,,n;KE^#blO7?3MY[fFRoP6^=Kj3&[Q-L?RjFYN-Jnu[?0F>O$b:aok6)[9,P=\-$:@SL'SU&5JZ8u\OO,ha.%eg%j8$0Wqk5W4q^JH5^%O99H%@hX*5[r_.:.q<("9l7,c-P/j^2Lf_hO.,_.-_p>Q&JimCI;2[W+-<*Qr/e$j`=X$Cm]Zg:_$`XC%A5jQQU<pd*VuZF_]:g's&Bg_Bcd53&R0-?cHOkpOZ+l#>#F*_.e8TSq,Fd;2+dN`Ur_0$m14F/Y+drMfeXRi8<sdD(+IZ(OW[EPL%o-\"X"Vi9aHi)W=G_AFt>Cs.R"60&%PSp=_rPc:4"\Kp(+9EDMm>kO,/4BV*^\4`/1gZ?uX$]?l99>s*d&uZ1H-]'Hd.U`B+aihu%HmLif_^^_9APDBNka-n])pLg&7tKC9YNn7NmA^8_+;2XhOk8+>NLIb^MkNK-08jtIO<bsNn\X/-I#<dakqmP7aDgo=5`].=8*AEi%U^[DE`B1MHs1o'fW]'p)d:[$:YN,''*/TX[bY*r#]1Zb#dn%-+/9(?%UgVj<\q3\,[d]M2oU$GL2l3"(*_J[.%pfS#la\ip8k-65%_7nqbm20<+i[VZlBs>.5neRPJ70_e:jZQ@uKg<8[`cqKrg5!UP5WS.s,W[kj%t0D]HET?CV$b$?"seogPX99qdI]uUP,WBTS-<QO%NV'[9`aS:o.6,DU3:Z!=?Z)(e#t4L#X!<XO$U(\hnGS*/o6rHW9-eSogoqMMKir#@1sG/VkMIqp2(J0L@&]L>+\X=85!*3I43eg\%/91<F5;HmjjQOJ#I]`Yt!PG74\7do3IH6U6$4'nt5Id:s_b;gA8XPNc$p4s`4b<Vn&hDoKQYP_>mn)Eq[Mj=p07c_S"J!(S]_)/-%C\sO:Hp.GeQ#NqHMM7Hk`Jf)b11@W@7HrUBK=0<Q1Ks%4nb[sUo:f*+0i<`0)EY'Dpi":6J250!:gbBTo>!cjN=HkM%\L&1g;dZR%`pBoG"h+DC=:Naq,pt.ZO2MuY+k;Tm2Q-[oW*Hn=SgE(%,'<kjr7N]l-3Tij,bgP')3nk[-gM%hc=N38!rdd:\l-Mjg>UMM2;l69%b\`W085RK`oMVrtKRn'EX2iDMe0W3YAleTF$m=t'#?"6`8kKOVhu;]W9*$@8l?HQfiMhjrLcuKdq>(S3Yk2#\nVF^qKW<Gg^>kR*%K.Sk^6+G0g7hP)dOQT?Y?da!#H\_OL%+%"q5,tYnKE`GYcYL$IS?YBj,3YSK=9M_A!?7f;#*UN(-a^<#S]:bXPWfkjj<Zg-dnhYe%U2h+1*a?3S<Uo]lV*-rh[!7,-!#:h.<RY+9C4A]ME3:%NNb13DVCf/c/GqIBTX%jR/?t0*OmCEtX;*aF82BpcL'kXTqL;tu<)$e^%_cd@[)mPSO(4]Zk0jS&6[?nNEIf&V7I[^ogSVV)l$lO/V8RnV:Dm>'?i[&4haje?siWC)7d,H,C@!t=LM$PjBp4/e5q#STjN[D7)%MtfKFS+5:l5$oTqNsVNFkg0M3RK0cYHEAUgbefX*o8i8B)*DueALq=],GX8jJ+r2$rPLb)ZIF@!!t_#G'EYMfC/j..$-8b;bO*pW%BNSAY;f]Rt:H!9GkA>6^+>PgW"?':uOh6u>.R)sDWc_)'`FI<:O!/lmYaC;i79RH29j+A]3_+sD/"MEp[EA=1b+?Lsaug=*SNF=+%hnV\(-h_lS/,<9Ejkrg$/X@[i?nXhSIooFa;Lk:JZ8oL6<L"L`n<(h>:HAf'?26>^-q>ji]q3D_ppiA`.Xqako0(kI1>rj5MX@D\%-WB`m`m$e'8KJBaL)#:6;&R#fZO+_kHo_]\4dZbZd4+9aGcHg7ntVN[3iK6?h>bOKEf;B<'CpauERZL//6-4J9I]^$IK3o'.4F[Z%8D"M(a6G-\8SnE+%[p(:l%nYJ<$D`%?D\,@":M)YYE$m;l*NH@7(kg;+par31f&`i%\o3RB>3$j`4Ti2U.npM,[PVUJ^r>S7H>.b%W8jcC0TrU-2i9`i@Wd7*Ob)r:.pE10\A$me#`Dl\=\V&An5A%Zc8n6eg<]g&)F0%JK#+TU>;F$0J2g?Bk_JaNp$kP13'MeqL2Los%GG7?)5B@3KR(RGH:9SVD"%#'6DjEtfmJChCo+q3@Mh@jgO*P/mSn/[SBdH9L=a$0i]5]<*QR&F0BE)b8UF[T^J:B_(g+qh;LjUqW%a_6PW;[WdYghFT+CJGPS[6oq]ZUnX+iCL*Q[3#D_'nQ9OJt_[S3'pdKUTTt?L7W#ZfR4k?d*8/GQT_SEd?%Mnb;fs==G'`l+mXM.%_)Q-LZRFKaZJrQ--hK+Mps$EbR75O'<_?#19joD]JT)FA"CN#i[>S0^a=F5+WrFf3N\cQ?4)6OdX3U9CQ1`(s5DVY=0mGin&L9@:%!Rs%t%lT/F]g<!C/+Uhkf%BIBZDki!WpkQa=)eL@<hn&>3d`BJS7%/KC$ge[LE8FB"TV>dlPH0$6KBsM/KtM<_o>GDA!j)`i@\;;%UhCVl93<mK"G>8i/HO&1fhth9q9BR!,L<h6qu1#)>lQ#]HUN`oUQ7m\n;'&:1kJle$CdMXW79sl@+P!mW@i&9l[faQjKj]75qCFd%:ZV$PAc]DrgMS,%&$nM-<THW6>/Mmjm+rr)>>^d<8sEq8g7r\U[1]rX"ZAe_XpD@!SQ:Ib<?`K'pU\"u&\/W(@$[G"Vb"%nl4/5s%=_^*VhZGI/+tskX!h8PmYd2B&k^/]IWS:.REQo_Q*J5IW%,?6onK7%k%K(fIi9L-Nh*"<r]h#FTnpIFZ1!MIHMJH*aY^CSMR2(9k%d5S@$0XL,Tfe&<r3d72_ZQtu:f+'$0dbU<KiOZ5AABDCK1Q+da[n`09.^97k4[WsT@856l)565)(sb9P&K"%mp3"iYY=%g"eGVVQ%mFJ'!Zp<aTfA4r]>UM"AR(L^r?=,XHMZPXV@5X@s"U?+T%CQ7*F?EG':ucGZX0!;ng$e>*hcXAXOHS$M)D&OXC*9FGNR#^2/)b9!%KWI=.;D#h</.Q/02(=dcN8'iO@0umidJ\'g?!Dp]j-':DbBHbY)W/[`K(J;lq=d>3I;qSEpU)?ShF@;HlNZ+N6?!^iq$EBNJd^^7%4o=fAOaZ"Vcq&,4P+-'qJRiLW7KlM>>9$?15SmRb^&sp5qiJ()19L%h69.#5aH7"NO?\>JF5=Q3_fVl=AU`DS)P[FO_b-%06qiP%%j-^/[]C99MKPYZ1FrnFcRer:2f_&NoCtO4.'MVa7RR;*V9YN$*d$bj,c"/4!cj^)s`ZY8jGldIjfNcAEVKMqOd5/7FeAbKZbW5KX%Et:7j5rYGGm4GA,q&7VaJQE%'BIk`88%Kg7&_OokB`LFr)[u[/FtFYlfs"?^B#;qRBi$JeJ5^6%)uqp0isD4k'4Bc7H\GfMbeF<6%0**E[L*WMu&584Z(YrUeFZ!iO!Z[HiV>XKgBIL<$:Ou%G:()hiL(nZ>>RGQs\pf`!j&5^cqaH1/P,^'n&@rt%F/[O`9O.M9X$X//%bZa5NQhjpECMa((LZ[6#LU(!/kt$G3Re[.X[<%ZW@M,*6":^p3?nCXe%dkhQ_",83rD$</n@=h!&#.,/Wae:mV.`RFMm,lh<i(&u%JGt"Kms_TEq"F2Zg)UXI)J=$#\^i1=KQG]_G*@=C]hf&J!aDC(2tIn7:06%s8gb.H5]ttR/#X.g[^6`CRg'[EPn@g(jXU,V`6o3L%/R--m,&aX$F*01LLm_tdkWrH;N5ECW2rI*'?r^mhEk+n?Irt]d^HtDHIC!6M_?JC_J_s7t^9eFYm1QlLqZiWFnLc&Pa&bVh:<5H;%`c<=T4a2J;Be4C`,%8N[.n0Ul7fmek4jG/HjjS*%=NGQAk]iQkRO?44@Ob:).2th;e`jFqeBR=MRd<u\1f@h,b23n)J-mmgIsDC`%nt(kmq5=%M;rGWu7K$0Ag/h"Ra$\/k47\T*MqkBM-7STL,C'mMXoQn7`;J\s47rAES<<KKVWpk];&Q.G/VDl<gMmLl-[/Aje/o^m%BMZu"7Xu_kGte?LY6'I_C$UJ,HH3ir;,_q`BD:otK)X2t:qnH?QHkmb)TE$o9*Rr!aD&an4+-PEiAhSs5."1*r)QRE?5jpJ=:f>Y%)Z\^+$Zd$,(.BhZdn>EAL-740nePV1Fj5`2`BS25BXqb3?Wb3:F/J1/E?ec7=-6a.FjcV^p3eXkr]&Y0gfq9B?p8PT9g7l+C3^U<%*k5WCkdmDuAfJ@q4j9$U*q1MDc/YjmmZAF&cTt`tI?N!KR,8b7OFl[O3=SUcg@B1RcFcr0;CDC+r58pF*T]9j+WJ6%m&K?CoH3+C%@d+Q'Z9]Z#]JD^2o(=pQWOUa~>%AI9_PrivateDataEnd