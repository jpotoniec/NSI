%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (Adobe Illustrator Artwork)
%%Creator: (Adobe Illustrator\(R\) 26.2)
%%For: (kyle Hamilton)
%%CreationDate: 6/5/22
%%BoundingBox: 0 0 861 331
%%HiResBoundingBox: 0 0 860.7001 330.9284
%%CropBox: 0 0 860.7001 330.9284
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 26.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 26.2.1 x197 R agm 5.5 ct 6.4%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.b0f8be9, 2021/12/08-19:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <xmp:CreatorTool>Adobe Illustrator 26.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2022-02-24T16:19:55Z</xmp:CreateDate>
         <xmp:MetadataDate>2022-02-24T16:19:56Z</xmp:MetadataDate>
         <xmp:ModifyDate>2022-02-24T16:19:56Z</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>100</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAZAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qlx8y+XASDqtmCNiD&#xA;cRf81ZLgPcnhLX+JvLf/AFdrP/pIi/5qx4D3Lwl3+JvLf/V2s/8ApIi/5qx4D3Lwl3+JvLf/AFdr&#xA;P/pIi/5qx4D3Lwl3+JvLf/V2s/8ApIi/5qx4D3Lwl3+JvLf/AFdrP/pIi/5qx4D3LwlWu9Z0ezl9&#xA;K7vre3lpy9OWVEah6GjEHAIkqAVH/E3lv/q7Wf8A0kRf81YeA9y8Jd/iby3/ANXaz/6SIv8AmrHg&#xA;PcvCXf4m8t/9Xaz/AOkiL/mrHgPcvCXf4m8t/wDV2s/+kiL/AJqx4D3Lwl3+JvLf/V2s/wDpIi/5&#xA;qx4D3Lwl3+JvLf8A1drP/pIi/wCaseA9y8Jd/iby3/1drP8A6SIv+aseA9y8Jd/iby3/ANXaz/6S&#xA;Iv8AmrHgPcvCXf4m8t/9Xaz/AOkiL/mrHgPcvCXf4m8t/wDV2s/+kiL/AJqx4D3Lwl3+JvLf/V2s&#xA;/wDpIi/5qx4D3LwlWtNZ0e8l9K0vre4lpy9OKVHag6miknAYkKQVH/E3lv8A6u1n/wBJEX/NWHgP&#xA;cvCXf4m8t/8AV2s/+kiL/mrHgPcvCXf4m8t/9Xaz/wCkiL/mrHgPcvCXf4m8t/8AV2s/+kiL/mrH&#xA;gPcvCXf4m8t/9Xaz/wCkiL/mrHgPcvCWx5l8uEgDVbMk7AC4i/5qx4D3LwlVuta0a0l9G7v7e3mA&#xA;BMcsqI1D0NGIOARJWio/4m8t/wDV2s/+kiL/AJqw8B7l4S7/ABN5b/6u1n/0kRf81Y8B7l4S7/E3&#xA;lv8A6u1n/wBJEX/NWPAe5eEu/wATeW/+rtZ/9JEX/NWPAe5eEu/xN5b/AOrtZ/8ASRF/zVjwHuXh&#xA;KZZFD85dT/46V3/xmk/4kc3o5O0CvoH6D/SsI131xpZEguDahTMCY2EZQMQu0nE74yutuam62Zey&#xA;/kek7PG2uSxtusT+gir8TbVUFm+EJvUd8q/eeTD1+SsrfkNJdNcOuuQxmhWyUwtECVeqhz+8oG4d&#xA;Tvvg/eeSPX5MY8zp5GUQf4Yk1GQ7/WTqIhHy4CIbU9ya+2WQ4utM431SHJsnsn/OVn/kz4v+2bb/&#xA;APJyXMXR/R8WjT/S8bzKb3Yq7FXYqyPym/kL6tfx+akvvWc2/wCj5rDhVAHJn5eoePxLQD4Wpvtk&#xA;J8X8LGXF0TNIfyZ9FGefXvXqBJGFtOAHJwzB6E/Z4GnHxFe+R/eeTH1+Sj5qtfyv/Qou/K95qH6V&#xA;N2sb6dfBSotzG7PIrJHx2fgoBk5ddj1xgZ3vVJjxXuw/LWbsVdirsVeyf84p/wDkz5f+2bcf8nIs&#xA;xdZ9HxaNR9LxvMpvdirPtNj/ACcubW3S/lvrG4itY5J5EDMstwkB9WPYTU9Sf7PwgcepXrlJ8To1&#xA;niX2y/knNc+hK+qW0MzAfW2APohlHJqIHLKrV241xPieSnjYHdfVfrU31QOLXm3oCUgyCOp48yoU&#xA;FqdaDLg2Kmmf8dK0/wCM0f8AxIYDyQXqX/OUX/k1rj/mDtv+InMfSfQ06f6XkmZLey3SR+Vx0S3b&#xA;Vjqo1tQ/1hLb0fqzn1GMf2xzHwceVD/XKzx3tVMDxXsj54fyRELLBca+0paod0tRRRHsNvFzvt2F&#xA;OpyP7zyR6/JhuqjSxqE/6KMx0/lW3+s8TKFIGzlAqkg7VAFfDLRdbsx5oXCl+keaF1TGF8v/AJfz&#xA;KJl8vWjrIOYf9GV5Bt6/3PfJ+JLvLLjPe3/hnyD/ANS5af8AcL/684+JLvK8Z73f4Z8g/wDUuWn/&#xA;AHC/+vOPiS7yvGe93+GfIP8A1Llp/wBwv/rzj4ku8rxnvd/hnyD/ANS5af8AcL/684+JLvK8Z71a&#xA;38n+RLhWaPy/p3wNxcNYxIwNAaFWjU9CMfEl3leM96J1jQ/K11Ml1qulWt7cNSJJJrVLiUgAsFHw&#xA;O1BucAmRyKBIhAf4Z8g/9S5af9wv/rzh8SXeU8Z73f4Z8g/9S5af9wv/AK84+JLvK8Z73f4Z8g/9&#xA;S5af9wv/AK84+JLvK8Z73f4Z8g/9S5af9wv/AK84+JLvK8Z72n8ufl9GjSP5ds1RAWZjpgoANyT+&#xA;5x8SXeV4z3oz/A3kn/qX9N/6Q4P+aMfEl3leM96DTy5+X0iLInl2zZHAZWGmChB3BH7nHxJd5XjP&#xA;e3/hnyD/ANS5af8AcL/684+JLvK8Z73f4Z8g/wDUuWn/AHC/+vOPiS7yvGe93+GfIP8A1Llp/wBw&#xA;v/rzj4ku8rxnvd/hnyD/ANS5af8AcL/684+JLvK8Z70fo+h+VrWZ7nStKtbK4SsTyQ2qW8gBAYqf&#xA;gRqEEHAZk8ygyJQUnlbyAkrxny9Ys6EB/T05JACQGpVImHQjD4ku8p4z3rf8M+Qf+pctP+4X/wBe&#xA;cfEl3leM97v8M+Qf+pctP+4X/wBecfEl3leM97v8M+Qf+pctP+4X/wBecfEl3leM97v8M+Qf+pct&#xA;P+4X/wBecfEl3leM96+38r+QnuFij8v2KTcTInPT0j2QgEhniUbFhj4ku8rxnvX+Y7DyYkkV5rel&#xA;W95cXLi3hc2P12d2CNIFCxxSyGiRselBTGMpdC2Ycc52I9N+YHl1I70q+qflp/1LA/8ACfuv+yTD&#xA;xS7/ALW78tk74/8AKyH/ABTvqn5af9SwP/Cfuv8Askx4pd/2r+Wyd8f+VkP+Kd9U/LT/AKlgf+E/&#xA;df8AZJjxS7/tX8tk74/8rIf8U76p+Wn/AFLA/wDCfuv+yTHil3/av5bJ3x/5WQ/4pTnj/K63hknn&#xA;8tpFBEpeWV9BuVRUUVZmY2tAAOpx4pd/2pjpMpNAxJP9OH/FM5ytwnm/mu+/MjRtPXWdDvdMGhQ2&#xA;FtJcRaoJP3LxhjKYxbReowdeA3Zj1oOmKpBJ+YX5kERC01/yVIVsuV2s15Ikkd4XJccKxkRxrxUB&#xA;grCvxb4qiZ/Pf5hW9rcwXGreWmubu0N15bms3ubh7iMN8M0gRXRo+IJdkACgE14gkKoTUvOP5wWd&#xA;3DaanrflHS7prYXdtDyuv9I5l44Q5mApG8oUVT4j9kAFlOKp55Z8yfmfrRtNTs59E1HSZ7nhdR2x&#xA;mDQ2zvbcGCy+lIriEzSFX6kr2pir0Oy/3pv/APjOv/JiLFXXv+9Nh/xnb/kxLirzyeD/AJyDjFxD&#xA;bT6HMkt67wXU5lWWKzDIVjCpHwZj8YqV+zSvxYqhj56/MS2dLO/1PycmppexW11aR3VwZESVI14+&#xA;nyLiX1i43247mlDiqAP5n+eTdIE17yN9WklKR8724V2X1JHqtXpvaLHIG6EnbamKpt5d1781tVt7&#xA;prW98v6otZYjdWUjTQ21z6E8iRllZaqHNsvRmozE9MVT7QV/MNNJ1dPODadIotkNjJYNI0hcxN9Y&#xA;E3NIkoHp6fFRt1xVmOKsd1iLzLN5IEflmaK31xreD6nNOAY1IKF+VVkG6cgPhO+KsMn1386dK+pn&#xA;XLzynYtM0MKrcXE8SzGh9dkL8C0g+Hiq0G5r2xVL9Q/NTzhapJd/4g8jiwiNmGb67PI/J4VN2tI5&#xA;GNRKJPRopqgq3TFUR5b8+fmLruq22nQat5RnmgvAmsQ2E9zJOsUcsRkSBJT8bmJZ6mlPs08cVZz5&#xA;KX8wVtZ085NpzzJwW0l031auoB5vN6gVQzGlAi0/UFU6sv8Aem//AOM6/wDJiLFVttIkcuoySMEj&#xA;SYM7saAAQREkk9sVeHt+Z35hx2F4IPNPlOdBPMbfUZp3LIka+oqkQxCPg/BgjcWLL9kluiqfW/5l&#xA;eeZLCynbVvJwZrkx37m6uUjSOKKJ51HI1SRGivP7zbii/wCViqGi/Mj8zmjhjbVvIj3XpySXfp31&#xA;yyRiJJGZjRm4oP3fJmYU38RRVNND88+ak1nTo9Y8w+XJrS+hDzQ2rySPya6mVPqbqQJQY42Rq14m&#xA;Op71Vekyf8dW3/4wT/8AE4cVS/X/APjq+W/+2jJ/3TrzCOrlaf6Mn9T/AH8EL55h89y6fbf4NntY&#xA;NQS4DXAvP7p4eDArXhIft8TtQ9qjA4rEr/Xfzn0lobrVrnynYWk05jIuri4hT01jElImcryk4rKW&#xA;qfsrWnXFULe/mN5nt9RuXHmPykNLtrlYE9W6dZSZGBcStUL+6jLN+7G/E8iOLVVTPRj+fUtsz6lJ&#xA;5e5i2JtHtjcMkszNGytNUfZ4Bh+7I6/I4qyzzl6n+CNc9UASfoy65haleX1dq0rTbDHm5Wh/v4f1&#xA;4/enmBxWP3uo+WbXy5ZweYri2gsLyCOJvrjKkLfANmZ6KN6UqetKb4qwjXtK/KD0+fl238qTa4Z7&#xA;eD0bhoWjMdxcwCXnHbktz9OnpsVPE06KTirD9NvTL6STt+XkcWmpaSI1pI8/oxLw9QJI9Vih4NMB&#xA;w+FK1Y7nFWYeUX8tz2zJ5ui8sXd2rWH1JdHLX3BAURC4kMzxxJeq6xtsgpv8VcVZH5Q8xflfb6nP&#xA;5d8r3Nul5cTzTTWlsshVpokRZTzIMdVRUrRulPHFU84a0LzUZLSa39ITLxgkhcuT9Xi/3YJVUf8A&#xA;AYqgZZPMh8wabdyXVi3ll4i7j05I7kT+lKwYEuUWP0z8XKpr2G9VWIX35l67b608w1ryza+XbiYL&#xA;bJfXEyX0UfAAM8VISAdpW5L8KvUtxFcVYzeGcXWo6hdt+XUervdWkiXc0ikKywM99cTVKymUSPCY&#xA;1MlCn2uJ+IqoaPTBYajGl5H+Xa24ijt5o5nSOVQnoJcqlKbC2kZQD0pHtuSyrI7LU7jR9Ljg0DWv&#xA;K9pLd3Eb3kWjekkbyRu8twY4maeR3axijT4Q7bVVadFU18g+c7vW9G1qz1LXbLV9TWKWWA2UUiRp&#xA;CkSRyAlo4Q3GYmo67jpUAKsp10+eYrJY9JutNfUZ5Y1ge5gnjhAVg8ocJLKxrCj0p+1T5hVBat5t&#xA;stO8utZ22p2Nlri2Uf1ZtRmFtbpI8XIM0rqyMY0UymMVPEb0BrirAdR806h5gsbeTU7vyHealZBp&#xA;7FL2d2CTG1Dh41lYSRhpSvxftRfEDuDiqVT+XrNrOE/V/wAuzbx8DM7CN/VuY7CKWR2krGlRNI7b&#xA;ID6Tq1VPVVMfJypptzFqMd15C0+9icJcX+nS8TMh9eW75LE8MfrG2SCVXZTxHqbcTsqyLyH5+vrG&#xA;3+q+fPMml3uo300S6U+nHnHJHKsbIymOJF4slxC3KpFWJ5caUVZysesm+1BrSe2WITLSGWF2Yn0I&#xA;/wDdiyqAP9hiqD8nDW7vSLr/ABGLSe7uZT6q2qP6DQvDH6asstasYyOfataCmKsZn8vf84+21zcr&#xA;d23l+3e0CWt1aXLW8ccRgLqvK3lIjVv3zLz4VZTSpFMVYf5rXTobvVToq+Rf8MTrI9vLfyN6hna1&#xA;uI5KLU2zN9Zd+Sp2LchyNcVVPIv+Em166sddsvJa6XPZyG3vdPMCTTmSQL6ciSGPkTFHyk4R8VYc&#xA;a1BGKs7s2/J6717SdOsrXTLjVEtzcaIYbVXT6s3qSGS2nVDEY6s9SjU5MR1bdVlGoJfPqNqLOaKG&#xA;T0Z+TTRNMpXlFsFWSLf3rirGr1/Nj+d9EF5LZPocN00QWJJUuTefo+7cv8TMgiMTjapPLwA+Ijq5&#xA;Wn+jJ/U/38EN558/3FlEW8vavotvNZtML1dYneIEwSLFIiQqolkC/vPijb7a8d9xgcVid35m8w6+&#xA;1tHreo+QbqwhkjuCrXZmeEFSJKeqZEq8AnTlxHw18DirHIPL0wtZ57y3/LeMXdmk1rbwuPqxnT6y&#xA;UoHPH0pUaYvIvxbMAaJyxVnkPnLzFJo0iJ5o8oWdzEkUUCWk/KOOQXYjILPKy8GgdFVeFRIaV3FF&#xA;U4bzDb6p+W+tW0mpW+pa1YaRcR6xJbMGQXKxTQyH4VRRWa3kFAO3hTDHm5Wh/v4f14/ezvA4rD/M&#xA;PlZdc0PRilhY3s0Ag9UX0aPW3orsiM8cwWsscZb4d1BAIahCrBrf8uvzCt76C5i8t+SI4oooFWMW&#xA;s1Y3UFpmUhS1eaqE+Lp1FcVedJ53sLLTBFd+WPK9nDeQ/UFe20+SOkd1bGWMUmNCn1m8t+YYdDI1&#xA;D1xVnnlKz/MLWdG0y40XRPLD6CXjntL+6hlguWCSs7O0NrwWOdLhWcqtFqRQ1rRVnPkbyPd6XeRX&#xA;2qaRoNnPBbqlsdJt5FmjmYsJj60rGqOrfy13NSa4qy+y/wB6b/8A4zr/AMmIsVQduA1joisKg8AQ&#xA;ehH1WTFUFL+W/wCX0oIl8uaa/IMpLWsJNGj9JhUrXeM8T7bYquuPy68hXJkM/l7TpDMWMha2iJJe&#xA;IQsa8f2olCHxG2Koe7/Kz8ub2ZZrzy7Y3MqyyTh5YVc85kEb/arVSigcfsigoNhiqY2vkzyjaI6W&#xA;ui2UCyAK4jt40qoT0wNl7J8PyxVQPlXy3pFjfz6XpltZTPbTI0kESoxVhyYVA/aYAnxxVNb3/emw&#xA;/wCM7f8AJiXFUqi8qeWdTs7O51HSrS8uPq8QMs8KSNQRFOrA/sSMPkcVWy/l15BlmeeXy7przSMH&#xA;kka1hLMyoIwSSvXgKYqsk/LXyBKqpJ5esHiUSAQmBDH+9jjhcmOnAkxwIlSK8RTpiq7T/wAuvIen&#xA;wRQWegWMUcLrJGPQRj6iwm3DlmBZn9IlSxNSOuKo+byt5amlhml0q0eW3KtA5hjLIY+BTiabcfSS&#xA;lP5R4YqibL/em/8A+M6/8mIsVY26eam0yA+XXt1nSWFrhLolUdBZR8VJCSGnOnLjQ06MMVYJH+XX&#xA;5hNc3l3c+W/JMk0sMzW8f1acqLjZ4y7FeR9R3kEm52VeNKnFUVL5B84rDNGfKXk6e2t1u5dPgjt5&#xA;QwndSYDR+KKWd29WhG24O+yqGh8i/mOmo3M8PlLyRbm0klXSbpoZ2kMfqB4j8NCBR2qNvi3AocVZ&#xA;FqXlf8wxaw3mlxaBaa1b3SNA9vbvHwtGg9OWP1ZFn+PkKAhAOP4qsm8sxeYorPSo/Mk0U+tra3Av&#xA;ZoKCNn9WOhUBUA+Gm1P64qp6l/x3tK/7bLf90efCOrlaf6Mn9T/fwV7vyH5JvLl7q70GwuLmVmeS&#xA;aW2idmZ25MSWU7ltz74HFUofy68gwLwg8u6dEvARUS1iUBBzoBRdv75/+CPjiqlN+WH5ezRCJ/L9&#xA;l6SJHFHGsQVUjiEgVIwtAi0nkBC05BiDXFUZZeRvJli5ez0Kwt2IYEx20S7Oyu3Re7RqfoGKoHzF&#xA;5f0HSfJ3mV9K062sGudPuzcNbQxwmQiKVwX4BeXxSMd/E4Y83K0P9/D+vH72U4HFS+zTVre0ggME&#xA;DGGNYy3rOK8VAr/dYqrepqv/ACzwf8j3/wCqOKqDW1w8gkfT7RpBsHMhLUoB19H2GKqqHUkUIlrb&#xA;qq7KomcAD5CHFV3qar/yzwf8j3/6o4qus4Z0M8kwVXnk58EYsAAipTkQtfsV6YqhLWGd9L0uSEKz&#xA;wJG/B2KggwlKcgGp9uvTFUT6mq/8s8H/ACPf/qjirvU1X/lng/5Hv/1RxV3qar/yzwf8j3/6o4q7&#xA;1NV/5Z4P+R7/APVHFVG7TVbi1mt/QgX1o2j5es5pyBFaekMVVr3/AHpsP+M7f8mJcVUbRNVt7WG3&#xA;9CBvRjWPl6zivEAVp6RxVW9TVf8Alng/5Hv/ANUcVd6mq/8ALPB/yPf/AKo4q71NV/5Z4P8Ake//&#xA;AFRxV3qar/yzwf8AI9/+qOKt2UM6G4knCq88gfijFgAI0TqVT+TwxVA6RHfQ2UTQxxSJPHDJV5GQ&#xA;giFEpQI/8leuKo31NV/5Z4P+R7/9UcVd6mq/8s8H/I9/+qOKu9TVf+WeD/ke/wD1RxV3qar/AMs8&#xA;H/I9/wDqjiq2OO+e+jnnjijSOKRAEkZyS7Ie6J/JiqVanY6ncXsVzp0cEs+n6l9YaG4leFGRtPaA&#xA;gOkc5BBnB+z2whydPkgBISsCUa2F/wAUT3juV/rfnP8A6tWnf9xGf/shx2TwYP50/wDSD/i3fW/O&#xA;f/Vq07/uIz/9kOOy8GD+dP8A0g/4t31vzn/1atO/7iM//ZDjsvBg/nT/ANIP+Ld9b85/9WrTv+4j&#xA;P/2Q47LwYP50/wDSD/i0FrcHnPVNFv8ATP0fp0P162mtvV+vztw9aMpy4/UlrTlWlcIptwSwY8kZ&#xA;8UzwkH6R0/z2T5FwHYq7FXYqhZb50umt47aWZkRJGdDGFo5YAfG6GvwHtiqGXXrd7uazSIteWyrJ&#xA;cWwltjJGj7qzp63JQexOKqGp6xeNpV6dNRYr1bR5raed4GgjLo3ozShZgfS5LUmu4BxVry9canFo&#xA;VhDeQNdXkMCRXVxbmARNLGvGTgPVJC8gQK7+OKo6LUpJU5xWcsiVI5K9uRVTQiol7EUxVet+/rRR&#xA;S2ssPrMUR3MRFQpeh4Ox6Ke2KtNfv60sUdrNL6LBHdTEFqVV9uTqejDtirf125/5YJ/+Cg/6q4q7&#xA;67c/8sE//BQf9VcVSfWf8U3Gq6NLpsIh0+2uHk1aOZYnleIwsqCAiYKrczRuX7JJ6gVVTj67c/8A&#xA;LBP/AMFB/wBVcVd9duf+WCf/AIKD/qrirlv39aKKW1lh9ZiiO5iIqFL0PB2PRT2xV0t86XTW8dtL&#xA;MyIkjOhjC0csAPjdDX4D2xV3125/5YJ/+Cg/6q4qhtRudXfT7pNPtZIb9oZFtJpfReNJipEbOolH&#xA;JQ1CRiqhoD63a6HYW2qWrTajDbxpdy2/pJCZVUB/TVpS3GvSu9MVTD67c/8ALBP/AMFB/wBVcVct&#xA;+/rRRS2ssPrMUR3MRFQpeh4Ox6Ke2Kql1deh6YEbyvK/BETjWvFn/bZR0U98VU/rtz/ywT/8FB/1&#xA;VxV3125/5YJ/+Cg/6q4qk+j/AOKINX1mbUIvW025mifSYYliWWNBCqyeuxmozFxReI+yB3JxVOPr&#xA;tz/ywT/8FB/1VxV3125/5YJ/+Cg/6q4qtfUZI+Jksp0VnSPmTCQDI4QE0kJpVsVRmKuxV2KuxV2K&#xA;uxVCx/8AHVuP+MEH/E5sVecfmH5N02+1Vr2z8pt5ll1A87+4S/8Aq0cVzbiO0hSWMH419KRyw6AI&#xA;dqtirzvU/JF2ba8u0/KaaTVHAuLiOTzGpEcn7wqXUSKPTUM1ACK9vHFUzPkO21cxajN+Wspu3vYE&#xA;uYU16vGC5kubuWcelIEpHLKp4/tB9thXFU78g6Z5U0rzJFc67oVt5V1XSLO3i02S41hZ29OZHT0T&#xA;CZNmT1inJh8RNVGKvXb3/emw/wCM7f8AJiXFXWX+9N//AMZ1/wCTEWKpZ558t2vmTytfaPdNMsE4&#xA;jkf6v/et9XlScIvjzMfEjuDirxZLabUjO16fP9kZE9QxIRMsttdXUVssLEgAcOfq+nX4Iy9d6jFX&#xA;XCtBZwzLJ5/N09xHYi6RQbvjPY2iSyTsFYKI+HLvWUH54q61uZIrRbiV/wAx57m8hvktWnRfVgWI&#xA;wAfEKCIuLf8AdmhLc23LHdV7voOktpGk2+nNe3Oom3DD65fSercPyYsPUkovKlaD2GKqt7/vTYf8&#xA;Z2/5MS4q6P8A46tx/wAYIP8Aic2KsH89+TbeGfVfN8N7rCXpt445bbRmP1h4kRouESKCzf3vqBRv&#xA;zUGuKvNprazm0uaMyfmLFDHGloYlhVJGhVLsLHxB+JAJKEDrxTruQqp6lq11cahqD6bF+YkEVy9z&#xA;fCCJXt4klImuGgiQRy8UP12ikE1eNB4EqvRfyy0OPUdM0vzBb6v5ihhgMkb6bqk6qZJo57j1zcRr&#xA;yDkyzsrE0J4KewxV6Be/702H/Gdv+TEuKuvf96bD/jO3/JiXFUm81ecj5du7KE6LqeqR3cV1K0+m&#xA;wCdYTahGCyksgUyiQ8N9+JxV4vcTWDS3bx2Hny0OqT3Oo3tvp0DKoub6R14AGgZoHjPB2A4gIaHq&#xA;FV62yJDevM3n7UGldy8UsTcZR9RlAlVWRHDvBdLRWT+8RU/Z5Yqr29lJqep29idU/MVbfUqWweUK&#xA;tunq26wepPUKyIv1kSEg/aDVFVGKp5pvm258v6td6uNK86arb38SJZadcok0CvKjzUWBTWD0hCEL&#xA;E/t0oaVxV6VZazHrXl+z1SO1ubJLmaBha30RguE43KrSSMk8a8aj2xVO8VdirsVdirsVdiqFj/46&#xA;tx/xgg/4nNirw/zL+XVzLqeqvH+Xkmsz3c1063susSQxSfvG+rtLG8ztJyHFjutAeNPhqVUJd+Ut&#xA;NSys9N1P8uRbx8Bd21tP5i4lrm5SeWaEBjykZJDSnxD4qj7NMVQmn6b5WkuLG50r8vTf6lbWqSta&#xA;22vCf0hN9YkaPjGzrKFcxKzqCKTDlQDdVlOjeVb9776yPyyXS5LI2hs4zrKiB1tX9JAUjRlHpwkk&#xA;KQQ4+E4q9dvf96bD/jO3/JiXFXWX+9N//wAZ1/5MRYq8n/MfVLu6vbm4WHzZbXNgJ0s4PL8f94ts&#xA;3CsjGNa/WGnSRUDSDggbZqrirGvrC8ZDK/5lNIUuAjMiuIZDE8LTRO/EqR654Hbp0GKrdRl0fRba&#xA;b1L38w5pZXW6llRRJPAbaeS2eQn4fSF19VYknYof2RsFWTw3iGwMVvaedp7+ITPFPcoJZDLax/oh&#xA;2RZpVjUut4bkD4Q3Av1HEqqX5c2aaD+Yl5aQaVrEsbkaUuqzMXtDHEk8puHX0IeJL2axlm6u5K1U&#xA;8mVeu3v+9Nh/xnb/AJMS4qhdQvJLE6pex273clrYpMlrEKyStH67CNBv8TUoMVeRebPMNxrHmC3u&#xA;obTzvp8haLT5TpUCw2iCTkPWVmVXmQSuprIBQGu24xVLlEfOpuvzJ5GOW2heREkMTvcGBpUc8j6g&#xA;6qa/3Zr06KoW8k0eK/ksYL/8w5LljcXSXdmisH+rTy28/CReodkWviPT6dAqy3TpIp7mx8xw6X5v&#xA;uLrTRd3UdvqfHh6tvaCAxmJ3fgbhTVPSQ1avQndV6HpWqz6tYaVf3Fo9jLLczK1rISWX00njBqyo&#xA;aMF5CqjY4qmV7/vTYf8AGdv+TEuKorFXifmm/j8z3equx88adEyPbpa6bE0VtLFahh6kKSBD/pMd&#xA;0vJXAJI/ya4qlWr+veXGpX8Tefoy2q3l0liqfuS1nJalQFYxkWys5MKRuSwR6HkOOKtyPqWs3l3Y&#xA;XU/nyCEKkXoW0aCO49KzYyL6spKUmawdafDVpByb4zxVZV+VOo6po2qz+T57PXLq05fWrbVda9R5&#xA;IontoZBCzBGg+GQuGCy7Ofs8SKKvTNT/AN5k/wCM9v8A8n0xVFYq7FXYq7FXYq7FUC86walM8iSF&#xA;HhiCskUkgqryEiqK38wxVU/Sdt/JP/0jz/8ANGKsd80eVPKHmeW3n1azuZLm13tp0iuUZCAwUiic&#xA;Tx5kioOKqXl3yZ5N8v3kV5ptteLcQRNBA0i3cgSN0iRlVWUqKi2Tt2xVk/6Ttv5J/wDpHn/5oxVS&#xA;edbm5tPSSX91KXkLxSRgL6Tr1dVHVhiro7hba6uxKkv7yVXQpFJICvpIvVFYdVOKqv6Ttv5J/wDp&#xA;Hn/5oxV36Ttv5J/+kef/AJoxV36Ttv5J/wDpHn/5oxV36Ttv5J/+kef/AJoxV36Ttv5J/wDpHn/5&#xA;oxVSedbm5tPSSX91KXkLxSRgL6Tr1dVHVhircjXMWpSyLayTRPDEodDEByVpCRR3Q9GHbFVT67c/&#xA;8sE//BQf9VcVd9duf+WCf/goP+quKu+u3P8AywT/APBQf9VcVd9duf8Algn/AOCg/wCquKqbvcz3&#xA;NqTayRJFIXd3MVKek6fsOx6sO2Kr7+qvay8WZIZi0nBS5AMTpXioLH4mHQYqlmv2ljrNvbwyS3lu&#xA;ba4S5jeK3kNWQMByWSJ1NOXJaj4WCsN1GKsJl/KiCSUz/wCM/N0dy0EVu0yTzhuMKMoIPolhyZub&#xA;b0Lb4qjG/L+ZUuPQ84eZxLKsojMr3EiI8sE8IPERoaI1wJFAI+JF32FFVtj+Xk1tqD3MvnPzTdQN&#xA;Mky2skk/EBUlRo6rEPgb1g1KdVG52oq6/wDyy0u9trdLnXtfuZ4IkiMt3610rMlm1mZPRmieINIr&#xA;cpKLR2qWBrirNOcIsrWyt1nb0nt1UyRTA8YpEJLO6/yrUknFU2xV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>835.000000</stDim:w>
            <stDim:h>290.715668</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01.2x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Arial.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">screening-diagram</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:InstanceID>xmp.iid:2a106d64-02f8-4f62-bc84-a1e991d41d10</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:e7ee3190-80b3-40ba-bffd-832b76e800fa</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>xmp.did:72bc3a3c-55e2-4af4-a062-4fcaa3d7e7dc</xmpMM:OriginalDocumentID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:57938891-820a-dc4f-a96f-ad7cb7ab9b1c</stRef:instanceID>
            <stRef:documentID>xmp.did:555c7bc5-0236-4114-911d-467b9051e133</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:72bc3a3c-55e2-4af4-a062-4fcaa3d7e7dc</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:555c7bc5-0236-4114-911d-467b9051e133</stEvt:instanceID>
                  <stEvt:when>2022-01-30T21:38:45Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 26.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e7ee3190-80b3-40ba-bffd-832b76e800fa</stEvt:instanceID>
                  <stEvt:when>2022-02-24T16:19:56Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 26.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
         <pdf:Producer>Adobe PDF library 16.03</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -330.928 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 330.928 li
860.7 330.928 li
860.7 0 li
cp
clp
28 25.5 mo
188 25.5 li
188 55.5 li
28 55.5 li
28 25.5 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.793973 1 .278019 .337499 cmyk
f
75.1318 44 mo
75.1318 35.4102 li
76.8662 35.4102 li
76.8662 44 li
75.1318 44 li
cp
0 0 0 0 cmyk
f
79.8193 40.7539 mo
79.8193 41.418 79.9111 41.8984 80.0947 42.1953 cv
80.3604 42.625 80.7314 42.8398 81.208 42.8398 cv
81.5869 42.8398 81.9092 42.6787 82.1748 42.3564 cv
82.4404 42.0342 82.5732 41.5527 82.5732 40.9121 cv
82.5732 40.1973 82.4443 39.6826 82.1865 39.3682 cv
81.9287 39.0537 81.5986 38.8965 81.1963 38.8965 cv
80.8057 38.8965 80.4785 39.0518 80.2148 39.3623 cv
79.9512 39.6729 79.8193 40.1367 79.8193 40.7539 cv
cp
84.2139 44 mo
82.6846 44 li
82.6846 43.0859 li
82.4307 43.4414 82.1309 43.7061 81.7852 43.8799 cv
81.4395 44.0537 81.0908 44.1406 80.7393 44.1406 cv
80.0244 44.1406 79.4121 43.8525 78.9023 43.2764 cv
78.3926 42.7002 78.1377 41.8965 78.1377 40.8652 cv
78.1377 39.8105 78.3857 39.0088 78.8818 38.46 cv
79.3779 37.9111 80.0049 37.6367 80.7627 37.6367 cv
81.458 37.6367 82.0596 37.9258 82.5674 38.5039 cv
82.5674 35.4102 li
84.2139 35.4102 li
84.2139 44 li
cp
f
89.5342 40.3555 mo
89.5225 39.8789 89.3994 39.5166 89.165 39.2686 cv
88.9307 39.0205 88.6455 38.8965 88.3096 38.8965 cv
87.9502 38.8965 87.6533 39.0273 87.4189 39.2891 cv
87.1846 39.5508 87.0693 39.9063 87.0732 40.3555 cv
89.5342 40.3555 li
cp
89.4404 42.0195 mo
91.0811 42.2949 li
90.8701 42.8965 90.5371 43.3545 90.082 43.6689 cv
89.627 43.9834 89.0576 44.1406 88.374 44.1406 cv
87.292 44.1406 86.4912 43.7871 85.9717 43.0801 cv
85.5615 42.5137 85.3564 41.7988 85.3564 40.9355 cv
85.3564 39.9043 85.626 39.0967 86.165 38.5127 cv
86.7041 37.9287 87.3857 37.6367 88.21 37.6367 cv
89.1357 37.6367 89.8662 37.9424 90.4014 38.5537 cv
90.9365 39.165 91.1924 40.1016 91.1689 41.3633 cv
87.0439 41.3633 li
87.0557 41.8516 87.1885 42.2314 87.4424 42.5029 cv
87.6963 42.7744 88.0127 42.9102 88.3916 42.9102 cv
88.6494 42.9102 88.8662 42.8398 89.042 42.6992 cv
89.2178 42.5586 89.3506 42.332 89.4404 42.0195 cv
cp
f
98.1709 44 mo
96.5244 44 li
96.5244 40.8242 li
96.5244 40.1523 96.4893 39.7178 96.4189 39.5205 cv
96.3486 39.3232 96.2344 39.1699 96.0762 39.0605 cv
95.918 38.9512 95.7275 38.8965 95.5049 38.8965 cv
95.2197 38.8965 94.9639 38.9746 94.7373 39.1309 cv
94.5107 39.2871 94.3555 39.4941 94.2715 39.752 cv
94.1875 40.0098 94.1455 40.4863 94.1455 41.1816 cv
94.1455 44 li
92.499 44 li
92.499 37.7773 li
94.0283 37.7773 li
94.0283 38.6914 li
94.5713 37.9883 95.2549 37.6367 96.0791 37.6367 cv
96.4424 37.6367 96.7744 37.7021 97.0752 37.833 cv
97.376 37.9639 97.6035 38.1309 97.7578 38.334 cv
97.9121 38.5371 98.0195 38.7676 98.0801 39.0254 cv
98.1406 39.2832 98.1709 39.6523 98.1709 40.1328 cv
98.1709 44 li
cp
f
102.694 37.7773 mo
102.694 39.0898 li
101.569 39.0898 li
101.569 41.5977 li
101.569 42.1055 101.58 42.4014 101.602 42.4854 cv
101.623 42.5693 101.672 42.6387 101.748 42.6934 cv
101.824 42.748 101.917 42.7754 102.026 42.7754 cv
102.179 42.7754 102.399 42.7227 102.688 42.6172 cv
102.829 43.8945 li
102.446 44.0586 102.013 44.1406 101.528 44.1406 cv
101.231 44.1406 100.964 44.0908 100.726 43.9912 cv
100.487 43.8916 100.313 43.7627 100.201 43.6045 cv
100.09 43.4463 100.013 43.2324 99.9697 42.9629 cv
99.9346 42.7715 99.917 42.3848 99.917 41.8027 cv
99.917 39.0898 li
99.1611 39.0898 li
99.1611 37.7773 li
99.917 37.7773 li
99.917 36.541 li
101.569 35.5801 li
101.569 37.7773 li
102.694 37.7773 li
cp
f
103.837 44 mo
103.837 37.7773 li
105.483 37.7773 li
105.483 44 li
103.837 44 li
cp
103.837 36.9336 mo
103.837 35.4102 li
105.483 35.4102 li
105.483 36.9336 li
103.837 36.9336 li
cp
f
106.45 37.7773 mo
107.364 37.7773 li
107.364 37.3086 li
107.364 36.7852 107.42 36.3945 107.531 36.1367 cv
107.643 35.8789 107.848 35.6689 108.146 35.5068 cv
108.445 35.3447 108.823 35.2637 109.28 35.2637 cv
109.749 35.2637 110.208 35.334 110.657 35.4746 cv
110.435 36.623 li
110.173 36.5605 109.921 36.5293 109.679 36.5293 cv
109.44 36.5293 109.27 36.585 109.166 36.6963 cv
109.063 36.8076 109.011 37.0215 109.011 37.3379 cv
109.011 37.7773 li
110.241 37.7773 li
110.241 39.0723 li
109.011 39.0723 li
109.011 44 li
107.364 44 li
107.364 39.0723 li
106.45 39.0723 li
106.45 37.7773 li
cp
f
111.167 44 mo
111.167 37.7773 li
112.813 37.7773 li
112.813 44 li
111.167 44 li
cp
111.167 36.9336 mo
111.167 35.4102 li
112.813 35.4102 li
112.813 36.9336 li
111.167 36.9336 li
cp
f
119.927 39.6172 mo
118.304 39.9102 li
118.249 39.5859 118.125 39.3418 117.932 39.1777 cv
117.738 39.0137 117.487 38.9316 117.179 38.9316 cv
116.769 38.9316 116.441 39.0732 116.197 39.3564 cv
115.953 39.6396 115.831 40.1133 115.831 40.7773 cv
115.831 41.5156 115.955 42.0371 116.203 42.3418 cv
116.451 42.6465 116.784 42.7988 117.202 42.7988 cv
117.515 42.7988 117.771 42.71 117.97 42.5322 cv
118.169 42.3545 118.31 42.0488 118.392 41.6152 cv
120.009 41.8906 li
119.841 42.6328 119.519 43.1934 119.042 43.5723 cv
118.565 43.9512 117.927 44.1406 117.126 44.1406 cv
116.216 44.1406 115.49 43.8535 114.949 43.2793 cv
114.408 42.7051 114.138 41.9102 114.138 40.8945 cv
114.138 39.8672 114.409 39.0674 114.952 38.4951 cv
115.495 37.9229 116.229 37.6367 117.155 37.6367 cv
117.913 37.6367 118.516 37.7998 118.963 38.126 cv
119.41 38.4521 119.731 38.9492 119.927 39.6172 cv
cp
f
124.608 41.0117 mo
124.397 41.082 124.063 41.166 123.606 41.2637 cv
123.149 41.3613 122.851 41.457 122.71 41.5508 cv
122.495 41.7031 122.388 41.8965 122.388 42.1309 cv
122.388 42.3613 122.474 42.5605 122.646 42.7285 cv
122.817 42.8965 123.036 42.9805 123.302 42.9805 cv
123.599 42.9805 123.882 42.8828 124.151 42.6875 cv
124.351 42.5391 124.481 42.3574 124.544 42.1426 cv
124.587 42.002 124.608 41.7344 124.608 41.3398 cv
124.608 41.0117 li
cp
122.405 39.6758 mo
120.911 39.4063 li
121.079 38.8047 121.368 38.3594 121.778 38.0703 cv
122.188 37.7813 122.798 37.6367 123.606 37.6367 cv
124.341 37.6367 124.888 37.7236 125.247 37.8975 cv
125.606 38.0713 125.859 38.292 126.006 38.5596 cv
126.152 38.8271 126.226 39.3184 126.226 40.0332 cv
126.208 41.9551 li
126.208 42.502 126.234 42.9053 126.287 43.165 cv
126.34 43.4248 126.438 43.7031 126.583 44 cv
124.954 44 li
124.911 43.8906 124.858 43.7285 124.796 43.5137 cv
124.769 43.416 124.749 43.3516 124.737 43.3203 cv
124.456 43.5938 124.155 43.7988 123.835 43.9355 cv
123.515 44.0723 123.173 44.1406 122.81 44.1406 cv
122.169 44.1406 121.664 43.9668 121.295 43.6191 cv
120.926 43.2715 120.741 42.832 120.741 42.3008 cv
120.741 41.9492 120.825 41.6357 120.993 41.3604 cv
121.161 41.085 121.396 40.874 121.699 40.7275 cv
122.002 40.5811 122.438 40.4531 123.009 40.3438 cv
123.778 40.1992 124.312 40.0645 124.608 39.9395 cv
124.608 39.7754 li
124.608 39.459 124.53 39.2334 124.374 39.0986 cv
124.218 38.9639 123.923 38.8965 123.489 38.8965 cv
123.196 38.8965 122.968 38.9541 122.804 39.0693 cv
122.64 39.1846 122.507 39.3867 122.405 39.6758 cv
cp
f
130.702 37.7773 mo
130.702 39.0898 li
129.577 39.0898 li
129.577 41.5977 li
129.577 42.1055 129.588 42.4014 129.609 42.4854 cv
129.631 42.5693 129.68 42.6387 129.756 42.6934 cv
129.832 42.748 129.925 42.7754 130.034 42.7754 cv
130.187 42.7754 130.407 42.7227 130.696 42.6172 cv
130.837 43.8945 li
130.454 44.0586 130.021 44.1406 129.536 44.1406 cv
129.239 44.1406 128.972 44.0908 128.733 43.9912 cv
128.495 43.8916 128.32 43.7627 128.209 43.6045 cv
128.098 43.4463 128.021 43.2324 127.978 42.9629 cv
127.942 42.7715 127.925 42.3848 127.925 41.8027 cv
127.925 39.0898 li
127.169 39.0898 li
127.169 37.7773 li
127.925 37.7773 li
127.925 36.541 li
129.577 35.5801 li
129.577 37.7773 li
130.702 37.7773 li
cp
f
131.845 44 mo
131.845 37.7773 li
133.491 37.7773 li
133.491 44 li
131.845 44 li
cp
131.845 36.9336 mo
131.845 35.4102 li
133.491 35.4102 li
133.491 36.9336 li
131.845 36.9336 li
cp
f
136.485 40.8887 mo
136.485 41.5059 136.632 41.9785 136.925 42.3066 cv
137.218 42.6348 137.579 42.7988 138.009 42.7988 cv
138.438 42.7988 138.799 42.6348 139.09 42.3066 cv
139.381 41.9785 139.526 41.502 139.526 40.877 cv
139.526 40.2676 139.381 39.7988 139.09 39.4707 cv
138.799 39.1426 138.438 38.9785 138.009 38.9785 cv
137.579 38.9785 137.218 39.1426 136.925 39.4707 cv
136.632 39.7988 136.485 40.2715 136.485 40.8887 cv
cp
134.798 40.8008 mo
134.798 40.2539 134.933 39.7246 135.202 39.2129 cv
135.472 38.7012 135.854 38.3105 136.348 38.041 cv
136.842 37.7715 137.394 37.6367 138.003 37.6367 cv
138.944 37.6367 139.716 37.9424 140.317 38.5537 cv
140.919 39.165 141.22 39.9375 141.22 40.8711 cv
141.22 41.8125 140.916 42.5928 140.309 43.2119 cv
139.701 43.8311 138.937 44.1406 138.015 44.1406 cv
137.444 44.1406 136.9 44.0117 136.383 43.7539 cv
135.865 43.4961 135.472 43.1182 135.202 42.6201 cv
134.933 42.1221 134.798 41.5156 134.798 40.8008 cv
cp
f
148.169 44 mo
146.522 44 li
146.522 40.8242 li
146.522 40.1523 146.487 39.7178 146.417 39.5205 cv
146.347 39.3232 146.232 39.1699 146.074 39.0605 cv
145.916 38.9512 145.726 38.8965 145.503 38.8965 cv
145.218 38.8965 144.962 38.9746 144.735 39.1309 cv
144.509 39.2871 144.354 39.4941 144.27 39.752 cv
144.186 40.0098 144.144 40.4863 144.144 41.1816 cv
144.144 44 li
142.497 44 li
142.497 37.7773 li
144.026 37.7773 li
144.026 38.6914 li
144.569 37.9883 145.253 37.6367 146.077 37.6367 cv
146.44 37.6367 146.772 37.7021 147.073 37.833 cv
147.374 37.9639 147.602 38.1309 147.756 38.334 cv
147.91 38.5371 148.018 38.7676 148.078 39.0254 cv
148.139 39.2832 148.169 39.6523 148.169 40.1328 cv
148.169 44 li
cp
f
198 25.5 mo
528 25.5 li
528 55.5 li
198 55.5 li
198 25.5 li
cp
.793973 1 .278019 .337499 cmyk
f
336.416 41.2051 mo
338.104 41.041 li
338.205 41.6074 338.411 42.0234 338.722 42.2891 cv
339.032 42.5547 339.451 42.6875 339.979 42.6875 cv
340.537 42.6875 340.958 42.5693 341.241 42.333 cv
341.524 42.0967 341.666 41.8203 341.666 41.5039 cv
341.666 41.3008 341.606 41.1279 341.487 40.9854 cv
341.368 40.8428 341.16 40.7188 340.863 40.6133 cv
340.66 40.543 340.197 40.418 339.475 40.2383 cv
338.545 40.0078 337.893 39.7246 337.518 39.3887 cv
336.99 38.916 336.727 38.3398 336.727 37.6602 cv
336.727 37.2227 336.851 36.8135 337.099 36.4326 cv
337.347 36.0518 337.704 35.7617 338.171 35.5625 cv
338.638 35.3633 339.201 35.2637 339.861 35.2637 cv
340.939 35.2637 341.751 35.5 342.296 35.9727 cv
342.841 36.4453 343.127 37.0762 343.154 37.8652 cv
341.42 37.9414 li
341.346 37.5 341.187 37.1826 340.942 36.9893 cv
340.698 36.7959 340.332 36.6992 339.844 36.6992 cv
339.34 36.6992 338.945 36.8027 338.66 37.0098 cv
338.477 37.1426 338.385 37.3203 338.385 37.543 cv
338.385 37.7461 338.471 37.9199 338.643 38.0645 cv
338.861 38.248 339.393 38.4395 340.236 38.6387 cv
341.08 38.8379 341.704 39.0439 342.108 39.2568 cv
342.513 39.4697 342.829 39.7607 343.058 40.1299 cv
343.286 40.499 343.4 40.9551 343.4 41.498 cv
343.4 41.9902 343.264 42.4512 342.99 42.8809 cv
342.717 43.3105 342.33 43.6299 341.83 43.8389 cv
341.33 44.0479 340.707 44.1523 339.961 44.1523 cv
338.875 44.1523 338.041 43.9014 337.459 43.3994 cv
336.877 42.8975 336.529 42.166 336.416 41.2051 cv
cp
0 0 0 0 cmyk
f
350.273 39.6172 mo
348.65 39.9102 li
348.596 39.5859 348.472 39.3418 348.278 39.1777 cv
348.085 39.0137 347.834 38.9316 347.525 38.9316 cv
347.115 38.9316 346.788 39.0732 346.544 39.3564 cv
346.3 39.6396 346.178 40.1133 346.178 40.7773 cv
346.178 41.5156 346.302 42.0371 346.55 42.3418 cv
346.798 42.6465 347.131 42.7988 347.549 42.7988 cv
347.861 42.7988 348.117 42.71 348.316 42.5322 cv
348.516 42.3545 348.656 42.0488 348.738 41.6152 cv
350.355 41.8906 li
350.188 42.6328 349.865 43.1934 349.389 43.5723 cv
348.912 43.9512 348.273 44.1406 347.473 44.1406 cv
346.563 44.1406 345.837 43.8535 345.296 43.2793 cv
344.755 42.7051 344.484 41.9102 344.484 40.8945 cv
344.484 39.8672 344.756 39.0674 345.299 38.4951 cv
345.842 37.9229 346.576 37.6367 347.502 37.6367 cv
348.26 37.6367 348.862 37.7998 349.31 38.126 cv
349.757 38.4521 350.078 38.9492 350.273 39.6172 cv
cp
f
353.098 44 mo
351.451 44 li
351.451 37.7773 li
352.98 37.7773 li
352.98 38.6621 li
353.242 38.2441 353.478 37.9688 353.687 37.8359 cv
353.896 37.7031 354.133 37.6367 354.398 37.6367 cv
354.773 37.6367 355.135 37.7402 355.482 37.9473 cv
354.973 39.3828 li
354.695 39.2031 354.438 39.1133 354.199 39.1133 cv
353.969 39.1133 353.773 39.1768 353.613 39.3037 cv
353.453 39.4307 353.327 39.6602 353.235 39.9922 cv
353.144 40.3242 353.098 41.0195 353.098 42.0781 cv
353.098 44 li
cp
f
359.889 40.3555 mo
359.877 39.8789 359.754 39.5166 359.52 39.2686 cv
359.285 39.0205 359 38.8965 358.664 38.8965 cv
358.305 38.8965 358.008 39.0273 357.773 39.2891 cv
357.539 39.5508 357.424 39.9063 357.428 40.3555 cv
359.889 40.3555 li
cp
359.795 42.0195 mo
361.436 42.2949 li
361.225 42.8965 360.892 43.3545 360.437 43.6689 cv
359.981 43.9834 359.412 44.1406 358.729 44.1406 cv
357.646 44.1406 356.846 43.7871 356.326 43.0801 cv
355.916 42.5137 355.711 41.7988 355.711 40.9355 cv
355.711 39.9043 355.98 39.0967 356.52 38.5127 cv
357.059 37.9287 357.74 37.6367 358.564 37.6367 cv
359.49 37.6367 360.221 37.9424 360.756 38.5537 cv
361.291 39.165 361.547 40.1016 361.523 41.3633 cv
357.398 41.3633 li
357.41 41.8516 357.543 42.2314 357.797 42.5029 cv
358.051 42.7744 358.367 42.9102 358.746 42.9102 cv
359.004 42.9102 359.221 42.8398 359.396 42.6992 cv
359.572 42.5586 359.705 42.332 359.795 42.0195 cv
cp
f
366.563 40.3555 mo
366.551 39.8789 366.428 39.5166 366.193 39.2686 cv
365.959 39.0205 365.674 38.8965 365.338 38.8965 cv
364.979 38.8965 364.682 39.0273 364.447 39.2891 cv
364.213 39.5508 364.098 39.9063 364.102 40.3555 cv
366.563 40.3555 li
cp
366.469 42.0195 mo
368.109 42.2949 li
367.898 42.8965 367.565 43.3545 367.11 43.6689 cv
366.655 43.9834 366.086 44.1406 365.402 44.1406 cv
364.32 44.1406 363.52 43.7871 363 43.0801 cv
362.59 42.5137 362.385 41.7988 362.385 40.9355 cv
362.385 39.9043 362.654 39.0967 363.193 38.5127 cv
363.732 37.9287 364.414 37.6367 365.238 37.6367 cv
366.164 37.6367 366.895 37.9424 367.43 38.5537 cv
367.965 39.165 368.221 40.1016 368.197 41.3633 cv
364.072 41.3633 li
364.084 41.8516 364.217 42.2314 364.471 42.5029 cv
364.725 42.7744 365.041 42.9102 365.42 42.9102 cv
365.678 42.9102 365.895 42.8398 366.07 42.6992 cv
366.246 42.5586 366.379 42.332 366.469 42.0195 cv
cp
f
375.199 44 mo
373.553 44 li
373.553 40.8242 li
373.553 40.1523 373.518 39.7178 373.447 39.5205 cv
373.377 39.3232 373.263 39.1699 373.104 39.0605 cv
372.946 38.9512 372.756 38.8965 372.533 38.8965 cv
372.248 38.8965 371.992 38.9746 371.766 39.1309 cv
371.539 39.2871 371.384 39.4941 371.3 39.752 cv
371.216 40.0098 371.174 40.4863 371.174 41.1816 cv
371.174 44 li
369.527 44 li
369.527 37.7773 li
371.057 37.7773 li
371.057 38.6914 li
371.6 37.9883 372.283 37.6367 373.107 37.6367 cv
373.471 37.6367 373.803 37.7021 374.104 37.833 cv
374.404 37.9639 374.632 38.1309 374.786 38.334 cv
374.94 38.5371 375.048 38.7676 375.108 39.0254 cv
375.169 39.2832 375.199 39.6523 375.199 40.1328 cv
375.199 44 li
cp
f
376.869 44 mo
376.869 37.7773 li
378.516 37.7773 li
378.516 44 li
376.869 44 li
cp
376.869 36.9336 mo
376.869 35.4102 li
378.516 35.4102 li
378.516 36.9336 li
376.869 36.9336 li
cp
f
385.863 44 mo
384.217 44 li
384.217 40.8242 li
384.217 40.1523 384.182 39.7178 384.111 39.5205 cv
384.041 39.3232 383.927 39.1699 383.769 39.0605 cv
383.61 38.9512 383.42 38.8965 383.197 38.8965 cv
382.912 38.8965 382.656 38.9746 382.43 39.1309 cv
382.203 39.2871 382.048 39.4941 381.964 39.752 cv
381.88 40.0098 381.838 40.4863 381.838 41.1816 cv
381.838 44 li
380.191 44 li
380.191 37.7773 li
381.721 37.7773 li
381.721 38.6914 li
382.264 37.9883 382.947 37.6367 383.771 37.6367 cv
384.135 37.6367 384.467 37.7021 384.768 37.833 cv
385.068 37.9639 385.296 38.1309 385.45 38.334 cv
385.604 38.5371 385.712 38.7676 385.772 39.0254 cv
385.833 39.2832 385.863 39.6523 385.863 40.1328 cv
385.863 44 li
cp
f
388.852 40.7598 mo
388.852 41.4199 388.979 41.9033 389.235 42.21 cv
389.491 42.5166 389.807 42.6699 390.182 42.6699 cv
390.584 42.6699 390.924 42.5127 391.201 42.1982 cv
391.479 41.8838 391.617 41.418 391.617 40.8008 cv
391.617 40.1563 391.484 39.6777 391.219 39.3652 cv
390.953 39.0527 390.617 38.8965 390.211 38.8965 cv
389.816 38.8965 389.491 39.0498 389.235 39.3564 cv
388.979 39.6631 388.852 40.1309 388.852 40.7598 cv
cp
387.381 44.4102 mo
389.262 44.6387 li
389.293 44.8574 389.365 45.0078 389.479 45.0898 cv
389.635 45.207 389.881 45.2656 390.217 45.2656 cv
390.646 45.2656 390.969 45.2012 391.184 45.0723 cv
391.328 44.9863 391.438 44.8477 391.512 44.6563 cv
391.563 44.5195 391.588 44.2676 391.588 43.9004 cv
391.588 42.9922 li
391.096 43.6641 390.475 44 389.725 44 cv
388.889 44 388.227 43.6465 387.738 42.9395 cv
387.355 42.3809 387.164 41.6855 387.164 40.8535 cv
387.164 39.8105 387.415 39.0137 387.917 38.4629 cv
388.419 37.9121 389.043 37.6367 389.789 37.6367 cv
390.559 37.6367 391.193 37.9746 391.693 38.6504 cv
391.693 37.7773 li
393.234 37.7773 li
393.234 43.3613 li
393.234 44.0957 393.174 44.6445 393.053 45.0078 cv
392.932 45.3711 392.762 45.6563 392.543 45.8633 cv
392.324 46.0703 392.032 46.2324 391.667 46.3496 cv
391.302 46.4668 390.84 46.5254 390.281 46.5254 cv
389.227 46.5254 388.479 46.3447 388.037 45.9834 cv
387.596 45.6221 387.375 45.1641 387.375 44.6094 cv
387.375 44.5547 387.377 44.4883 387.381 44.4102 cv
cp
f
538 25.5 mo
698 25.5 li
698 55.5 li
538 55.5 li
538 25.5 li
cp
.793973 1 .278019 .337499 cmyk
f
595.532 44 mo
595.532 35.4102 li
601.901 35.4102 li
601.901 36.8633 li
597.267 36.8633 li
597.267 38.7676 li
601.579 38.7676 li
601.579 40.2148 li
597.267 40.2148 li
597.267 42.5527 li
602.065 42.5527 li
602.065 44 li
595.532 44 li
cp
0 0 0 0 cmyk
f
603.524 44 mo
603.524 35.4102 li
605.171 35.4102 li
605.171 44 li
603.524 44 li
cp
f
606.858 44 mo
606.858 37.7773 li
608.505 37.7773 li
608.505 44 li
606.858 44 li
cp
606.858 36.9336 mo
606.858 35.4102 li
608.505 35.4102 li
608.505 36.9336 li
606.858 36.9336 li
cp
f
611.511 40.7598 mo
611.511 41.4199 611.639 41.9033 611.895 42.21 cv
612.15 42.5166 612.466 42.6699 612.841 42.6699 cv
613.243 42.6699 613.583 42.5127 613.86 42.1982 cv
614.138 41.8838 614.276 41.418 614.276 40.8008 cv
614.276 40.1563 614.144 39.6777 613.878 39.3652 cv
613.612 39.0527 613.276 38.8965 612.87 38.8965 cv
612.476 38.8965 612.15 39.0498 611.895 39.3564 cv
611.639 39.6631 611.511 40.1309 611.511 40.7598 cv
cp
610.04 44.4102 mo
611.921 44.6387 li
611.952 44.8574 612.024 45.0078 612.138 45.0898 cv
612.294 45.207 612.54 45.2656 612.876 45.2656 cv
613.306 45.2656 613.628 45.2012 613.843 45.0723 cv
613.987 44.9863 614.097 44.8477 614.171 44.6563 cv
614.222 44.5195 614.247 44.2676 614.247 43.9004 cv
614.247 42.9922 li
613.755 43.6641 613.134 44 612.384 44 cv
611.548 44 610.886 43.6465 610.397 42.9395 cv
610.015 42.3809 609.823 41.6855 609.823 40.8535 cv
609.823 39.8105 610.074 39.0137 610.576 38.4629 cv
611.078 37.9121 611.702 37.6367 612.448 37.6367 cv
613.218 37.6367 613.853 37.9746 614.353 38.6504 cv
614.353 37.7773 li
615.894 37.7773 li
615.894 43.3613 li
615.894 44.0957 615.833 44.6445 615.712 45.0078 cv
615.591 45.3711 615.421 45.6563 615.202 45.8633 cv
614.983 46.0703 614.691 46.2324 614.326 46.3496 cv
613.961 46.4668 613.499 46.5254 612.94 46.5254 cv
611.886 46.5254 611.138 46.3447 610.696 45.9834 cv
610.255 45.6221 610.034 45.1641 610.034 44.6094 cv
610.034 44.5547 610.036 44.4883 610.04 44.4102 cv
cp
f
617.522 44 mo
617.522 37.7773 li
619.169 37.7773 li
619.169 44 li
617.522 44 li
cp
617.522 36.9336 mo
617.522 35.4102 li
619.169 35.4102 li
619.169 36.9336 li
617.522 36.9336 li
cp
f
622.421 40.7539 mo
622.421 41.3984 622.522 41.875 622.726 42.1836 cv
623.011 42.6211 623.39 42.8398 623.862 42.8398 cv
624.226 42.8398 624.535 42.6846 624.791 42.374 cv
625.047 42.0635 625.175 41.5742 625.175 40.9063 cv
625.175 40.1953 625.046 39.6826 624.788 39.3682 cv
624.53 39.0537 624.2 38.8965 623.798 38.8965 cv
623.403 38.8965 623.075 39.0498 622.813 39.3564 cv
622.552 39.6631 622.421 40.1289 622.421 40.7539 cv
cp
620.786 44 mo
620.786 35.4102 li
622.433 35.4102 li
622.433 38.5039 li
622.94 37.9258 623.542 37.6367 624.237 37.6367 cv
624.995 37.6367 625.622 37.9111 626.118 38.46 cv
626.614 39.0088 626.862 39.7969 626.862 40.8242 cv
626.862 41.8867 626.609 42.7051 626.104 43.2793 cv
625.598 43.8535 624.983 44.1406 624.261 44.1406 cv
623.905 44.1406 623.555 44.0518 623.209 43.874 cv
622.863 43.6963 622.565 43.4336 622.315 43.0859 cv
622.315 44 li
620.786 44 li
cp
f
628.187 44 mo
628.187 37.7773 li
629.833 37.7773 li
629.833 44 li
628.187 44 li
cp
628.187 36.9336 mo
628.187 35.4102 li
629.833 35.4102 li
629.833 36.9336 li
628.187 36.9336 li
cp
f
631.521 44 mo
631.521 35.4102 li
633.167 35.4102 li
633.167 44 li
631.521 44 li
cp
f
634.854 44 mo
634.854 37.7773 li
636.501 37.7773 li
636.501 44 li
634.854 44 li
cp
634.854 36.9336 mo
634.854 35.4102 li
636.501 35.4102 li
636.501 36.9336 li
634.854 36.9336 li
cp
f
641.042 37.7773 mo
641.042 39.0898 li
639.917 39.0898 li
639.917 41.5977 li
639.917 42.1055 639.928 42.4014 639.949 42.4854 cv
639.971 42.5693 640.02 42.6387 640.096 42.6934 cv
640.172 42.748 640.265 42.7754 640.374 42.7754 cv
640.526 42.7754 640.747 42.7227 641.036 42.6172 cv
641.177 43.8945 li
640.794 44.0586 640.36 44.1406 639.876 44.1406 cv
639.579 44.1406 639.312 44.0908 639.073 43.9912 cv
638.835 43.8916 638.66 43.7627 638.549 43.6045 cv
638.438 43.4463 638.36 43.2324 638.317 42.9629 cv
638.282 42.7715 638.265 42.3848 638.265 41.8027 cv
638.265 39.0898 li
637.509 39.0898 li
637.509 37.7773 li
638.265 37.7773 li
638.265 36.541 li
639.917 35.5801 li
639.917 37.7773 li
641.042 37.7773 li
cp
f
641.405 37.7773 mo
643.157 37.7773 li
644.646 42.1953 li
646.099 37.7773 li
647.804 37.7773 li
645.606 43.7656 li
645.214 44.8496 li
645.069 45.2129 644.932 45.4902 644.801 45.6816 cv
644.67 45.873 644.52 46.0283 644.35 46.1475 cv
644.18 46.2666 643.971 46.3594 643.723 46.4258 cv
643.475 46.4922 643.194 46.5254 642.882 46.5254 cv
642.565 46.5254 642.255 46.4922 641.95 46.4258 cv
641.804 45.1367 li
642.062 45.1875 642.294 45.2129 642.501 45.2129 cv
642.884 45.2129 643.167 45.1006 643.351 44.876 cv
643.534 44.6514 643.675 44.3652 643.772 44.0176 cv
641.405 37.7773 li
cp
f
708 25.5 mo
860.7 25.5 li
860.7 55.5 li
708 55.5 li
708 25.5 li
cp
.793973 1 .278019 .337499 cmyk
f
760.14 44 mo
760.14 35.4102 li
761.874 35.4102 li
761.874 44 li
760.14 44 li
cp
0 0 0 0 cmyk
f
769.175 44 mo
767.528 44 li
767.528 40.8242 li
767.528 40.1523 767.493 39.7178 767.423 39.5205 cv
767.353 39.3232 767.238 39.1699 767.08 39.0605 cv
766.922 38.9512 766.731 38.8965 766.509 38.8965 cv
766.224 38.8965 765.968 38.9746 765.741 39.1309 cv
765.515 39.2871 765.359 39.4941 765.275 39.752 cv
765.191 40.0098 765.149 40.4863 765.149 41.1816 cv
765.149 44 li
763.503 44 li
763.503 37.7773 li
765.032 37.7773 li
765.032 38.6914 li
765.575 37.9883 766.259 37.6367 767.083 37.6367 cv
767.446 37.6367 767.778 37.7021 768.079 37.833 cv
768.38 37.9639 768.607 38.1309 768.762 38.334 cv
768.916 38.5371 769.023 38.7676 769.084 39.0254 cv
769.145 39.2832 769.175 39.6523 769.175 40.1328 cv
769.175 44 li
cp
f
776.271 39.6172 mo
774.647 39.9102 li
774.593 39.5859 774.469 39.3418 774.275 39.1777 cv
774.082 39.0137 773.831 38.9316 773.522 38.9316 cv
773.112 38.9316 772.785 39.0732 772.541 39.3564 cv
772.297 39.6396 772.175 40.1133 772.175 40.7773 cv
772.175 41.5156 772.299 42.0371 772.547 42.3418 cv
772.795 42.6465 773.128 42.7988 773.546 42.7988 cv
773.858 42.7988 774.114 42.71 774.313 42.5322 cv
774.513 42.3545 774.653 42.0488 774.735 41.6152 cv
776.353 41.8906 li
776.185 42.6328 775.862 43.1934 775.386 43.5723 cv
774.909 43.9512 774.271 44.1406 773.47 44.1406 cv
772.56 44.1406 771.834 43.8535 771.293 43.2793 cv
770.752 42.7051 770.481 41.9102 770.481 40.8945 cv
770.481 39.8672 770.753 39.0674 771.296 38.4951 cv
771.839 37.9229 772.573 37.6367 773.499 37.6367 cv
774.257 37.6367 774.859 37.7998 775.307 38.126 cv
775.754 38.4521 776.075 38.9492 776.271 39.6172 cv
cp
f
777.519 44 mo
777.519 35.4102 li
779.165 35.4102 li
779.165 44 li
777.519 44 li
cp
f
784.948 44 mo
784.948 43.0684 li
784.722 43.4004 784.424 43.6621 784.055 43.8535 cv
783.686 44.0449 783.296 44.1406 782.886 44.1406 cv
782.468 44.1406 782.093 44.0488 781.761 43.8652 cv
781.429 43.6816 781.188 43.4238 781.04 43.0918 cv
780.892 42.7598 780.817 42.3008 780.817 41.7148 cv
780.817 37.7773 li
782.464 37.7773 li
782.464 40.6367 li
782.464 41.5117 782.494 42.0479 782.555 42.2451 cv
782.615 42.4424 782.726 42.5986 782.886 42.7139 cv
783.046 42.8291 783.249 42.8867 783.495 42.8867 cv
783.776 42.8867 784.028 42.8096 784.251 42.6553 cv
784.474 42.501 784.626 42.3096 784.708 42.0811 cv
784.79 41.8525 784.831 41.293 784.831 40.4023 cv
784.831 37.7773 li
786.478 37.7773 li
786.478 44 li
784.948 44 li
cp
f
787.603 42.2246 mo
789.255 41.9727 li
789.325 42.293 789.468 42.5361 789.683 42.7021 cv
789.897 42.8682 790.198 42.9512 790.585 42.9512 cv
791.011 42.9512 791.331 42.873 791.546 42.7168 cv
791.69 42.6074 791.763 42.4609 791.763 42.2773 cv
791.763 42.1523 791.724 42.0488 791.646 41.9668 cv
791.563 41.8887 791.38 41.8164 791.095 41.75 cv
789.767 41.457 788.925 41.1895 788.569 40.9473 cv
788.077 40.6113 787.831 40.1445 787.831 39.5469 cv
787.831 39.0078 788.044 38.5547 788.47 38.1875 cv
788.896 37.8203 789.556 37.6367 790.45 37.6367 cv
791.302 37.6367 791.935 37.7754 792.349 38.0527 cv
792.763 38.3301 793.048 38.7402 793.204 39.2832 cv
791.651 39.5703 li
791.585 39.3281 791.459 39.1426 791.273 39.0137 cv
791.088 38.8848 790.823 38.8203 790.479 38.8203 cv
790.046 38.8203 789.735 38.8809 789.548 39.002 cv
789.423 39.0879 789.36 39.1992 789.36 39.3359 cv
789.36 39.4531 789.415 39.5527 789.524 39.6348 cv
789.673 39.7441 790.186 39.8984 791.063 40.0977 cv
791.939 40.2969 792.552 40.541 792.899 40.8301 cv
793.243 41.123 793.415 41.5313 793.415 42.0547 cv
793.415 42.625 793.177 43.1152 792.7 43.5254 cv
792.224 43.9355 791.519 44.1406 790.585 44.1406 cv
789.737 44.1406 789.066 43.9688 788.572 43.625 cv
788.078 43.2813 787.755 42.8145 787.603 42.2246 cv
cp
f
794.856 44 mo
794.856 37.7773 li
796.503 37.7773 li
796.503 44 li
794.856 44 li
cp
794.856 36.9336 mo
794.856 35.4102 li
796.503 35.4102 li
796.503 36.9336 li
794.856 36.9336 li
cp
f
799.497 40.8887 mo
799.497 41.5059 799.644 41.9785 799.937 42.3066 cv
800.229 42.6348 800.591 42.7988 801.021 42.7988 cv
801.45 42.7988 801.811 42.6348 802.102 42.3066 cv
802.393 41.9785 802.538 41.502 802.538 40.877 cv
802.538 40.2676 802.393 39.7988 802.102 39.4707 cv
801.811 39.1426 801.45 38.9785 801.021 38.9785 cv
800.591 38.9785 800.229 39.1426 799.937 39.4707 cv
799.644 39.7988 799.497 40.2715 799.497 40.8887 cv
cp
797.81 40.8008 mo
797.81 40.2539 797.944 39.7246 798.214 39.2129 cv
798.483 38.7012 798.865 38.3105 799.359 38.041 cv
799.854 37.7715 800.405 37.6367 801.015 37.6367 cv
801.956 37.6367 802.728 37.9424 803.329 38.5537 cv
803.931 39.165 804.231 39.9375 804.231 40.8711 cv
804.231 41.8125 803.928 42.5928 803.32 43.2119 cv
802.713 43.8311 801.948 44.1406 801.026 44.1406 cv
800.456 44.1406 799.912 44.0117 799.395 43.7539 cv
798.877 43.4961 798.483 43.1182 798.214 42.6201 cv
797.944 42.1221 797.81 41.5156 797.81 40.8008 cv
cp
f
811.181 44 mo
809.534 44 li
809.534 40.8242 li
809.534 40.1523 809.499 39.7178 809.429 39.5205 cv
809.358 39.3232 809.244 39.1699 809.086 39.0605 cv
808.928 38.9512 808.737 38.8965 808.515 38.8965 cv
808.229 38.8965 807.974 38.9746 807.747 39.1309 cv
807.521 39.2871 807.365 39.4941 807.281 39.752 cv
807.197 40.0098 807.155 40.4863 807.155 41.1816 cv
807.155 44 li
805.509 44 li
805.509 37.7773 li
807.038 37.7773 li
807.038 38.6914 li
807.581 37.9883 808.265 37.6367 809.089 37.6367 cv
809.452 37.6367 809.784 37.7021 810.085 37.833 cv
810.386 37.9639 810.613 38.1309 810.768 38.334 cv
810.922 38.5371 811.029 38.7676 811.09 39.0254 cv
811.15 39.2832 811.181 39.6523 811.181 40.1328 cv
811.181 44 li
cp
f
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
168.5 120.5 mo
178.5 120.5 li
185.2 120.5 190.7 120.5 195.1 120.5 cv
201.7 120.5 li
.749721 .679194 .670497 .901457 cmyk
@
206.9 120.5 mo
199.9 124 li
201.7 120.5 li
199.9 117 li
206.9 120.5 li
cp
f
206.9 120.5 mo
199.9 124 li
201.7 120.5 li
199.9 117 li
206.9 120.5 li
cp
@
168.5 120.5 mo
178.5 120.5 li
185.2 120.5 188.5 123.8 188.5 130.5 cv
188.5 186.141 li
188.5 192.841 188.5 196.428 188.4 197.628 cv
188.3 199.428 li
@
188.1 204.728 mo
185 197.528 li
188.4 199.428 li
192 197.828 li
188.1 204.728 li
cp
f
188.1 204.728 mo
185 197.528 li
188.4 199.428 li
192 197.828 li
188.1 204.728 li
cp
@
27.5 75.5 mo
168.5 75.5 li
168.5 176.141 li
27.5 176.141 li
27.5 75.5 li
cp
0 0 0 0 cmyk
f
4 ml
27.5 75.5 mo
168.5 75.5 li
168.5 176.141 li
27.5 176.141 li
27.5 75.5 li
cp
.749721 .679194 .670497 .901457 cmyk
@
10 ml
348 120.5 mo
371.6 120.5 li
@
376.9 120.5 mo
369.9 124 li
371.7 120.5 li
369.9 117 li
376.9 120.5 li
cp
f
376.9 120.5 mo
369.9 124 li
371.7 120.5 li
369.9 117 li
376.9 120.5 li
cp
@
208 75.5 mo
348 75.5 li
348 176.141 li
208 176.141 li
208 75.5 li
cp
0 0 0 0 cmyk
f
4 ml
208 75.5 mo
348 75.5 li
348 176.141 li
208 176.141 li
208 75.5 li
cp
.749721 .679194 .670497 .901457 cmyk
@
10 ml
519 120.5 mo
541.6 120.5 li
@
546.9 120.5 mo
539.9 124 li
541.7 120.5 li
539.9 117 li
546.9 120.5 li
cp
f
546.9 120.5 mo
539.9 124 li
541.7 120.5 li
539.9 117 li
546.9 120.5 li
cp
@
378 75.5 mo
519 75.5 li
519 176.141 li
378 176.141 li
378 75.5 li
cp
0 0 0 0 cmyk
f
4 ml
378 75.5 mo
519 75.5 li
519 176.141 li
378 176.141 li
378 75.5 li
cp
.749721 .679194 .670497 .901457 cmyk
@
10 ml
689 120.5 mo
711.6 120.5 li
@
716.9 120.5 mo
709.9 124 li
711.7 120.5 li
709.9 117 li
716.9 120.5 li
cp
f
716.9 120.5 mo
709.9 124 li
711.7 120.5 li
709.9 117 li
716.9 120.5 li
cp
@
548 75.5 mo
689 75.5 li
689 176.141 li
548 176.141 li
548 75.5 li
cp
0 0 0 0 cmyk
f
4 ml
548 75.5 mo
689 75.5 li
689 176.141 li
548 176.141 li
548 75.5 li
cp
.749721 .679194 .670497 .901457 cmyk
@
3 lw
718 75.5 mo
859 75.5 li
859 176.141 li
718 176.141 li
718 75.5 li
cp
.109163 1 .236423 .000610361 cmyk
@
118 205.828 mo
259 205.828 li
259 289.178 li
118 289.178 li
118 205.828 li
cp
0 0 0 0 cmyk
f
1 lw
118 205.828 mo
259 205.828 li
259 289.178 li
118 289.178 li
118 205.828 li
cp
.749721 .679194 .670497 .901457 cmyk
@
10 ml
348 120.5 mo
358 120.5 li
364.7 120.5 368 123.8 368 130.5 cv
368 148 li
368 154.7 368 171.941 367.9 178.641 cv
367.6 199.428 li
@
367.5 204.728 mo
364.1 197.628 li
367.6 199.428 li
371.1 197.728 li
367.5 204.728 li
cp
f
367.5 204.728 mo
364.1 197.628 li
367.6 199.428 li
371.1 197.728 li
367.5 204.728 li
cp
@
278 205.828 mo
448 205.828 li
448 289.273 li
278 289.273 li
278 205.828 li
cp
0 0 0 0 cmyk
f
4 ml
278 205.828 mo
448 205.828 li
448 289.273 li
278 289.273 li
278 205.828 li
cp
.749721 .679194 .670497 .901457 cmyk
@
10 ml
519 120.5 mo
529 120.5 li
535.7 120.5 539 123.8 539 130.5 cv
539 148 li
539 154.7 539 171.941 538.9 178.641 cv
538.6 199.428 li
@
538.5 204.728 mo
535.1 197.728 li
538.6 199.528 li
542.1 197.828 li
538.5 204.728 li
cp
f
538.5 204.728 mo
535.1 197.728 li
538.6 199.528 li
542.1 197.828 li
538.5 204.728 li
cp
@
468 205.828 mo
609 205.828 li
609 288.512 li
468 288.512 li
468 205.828 li
cp
0 0 0 0 cmyk
f
4 ml
468 205.828 mo
609 205.828 li
609 288.512 li
468 288.512 li
468 205.828 li
cp
.749721 .679194 .670497 .901457 cmyk
@
10 ml
689 120.5 mo
699 120.5 li
705.7 120.5 709 123.8 709 130.5 cv
709 148 li
709 154.7 709 171.941 708.9 178.641 cv
708.6 199.428 li
@
708.5 204.728 mo
705.1 197.728 li
708.6 199.528 li
712.1 197.828 li
708.5 204.728 li
cp
f
708.5 204.728 mo
705.1 197.728 li
708.6 199.528 li
712.1 197.828 li
708.5 204.728 li
cp
@
638 205.828 mo
801.9 205.828 li
801.9 289.142 li
638 289.142 li
638 205.828 li
cp
0 0 0 0 cmyk
f
4 ml
638 205.828 mo
801.9 205.828 li
801.9 289.142 li
638 289.142 li
638 205.828 li
cp
.749721 .679194 .670497 .901457 cmyk
@
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ArialMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 32 /space putdup 84 /T putdup 97 /a putdup 98 /b putdup 100 /d putdup 101 /e putdup 102 /f putdup 105 /i putdup 108 /l putdup 110 /n putdup 111 /o putdup 115 /s putdup 116 /t putdup 117 /u putdup 121 /y putdef/FontBBox {-665 -325 2000 1006} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings16 dict dup begin/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |-/space <1C60D8A8C9B854D00D> |-/T <1C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A595D3927> |-/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177B5D88A> |-/b <1C60D8A8C9B7EF322B32790B4C40581173F160A628925C2B3464303D1D06742E51EAF8B24CA2240525B9E37D08039C077561F794D203DE8C21652F0F5A81A2CE84BC5F560E6CA22CB86602E80E4BBDAC611F34E85189D165B97A2D648CF626A92F4026AFF0CA38E8E165B7E956CB11B132485900857B09AC55401998CADA1EAAF79B76AA2B52CCF0307B360E6D> |-/d <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D9621458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6DD52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB612941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF13CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-/e <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C37295284C077711C162623860AACA404F650F8D516970257> |-/f <1C60D8A8C9B854D0F47057B2F13303E258FCAEE9E8BBA6E28AE872907C5663BFD2A0F535ED0EB011F2C2A875E053FAF73E8AA16B1F99510A6812F90D61CF3F1DA5EF558899A9AE12AAF6AF4568E0F6003B0A2FF6F33293> |-/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B171C8A80AB> |-/l <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-/n <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDADE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A5203A8015DD09B7CE> |-/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F518C54BB58C51D6FB6D0C8> |-/s <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD96538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB3287CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B8435558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F4172D53C8FCAF4D28F2B78D3A4BF03> |-/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F5C42C88FB43C> |-/u <1C60D8A8C9B7EF32240889FE90FF09F794E92023A18223CCBE3629AB7F517D090BF7D55C0A5A8EADD9BE381137FE8504E8B2DB3D16839889E327241ACA8F992A2BB9AD2BCE57ADB306CE2789439E67A64C32BE8669C197F5851EE38793990906DA8D7F8ACFF6D70790F06B02> |-/y <1C60D8A8C9B7A73DB92EFAEC912AA9CB61EA2C87B96577B4D13A11140AAA18C6E226D96ACA3DE3B427B0A298EF106E8BC0FCA1DC8D81AF2F08A42A0F5836B6230FDF576E37CE129EFF9730F23EC10CF5ACA4D4CA70309E71B89A944CA7348AEBF55FF5ADA9F61B4BA14C9A2301A8C53EBFBE665E1DC22E> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/SEJDUS+ArialMT /ArialMT findfont ct_VMDictPut/SEJDUS+ArialMT*1 [32{/.notdef}rp /space 51{/.notdef}rp /T 12{/.notdef}rp /a /b /.notdef /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o 3{/.notdef}rp /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]SEJDUS+ArialMT nfSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf35.5317 96.9253 mo(Total studies identified by )[5.5 6.11768 3.05615 6.11768 2.44385 3.05615 5.5 3.05615 6.11768 6.11768 2.44385 6.11768 5.5 3.05615 2.44385 6.11768 6.11768 6.11768 3.05615 2.44385 3.05615 2.44385 6.11768 6.11768 3.05615 6.11768 5.5 0 ]xsh%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDUS+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/comma <1C60D8A8C9B854D0F42C7AF5C4668C35A6B5F5176B9FC6F495643D4000A6D27DE0DDA4D01F0D89D11ABC5445CF8C34A3A1CF> |-/A <1C60D8A8C9B64EDFED26B9E21A4F64848088903AC9891CF791BDBC4AB29ACC8B3E8D13924A7DDE35F09AC5F4A8229C87124C732743268600EF8D4582208BD16D82> |-/C <1C60D8A8C9B6079F6D1C46AC2732DFBDC9143C94793529C1940296210AAD6EE09C39CFC4DAB7C5F3BA33C9E10838E0BC6FC9318A4E57F309EE20438B434C69AE73A499211EBA75E22A57C1581D93869428818DC700A28C027571D7047CDFA8B017AACDE96DE4B2579EFD2C826A30F6EBDDC52701A22CDD669ADC60B66F32261A1F55EDEF9802FD4511E0EF130772EDFD708A4113A1EDB1E717E0FA7D314851DE59> |-/L <1C60D8A8C9B7EF3224EC6E192BD0FEC2445DA87B99CF0E03A72A> |-/N <1C60D8A8C9B6079F629170873C67115641D0B6890161EC48F71E8D2106F3AC927984C1E464F121F968> |-/S <1C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E558E3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051BE47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE626CDC6D4C322BB391537921D673F5AEE3EC19E36E7EFEC0F06A0EA4EAAB6BBA94DDCD11A6A564B13B510F8C915848233B82F046D854DCD4F1639F149305DC73D3C68DF8AEB47A96A30E55CF8BAD07FA2825BCE0D675F1CC2EBE61B07B772130E23119250F1EBF8FE12A2098D9F09F3F21BDC41666CA4A0BB70D5F0A750B44BB93A5FBFDD2BF8DE450B277265536F77D5BD6F44FB72FF2E708C60107653AE44BFFB26AFF8> |-/c <1C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDCE9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F7BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148C344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D36548FE63FC8465B1B685766E782F0> |-/p <1C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B96470F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F436330DC4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F556CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672C1E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDUS+ArialMT /Encoding getdup 44 /comma putdup 65 /A putdup 67 /C putdup 76 /L putdup 78 /N putdup 83 /S putdup 99 /c putdup 112 /p putpop%ADOEndSubsetFont
/SEJDUS+ArialMT*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 20{/.notdef}rp /A /.notdef /C 8{/.notdef}rp /L /.notdef /N 4{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /.notdef /n /o /p 2{/.notdef}rp /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]SEJDUS+ArialMT nfSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf48.6826 110.125 mo(Scopus, )sh90.8779 110.125 mo(ACL, NeSy )sh%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDUS+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/colon <1C60D8A8C9B854D0F461D1A979903F917C33CF6EDB0A437B4DDC7150150B60E1> |-/h <1C60D8A8C9B7EF322B3BE19FB964E037672C8A279BC86F7B9BF0C8203E131450D56E388301CEAE43162551FBE05CABF94DC3B5DDFBB4DA55D11470EBD41AC970CEE2D2EFA88D51157B4EF5536CB673423CDDB06FA774D27105AD2B1AC2DFA8> |-/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE112857894FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619ADD420F549AB7C795751D32E8EE6> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDUS+ArialMT /Encoding getdup 58 /colon putdup 104 /h putdup 114 /r putpop%ADOEndSubsetFont
/SEJDUS+ArialMT*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 13{/.notdef}rp /colon 6{/.notdef}rp /A /.notdef /C 8{/.notdef}rp /L /.notdef /N 4{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]SEJDUS+ArialMT nfSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf73.1401 123.325 mo(searches:)sh%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDUS+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/two <1C60D8A8C9B7EF322B3EBC745A0BBBAC411180C089B13E648172E07912D1BA378FD965B994D86994B65582FD434477626CA0A7A4AA353654D41B127367E2BE1B714FF63CE28DAC81B61A78F94AD3218D524244E3D9732CC5A4165C96E7ADC9605690D1ECC190DFB9D5017E24EDE1D6B83BBD5FCE6B540AFB666DD6E17D0C90E5976007C04DC3CD2FBFFCA768526960F8706ECECD> |-/four <1C60D8A8C9B7EF32245FD0373664E2B980D56E9D691EE5A95B5050BFE023151494A4A591D0216BE411323E192BCC75A7A889FA57031D> |-/five <1C60D8A8C9B7EF322B11AFD4001C6D393B64E9DE4ADCB9C7DBD29001BCD9C24204BCA349E6D6727DDD519B4607896591269B0F423E62F04083C8D4AAB63F3153F8354DAF7BF13702FC0166656CF2542F30CE9F35F189C04CCF389EF200B50CB6EEE2DB668946DD84852A4BE0E462B71D963D0D41B1A42CCC4B98AFEC49372EF96DD9EB13A793559C13CFDFE477> |-/six <1C60D8A8C9B7EF3224364F35F160A7435603F347AEE370EA008402323F12980EBCF3CB26E2D43E59A0756C6206EFA3FA7F3CF2F0DCAFEBCCFFA3BC8BFA30490E649BC066EACB91D06D39C41CF4418FDA94B94D65C0F6F28F44C8CF193628C8B12F204AFE672CF6576AC3AB52C05B059D0EB4764306E7B6C88FB8AE766FA7D7475CE80EAE625C3D4B3B8AD5F700C1E5123D83D6C3B46406191458255140B2BB2B7285E8760BEB4CAD56CDB5D69E1D01DE82A2FE0C6D1807BC278045A69D91DDA3546299406BFBCDD14522D29A47E391C26AA1D66EE72A60> |-/equal <1C60D8A8C9B7F374869C4D81D9B128A787F701C3A1164A793E363981F7468DA1474C45> |-/J <1C60D8A8C9B7A73D9658D627ED627C91284E113B36EE4477BE063DB79C014B4C1304B38BFA4196C7B3993D5118026189127416D2C23E3BA1516C5E2D259EE2D27698DAD25B31EA788FD5CFA3D890F5093AD3EE1D75864143B6DAD8719C69> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDUS+ArialMT /Encoding getdup 50 /two putdup 52 /four putdup 53 /five putdup 54 /six putdup 61 /equal putdup 74 /J putpop%ADOEndSubsetFont
/SEJDUS+ArialMT*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 5{/.notdef}rp /two /.notdef /four /five /six 3{/.notdef}rp /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C 6{/.notdef}rp /J /.notdef /L /.notdef /N 4{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]SEJDUS+ArialMT nfSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf39.9658 136.525 mo(Journal articles = 2,456)sh%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDUS+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/P <1C60D8A8C9B64EDFF4950CC53012D47AE97D5586315BA2F5162B63CEC117C5379A1B3DB174CB2C739C68916A1E99A346AFF71DBF25658867D9AEF1BF3C47CE1BA73978E8D0D40E52B85A56E08A1369D85E15B0A0C517291916FF6E61D0EFBF59B4862165C7DEA15B42BE3811C2CAA25C54> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDUS+ArialMT /Encoding getdup 80 /P putpop%ADOEndSubsetFont
/SEJDUS+ArialMT*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 5{/.notdef}rp /two /.notdef /four /five /six 3{/.notdef}rp /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C 6{/.notdef}rp /J /.notdef /L /.notdef /N /.notdef /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]SEJDUS+ArialMT nfSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf44.856 149.725 mo(Conference Papers = )sh%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDUS+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/zero <1C60D8A8C9B7EF322B1082CBA0BF9C14E99A3DA73C31B9142A392BD3ABC1EA97FF39C814FAC04D646DD2C4A98FCAF9A9470BD1CDA748490BF1B6225A10425162B711F636C55967253E957B919DCC3F666292C622E3ED0D587E9E568E31D888BB4F8FA5748005C40596B5B6BF48502A62C5A69962DBA8DFCFAE3F282BC60C6C207F4C9D9AD32681DD3B2E0F2C2045F707B1BB6597DD9D355BD3D00BE3A5B546505C954A88> |-/one <1C60D8A8C9B7EF32247817CBAD74894E625B0BAD23872C089E8D91F92FE1B529DBABA181AB8B085B7A00FC86C529813E9B576642> |-/nine <1C60D8A8C9B7EF322B1E3B1A79A1DA03E10E600D068C6F2A2C380B0F6DEBD4D4DD1CC12D66AEECD714986D0BB404BEEE797B931765A09DB6972620435C3E53C33E82E82293552FE3F4B4A9CF87D2D3960A335325D9064F969F569869D5BECFFFACFCA41CE671D232207B2A9F695CAD03F11715AE00BA6E4E4DDB0F807E169B9324CB5646DCC83A5DE270DE3BAEFD03D20E077B3A9C59CEC5C162A3BD3072425BBF0BAF6222E938CACE57A2C4D75634AE3A010D0148B506BD06198AAAA27D1742624D1FE8845D19FF21CDB94B022766F89FD7433D600DF30C7FA27B03E17188994F16> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDUS+ArialMT /Encoding getdup 48 /zero putdup 49 /one putdup 57 /nine putpop%ADOEndSubsetFont
/SEJDUS+ArialMT*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 3{/.notdef}rp /zero /one /two /.notdef /four /five /six 2{/.notdef}rp /nine /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C 6{/.notdef}rp /J /.notdef /L /.notdef /N /.notdef /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]SEJDUS+ArialMT nfSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf80.1631 162.925 mo(19,006)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf216.635 96.9253 mo(Studies screened by title )shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf246.289 110.125 mo(and abstract)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf219.538 123.325 mo(Journal articles = 1,519)sh%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDUS+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/three <1C60D8A8C9B7EF322B10FC2B166D2172609B896A28AF8161ACE0368AFE548E0A1C2891C9468F6CF8001203B3D0EAEFD5067EEA36A5DE0843B3FA3DD10C10DEDE7ECC4B1F205F8D09B2A1084955D8410715DAE41E60E9BEA3731CCA7698FDFAB2F6C5BD853C3D3957C1C3A42CED93CA60AD0CBA44CB0A07053B47ECAA14A0E56199A33A25603E5DB2CC6A470C6EFBC4EF226D2F67623C83F45C93E2C02C0A9A0974576F8175C7B2D4E9F1C9319763C8100AFBFF1D8FFF8EB10F2B0608AF6A0E137303863C59034E23F8CA0DCA04C3BBA93B80F099> |-/eight <1C60D8A8C9B7EF320BBFC2657E9B35A6705AFBBFAA1C93BB40418E3C071A4B65F9256C97D19A81FC1920D97D74BDC10680B006C358F4A055E8EB310D17DB36B82D07BF6EC33DD32B1D55F043C26D6FDD8A81CBAE4C8F71815B896A63B1FDB98A0F7ECF9E837B10C378B26EDC5928C7E8B3799AB2CD264A8AEAC999F603BC4D805ED282A00B545281ED6B9C18B6DFE4AB08C5EA70E73FE4832D8BDE5A7EFB46CDDEE476E8817925C1CEAE85568DE92FBFB771DE6BBC3B6BB104C95219571FA1AFECF133380FB1F1E150D70FC591604EE1D20E2A6F50D40957F263D48A1A19A5D671D3A632D7FED2532ACF68D20DD9EC4B411696AEE5583B5D2BC1304A55977C35> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDUS+ArialMT /Encoding getdup 51 /three putdup 56 /eight putpop%ADOEndSubsetFont
/SEJDUS+ArialMT*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 3{/.notdef}rp /zero /one /two /three /four /five /six /.notdef /eight /nine /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C 6{/.notdef}rp /J /.notdef /L /.notdef /N /.notdef /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /d /e /f /.notdef /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]SEJDUS+ArialMT nfSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf214.333 136.525 mo(Conference papers = 383)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf396.373 96.9253 mo(Studies screened for )shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf417.476 110.125 mo(accessibility)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf397.445 123.325 mo(Journal articles = 80)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf385.002 136.525 mo(Conference papers = 1)sh496.399 136.525 mo(19)[6.11768 0 ]xshSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf565.359 96.9253 mo(Studies assessed for )sh%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDUS+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/g <1C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817A065D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D559B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0C247BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667DC9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FBD88F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF575C72F67F4BEBB98F8AFA57505EC9> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDUS+ArialMT /Encoding getdup 103 /g putpop%ADOEndSubsetFont
/SEJDUS+ArialMT*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 3{/.notdef}rp /zero /one /two /three /four /five /six /.notdef /eight /nine /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C 6{/.notdef}rp /J /.notdef /L /.notdef /N /.notdef /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]SEJDUS+ArialMT nfSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf562.91 110.125 mo(eligibility based on full )shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf598.066 123.325 mo(reading)sh%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDUS+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/seven <1C60D8A8C9B7EF32245185D6A5516F33DB78352C4AC565B22360E031CB3B71A1D11654727B1436E7590FC689EA5F1279CA132C8529B81FF9BDC95FE0F55546101EE3> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDUS+ArialMT /Encoding getdup 55 /seven putpop%ADOEndSubsetFont
/SEJDUS+ArialMT*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 3{/.notdef}rp /zero /one /two /three /four /five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C 6{/.notdef}rp /J /.notdef /L /.notdef /N /.notdef /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]SEJDUS+ArialMT nfSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf567.041 136.525 mo(Journal articles = 75)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf554.19 149.725 mo(Conference papers = 106)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf742.5 96.9253 mo(Studies included in )shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf768.8 110.125 mo(analysis)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf739.297 123.325 mo(Journal articles = 15)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf729.505 136.525 mo(Conference papers = 44)sh%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDUS+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/E <1C60D8A8C9B64EDFFB83C6241DB110BEE5AB2FAD9D94B39ED5E81E7411B66E9361DDE78FC667AB91EF9824> |-/x <1C60D8A8C9B7A73DB920A1A3B81DE7234ACAA5546B4C65820CF3C50E1629C5A6423BAA34A2ECA8C7FE4B71726AC6704CC23AF1725AFB30D2892FC1BDDAFEAD7BE7BD65F1051699CCF4B0> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDUS+ArialMT /Encoding getdup 69 /E putdup 120 /x putpop%ADOEndSubsetFont
/SEJDUS+ArialMT*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 3{/.notdef}rp /zero /one /two /three /four /five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E 4{/.notdef}rp /J /.notdef /L /.notdef /N /.notdef /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u 2{/.notdef}rp /x /y 134{/.notdef}rp]SEJDUS+ArialMT nfSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf142.314 223.291 mo(Excluded based on )sh%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDUS+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/m <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519AD5BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD99C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176AFB9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D55C54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE37B> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDUS+ArialMT /Encoding getdup 109 /m putpop%ADOEndSubsetFont
/SEJDUS+ArialMT*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 3{/.notdef}rp /zero /one /two /three /four /five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E 4{/.notdef}rp /J /.notdef /L /.notdef /N /.notdef /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 2{/.notdef}rp /x /y 134{/.notdef}rp]SEJDUS+ArialMT nfSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf147.212 236.491 mo(automation tools:)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf136.666 249.69 mo(Journal articles = 937)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf137.579 262.891 mo(Conference papers = )shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf172.276 276.091 mo(18,623)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf315.901 225.461 mo(Excluded based on )shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf322.33 238.661 mo(title and abstract)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf305.666 251.86 mo(Journal articles = 1,439)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf300.461 265.061 mo(Conference papers = 264)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf492.813 225.461 mo(Excluded based on )shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf505.974 238.661 mo(inaccessibility)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf493.282 251.86 mo(Journal articles = 5)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf480.432 265.061 mo(Conference papers = 13)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf675.71 225.461 mo(Excluded based on )sh%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDUS+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/slash <1C60D8A8C9B854D0D18501A7E07A7DB7C8496D0849EBF5F0BA> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDUS+ArialMT /Encoding getdup 47 /slash putpop%ADOEndSubsetFont
/SEJDUS+ArialMT*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 2{/.notdef}rp /slash /zero /one /two /three /four /five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E 4{/.notdef}rp /J /.notdef /L /.notdef /N /.notdef /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 2{/.notdef}rp /x /y 134{/.notdef}rp]SEJDUS+ArialMT nfSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf658.606 238.661 mo(inclusion/exclusion criteria)sh%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDUS+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/q <1C60D8A8C9B7EF322408646A760FED70F2D8214740020E61993A1FFE89574C96FDDD947618591671EEE89936F7D0F90E6B11CE96BDCBF7B2C20479CB610D934D0AFBB0721CA3EA49A2D6AB8F9A4A9273E60BD1ACDAB1F7447DBAAB4DD124EC36ECC57CEC13712AB1CAC8625150F69DBA3C4F574D88196863F5C61CC51A61AE68D44A27F86FFD139CDEF75DF80AB81E> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDUS+ArialMT /Encoding getdup 113 /q putpop%ADOEndSubsetFont
/SEJDUS+ArialMT*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 2{/.notdef}rp /slash /zero /one /two /three /four /five /six /seven /eight /nine /colon 2{/.notdef}rp /equal 3{/.notdef}rp /A /.notdef /C /.notdef /E 4{/.notdef}rp /J /.notdef /L /.notdef /N /.notdef /P 2{/.notdef}rp /S /T 12{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /q /r /s /t /u 2{/.notdef}rp /x /y 134{/.notdef}rp]SEJDUS+ArialMT nfSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf681.218 251.86 mo(and study quality)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf673.122 265.061 mo(Journal articles = 60)shSEJDUS+ArialMT*1 [11 0 0 -11 0 0 ]msf663.33 278.261 mo(Conference papers = 62)sh%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/SEJDUS+ArialMT*1 uf/SEJDUS+ArialMT uf/ArialMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 24.0%%AI8_CreatorVersion: 26.2.1%%For: (kyle Hamilton) ()%%Title: (screening-diagram.eps)%%CreationDate: 6/5/22 12:57 PM%%Canvassize: 16383%AI5_FileFormat 14.0%AI24_DataStream%.((`,!*C3C"J5:>lOPA)6q!CQ!+=$g.:_qA]8F!e-oS4ql=4k?;j@skCT@F8!.Y%L!$Kl(((f.0>8q>B9h'0A2Rdn7/V!*<Ftqt,%<j5*`k37P")d%PgRq_#X[KU>Tg,SI78I92a=HBo,^aujD7NJju(lDsid1p;h.([[cI:m.bEURI+B*laNYVhZiA97/cO_lFLiU5>M%74>.iMK#BGk@r'#MM08L;_cO6+mL6jVr]J\@mb)Ua6&PK`\q9ON9sC9`J,ReMQHsEb"Vo*NE[PRN*Es1rPmO/qA,3!ioVOfiASK?%&mGVV!k39eq6od$6#<raosW:r*k&L=$lc+0RRjo)Y6DD;^0fMJ.nJ;4Vf&_]gU:s(@b\<l%$u`B^,[?7%-WZH0Hk8e[[do_JAJZ;%)@j\4)eH[!E'ef%D;2M3Ec.@mZeIs,enl@FiP?:>M1dJ>4i0*bJ;M+<lY&ntej5[2TIYXEq%C/,gX^#dn$UD&BRKnEBSA7p[K-J*%%G9hmX;`0a\@>YB\8k?b=YcnFAtZr([DZc)dVhDE6!FJT"eC3m`G/YJo"]d'.CLA6Q:6H9A/pbSdLoq(-Q]IbBo4K%/VdW;8kVD[%lDW'f4#aq!;LsZ,#-_]n;3@8OfPeSeAJ0L/Yb/gmaD-NB;(+8c$"Pf4eM1#-lX3K:$lCZ@Pt<_;#WlFn8mt=r`2N+V#g?O<Pfsj`%3,QG2Os%&EGJYB-,="k*+(e1kj7I<=7>G@)[ZkCY[YJ?8_mXDL=Ua&.<sm\?JC@ER[V_H6@GAf6+94d95i/pY(bf@5!)EF8fLnmO%)uBe0M3#M"<tl"`?*LpA"$/WAlAebNrKr_QrmsV)5>E.pj34fLY+`7h*/,,S3bTLrO%@q1LW_mF-6]62ik13n3a3bk63"%=Q`Ufq%%#CEWl6KC[5*E3kY?jFF)r%g7#FVQ#'-PsKWtX&3[V`nqST$0!nUo"7]5?;g!Olnb1GH!!%(:#Z&_jaFBP;'>m1]#uD/0Ss(arq!%D;4!QD4<\/(b!SD')5!SkCYLdNs^T;@L\'/gH=.<,Up3>gKn/)9@B+\fX?dWD;-t\:(-^#D;04M[VbUMc7SkH[VZ+'m%n63g7WK=%[XeIaD6(h6[K-I7fU'%9]OiDu@t4kAOW1i!j,e@fZJ2tShR:X<]FZbK:E$dSGOfFW)K?clPI.17b,-n'[r(.^:_:N%.pbjQKq`li%;;`"]U4Dmr.t?rNMj=IpR!=p(,5\3"Z3u3Zjb[VScK?&l%e+f(efA\k2un4K&G30gPBCpX4Pn>Lm8mk1Q1VJS^RZ3KbrksbBDJB*%Z.\FVkO0G?E=9BcbT3_cj;a5qW2=>=l19+!h^m8Uj;FT7/=NlD=(prHA!I"!Zn/]IS;q"b9\6:ppMOP8*38NEX/9Y@%=ibaBDJ;N%s#]8f[4L7L>7\>]!9?'WX7&XVTu=*XdpqtI\R1_QF3hU_[f,'TeB8X.`,]N+MfS`df^d;(j#&\s2r@Q\O9RsE_s!KgQWpj?`b0o!%V,s*0^gFp928]SKH+**AOO%YBmjr]p6-OXf>>XJa30%^hX;5d,!`0ZZo':>DE\>87J?B(J455?i/Ki&QO<C'p)u:<-Y99FuQ@ODf%/m8bSiW;/i!C2/C"S!uY`:kd<nbDbhS.("]T$9(1+J<KN*91s@3csp3<FPW[EQ+KuADMK+6.H&UY3LQZa)fD'f,1-f>4k#0/6]dN%(p7AQD231mcT,mtF,o.d%>VE0HUVG\n;T2^?#NCHDqk9QijS59%NsZ05eotla0aWZ<rdo_D:bu\[dERmD;$;r0c[@]J^o6[\\,f:%S<iWXWX$CfB(allB,9g(=5c=*F=c;OmeUM<F";o^<X@S6f3Q#VG^d=+enied(*:=OCR4Q'^0.W>U&E8\*2!f#RjB2tHS4K^HJf@`%o%],]+5X(7/]Y$G^-c#HFhasg(3B-Ya76fW`H/2l_cEfJ@51j>]'U@FF1ScJiF,Kjju>Ugh_-Rb?<9h@kW5VW<f#M6*NN=l%WVB+%iV/%]\=LZbLthVdhQG38+MZq:FD]2W/$oD'jd^d8<fG@4]+43.loNGR(BAD:^284OLNW[hlD7u+4i;9.IRF$fDn(hLXni86Gc$Hi%j>iS1E1F\N.TjY660JV@LH)3n0ZJ\NLp:93*QD2A93qdEMl*T@MI<%53l^VJ5^^n!c%=@3]Wu)cm\8T#G.i(/WWtph`bS`ne?kn-%I4>dEhQpWRSdd4>*tA4l1FeK-)AQ)qNZ`js[cLYgTRuV]BTBio]Zu<73/6mj'mE'^j"JE)."F@dlWYq[Ueq,7g4h_A6g=Upa)?5Y%rW]-6UbH)\@SZtY9N)k$+Xfnd)1'&"f_)-W?Q+imQ>cY\"4[$,a/U4!!lgu3?A<nS)=tHQ"A%>(f<Qp@"TcQJ*NN<E>Fo!R7E[>h%VVb2i5gJ7ImZ`S+brmg7LBPO24HFJ%NT\i]hmFI)/*8C.4U<*P]b/2cGNPXWb6s@cJd)DOq97,s)F9"-p/-oI"RAVjS&oW..31OG%_'iU#*['@J>Q.d-c?$(5=FKB-SU9LE2PHeJ+8/P$&$J+1!]d/cKkHue[>t@,\KId23M4iR4)P?cla8SX`SusCJl.[`)N@ng,]CYg%1<*NMc!ArmUs3-6`IGj>d;P&gX,E8E&Bgcm+QGQa2Li9u:0IGNHe9449S;Jo-1IJ<'jntd<.*QXPCho.od%WjPbE#?L.dWSC)F"K%@CIo1Z;fV!NkZT#S^1+5"[0Z)XVgReQIe#9au6o"CDJAFmlZNM\DWD7f+p4&GpS:<GHPpgcuB(;h_'H[(*2;9NRR?e$Q9`/a1#h1%pk$,LCXt"L0L#<U!AXi'j]Pp'Gl[A)&-o^T4ME`UmjT[]`]%Ya[gL/9/"U5]:?eF@mhLeH!WoK-A>rtTM\;&j7&'cA&r[GM'<Kd.%8pJ\Wji_$gIV/r_@^1I>01N`=gUOoi9FTN(R0JKLcO8\.X]P=X*^!`O\W#.0K-8-ISbb._SXc#3%>,W(M@U@=DuRUl*le9-_L9Y>%B=0+*`Ks\tkOkjX;c2HV#RDOQP$BON0:*Zn]OJ]R0M'4)pl2M=j"#mr!6fB:&HsCh<-X]kiuS1Pr9(=4O$.F\Y46>K?JH..&\o!Z%F*tu"iH,m^X&m$m!$6f'(os7mRKbQnm()!R?=)TqQcA8M(;Oa8"1W%?c97o;Hf4W;+GJ;#+gqR80jN0f9b@Q$Nc00.?`a"9;)-%(%TYSJ*I(#4,4F\#!>gmaFJ:lbl_fb*n)%!f[fc^o*SG)+6g43lq7=Ogj\9r"d)i_8QZiQrP-I24-IQ&t*4p8!4'a<;YeDQJ)$bY%.%$+^<KqPbaU#eCfP5i;eJJhEu-\gCf1kScM13eFNJ,D#<P7aU2KNl`>>!sN]2c%lGiPg?\F'sFHdjq,l>W+h0giUJHApZ+9ek[2[?%]lu+P^Rtu461YR)9XCG.'47hDr=OhemuH@2,Ih789>;<0,#NXh?>RA0NrZ%i[2l<u31"8!_&^G#gj8)NAsC@.4)].CIP:Fg^N1A[%^>L[cc`,iVYN3lbQ+m=ggiY6eX<<%`ZXOlgA!S[lo;h"4Rc!<ZIlF`hhTU-@RHs\oGi>tj(#3f#^T9E8"aK$p-0P$7M;baGcZ&rR%NSS_-?4R*5&Duq=nSJ"1%g('GbH1I;#S$nhB>js'N<"tDaEO2]ifG9heM)<rl5!+!BD(*/Z>2@:;@EoTBm)sed;i"*pP,h,WDZF7%odV<(P7k9J[d@/_j;5`e3Z_,D,3cl#c0'<d)%A5)TY>:?'c.<4QsZ-f^UI<']I%l/ED.T8(g\o2[k#a<=d3bXB?fB2[`)?bL5W1"%%*u,IhleWW@\RL[m>gcs^0MqCa0U;$VWARFMi*3)bjS4@k;=iO$SUuV?d`Cf^aG`0*s#'A!Zs]E`DT=dE7$FGZY27ol\rUka(G)o%<@QU^7b@CX&n*M#]4s'm]lS"5^Fjj+&iJ70f<?(sM!pU"f/N#TM5#shnXS2b#R&Rh1_bhG;(*uRZDa_<oS_&\=+825N5$l(B#1m&%a0mt2i41/V/Q&S;)>i8BP(4C8"3BuEJn)(\_I&[j74kZ2<eI,Ub^+,2`+@_ik;gglnXS49Gb4#b9@RYNY3/hle+:bG?1f1aB3##;%8->N>kuuC&GUBK1pl0!5T!@cD#2cg*dkWMqiYHpnZ^=;(!bSeZ_e6<X^$p6c2'Rs9XVf?!3YZ#s)iN\LcGf_CP&CAEbnB"1Nc.e4%k7p\*Yrd,c0DiFgn,:sL*maFo-.92kZXR0]dIM\*3A0H9bS&t2G/^\1a"GsOcU;V.Ru)8nf<qR)Z7O1=*/e"EH=&CWG](K4XBT;M%iqnTU;:C=U4Ni">N:RqQA]8kbAN4;$U5P=U<5`?1^1/$M7E5(R35BmQ6q'HScRrD@j1Lu*`5\a@1jbP/*`kMVpP.]b4K%4AXB&bu%jZ(M;$%'^kWDCQ[rm$^'H:I-6Mal_cqJUW9)5.j'b/U0>NQ.\C(?&?1o%g/YNJ:47b4-i![-Wro:$d0bg]@J\*%Ko,P_*Tb!-/"d%GFZumC>hf`5UmITi"b,W)WUSrMT(1`pj_W<7`ad<6SS4?Nar+'iBqYE)1jI`]n4YPOYJK2Z'V.#I.E>.B9]4Os$gKQP3"(3`M*bU%s!Ir0=:Wk'3jpoFmO9Q^OTP)8E`\.$Ac.PjUfqdgVrO;MeJ'UIi\\(4p`0`e0<nZ7+`Pf9SBp=9O#qXR]&/PbF?p_Uo43m?)Un0W%7m+O;&,ld+?T!#_mj1DO$Hd&iJHO50)Ka$kXOB7&H@[:^+FEYu9pHEWdj>aN8)4Fj!/T_:n\&Wj^1'qhr$N4fDifQ+Cbun/`n:6!%r8bq$P[dfN&qVki'sh/"-,U,5E']Y,rm#[<r\-l3D_0%<qJdbu5?sES`>:LQf_rhVqY![+/a)Snj0C3'PR[c`'r*F/__4X1pI<d=%%7SrXPb1o')It35,cN3jifai/==D$=-l!2s5qWkIs,.)l#eRl\+^n?1e%3>G]4a4N@o)H;A!GJpJo[<q&\D?hPStu!V_&fni4.fI%CmKWbH'Y>AVk@u[caH".Hnb.Bhl+>AkB&k<Z/.JU!2,qHQm?ot3d/1R!W<@%"V1I5k?>jpQrW%5S;q)8<kXNAdJrsSpI3^L$peD$%Ie9I<pdG_`\0JU*Vu=R_n-XocPCbE+"Al!K>))9EST7u$maW'@a0qA4Vki!2^LU607&DDX`/]+l@jgh?M.l,$dDf7`Y8`SO:i1o$%X,isc]gh6f8YZE&P^YtJ@ef4:Ups@`S[qbe_9pCu&]7\fK*+4q3:/'t^?%Fgn.+:d1O'.2B!S5=PGpE.,D>D=Ge\FkHG]u!L=QU;%d3aQ:Ti#L!;,"&m6(+Fs&Mc_SIkX"QOfs4j@H)h^4Q:o9r!:2#XU]@9&BHA!KK&f=mcnHW)1=uG(FCuW_,ImMjYWTUiuZs^Ao,r9%2Qc3]`==B,X*C1a#(k"bL69qCNoRM!(6TUqNoRM!SJM<t(>H]?":mO`::&Rl#<KnQj7l[:332h\'!"C%q,P#-;&D$[coG-9hGG-g%=c!RlNl"n.^e-/BR9K3Wi-"n5:LBS"U^3TrLQaLO)8?%@%>G='J3q?Ie)rR1!0*U7q\nBf)/'t$!]P2NFgV\MVafn];_DCS(X&R-%\h;=G*mW(P^ddR4a-HJ2g36i$;>Oj9DO*Vs-#dh17P[>("N*Us5hoQ\P^;@b.)95+"'0+AV#RZVa<IO!%@CoZ]Y9(1/O#%/rlou8%8<0QaR&*Vrp$[uojs^*WP%2baP0QgPnfBb"`'b$k0M>7]0_:dTrlXs0Wbq@D.t[?%9CA%SG*[<Y75-jl/?3QSS1_6ac&_8/:#%ag%OLSEjq6;(VRtIN^;^Fusa4_Z8%QgS.)JS,6h'TPla(^V'1"M.`b3^%+j8;rj:-VM>C`=)IB-7R[qJ#_X21CD;)Sa5_<`+NG4)^)Z%3S$#O:5b`H^R!T.3I9N,Bj@QVqZbP.9Z+mJ<fLc-O[Y9\.p_/6]8cW+3hOR^-.%900DWBggZ5`Ko?O\a='RpaFq=t&j,k,kq/C:V%_*a)#F:_uFJGD1(a%.$#;MOQ`:50@uYP?NX'VA/al(%HWP6"u6Of"O57Na*=XV6%H^<iomGJQWf#*?C/]LF0E\VuZtF`8SQW^nD5%]bjni&JQEO)2q*s]g4WrX2J[RO"[bp)#iIM3&h>:*M<],XWk'lB`nj?FW&*F#.a3U-mEg:c+o.3f`i$n"tkXbO^O1j;XCii1r%?\%VCJLCX>!XA#V3-.8/$Q>ZoC8`eW>\%c?HK2og,0p1/c+doi8DR&OEU413R.k)=&jVlO]B_2h%aS$Z1u7FIATAS6@\`>t$$g%S1=[%![jn:"iLd;[&T0k6:1@`3M4VL*sW#X&Rdc!\Y[1or!i=Oo2iMJKgFB%@A7jJGO_bJ(,n"j?fB-4a8@o]3J#./kmtU8H]ntZ>%*!A%<"[/c&oHWc'7FYPp/G'8a2#.g*qBPNa:,2rBfHCXFtU[<Ym-Xe9=)5-PQ!2)`Y.K!C-]HcL8on$%$Q=L=c<P<>!Yt=@/),2)%(t)%&J)gNdl@$d2M.Z-;1tQ]._!/Z1!_"_R\N>p+Lb=GhY<k'l[^!q*,"OR-ui#:.NR=1(qoB5YMT./C_2Ni.#b/7BnNTE@IY_C.0f5#%bLH`,1;LfP"Q;;L5q&=hHDT6#&JX,j8%KVRmmm]X:TED9fg':qK;\mGl5,Y20FaZ'&FW''EuEiE8hErI>NY/-c6c;LD32gm.P[@Y%+;1ShT81&C"=5o\)Od$VOQ!RbN1W/K1kA<J!!T5[SPC/(MD[*jI'oK=Y/poc.Q"*VS/-ZH-6R3=5\s)l\"&f*72nRadghs7.20=Z%JX>s"7&c6=fYV?tiSj$3mK&/37VSA(R(f:A0Pj$Oi*scAY<_@#m6r&-#S/A-T3,>Z7"E`[&MeF=N'i2=JqX%K/Io#dmHjlaWPGsW%,kAZ09uYI5NhDc0:6VjVYte`dRLCsb1$KqrfuC#-H^,l*J:j3?LdWgQ%%Pf9c[k!1"u1@+iZdtcTL9S).T6h\ZO38k'>$RCIVorD%dU:^p"ioli[$p>hd@b&qQ-V5A+:NOp(^LID]@;MBK98$]_k%9U:AUB#'8^P4*fL/u&JU>5:V*N(=<.aBC3J?S_16_3#cGL8Y!KX*%`5$l^m3l!b.$pKB:/fuQO]/Cid#%H:g_#Q2+9fKFJZEdJdgdEsm$Q<bh';i;htUcZ,0bS[^u-:^]<*s*)<3K,AEbu-01@7O_<Z1D%)i:-7jH[Arr:5\M!(Qf5lajHPA%KO,g&g%h6`<'*rM!=V!i&d;*sd6N`SL3:"\[oTW7&uWFrTGo-Dq_.0GEaW$?!bOgX?"9:Yj0Y%eA5h8UMA;Zk2_p%>a0J"'7j/8aibGCe"&kD;Re,eL/FeRmC[?p::ZqE9U4`cjc/'lcg>gN:<'*olm_3hH3%&-IbP\o2mD.O[MXX;%`#42b0_jnm,R^#j4t$lORG*sQPIg4AK%Ibi"!KOn\s8e_DH(M7<D)jUYeG/^:PiZAq&*19H@=u!3D(*1bDF"a@h!_*NEpAkNGX8?%Gfk8T`/s;UN11Ao1<pl?N,mWqf[/#dDO)>J[.FDgq"I^PfQF']<)4>%dZEG6a6Qt6eco`-Ec;r8Ko;*hS;Priqb]5^mGX/^)e.:N%`<RW6A_W1HUpQB1n:u-hG2nS_Z/'(Bc(*5i,>N8AFXq54MX[W>j<2-7:+FE&W)A;^RS1-.`=TJDk''j*DBH6\M)R,#09chjhJ_9Z%7f3>ZA5j3cbB',Ri<fN#P.XVQlljKmC$L?Q5P/iVH>@pR*J+Z7)m)!B5Nhh"N"->Nr0U:HA,\MR&bCib>_UIATdn;_b6*PbhG_ck%*lm,2)tJA]B#XMA%=(EDI=^EYN,:qR41<Z7$uJA,!9-cnb3=6#L-.'>V@@h%ce=+9F=b>uh88eWb81/kpI`&,r+10)mj[Hdn47Pf%)1Y27oC-pS8DTt<.(SAWh!W!O&]mXD`K5(CAc$4HQ1Aa-Ju4#:@]j%FBQPbI*\P5hdR=pgnckC<1_'`$1ARkNbQF!Gbh-S?MuASk%1H6prIdI.U[QrFU%%b'8/4+@0"0p25)5+2lM?-I.>V`ZkEe$.?__[GGIDb2K-mih<&"5;g[Mjq3;Op><U5XSDNKP'Y2&hB//XFU$%>FgO1a/M=7':6C!`a1).KC@+F^]Q2c!P]=Abpn"o_rA%"Smeia/&]-TK](3lZfsSQS.0''H8ZCe<tpgfYA$ES]WAc!;SbJtWb)sn%;gkh]/%+jO8r<e'_A!9\OART\9nOW<?4sZ55P=:#iIFZR8*4gNZn=IX-duCi9EHuIRPn3b1RTa->XGtj9*p0YI-KXq0nJ$ZIK[s>%b9>5qhbAXk9./-pFBV7oK'FSc0JM,BEVMAcJWm,OZ"E;;%60)m#h3mg,#0@GW@&Tl]2f2I^+^]P6'WVGj)]i4&s!%6@4A#q6AU<q%X]i:$UH(:l+3=7dHp6"eqq.JEj]Q`EecY2Hd8L'W@\$G.KK>$Bna,n-Gj'C0YJoHWma0="#5*YcRC,d/-V*9tc-19-2MCht2[1*L%dt"bj8b5#YeN>1G:pZT5YtTmKMD?JYJS&5k`L#7!klBkhTFXLdAJ5a2]S@@QKjGPuC@GIf/cDZiKlf*\QWu/U/<)UV=@+EeL]oGG%%Mgi1]dfr3a&Dd>Z!#3HR9-rR`W/G=PsCQ7cU0.YjTACc1EttMltb\!m`k$sQ:?(:mut-r(3aLRmE9a=(<&h/D8^L3/Y6`Y'+c_?%9H#SS0u4)_L'];`OBHZ]JQNH!86OX47+Quffdln3S^oLE<)u,V=fh+/<*2NTWhibegnU=)O/aEK'<7SrZ#2WLZmdK<]5:,L1JT/8%J3aV.lST*D/Wi\Z\k"N5b,';M@40QZg9;DFfslZ)@Mfo[6u4`TV"*15\Up%>gg"[?H+Gfo#u_LoZa45tjKo([+D"F^QAg)mXV(05%[%KFF'g#kRKMiE5lchg[(h#m5d[>oi"BmR:B4ALb$L>*Na9/FF;A'H[,3j+G0N:I0j)S<f&)=ClO%HC8O*\5K*h9Z.5-i(T`?[s#%%P!KU0QB'3,T5P@+Uku&.`A=kjMc-XG,S%Q)b^)J?_S]#"satPOa3;q$o1g7%,5nJ%$:aX@%]"e?QeVQ?GO8m>)Y#2G/7l+fP<#P%U^=<i8.Ctr50PNGb1$/74CU?K\15g$S1+N5=<Kk3fj+nbl"NO^af0#Z%Mkd.R3Q*HM&/XO`!`B.bR94=3VZ,[Z<KR<jJV,aa_>$*%)NYBZARL`:)Q0j'/iFqF<N;h:,8DHj=hW3J\B+Zd'>qQo&Yi,gWKocT[J<$SjF:-pEBggMBj[oijo;%ZGt`]:roJDL?M$#0F5#_@%iB/ZBTmJe?<aE)D6Ck@&.t-uSB87'a@u$_46XQNF19iYM=sBsJ&eN+=Tb1/i9GL2%bRdjH:-sVmQ%:pDPrWqPQ8^?[/tl*`#['Jh%>M(T#33PA3Laf0-fEGNd`2aQg&f?a&Po*5,-rIHc90soITF!I6=<p(o9-dmeHB8]S<\][V<@i+ES4Fb'B5'VVK!Sja:-cT'Ab*[%%O?.o^[ce.j04\Gp4q8[Ih`\i4^3Kl<?`U6YD`)JU?`I`9n)X&PYEZ&.7-Pu7&>jYX+]*/Q6G.H]6,\K)7DMIg7**rC!^S5W+l\]f%*26uf169o0O"#FAX]B]k[5.;\=Ldnj<RuI>N]K>pE`mXV:DH#nS/T%k--ZsXT$E+L?%ENff46pa*r9q3f+2p>4XTM=B+.0<%Ria)%(c>LU@>gM-"/h\&=DgZ,/ht76;R?k"f*l5p&$j8qR\l&Fp1PiYZF6P5dt@6GKVoAq(l<7LO:^BA60'>(>prn@Y#NEDNg0FqX]g`M%(BM-D8&If`c4X$^*N'oS=jiT5`mHpR$aR*K?.a.)R%Ya3GjAh?QHa8GW<#a;&&=\D2P[cZ4s4j.E8fcgL]t]033SY>[!Kl_>mA/o%BWg:W2rco^@J4]-bc'P]/M_Zh>hJ1^@>:gjKpMtl.[14!\$-0qVF'SS7>2!WFpb)0_\<aIkS=SU<=>:50ak:OWDSJ&[^%SpH1\tS%7=>?+$5s8R;_oi3cjhG9e.,42ZiS>l+N-CFQuKg0QS>W_-\B/ZO9g]a^kY0q9H-;$-Fsa8h;],)Q-;i3)!FKrXbR6M^u#u]n;U^F%@$!iRE#"rI6*ue<_WrI/6K.VH#RZY:+)i-PZ*=N]Rh-O[80E3I.?E&qrNXlq[<YZ&_2OfeO11;WT26"9d%%X&+>L*4TQ*\m_+Zjd%#,DD[)0e1qFW_pbOoaW$Qie#hGRP(:$tE+R%$UihMdcNCGeBD-:iU_hcqj<RJ4?`[THg8g!0c,i_<e"7"8@HD-53Xp!Nl*h,T-15%_7Uj$"?p"?]VL50@MDm6$t2aK[$ra9'p2<SO\1JZ0!U"EZT.E#j#HLse(-kL&49_Y1ut1HBr?>&YSnLO#1:L?WH*GtTqn*8CFnFj%f`J6sS#e?=8J0(;\E^-maCJ<8"q5tWZ>oi9YXmNOVR9fWE#PY5L./V@BEKec<I=%D-Kf>uV/jd@,b9jGTL_eq*ij[Sf'LW$q$e5_%=QL^rV`ZgK6,IU>U4Vc!Cn*C>&p2!PInip<24)/@2>-Q%_;uMF77C0&naa\29do[eVH.h]Qt39c;CJKARVNM5iJ2;+9L7,bHanaO%8VK6[`l'D7NCb;.7>YXJcIN&324'c^l"2%2V^:</N(W''U=VJ24/`A29)5%D,f=&aP&>ncL6RSJhnrE9+"g'aEsrWujesB[;]r1,%[u(V8/%1EL#EW&acWXlW?+[oC,3D1C&"h<19h\:"c6?./PJ^[^Q_G/h?3=;[%1VdL?956*!P9<@itd>4kY"2?=I]q[#7p&Y)l=<B%os1*r>1M"dYe/K/=go=j3K8-m[6uo.KHtb#O]@6S@Ud#@MMV4hCebFTrA:B.3Gh2T>3`6TKPTjaH:SSregEU-f&&=Y&nPW63?aR%%@HKj+M@sJ`$p6_PW[ucD8[?a>oL][NgoKD@i>nH;=psEf5q`e9"spceC@]e$<:'>#;\MdA&sC0V]I-;ciG"80T.olkH@h:3^_GaE%lK!S%-=hP]6/^KIE!kA[D*lP*-92?Z>K.d4[bk6(cR5D2kK?,Rc=Z[@[#)WiGcKUk.'-i%3QVq(SD^'kJ"L<2:-`FuM0XTIpstAb%_BM=e7T`\PUZAce_fH3b<ek?b/)MbsPQYRF*ERmF\$8Tlbq5^]XFK9o0]!KVpr;#4YP^Xp$GQ][i5XJTA40/pJ^B`2r,\0oQ]3O_%a:h$BES:J'^X1C+lBcbkY_a(XcN9g[b70?uS0l8$ot(b<3^O[@:!9j+G[ZH?dIFBqkdjg#\B/9mEO7C$cG#/.9-2sc@8_@K'h!i=%)6:U>.@Ub<Ql.+h.3K&o;+*"IrfV0!Ih<Nj,H#6F8OhLr$Hon!fg^R.*3Cgpm>[o/N,/>()6u_?>eKRTG:YY;I\IJ3pD>7.B.T4u%V7"/h_U#QF8a:-tpC%G5s"%!ZcY4rOPXW'cFlSi;Xe/M^X`s\mI[:3Gksk>G/cCl,XQS)B3iXEYjVJE=opeK,3"<c6.;=Y#,p:g^%2dd68Vi76`j]tS2Mj-o4)]&qj$a`PuLZ=S\dm=rbj5kmXib<bZNU+BJqLaF#,E>*q%[rOX;A*/m.c%?XAJ*ot(m38_l.Cup0.U<B%3UK[uW7H$YKd5kPf<D6'K@@mQebVpT-&WTMb@uuaPlA'U=hjjUFJChTp<';<`;1Pan,,inWq@a^eU!$q'ZNico=fKa/%qE/Q#8WJ%=gV9dh=tA(Y.&KU3f;`X5>H8g2`_EQYbiAh%c_&h!!]i-#*ls_!o.HY=r>YF1Cf8cF132L79HR-9K*)8Opk(f0*fk-mq(TPOg0(K%<ul.ST*$4_7pMZt.A\S54sJN)]>X@NM/U'/r9'tT0[:9/od]/,qU\s9l%gUC/d0U^O3GWC'F(tV,@k9^$A!;o$%lF-BbAs06dmN[%LJ&rk+'(l(h/qV%p$AMCneTe`^Bos7Emu*df>-Au_B@30m)8b:;J"fD::$`?FA,smcp(W*5nnR;Kp0UK#'_sB+Ye]Fe^_QaMWj+u%bXop4RWN'>U&?ahBb*jQr=bNeq?^$li&"2E1cWb=*JLciJT,)Tk;:CS9LhY\"Ssjn/%s@[AW[$3%:K.Oi'NUa=5V)MNASdlD?A7G%/o0*1lj4g[k-,2=`!5hiO`nCpDW1FP/bE!Q:?+0+djQIm5Cl,&%WQpj[j@1g=rNLU%4AeQ:_E'O#RiW)<COPr6)`A,")$oZ?C2<l%-EeHE%8M<b#.=;%19$f:\+!!*e*ho$)/3pc&dn!sgn!F]LLWcT.\5$4"/kl2N7!NCN')QGP]Pom`Z[SFN/1L4$S/"KMahFZQ3>Ek%OjZ>+b.4K8$JV\43'cY/Bh2@?[BSl)TEqW+]p,g)3?d5"BoOs8qJ?8q7`N>-5L'[-3Ek7%)8LQr7)>O^J^-bce#_etJMZsFC7,\*%f7X'46I9BbE>1kFV_l/nF1Rdfr;7i!q?]<PdfIlFr>qdM4/[@=lQJ$[q.X(R#cWo^XgaPWG?S$YmhZX,@4Ke:/^."tGS''j?c5'P%$PNXbCt"ORSR[BP*2"j+q+):;:i5mS-8Bm89esIZAnZ>5/^<aB#@`=TVnteRp&hj^qb8Qb0-P[Z&)oj3LgAt\HJleWY%.0B'n_n+%%K[MD9h8MB_k\6n7s&AM8(KEE0$TifN_kM'Q9Z:L!$^IL)1XFiVhqDWSr:9*K<a'hPIpA#C!EhDQ0(U#,7@,(:5It`F00S.@fd#2%,Gfm3j^6!Fq@H(-4s[)^/s^O_EuO-143jdAQidQHjldhj\0_=mk/U;`k3#K)kI;uF9(QP#5!'on-V,BYX8g$\C>ngjeAV1d"%@Il%%UL6/?t,`gQ.ltKCW1!%aR&OjnA.$=;'>fC:W2`9Tu$'2e\lcqTQ5D3=c#9WG&VrIb=]`fj/4`KHb2BcnqcD$&>f"X/fuH02#9LT%bMo@u*ZYMd*>+C-K>\6kljNr*:,u$);7tDELPd14OcbZtL@jsb_LE8_fY+NIL%OOJ7iS_n0RikIKqEh_Cr?gLiFO8-=b<pk4'83_%s/DJWrjj+9:q?OW>-[7q7Uc3e']H[$'u`frp)=]#Hk`J)-8"MHZlVNpG0eS0MZbn!rGZ5'S^Yg+C&">(i]saiiG]bHE'G@6;s[h<%AMpk_k@bKb/>tW;Z(L6GAf-7Pka(?9%X\ZCQKEsQiUObBQ6JWVG2-&c$%g=e?ttr*6:m%O^89ne-Djo(ob<:1R*7O/rD4]#"iW-;%$tW!#\/Q?Q0l2NED_lCs`+I<#\"Pi;Z#)reYruLW[oHhu[rL-[9cUU(#Qp*!P7qC-dS.ZG6E5,;@0>gE@c;aW"h!p2@7/)a>;.8`%I_F&EA?AY>mFD\P0:q6OnsNTEcs7CneeG_#:4&659\1C3'T^D@dN%$qZ%C1^@(sVs@U0,La/dRtc]SlW)$MV&AHgH(6i&f$>Waj%%6gKi3i)$(;"&9Lk'6NQ];M3#ITTR>"SHu;Wr_[qnW1BD"'qe\J:";!DC*#$`A>[Wh1d^`7c<_!_`siS^5@9hIe*9YAIW/QUgugIZ%2]=L,&<M#kYgRV&P/=J9_BC-^"p5A/l7/oK_klsW;;eh+M!GVA9AgMIZl0f`j2,iROT54'4/CL>N7@2(d=-7'C(l&Sm![c]"%LfM%UJ]S5Z'4IT&IR&GK@QrJ+Ae^Q64$M]78T[Ak<7<TXnBOs4X<ri]eNtYr>!YImV9]n4dD^GHD85iqaIY8*T^BMh2rO^]/[U3]nXY$%O48G?^4sjZI-<g@gg2VUYb;>@fXfDID>1[<Hl`m;UD6<P9&u!=P%b_I:_DNn^(/N5AhK$eqKb[V4&t.8361obg3fRu7qqo7PTnF%%@ZB%+n:7bgk2PrH5oKcd6m.>[RL%G?G]:%X<')"X^@=t+#KLL'1USHqTd;LO7]XAke^WOMWb;N].]97TBTm6F.J1L_MXY!oC-NOV%HS@QO_ujuieIFKr?L!M5,L=FeW^E'+e^u4WYuj!43HEheYoTKY1iOG4`?ou*F0tT;F,lMfKp4G%j#F)=@MMOilU"*M[.puEBaRT[%.0JQ;5CElM4e*V^OQ<\4\o9HL?.]*+e5q'ZqC3=E9#!HnW*a`fo66[h>J!U?<=L3&_WJ8dlfolf&@3>26k$j"-Qn`B+\RR;E>\f\%:9,eM.Fjk13J(]BYtTK=:'Mb"Qd16X.dq7`puTNM+KfZP0b>$A!CGO2HSR:;:0qR1+=Jq"53^ptRb]3L<)Oa6bLhnC"MAef)!eso%I!B*=D;+G`'q_LdHp$;sH7CXX'ii1Oos"*&ED$t]\c,O55$Gc9hHs=pmo@`.p$O0ELb]f,9Bm5VI9GjAOWZ@Qks+ZqM=i=3C.0jV%>9.(Ml2W_78Hd<!Zoc6@G=lI^'*FjDpm,S=)MpM-f;kc,e:e/T'5K;/A;4,4WM"eI7DSE&_sk1Rn@7)DQLd3l!?sXkgV))U)cCV0%/[e]#T[R@S4HAI/E!t#QEZD!r@Z.RMYJ_or7U_fer)njs84R*i`%$#&*ZTm=&jpVA*`9K(6sa&f16<ENhfXp]lf7+UrN9t$IQuQ-%io&&*ccjXpdm12=iuIR9AFfTI`;8$&H5e-7./$;q=;6ZI9rusZQrm";FY+VGPLomnTa7:)9$N/\aTr572FDaE=?uOa7f4uG-A1fq%35c#QK#CH`+6sUHMVa^g<3r(TQ!sobkq_67!V`B-"qIt;(#O9l/O(@CqAe+BI#1ZW]=S+)^,`=Sp]JrUgmlFRY0a\;U"WYcXV.qR%9eu2>\'MhtgdmD3gScAUe;,G0()6n['SfG"0)S4eWtS#1b8X9%Q?97iL!D`XN];">Q05MWd:#.#aX]MqK-)[LQc8(H,Y&S:'jm(m%Ulj,RW.q'/eW*+k.QTOm#=kg:*&CR4nC>pbK1MrTKAXJR\kTJ%2CUI$OA)aU0sRFrcpGrSTat+X=qej!/h"T;',9EU":U>Q#iX/P%g=(@Oe+7iST$^6+EkD1f4nZfXou:KXdrLm8>&6s'8S!gtW)[:bWAS7H_DnUke)J]Y&uuElIV(MG,@9o1k)GUVQ[q;ih'(A[-Y7fk%S<RuHT>$5Qq0-*\DW^*%jeMGacJ8%6d/<h)].OOOo6WcM>4ZN63b%l<#0d!)mC.&rb^U#0Gb*h&=:9VBaZGoM"u!Trju9P2Oq!RV%e7rH@g3IOs`$S%;a4Z!q)^O+:M=i\r14'9NAuU>iK=GJ*']B@g(@*kj7rnYj=DE"t&^;FFB]*#?iBa+Yg`9r]!'psDBd5#q6H+Z9%No%LNO9jkPMN3%Po^8.V80lVQLa7dXM2PfDOo`ggNeG<c:RfNE8U&pT>Dj\fS46=g'^;D@:_T$__Rd891iF,^?n8==Qt=F'fMn76%D&YG<DDSJ<fKO6]gcVMH\8dt9Z\"Zr=:e[d_+8AYR/(TjJJYgJ$D#)#Y<R[%kS@ZB^X/+l2CAbU/1Z.rRAE)Zjne=>,G6T2O,<P'%fi3+Y3qBCj1LMPF^fQ<r9]S$*j0SodFUFOV=fN&r_LPi?CVPkX4:+J$1>mOaWfBsnL$MHr+H%.2VAg<h'frKUM]3ZIn,1nk!ID'T%!duB"=urR`Xp?$[*6Y6>M]4<$7QN_&W7FI(%a^u)L%i?Wob&t\,1Yk`Io3_IeWdA,)XtNP/k73_X2It10>FsDbFEYS[6E#Y*PS9G%kEhK6cu[ooQ-h<1)l<R68X1>789k/cqPq:?#c'ZJJ40kKYs23*?YI)ij>9;<<^OfD6p[0)pTN5[I`TL;H5F\0:.$Cu\<hX07SCFN%\3Q+,8@&"&Z/'*%A9:L<M=j@o-_q\)Y(ZN[orII62hG!QeP@+qeUL(&7JMsC]uo:+QnDfmEGdcG$pfRs+in+@EZ.Q%\eJJQ^PKgM%>c\.5O*#cMA*P\3:g+B:>+],/T0F4Mq$C.Y-'jV-1[h6*;AM8EOm7iN[Ikum%MW$Z*AcpS.SQ,^+g0-Xnko8.fRs.XT1rFe5<G6J%!D`S]pWnVFW#JH1@f7iaV[V+.h>kH';We%(dqAp2]RNQ+DHoHbolJiu;,XR?!W$nrV,S/(b?Bt$>_i@ShaNL[#^JiI^NJ3[T6:Pl%6@uN<\NuB=83gXXL,V4c%^j_%6D3Ku:H;Q!K5+uf<9b)qX)gZRqcR%[rR%IMhVBTZh`uV?^UR=M.&p#Me^>CV`:-(`NK+U8UI?Vr%f'b("m!kO)h)OZ75+ce"^=>5\@OQMo-#F@Y(TZ>lc!d)Go/gWUp4/!7O4+RY<htk2DNFO5;S%ue##H0,U):MII21VbE%FmrEB>`O%J;NP]N=Ik#lg6Uc[:LH_1q>UUo1pU"fIjK'UVJ<t__BZYBC`kJA#"ZNJ<^2FP(ejcL[AD.5kFhJ8Qk;;LNe1p#ds59K$C)(f2"RS%eQ:\cdS7kqjhLT::LdhFED9SXr:E7NF'@U>]gRcilp_2;;#PL@M7ZoZ2Wja.']EUGao')7M=lkVUDq1[K6s:sBY5#D]7?JQ93DZl%ionbS-O'3hca['@>!]edDg!,&r^[K)n)5hg;>MT-<YjMPaFiJr!F$5U3soWa.#\Lmf@Z`%cVP?-:J")^n$r-nB5#Sq)askDF1V?9%RKq)KjZc1MrJqL?U\\`iZLSD#oR93'K"f^V,,]/-Yo>di@-No<DnX9^c>Rj!<h:nYlR-\aok@o`FQL_W\;N(`^#V?.5F,pID`agI%P#1*="o?P%Z/4DG!i9s9Q32E/UTqc6dhfF_,DQG2^FLF)I@6mXr't:knQlgF=%EH2Z-_4@h(6Y'=Fs]:,iSS5[$!jSe=)8J%.l&t%=a<dG3=Y&V9?MEfpL`Qsa]@7e`7E7KX+=:DeIkFhaU7o'-4/:V:9<_F$kuJu"^jjspb#t-_*(4KV].]'Pe>L6TVNcZrCOF?GGBJJ%H%OL)m;`5u,D+D$c_T;2TF%O,0_=$mkC<Z4^s.3>LWr7I(q0I)]$7"3h<%!UL(hf/2N^:!Co)\!_+"Z6B#&C'"MS^S1I'9C-7U2)%_^$'*:4"EN&^%oLOIs7&DcCCD_=A0CkStnFPq7AZ,1S&X;!TEjN!iL2F/68@$7n9KG7Oa:W,hcK=Km2,nZ@"_VG[1a'pM/9X4Tfi%EJ:$6,o&L)(a[4f'hTYS]'+LDs0(;&!;]T%JDp$%p4_g.#OM&?nt07s6)]7O<HY'I!BNa#V7-5X#Y-C+VNFU.c%5Xc:@f;CgtQ\R%FNA#.pI'gPr<d:NnM;BJRJ4DGG#KJV]lE3l=__G]**/DdWZh#KK2P881F1'$Aeq@0X4Z(.i\PJ"#>,SPrKMku/7R7*2l<eEn2H6M%qGg-oknJ>O5PpQVGm!]u!S$r`b\<khPl:r[l:-NK`-MU@_;/Kon2gMe`QG)t_>=gb(&'>$)FG\<^?]e[5$@mVZQS2U[oc%uDfY[<%@pFiTYE0C?Qequ=%<<-VPMoq6XQlF_6>Rs+SX)h>(S,XGH@^L9die[_T1%^*hk'7)/C]Z6LNe1lT'F>4pI`Se1VKP;WgO@]`lWlV%MkH48eEWQ9n1RNm7)D[R&Y)mf7X5?"25@ebHF@>+@Re:ZA#*_4UY:9Ird8tRGNkss="GQGDrd\c\"ua`/M4N?i3^I7:48/mcd*jO%'3=B;b^Y)"LW]#XC=NQL_MCd*ek_`q';?,=IL@OSYKkqiF[9uL2b2dn7=e%9.!?N&lRN;Fqo]^LX<6D@c;mF-'pgrR<>Cb;/nu8t%"Dl#]5e?KD1\7rWZ1Uar'SnhMDNC<+`[o%JKgt$taq8.pkP+iZC^7-s71Uj@s+/]4PP[TrSMPPUP"T<$neFu9,I)>H#-He"qFq3^%&MFGMo`YO%+GhXKR\%t@-)6*>.XN1ZlbQ8/IY[D\Kti'-9)%\7pZR,0oPPaN+-!?c5EI0R+ors5A"/!IT@6Eb,5%b.4FaiUB)hj(%TdjM)m5nP.a#dKcYL,dEnN5>ZjfhQVPGuLG.F(EJ\WpuYhM,ioUJ?/6-f0'MW6+k'FI%a%G^V-;0ncNr<01f<Yc973`qL>b)A@8u%'37jA+:F/8L<W/D!.6cX&k$.gF&A)<-l\dHTlAD=bkt-]&5Z"dEk&hCp]h/VH?.qJ>p;"7Z(oIC[[[,gps3k8Mc>2c6FtRo6*Rkg%^9$s)r9$#l6C*rH#c)noQ=+upldC)N6;5Eh]J2VU#<Kopi+RO2SG"8,pJjp<M^1G'WLu`n*L=`[/Ysm(]s,nt*_t$QeW$<dSX^IA%)*i++K\epjQW>b2-J#YcXW&W="<C!-"oVpsO;E]ekZ,YMm]mSLr"u\82f`)qr9$"n9WZ!;0_65:F6^@kh>#S3mL@P3`Xls^U+WR/%BN?i5dIH,PdX(SlO[[Vfj)sC5TQ9r(@0c#4aQFtjShA/X%o[E%;%'+V,)Yle"!/Du;Usin%N27JDeN8=7i.gL@Ql!ds2%Lc*U/8W%knVC4V]9.2,u,/9DYu6@b!X6Mg`I%6XO9rJQgfrjlhuXnb2Pq1WkJ^hra'Hcc]]Q-s3VkZ2e[(Qe]77``.dGFa!O]4:?2>tr(:)0%nBZ\kH96>TFS*q+M2>#DIYj6HDMUM3:f@=[S//s[RKeK-4+ZLUV:[d[((\>h9tbQ@-&V3bjtkq/oe]QI\c_ln7nG8E00tQQkXZ.h%cY4F1U`8"*$hP._7M\"SN9\$"_YXuK"<B_,N9Wc@0caI#-1r,r&Oc:r]TDV9@l6kCj"dMr61iH@HpnHN'l+bcm9'jnd.("KA[*E%%XHBs>*?`tVqlb%Pipt)INLB\ZYkJa.-(Q>_q!#6sf__2)0LZE-UP%0.$not[19#n.P[\j4'%`b>2C!728!YM-W7BGCC]g6'JkWjt%B5rY".4;1mUq9:?ZiT-m;q&m`,ot6nlgPVtn,,_3I./6@pKJ?j+!grR+#P[o%q[*Y)_38d8%bTN3_GHNgq\Dg5;d]!Ih.iO)%l'\%)47R8@$,VA#BpqLnNP$/6Wg*;IP1fe;bu5lYBsZQ'RPJNZ8&AOG"c$i=^o;QHF78*@QuhU?")sFO\HtFd2Vj]0C`"#U1ER9,!^9?%EZ55k_K324,DM!1Dp@55l*auF'M!`2&_=.i"06OmZ&*g>A3W+ecqu[I2GDouLk*cj#*R3V@lDXp^B^*t5""@Qj,ETTYEY$p^MQf#%J%uTFcNi>&R>:_4,I('(&jF[q4oY7+?kL:p7ui<4oTYa/n/[fa"s#o?ao"+=Bm*UR0HS#`!Rp>7`jbrf<(k8j#^#\l<`7(Lih"mp%-K]`7JWfjI"e>Dq&Liq%=T81/3h0(?anft*#.Hu4hY*2rL[*)]hkcRC3,VQGf=2CcUMo#?.Zs)ZS._,(6&Q+:`sH'CGY4ouNo5P,%3`KBGU+5O$%MT*f=&^].UT!2r;-d:]*W.!q,^.UDiupk0%bm@XGo7-FDDo9#_Wf4d9T"Y^p4fg<SQ,c3G6iri't^O\g!%P##nP<4%!>,epIt?AqYp.d=M*a@UI]fKCjMmjlO'okeK[\G?F?&j?pGgB4,=r:J)71`D)):#*8dPu;Ye27$9)T.<`/P[t%/LX5a?<>uR4,ai%hqdK6*8t9'#:"uA!_:*c.,L:!E7Rf685aqI(lTl@^!<nf4f$`\9eA*)*k!+"*6H99"*=0&7AW<Jo,35o]-m'e>*4AY<WQ(r\Ws+8%8d\FDQ=,0Ool_:QIbj,o#K+Pq\&fa>3!n0F\SqmLan_.Nk[7W-UM^/u'=ZqY[BOq8[4iJ;7Nr82!]O)RP1[>iG1^,m2f+qEokirD%,DN:<F"l1^[\=%GgO*hT(.4J!/_-dF[a;etg_-s[D=N?UC`15rpl&lqSU>BLJW.Oe:-Q1))O86P6kc'M^:d<K>+O+TDJ<iT(i[+>%12n2K.<$LDV8LkD3*HQr1d>3Q1;B>c_,dN3-&YjuC?9_p%%@S'pIub9$tc=&7a5UE%O6u&([6rO,Elq4)VM*MH^^=:'?U/S,`LJf%,][jB8>rZI&4WnK9;\9a"<MJ^)cUQ^RlHD76%q5Z2WlfmO\Y\O*LU_A*GS<DY(W"n2Z#:%M3QjU/(WIr%2jUIN>]ef^i=c:$5QH$%:0W^%#r.5n@e[2>dk!s`98&sh6$RE%?MXtfX`<o8Eq&oI;$ho2INN)Ad/:HlRO6U8/nf\?e&;*T!R8q8ODa7,rdEfCNX!AoQ_G.m%I"@<.Ih;THcp[DoORM>5)3PZV6/2^`aT&t-Hc=hB8P\;&:0VuS8r#rV)YbHDHV7(0"/$0>6?GtXH@(K7j"c?qBp7)"62$1aEDatu%:)eFjFFolgW<p-QdDVt\8Skl0T^#YY>=iEu75iWe1khklNC&2FrkM-=iAMoa=;Dnb$ipdZB`f3M>r[hm3/uBRY`[QIWX[b!qt;pl%KE4#V6kc%MU5@,Nq;B8,*>JW77g@siP;$NqRg!DQgVk9^2@jRqCd1@5RE5]C1h;#=6QkE+MB#Ud2B<Q9`LTuE*>G@l>0gn7aNTI2%RDJHu=1s`d)Go`3*>.<FUI>qJc-Os#NRK^Zj0Y'"^m`b-KHr$E7S@-jl=E%P6_mh6A@,=mVF`HSgLJ%p7(*NZqLt-t7ZW'>RLc@(%ZPC&FQ(jXT#aq(u_+^=D_\)r'(ap:7$7<+D\AnggJ-/>--rNT,/2/=_8je_#/.RJ(Z4r%%,Xk"d@h(eY<?M9![*8J7n\j'9e7b"H%FQ&DQJ3(CfNK9,@8#$[+C1=@ShWXc;EXmIF'Qg*a,#&C7FLR2$-)M)qs!p;Q%30(I#c9?-(/A.)USW)1A*ka"M6f=;QkeFjEZbh\%A`-2QbYr\Rd0*BH1%rYb0PW,Xp+(.Z2tWQ-VMo,3l(@RI7l3n/UliTbhhZdC$n\Wd/(0WGXU'S1TXT?XriI=Ag%>;![iq7[Q52ek%?]KN,._)2fdNJ4<(Qr<6_-]!SqN[0)\m+]dTC;@]gkr]T/.<O7)[4hu_p(Q@X@FbB=Tm>!P!HI!O"/Ha]4J5l%#P]!d4G"=BQ<uE%:r4#8d%^gZV_ufn\+lqHXUu\1]k)r@JgKsh'RDn/97Hhno)iN`jX#OjkX?"Fe$BH!i,]b9rO9:>oM!^=(+u1D!Hm^QU%[\iO^<5-%OGm%edJj;7Kg8q09e"k\r_+hWOkaBCct,:,#S]bNU]*h_56X\5F_iF(,?6bBbmS&eWl7HG$"PHfU(p)':A?kY??"1eb_gdGA'Rcn%:/[<*XZduN2F9IS!LpCbT.?plT))e[V8.d(l`h7ipl`%43@olQXLqunNVJ>YLI'oW/fWc79RPZEbD?l9D8_S6J[\="H0N-uQP58^%1`aO!Ln*BEh'fmRJ13!.7^Vl,cP_+sX]c!G\(R2IKdS`hbM#ZC@Wl_UF<5NA&5(`CEVnWF]ie/g.J$![JQj"6(h%E!a<X$<0320>%j'p,#r/(V[c)E4Sr\5\&/n,K4rT1ppK!-S3s4hqr/.gtr,OAnNpUN_*b"b(tG4&W^B#CRM]hKl#p)k%kEFOH=;ktDpB=P,!(DBHC%A=s#SBRo:V@=uZ+"Zr-%V;56XSBe).f9kg'SuVa/2Y;*#&?ClIT2[D\ND+u=IBkpcr6U=n.idil5r^HDAs[BhAFh\J9o':W&eo3,%V)<2(7r-s_>=5%75V8I5C#W\2IEK5bEpP!Zi5$\uE=gQUBRem1?KpXr]h)5@,d7J`=?d<<391/T/L$?q'r$_CMK=2u%nQN3k?!9E%ccO=Xjg3)7\d0BI'H&WbT8,3C2eYUNWQPg^?,OM:$MYCb^1)#WLj]F,<G;UYF)2Jge\k7-iCa'PM4eXI@>_6l`+eGL_.iLaZM/Dl%"c^mVSK-.3I=@SA,RkDC;WAJUfJ(`i.%k""h57fS>fpu743>k3Fn4s>$%`XI\lW,`3g=\eeGmVBj*#,@Lmra]Od_=?HsDsY$ADI2%79KC(m^SD#MHFE[SbkZU)77LsIbnd3q>'mXQ-e+`.]&"@T0`T)8-]h3E6"pAq#gar@th,QGP1(X@197eL*;s/;"tA@b92#Rgg2l=%$Oh.1Y;lItT2q.5%4njFb9()^iis)LG=<;#n-t!u$JG<NSWP(VZ.fN.R,t'?=agBL@ON>LPHP1p),*M01MDU^g:*p'Frh1tZs?^/%X&-LFb'1Dkb*s;W#48=q8Sjk`Wa*kP&@B^(5uAt`'eu@\E$rKW8R3@blsIk8k"Vmj/:qa=VE?6'!I)QUC_Eb`YUD3jZ]E_Q5Z&j^%:,,rKf:`sdouL@6_f`d!KP!joPos`0;Aq1?6s"<dC$4g0ci\oA+b+]:$pF#hd"i=SaRLbCKd)1V=IA)'(1Q7,OPgaXkOg=OAHe'B%L=Z@'1U`%ljK3M?/J%IE0Io2=dAb8h3Ut"^'RGON3@'M/0u/>c=k#Zl1:9=*$E"s5F#W2DgZg'"r\582.V@d-I4iJMki%526FXm?%lr4)T%:@EIV,TVi<iF,!K#[JfPP#%&Gk0SMFgkD]76'.)a\L!949QTcPNI@L-MYa_<utGNe=n3Ah_l_S5tF"+_f;`MPXj>^F=o?6%k#[&2"9(P1&se\0[C.n"KMZ).eRURAQs6/#YeI'E^^NF&,@qXdi/gs?qrj146AqZXhA:B:.#Fi.l:k1o4X)'(.IgE%(h9J6Q40\:%ncY8[b"'hZ_5o5>@OU=6mu5'P<&fP&!,0tjV1-/_P<XA/Vms[;:XMrqO9:DBb-'#u/,;+Xq\>5$/l]a0O!ql.pn;tPDmU-#'FeK?%&3J%@et9=*4uX"l&MmN1-@@hEe,>p*=(`hB&/_ep\S!0&aR)c:6WU+/fc3fPh(JShS2\d_^4A3t$i0FlUW!Gqg@@+5kp_!R"VZb/%*@XXP.f.ODge,N[+1JBXSI$l!Poduoet[pt.IoT.g7*f^>1#)n4*<M]Y+lK_5$9dQ4>`Lp`I3B79eTmNE8b&6Ne\LErK6$XWl\H?%j2>sQp@!dNb[EBPp=KPjUu@KgQ^tp5,p7gd1F4N_9P(Xq@/p85LW+4ZTY<UOfA]XM\FF5?f5Q-EF!WP!R4'U"U(nFfT"\aO<GeX.%MVRkK:@"2kLoVuDLhr([]_tr])'#6FAZ96IaF?0;R*4)D1re7)J_T,>/G>s`HW[G"_&N/uW.2euK2M/OnIGfYK@Rd<"`QNqkF":_%1[!WYM6"E^P`:=;7d):rj44)=Kob(amC)icVfO$V>GVHWpcBF+ECY(L@1A]YV3Dc`4lJ-N)l3@egAfZB#^qC@+RFfXU;VTM!CFg:%<A7&W?O-HNEZ<`oL8iq%k.k[3b``;M5_e?aW<B/l=J_SD#&_^RreLVQg4\uKI7A0`p@Ju#`Rf0cntJ`SZQ>&N.&E2>\V)>EjND<?%6O[>\X+];Of;_LX0HEdM#9k<NarRL;>A]7)KX:Q5BbV,3)Cp5n?PFM'm*XZe/Z^rA!"^(1V\;[;*E)iq.cR7\e!."[,32K)VCa"b%-6>tL5(2[s&Af7I$^0Z0:WR_;UZga7V;gs4.%!C?Sgk:`"R2ou#L]7kd%\n84,7o$.uLW1Z.._!B<>9`_++Da@\4JVritk2$Q+dI%J3,-nR*<?G/p<]"NVioAB?LGcgF?cD'BMs/V;-3==oY:2L#$%JrY-%+.;ZPd,33F@=#o=07cb4[#+FXiNbEVZfkUe]=f_Rpkk;Wt%f9#&'ao(e@i\bSq9[XX,QgUGUd(Fi-GFDhb_bP9:7FD1\Vt0+:%/&ABG*t<)-LNh\l4k;Rd($om&fN.&:"Qo.^*#NDpD47UclHf]%E<BYGn8,c\K9Gj/"UYDpV!jZG;9[BGGV,<5-#l<qJFmGGT2KrEnOe<W$IdIH37=W($7Pf8bheJ`!p.*jbd@U(:QVOqhnW'7cEH5e%6l[IS-YOH1M@bmDmGI!M_`lH-8p)VPK;0`ER4qD/&7KY8PC6FgBH2jo*LSb3kZ_,RfR\IdhtVot3GIe@?>7l+qEZ#uMuV[!Z]\+_%>78MO``b)?ju5=(i5%hCfFU$cYihH!Oofd-r%]9j<ZJN_>%[SR;9gXfUD,$Z7(rjq,W%_^Q%NIf&f^N85RkuLp!OT:(q/'V/TNjd%a!fF&(?43n#WU`?KY=e-C+3QRUITj/JgL]Bb7Q,%F)\>8B(W>WROtL@d5ubc)n6g\mdrumE;UTd\VVBhMfi4+Dgr%r/r7hA?]:Z&%;nPVgm`%3SW:^N72S8[uJ?ju<pcgut.f)`*Sk!i)G*#NBePm&F(XF8VNaL=<`IZYD^aiu6)IKUtHK[gua!l+)5Sf"oA2MO+H24tO%Pk*&j>7#-^]AEs/FC-(uSlr8]d4S7%S(lWCQ)\If1jj$^nN&Qp.C2,OeR3d#n,OC0_q+G?r\ZMO-oBN>VuE'iB_T(JP=6M2%*cC3%WB)Y=q-^bA;;\'HH9sXFn5Xj?ZC_E`8'3sWF[@TODQpGITC>RAP(Ecd'HeI\dkXB+>Oa3V2F#LL31Sb?@2T_n[^7'U=V/)aU&38*%/:qI=12Ad8nppfFLnqJbJ7iP$Uk>#RZ\XKF:'KL^&)&Bfp,8<22.W"bMOm.5k_jB?r,?!Yc4=u>@ltK((D=HFrsq(oYMF<0Qp5:U%'_?"&6-%e8;Y.3h62fEkN!FStGP6l"0jNq>]hI$+!]4D>=O\9aKs'"RTAWW>138[-'@E9#$TU#@K!_Kt[Z%@^<rEOID22Ca7@&uG%YqRpMYff#Vom,\^Mcs@*:(gOHaDrFePZ4AJ,=P[SJ3p4XPD&mdSC?2#i=)!hZPC]/H)OW?Vlr3!.O6!l0fBH;"`7ds\0r852`<19%RY;(MFPnZ0Q7*FSf?a6^@G4RqL7f3V//re:J?g9k&7d)<OJ4+'V:STR\8qC`2]MA+B*_W_CO9dO;eo"S4`[b]!Q;_1eK$U.<HnHB%)M'Inp^dhK9<20(VK:a(NHDeh$JDM%2:W7)#RbW-0.\#Q"9h+UW#lFl+oo#'1#Ydr03H:E\uNko5o@HD.']#GMR&Ma(\\k/a[\WG%`R[ASPMuLk+S3&@q*JnS4u'jEdTAlY->4c1"YPV#,9n?FWg=/#fuTq3Cihsd(?U:+(0$lm]GMha-ZRdH_<^T_]a2$Egg0(EjJ.?A%"NW@WLBXEL*d+7.?\_UE$qb+TJcgf:c':G=+f,SCSiVKC"=.J[7>K6lX+[-#M[+WF+T:\?Ybtie30F&6^@'^!B,[Gj-<u:G/'oGI%"n4s<r-Zkcn=@5"dC2-u1ncGK],8iYrGV"]1'VI@d_!o!SnK]FaDm2GK@!#agb]hR5`O>.XTSEQ-P&3=Omm0c"HL!<^k`5#E@3*g%>RP,2G-#"meSuLbH,DQBKubeG/L4UF05:JnhmVbrVN\4lcW.'\T1La)^mpW,akVD7:fV6Wb,L*Z`L>S+Bga/Qe^UEC,$l=E73s>S%EnT?rFF[[g0P/K4Br:,nh00q/:RX\N&@7Cembn>rZ28o/._.>\2dCW<D&rUANpH(?l4"ikEIr(jYi,fY3&9e"":'StB0*\INamR\%NF7$Lo[@.\7kE^Z_1YB*mtkSc-:<ZaMhRkYNfL=R'C+s+aH-,9enr4#'m(/L&i<,1g-a$ejE49pM!m2nq#Z"X\B57\S]gd5?_QiD%-k;!\]JbX7mBcZ_1EA^'_YQ+Ys7\_9qWAbES)rmQ0&sD^^jCMVW%b[?+qYZ_R)$ah<o,g:9A!JHEJA0&RsJ2?N1KarV7]j)bLA",%p6lit$/fM:<m.@"Vu,r,eKgh"JuuBETfApY-jh-pX$N:ib@!3\9'\boIJ4<OEfR#Kj]m83=<o"#1ZeeC`#7Gjo^tE_/;l%+Bff6V%_+$i33Y'j,/&b[,-Q_]No,F:ndCHpmp*i<5;D_n0gjfJ]4sKq0Ad-7XRN1Ecr\Rk.req)DCplm/o0&I_.c6MP)[sfVDG?&7bWY'c%D8/_Z<+Z\2H&\tYX#NqHRXYRrb4GniE/)Cd#3?uGIKF@_#0b\=r!$4?6G>C+8H4DT'$/,(M?p]ne16;A.XW[sP6,s)E'E7GD'T*+%qDmhg@c/916"s5[\+\#J1-bDS0]3fIDmG&=m"+d8jpmKt",pq-;=tqX*u]^jdKj0lNu&@e:jXPf>K!?%V_uEtJF]:mP&0?B_iB5_%[Y&cUG)/Tt^ANB"H]dAP=b,bMP(r+$=i5q"U/n`)WW@j%s*[JDm*(`!2s62,JK#4M[.<ung>%/;N9EXNf$pE#AhLRbZLh?\?PLm3%%$gB4L,@CB56N1)$j:<%B@3g11&t!q_3_toZ/Ko=[2Asj6%(-!B$-f7>WKm:Xi.5]`hpg)H/+RV;k/%ADJ:!:W@Y-]rJEfNKBm$:%ftG9B=ZoPRki>U>nl&a`Yp3Gf!HZ\<J#7np1StT+K-Q:%luJ8!2Iq(GSglE-o+#&$hThEt2_b_16<\Xd]TT-6&4EX4=#5)>"WTAK%!Ee$"(lnPYQVZ20V=n104i(7jomR8`]c1BP&9*1l>,["]gVO+?quAk4%K4Nuh;Pg_q'PmM\d/h"kNc,7ESOf?N2HQldsA+URJfrY%BnDA+;'VDtUK@^3%sGe7=k,CFXM=VUl#('u!%3mbhdcDaP;@l)Ks/]`g[0/aO2A)W>CjAk-(,5%YRPK.G*Vgc9dqH&Ytm)[[H%+6%qn6u?ngfib"S2`iE5cp#V#C8-6Qsdqo7DPt+7PM="mET"nY4nG1lmaKrYULE<RRLTa,C`G,qS[O?KMG)7u!26]'q)]\(@]]`(L8=%#VA><]ZSQ.,JFtN/"PpVKMtMmj-Jnrf5CmNqo1_rc%2>,qnrVi\l*dHa_iRse`ta<O1ucJjW(FS141@q^5@C:2'T^68]rM=3N/m&%A^,1[J4k0+%SC\;(*\@/_rB&NS2FK^)>-/8FQCY\iT&@4j/QJ[-"nj+8+4QNQ7CKf+`Wr$3t'*RlE!*_(_d1O-b8V!;-$L[GCFfo%$EPpI#U*Kj>\IDe"+$T+3shkNOa+$s<=VU/TX*@pA=cfI^]Cg%N(mDs;<m]m2dpcLi&*?gJ]m"XGHdZ=rR%nO7hG6Z\KSQ<%]iU&%]LT[r5K^q<c8/ZfnR:dk82p2--ARa,^/Or>;VRPG2?eeDs5`b=0(5HR519ZAq:7mRG-hZ0s&VGY=`<=>pXa]m3c2tih_TDj[i:%N%;l7DfP#i9Hl69^uShW5c5[id1PR)%(Nguqr/>Hc"9QSNEX,_ga[hsLU8K>IP`k4JU=\l(!pt%PL07_T&.#qcog-YleA1EcARPC'>%g_-461Ec/69et`uGQjF\ZpRY*%701t$M"7(>s@8Vs4PWV2%Kio43H%rFj,m^+D=LP]&G1&F6$>6(,3n$%0?#%6%4iW[0>EM9-&U'%&gTQuH0FLS[n72W6(8b&DRn(uE(EpO`qET9J"K'0rh*\CQGFrg;WkgXAQ*3G8p85:?BM&IWf.g$%mL4qF\-U(Y'I'9NlHo?LQQo:%n-X#7G@E8u"F2'oUdg3tP]r,a-4'Zdpk@Ebi46sFpiW5%&bn/U<2ZL:dU=<T72o`hP,WC&mk+A,`!=RKX`)BbE+HMXdYCR`pp)Vm%pp..!F;c]rBCTRWogKH7T85_'>?XQKW\o[bU-l0iWW[Fra`jVEZVit1J2Q9BZVp)oeKHhU":ZT/\-jH<:pbW]bYLMN@^5+t5K_E7%$U$+AIR78Y;A?AF:[*lGlm]1"M=XSqK"NQI<,V&?rcae[]8fqYq3L2j0161&L)?u3'ehS24g=NIXJ#pZ8PYKs5l%Tb1a3-=jfm9]%]aFC3;/0"?<.==d8f?pP!(+"+`\alnpRap!ioY.@gC;8@GVqmk:"UhuYmd.ngAMiZ<E'm-ZDd-Fb3,'Z*\,S=Qi9fI=KDlsU"s>M%BRB1MYtd_=qR0J=bF#`:dTE[g.GQjCet<\1qJ4I4U?a@LA&"Du.[Kr"TSqr2E&DU:)Qs/gJRtI!]Th-Q7It64<6sOA3qu&$VW##X%/B\mK#:mk3cdIq-p[SSh;O@)%i>?:_:F**9$N0BM*Aab6#K+dL-&TOo`c<n,,o6^h9)a%.8-At.hHR35B.eho%GE[h>Cte7Ig/b!%d=*VbI^gQ8(LZ^ki#O'u'+"Eu9NE&!)J950@,,1!QAB<"A`[s1cftj*`pd($O];jR"S(Xf6UEnt*3JocDV3&JCt`\\,)up6#)lr$%%HSGs'Ls>T4euW5(F#HNC\.18H:F\)PFQ6/QS+Ti*+5QtN,!Ujaq\:HO9>EkR7"f9kZ:rfOg,gcLJn]='&s]#\<*3ak,PYjS3UR)%[7(6T,tm4+H-'l1<3<1YNGnbIPM^W)cjM55</AacTR650'[kofbV^YDpW(PU^e?GABr?L(l1q6ZdFup#J^[0.$Y%:UPSnsfV:_nO%1*Sn`5a/0L9$H'Vb7B&O8);`*P+Smk.O$qEbd4&q;(uJk]b3Y12"4lcr%OXCfZKC%$gOL@h$Zi(_6"c%be9Cpc@LE`mt70\Yu$ku%1f1i$"'T%4.B'#8>-&6D>U8O=RbUpsD6G$dCZX"_E*s@W@"%EX0N^VdEZ9BR9gRV!2<a)9D$s`T&t/'6K`JhE+RmOX-4ALCMBl=(%UdqZ^.S(cB;N0-#F\m]bE?=A'=\UV"B4fs[b(dB@8dRn"Y<@*biT5aPdns-Xilk<5'cp.Wc`=g4BB,arYA)1*IiJHL-c$L4?JT!h%j%0:Yd!"+&#u,\X3?\]?KbfZfZK!g6N#Z/VqfibE^R??uEnm*`djoWjnKl+g4P:X3+$A=f#0RqlH^68D47#P'guF7(FW(H6O+TM9%[;]sg,a"^2q"("HQNi]FlTj?6AmQ\)rK<s=cf'uN=UpRa=7Yc'*J1GI(eZ'r_A/2U92U_?@\R_/n?td?CJ_:Db,?/$0Y^>E(A8t,%2cuouJ/R<-])YbBOA7Xa<a6F>!"o1dGbsOh)+c@=F-6oUiUs29$rJtRC'EJ[orD2mQeX_f;Ku(HWLd7$3$SlbTNU0Z7Vj;lY0S`I%Nq,(@Ce5Ru'?Q%:-q@8rHG"d>&UqYjV'R$>dL>.5@Z38&W;SnPhMIp4C8,UE94)-`9[P8CFVh\ZY"T?)m+S$c&,qr"5f<&+8FN35%Qs+B]Ikd@OIkkn4QTA8;?/dCoggq$o6mjpHOXULWPjQ`pnb2U^Pk'j;0COdA/BjGI-SoKCK]'eO?&;0_3,`;g+[bphiH5h]W\0rV%HB`;5CiY"/ntYO\=Xhq[REB$-f2WB-_!=g5,>71DMb2#R3k"5)S8%H[U.WDO-jslOj^`gpD6tej9mNH7kgn>@C-:qBkQWDt_Umb3%:eZu_fCD/M"(`E'!tPoTW=Hr9^_Q?55<(6Q;:n39-O[`<lM8*dSOk!qC>`1-Q%(f[P%WcJ=n:*m"/Io<qsFF2Pa2(hp"S&SHFF]s%3_s>T`4E^)kct_>?=.Et]r&?Y\^W!D=%t*Nh6\rKi.5eA-mt>o&%tCU]#q5R38k/4'IPO?nGn`F#nk;S<OWcWi=5'pW'ja5'DfYl%66dDr`@F1e*@`(G1'Y[.*a:k<6.4C\ncPXCg0(%!Z4n5q?]oFW*$cRY_gZXC9O)0mSg%dh8]FsSk]4\*K:>5`BFIC-]9h49j+YjQ%V>u4N.,c@ua57c@,Z/MJ`'UGKNX3#'&cJrX`r--)[6,\Aj%'.'20*X^O#8.Ae/qG)QFt[mk6n4B\[D.+9CFbtR?O5oa1pN('fdkV%e3joKno\%Goe0B>l5)hKI(&h7?ffPbNlJi0Gbm?$hc^fi[u,Zl!$VQDJ(n)*B]J"JBPq!RAO9dUU/qL5HGWhhHUr3VUqYasj53h'%L=9R<To]IDf/4rRit1]u?>D;?UD`p[B=^]U"bWHjh5s;3\Z)[RJGo7e')\RCb.I+"L4>U_!l;VIlJKJc?CWX0\i@@*r##B*Em>\q%AJOiE1r<VLfhL`Is)LSLI!!uTMW_\C$;NGW*D9+X]0\t[!:]INJEXP">1(+B>XNc!C=?/L;8NA1gj"`''*%r!qNi1Ua?Aq1I6*k.%7ZNk(fI,;W$*sAFImJhD@VRX*PY*#Y!P+L6^s)F45iZi4qV;qXa8R@l))hL7Q^ulJQN7jX[t5pIr&hTV(c0W2qYC%j'5]Pe]_fSR%-7oH</CSO(Fkg!31D"6,BJV/n@8O4JTIQXg$q3nMVsI^2RRDkW#rLK+4Te>c8;/:8&`RUh0n,PIf`*TJBo9i8@eeAf4'k3/07];'%N%6K:U/B(0R">'^m79G4WtseZeH^%^&LOTZ`?I?Mg</VO&&5B6W5rSg?6%*0F_o!W6A=0G-(3c%E&b(,o6pIq3T$E"(t_V6-K"[/%2UtCqg?niKI+r-t3iO!rJDeKsH#m!%fi'i,ZA4aB]&V&qSRf8E0$4(!ZpI'BF/&kP;j1p(qK[.8Ih&XD=?^>Q8N@?3<)Ck<mp/oL%&.,uu',&?M$<*e7+o6e+#W8fPI#*tDFTb5G;A]o8e-HOVfKld/:BkVZ90>[rV`CC,L14mrCUXWG:569BiG0f*#?V4#M"nTpEi(A'%Q`[A;:HXA<"#Sg,YadL9]e5U9MD2>,dkCi"0?`0^E.6'.&Y@Z!e9a[,*-U*F;sNI\b>AT2oaF*P[a[u_KRe@de9rad,StWa3QYa0%l?c_e&j-*&eB?uH5#8+9-2,3k\1sEQrJ,^j\1IeK=:O<K.40FXjDK(?=k^ZK<JFQlgcsF.ZDT*9ggq.-Rp#)"1"g72A@RibP$JF*%IcdL/o5n4ao=NKQbMoF2[_!KF2/7pEI?6W?#]W&_5T_ocDkU/F`2IjHKlqYV!)ti^\'*\go!_h3$VMu;b[Vl,Ylj+`K[E'(0'(@O%bi8C.PgRH*T](49i/&)4XK=u2pJ\D/U3\"DU5::a/MW[JJc!'Dfb>[qgN%`SOmp81q'S=;`a9>s>T"9ZOMCe7fRdQr8&Bh[QH:eV%5_"O3_$kH<_BY*6mL$3'-J_eEgm#.T%i>$.6+TCAV$f0e$;?Jg*_9e^qZsUWi7qss8$@T4W)9Hj4NCpacmp+N!*:5`W/[2Hd^K-X%Q.fFO8oU8QWahuDV<R/lhh8tj2O-e"Ubka;#s9JZ".Y7tS%F?R\$W3&kS5a"O44PU\?(#$jg;m[RBbaPooAD+!VYq5_4`DB9MkCW%C&X'-`Qm#WkH&@W1\]Zm`;p6RGkuNc?GOWU72QBdj`O/!P*2Z=n]Ood):\5Bm+"2eV8\(_W/A$J3kCVRHHtTDT*_TFFhr=u?bK1l%W3M/cSZ:Ou>)]1g-;i=JJqtlUeJfO+=+mQfV5,!+9+!DGDj--N@GHVH6U^6_BE9cu%Id%H;BO6$'Y&VoBI-<R`X36uMI@C5ke7Pj%iU@'4gZM6WkNa!uElXu=ftD=Z4PeF!TO,@t%rY[S5IW;3A.0m`DUKK\VDMK_!G'.j*hi";#^MlFk<$HbOFfVK&4?QFOGGSb^Y>RN%3Tuk3-uUBcps7`;BO*hn!876u5d!K-pd1@DP?/bJ1kKp"rrV:p9Pmh8L2nPI>tF/t45CP!ShXbf\Vmi1SKn*k\Ri-4'$2\m:N&S[%O[4/T/7qskU*M2qUI`75I-1+1AP7f5q!pQq0L1L?BuJB`kZoB#fh:<nja`!\k_7"QEV)IsJT+:`&j0OEG.ae*4/GZ-)+foEd/WD[%d:*QHZLf36+f0fo'^SD"WVGO3l4sPBN:mR[&u+Ka`rp1PKS2,qiPRgZ^O_eu=>p'jR5uGsG'G&KR1_*&mD'R5iI1G8YRW9S,N]h(%CJ]]AV8JP-`&JYnJ;+Xba8:hUh+4huS2h&&];s<M@#^]b8`DQ>dK;\R]BkktBd4i/S\"AajjX+=41;@:W#,AD7kVR`$U71>ZKUbt%CB!WN+qWfhMtet=]I'_:s1c1iK+m[*Lj/MIn,1%0c4^(k28$OH6Q19RU3Ka-*-&:+E[IdZ.R5`2-f-G-:djcT0gJp^#BQm7Y(Kl-%*PK)^lnW18f9B;1]:4[GpNuV<b*d;M5o$magYPmM!Hjic6k6TVOkblqJel`kAo#;IO#^(!dYo.rSG^l;*%+!&\Ku6ghS9W:Hd[JS%45_OM1O5,g]$eF>8T_J]^m7SZ5PT)&N<4B@K.9nW-rVu;]`'K"Q-F3FWenZ4r-X)/m&#r\^=?GS*DOI%Sm,e2C>[L?9cCs_o/!i1%O*N!W1<88[Ds=9BR=&l(%JP@=#@hpMYu(-a2;3Ms`tVNmqGS`(_KGa5k#hm=?MeWFL/J1sIW-C2EJ9['@F5$o0u]C%:OI'a7@s<J%^D0NJ1Q^aV35cBKW9$!N+!rb(EPCN=NNj$32'c;91*fMrCYEHEG'.Ai/_j[Ag-/.t5<Ii2Bi'Pc7@Q)@XSQ8'7;PTq)0QH/,59@c%((9JFWH$5i2.0DHSo\i1Q'cOl]W?Oq4eDRpDgDhBCFNf7D_\d:g_pA&_j`bNh."K/e.,'[6CV'\,Kub,na$/X+sX'i;:t?[$K-n!%P/H]+gGB,_YNuDs'bW<h"RtpfJsj7r\S52R$iR5I1iQa9]*Lb?W&M/lBK/rBE*-#<!Pl=2Zq55H5?$9ZJ+QJ-r7+*S4XesZs8V.,%s.cODZc=GiOp3KL#=X$%d+#"5\n*4#Z3jb(bo6gg)2>Q\$_jT8#7&eD[K7c,!o<ns5DC76::gtJ.3\ko$*)_W%5bO3nB$nS]q7[G%_C#Xf:UB0m0;g%['`traP=#Nae=@IHBj0"5*Ti?*=u@"9*/^n\]P[Pc3bin%D:pfk5,5BH(g4%XI"t:h7\?'@`Qn8a=2liu2"PP>%T<:rpI_$,5o1\m>peTH#jE!*C)Nbu$X'dDjWeW#,]Ptj`15na$<q4+QFD83-"^52/i7's%s3K><A3-JZ^QR^3B1mQP)IGuYGuB^k%r\&dHal)B+kb/K=?[T)ogq+7@g($_R/FE)n/tAZ[7CNNcNc$=\P:EE\MBc'OLSLp.Phi%CR:(YOFN6(mLSN%M"#d,+Wr$D/XU4s1%`r`nfL_o)c$;jid;r(#OlS,\f*97I#`%B!#.tG*V'n\&7T1kPFjF&Mt1Z:h+?ZBCfJ9NJD?.Q<Z6$dusAX.AA\^7'q`hSgj16aMJ%jK<#lSE6,NkTR$"G9[;J&E7e(.`A%U@7V[m%Q*X/E^`.6'hjKt#TN\6]29"@Of//+7PPQE<_QbAhNZA?^&/hSX@T`BGZ>gPV"%n.%*sh('6tePgQf07*J`.sGXBc1APRae[)Y%i2p=?9V2#fAb32Ha\6-`O\XFHRc.Ind42h@mH>X5(cRY*<_bFJ00;r:EJjS,rYLa[Q'%I>QjC!0bVgc)-;<"#"T2?OIT&bIm3kBU!/<h]_jeBGop2\;J"I\aO]>Bej)2l'HfW<=&\J(Qqq67EEqS"j"eqjBG=XUIa$*B&I#A%DFn!!(R'DY7Ef(IFtX:-&HNZJK-T6/5K3]ipr?`h0P*dgBCIK?@>9+8[brT`WFd"C;*=T*=4K;#==X97pZ,J1K'HotBLbjs66/>t%:M%*`eW&ACYF=]k:k-T/:NPg+di1,#ju(V!+Q]$?6F8bd*5dj%rg).`Z!"\\X)q-r!-:o&/sOB2>V]D[10s-jBj2nBPV0(J5?get%Y2RT!%#\lVor`o2g'25]kDa##r6o]j.0kW.ol(XXDNaY*S\fGCksjU&NKNrs"K&gEONMh,5$b]t%R_$t5u_m"X8/.a<1<1nfi8oZ%q5%-k;Ajc$$`+5ZH2`si_%%/)$(Rj`*?@m.K8hA@([-I);kAP1]'FYr^B@Z[CF?h);Ds=&MHr&nG5.QJ;Gp"JS"*8tLb1b"2h<CB%H"?cbYon=g?D+BVJ\N_C.B_Uq/#-5UL,33dkLt$\e5-sM3/tD,RR+ja1Y=q5P-cR%$3rm]H4!E0@Tt"B]#$-JL<#\sk_cK8F'T?a%UtUcUY^;HW+U?6QP4#""8LbHhe>PJXBJ0F]7HO@f82sMd.7sY0+Jq06U391/;$FZ3pS'JZigrY6ABs]6AEi2t`_Z'>+Q,oY-hXEV%a'%)dO%>0uh$/emO^F5tX:?<pCZepOdAVk[`Y(Wrr?NSWO+HY:H8`H!T,7DZW*NApPlf$iG;>@M;37QK/:uC_7R]L)G@V:_U0u!0%:QERK/H`+ULVX&8`lAE,)MPs/kf&D^Wl5riN)#ToW0Ze4oH4_D8[jIH?]4FdTjT9%a"I,EMtHb"6/Su@pbn9_bX]E02UjFHU!m`A%?I"e>q#--[dYT]8_V6[6k.1)8SDGRc.IHt8ab`j->hC@DM;cNXpD8-#!;ZVZ69r-%$Qp',9c]M-;*XJ&#4Qilr$Y&ULB)qM)2b#t%,28pE4!nSc[lcXBQhlEccOAAfT*)Y?*XR7[EMqKE8kDm)\6FLo0e#X2k?>;J7`['JV68GCl^2_b2O-c;ZWWR#VEbZeT%03VC7PaM%^rPIW/Q&n5-Pg9G`?erV?,5f8]2rRK$:#O/_Y>#H5?ucI>$p7l]^\N,+47A,="H?1W*SU&Ii,N:XDXBFmL2-"+TYEjh;A2>4EB\J%*\1$sL'ugk8cr7o$"MhWhis1K,o'27WE`M33:cKX(.P'N:a\=WWj;Sqbe&JW=Wrtlp'n.;M`XC+A!sdL>'/EtN+GM6_Es!K1W*CI%&Y"Vd9H$Lo]sqg"]6:DM!ZP;.$%o1;:U8d\\QFt-`$2_Eik=S?mr>SIqI;94[cE=g49+n/V3UnnelA[%s1ZKb4Q2\:'0?iMWN_uE%XA5W9Q2W3;pZVRhImIT>ZARDpl8(3!HY,`IS$Rb'NV*-5h&_&t%!d'eV&g:FeR-:q!7=bQKd=?L7ERmo=$/<*?+k1?PA!u*(@7&H%BqWiPX-c*g,6M`;WEr[$hqE#r1d2JmDGCS=ls>B>iS=)Z.u[t8VaB,kJWSuo/=\5X&&?_],,,ll2?Bsf!7))=C-GN._tl\8h;="F%9HWJh$ni^AXnISRP#DG.[L54:;?O<@;UM1fh1g0X)*aXk:$aDg%Ia9!\g++pMrDYZY@1bV.[7KW!%U03^.)SW#bXTY$<*k%[mEO.%2+seidQP4^G$B_!n7nZd!+O+&bb6/u&[87G4bW"maj'D4jPg82lISI"VM8s5TpuTk"sTk#!RYB@HAGZr+ZoLQ?SY/m8C%l05J4&8%,FGWU`(Uq70=rd#<CKG3$XK;JJkuYA0%has2p",jF/]2N@hd$>06e:5TS7er7O5Lo2SQ8\$Co2*^Z1;e&\rK\YE]Kc?A-An>@6CB%nbtt)[$SU1^P=6oiWOQbGE^MNG9'>N;C@>^Ei[KU;H*[phmSp>>@"%9U*Xo"?UjOVR^d@VpDGUXg]@=i\apB0_oPumhEE:u\bOCH%T9q"M^1[&hipmTaCQ`u<):]r0mg-;o8g:YY[hZ)5^*#28p:4+:1GZ&DdQc0\P'8R`Q`"tY:'6]!Lj^*i;98RZ\lpco/,)HPOGeig%Q%"S8SOn@H#&9lW&7'C,+-'4-Ok=mop8*:i5R6*CDhJ/HH*:Y=<>4e"J.(i49:bW']jc%EVitjd_\S?`RoVmbk][@@19+2oAf2b.%hlAUNAan14/Ruk;k4H,a,6g_9O%LAkYKH@2>'[Nq<BAW#)"o09Chq#,`Rb_SDe:AKp))@P[Gctg:dc/G[$b!_X,E:T\QP">g$7hL%4ccS.p@`a>\c;L]I.WnJ)H)[[b&6:e7D(Bs`.e3<B=*kMc<Qg`h;7(]C^.N^J)O"cgKiC^MS[UOo!koU^?kC8,Q[X?/f8H>kd:Pa%,ofUnSWbcW4PP!_c)+I+gOG]<A^Cm0C\/tLG__Q41i2>KRP1aB"`GC80q90XqHDO2I[4r%K:86fZ,?ap](nZEHf[;d%5i1B8eD9`%c%^nPIfD0afuT5o&EA=o.QN[R^?M@O*UgQNA&(%055tKfh5-F#-q&gNOE2lLRA6WY*&cis<s<L7a(MScBA*qU8o*Kp''Ak?qh#5P%[4E3W*T1i#H7sTfrP`)fK!88qWX$ptO]FNd8m]4iC<LEP#ak(GTR8cM2gm4#[h+p-_N8,Z9&?FVJiRt2');u'6d"pOr`fsJjVEcc%(@6<)F.&]l!a5TDI+60LN%H:?mOr@iq.iG$$EAAX#n3LY[-%>lOWIt)&ol).Y9PN7_Zim6UNB'MZ19Wj:e^Qp.2n-_nLQ";Y]WPY%+Dp0;*2s=!fgJ:G>(:C6_"0e7OOu;4GIi_m'&X)V(M5;E?@H+d,T&N'R8+'O09^S]]doo"8A?X,M>h!9ARn66gia=IH'p':oNJIE%2R"k5=Ck"6(]AI8R/-fo'`/TP<uPV=G-[<^f>Fg1hootgTeWBBB%qSs2%]o8^7\0f..YQ?m_nBLA7^.[C4JThDL;f!0Em(4`A6b7%"R6[35BOZZ;$OI<;@I:QRq%=splf:Z-%'*d("XKDrh%/"*Y=QIpW)W88%55M5tQ$cB/sLfXL7LE&WRsd3\"sr?/O0mP6c]87MG!:%fq81U!6C`XbVHH#:G>EY/6NfCX"B?o?,FBkafeUZr!c?NY7WE)DIDQ(@<Md(*lmteg0p(N"SR1%3\Z`=[@YNr5\L*T,BRr9PBD:8%`g%Z2fh\,L%`=E@I8PbA(<TK,f=Ef!>?K#A%&Eat^sf<BO@CX\7sGcW0DL6.il=Wq=T\/qlOiK9&K9mW\Zj'=5JB-(eRs"MG=pGW%h6P8f!o;[C+pI$pFh*[MaTYQ'3..m^_<KSl.AWpJ\qP;Q!"tLe8)f:o@8Vb&hVM>QH11X)nC+SIGBB1s]mZH&2h00YK>n-@4ob4B%36Yu)M8pTG4<qg0@FAYb_d18>Q`I=;-[/fKV\jN2V._];EDA*C.,/c/2ur%]PBI0Nn9eWF^L[Nsag2.2bio+0TuJ3]QDD779VV,b%JLl`JXXN:@V$3Y<amo[9p4M1>GV%rF9N.33"d8>04sd#HXmi1,N!ukrQtGD;#nK5%4hMpVf6uR[Gs=K3[fT!HZpqbPLEqNp</J)6%Af[k7Wo7=ZIiH=d`mo2.-X/[,7=??_am^mB6,lhS-T[jM)m4nk*]^cEUc.(*Fc?RqfKuhRiB?;,em7ID.)r95Ntd7q]>7@":oSY^%>dNjp@kt6uitPO0\CL[l9D(-Ol0-KlG"@'/`!P:hg)6uRo\i"eh8f]I/n3(@;m<6S;:=n:-X2&+*8(?jS&f8t+EmC=ajC8DlnlOW%7Iub$Ca%Jfo#\`9*%s2A.)^6+[G\fM`n/T8R*]8El"aIM9iJi\"&m1Q9'/"mB2/BRK,`)OmI53pOCUEI$V3:.=d;1(0]nOno8]]&%c^njlX>_J%#TTcLYXtmq]q,9AWG<_k(sGLYO?B5'C8Kk_nfkLq%99[l`uXRuW_8f&hN(hR@;k*b06`%bBBmq2K]s5!/N^Q`:Zu-U%0.Ap_f#$jp,OWRp9XiK[;@EhsrdG9Fg]p2,:Jr7bO]J5pU*](#'=%LD'M2pmS-nd@;obkQXh:\4hd_MRH-imUI>Vg0&a11iX0c9B%fmhfSjaT[o;k/V)QBOjGhVGp*#U0+JGpg#ucP/@!k(:!WG8pa2\Wcf:rFs7Z/=VYRcAn<0mcD:>s1b3tp<u32ib"L.De'Xs&-]<T%ZL/ss(En0L)D0aOeJKOumVL3QWbD7j>&-M.nJ*p30QF1RrU4AaZIS4U[#'7B&ago;EC5j@m#<7"=q<_rF;Ce&YaS\*DAZ569b_R@%8&VZ1$)JliOrOY&^AH(ji"+%5Fj*-_Y76khf'o>bI<LnI5<`s]M2<);_p3m][fE)07n1^(ePLEVR;3t0%uNrUNi]=-m6rhSI*";_%Y%iBF!'RMt,;lkp3]DnGE)a\_6N6-p'T>J[Otmi5(h[IX64m$P<Wqf@Zg;$@PD#/lSWPNLn,Q`@o[tA;7Ru=l,=*)7nbeJuOj8<6%b!cJ_h)PKZfi_Z!nC#drDLJqK_EK>nJ?L.=bPVbh0"%"qgB]Q\/85m0mL9nCD:H2(2+G\B2O.D)\8`6q)lVfta.^&&oI"nun.#U>%[Z-Y<@%Q-NJil:P?AGE[XeFDWh$O;jpO)W1*k252MS]]6VPb7%l5N0PV66`2J!+,l-qIV*OlJ1tjh-hE,*e(_;H+G`:R&^"PGsum%9C,p")WOb:8`p74q,WO*D""MR_+N(:"l`I[?X9[,PMZ-f\0j3q^,!G1J]+!=N(E;;Foe-fDuj;-8Gn1X$_>mE'F<h+hG27o:UWIm%P-BJM%+G_M6C_gjLS/4=lJ_WQm7XUHd_9r`prM:7jD8.d@W2HM`*-"O:Hg[63S;PQ62a5tcJENU!!)5nEnl4%J1:K9@c:65%6$E>%&VT)heC5aC%0o-lZImm%aMpUHaDp\]&heSA#msgenA*GNa!9Z/d0m6nKd'53Q-P[4:*?"9iAZ$8s("_WXhG\79Yuk:Es?Q>ipL$d%1rQH'B-ml@aQZ*dnV^0t<u7bu\J.7>Q)"/hq6ik8=$I@c;;3k'rK:D?6.$:>(F=2#L[-]YO?_gj^JmIdRiJKf!1UNBH1Iiq6"I29%)CspK?quFD_poJm#,QQ-B]h.g,]bBofm%oW\IX56Z#%oc&VBa/!Z<5pN'd_Uj%4rp:]7\!R#M!<L?>>F\<^Mg/tiR8j]'jV"B%f#%Ff>),/pG25N,3);]j)7^TI,!P5=7]_A^gB+O6U">>mt"'$"D")TA+.:Tj4Ue4au&0"Vhe<;q2iY3,cXPGZ;4Es1!JT4<*$I)IL91%ZPue'=he`=C1d:uA!d\^EC<WYUB+-f)bPH?-Ra\I,R&*LCHWHDrNE,)>]*PGZGoq>Yd%8jj@jjH5cK-DHGS_8mNOelg#OOM1a234%[HN%>U9$4?=O%K:P"f.jL%/^m0M7J'1\EsY9?kn\gq%[j,t]S'N_tuQgV?iTeG)eZ_U=uk>!(^MiIo2E7g)Ni'5G0+!7bTigACaB%EaCK'QiMK2<Mlr2Qq*-f,1@$bQ7+HgU\Poenkln`&dg\:6^4fSF_2b&B_51>!MM>3bh?56YrnB](gq+?-Q7N"FF_@tkGuXh1n>1Q%-K_;kq,aiTZXP`R`n1@M_As-;ltdU3M>M_YAC.stUa(A+&\\0Lk%_'\6bKb`"'9gI[T#?7S!8DPC.D/kQBVqM?_d4gRCY5=1(c7p%"E_kP8ZU.(LH^mmk&>'6X,6c?G)5C-*Tb$9go"fJ&*tAbdr1\C:R+o*.ZrqQiU?V*iE)0Gd4Y=t)nJ$/_)qae(`q+_Tc92c%TbTi%2hH(f`OHs"d$apR+!YDDXQFEm<<c5$CoFlmA:&.XfWtWjF0$XlgGB8k9^/"*8nWnRJ]riJ^5B.GNrCmSItnC3\"[(kE:m<:Sla""%jZr5Z_fDWUIdO>)+eFn2deNoQpQp2q?.)bJmP!MM^I`>&Q2F]A%,p=[B@8&n!gLC>J<jRt!l1;Hh5Hk"^D-f]#FV)uTL[F$1iCBl%SS<?E*K99O;bXPF$7t:lI#[\2q`g-0K(n!u$*!&mY8m\&%$]U_X!n9lZ2JKjNFiQiQkESoHXM[A'qita84,B=nX]Jj`qgcCf]PLj%%r+A4<MHMN529?CEo[9Y8?J0Z%Te4(\:o60Ad"fo#N5=`lJQj/p_O,[9&ArhM4Tm.Wq8UaGO/6B%+QJeL>l.)K"dX_I'H,KS>F-(%C$i\D#Qj,-m#13^j+A-pJI%Jua]+m`hXB9uU0`.NQbcnCV);82p'9klIdF!]?DS%,=u3f'HXR[WBFXk>r7W"G'ESrh-tJ<jLY)"E%;f\23]Tc]JaokBU?#h+k2YHg1.4%.'j.1MX,#jeqY^B5n]i*NU>.bEo\H!OKNKVq4Q?(P0N5N2Z5R`OPhdc);n<YI-J7;7Fd>.$]%e.Th88bmV@;ES0`CGXf^CRU"b94<44#Ma0N/qF+kaq5uqjNle[e?7?s-^bp,aW*"rZm?1mQ*isGZ(o+*&!OUcUC^r7-iYI)Wli<m%)li.*3$q#.U1H77CW3@T'@tlG>@!%a)ruF#@)o<go+!=CH_l7#.]E_!`+Gs[+)'M[9pJ]r)BJn_.XK^$a#j@AE(c"$)Loam=NfSf%mVNL.)Ioe449O.98X`p>.autF2X@BbL+/AQI7Waf7+kRFf11k75QQf!7:KR$'JUQUD']2V=`(.eF.6tdb<fFIX8Eup+A*k:4KMFH%g,VG-Y+\aL_f[oE1C^c56E-W_dj^WnR4#=o_(^SMdo$`2-0@:.:mjG`Qp2ISpV-XXTFg=UKmE[BajZC!Q?2\kp&Y:s,6LY02b8Rr%hmR,381#?Q?oA'%s3hs6D:W,PLu;!_'@W\RAUeX`r8X!]nk>'q&8u[cho?m,0$iPdCi_c0pb/r/dBJ4YJ;Re+Cd_[&>g3?nkrZa@%+%lqU4i>8(ol*5C=7j0s;K&CP`$H&A3>+&fTugZM`*=n=9#b)`!\mGWJXS!N2Ba4K!#1\1j$,p.*t9)67EL3kq(p>U*p<b/QkD=E%#T,DPQhX>M+(ENh#Ib>C++.-MI+)elDtfETkn=OH[tm!,%YHM<-*%EI2Y?"P(o7M75\Be[2;)F=+U9r\/7J<dJPg"b0iJmDhRh`1%/#.]@i]6F;rfF3ZaX'4u%'T`c?Rg1u#%`2cXOInka"N2i.g@So+*T+-HOB\$KaRPkHM\/n"7[Of>E)^b.=;*0r+G^s,\,)>:ZptQ%EP:4=esD.1MaJ!0+4*?6=(I`e95UMZ8hu^^5rI]%4r-!<<IASpM2uVcgK79j1B4kId`!fD^ZR.C:JA+.L`driUHW_&r@d9Hs23.C%^H"h@^WZ==Q81jcJI&TKCraDB9S8?!f>iV'(r)9CkA>ctDG]_YJ<`5Kj;8%P5^G58W>-[!E/=<W#!roJ2jbr2FB^?nIB:s&\C`EU%T9Se=+)?bo^)"X@P2?Fgk`K,CRTQ)7cXZC%onWt2;r8`j*uZAZ:?0Z-D^2%D,)ngKm*WRc9U'BPrmK?4Qkurn7=(o0ElQ]B;+;2c%9bUlsNidZ!Kis'9J)5<VV'jZm!$GN(SC)n'P%)tT?O;YS?]bT9Ch!7FcW6jmOfOW4W"GS&+i0iun>iDbCk[[r;;,N1$YCt)![!\R%A%a#1$Gb.XClNcCa_=\MWA'*H#\9!GRSm&Oi/,ht%;M)dN]9$pI`Ld196fL*c&WT2-)YYh&M5R\;I/7r<C\#u2<Xo-#G,Kdd6D-@%qGkj4h3$Rf1NgIA$fGQ/*&S&B.f\Ep7J!pe?88!$`RRjC1$[hre5)r5eP0*s(oh2bFLqpU#d1Wj]kG3"b)t115-6kr\N]Zm[h"Oj%QA\LQ9$+M1&(5,6L/T8+$03R<lJ$T9_b[?`G2H0:<4&F19*]+YCde9<_W@g[[Ots\BZ5o@%l8q4LXOm*Pb*53'%?;,:u8]b_<R:U%5!UdhJ3H2?,:9ueh2t6Dl_iW#"sRTticqBM;G:;;;N43sX`o^Q7TlI+XjU$hV&C=*emm8aC_Xft(aoLpW#JdV*/DWtababHk1HJ$%H/MF-C7Qu)T8>k!DWDeCNWV@1DPHE(PS0^CC7Te`)@A))8k\d1mpAmnB)o&/&0#4&rq9Wr73C#=\-YCW8'PW!m2T43ULr=SS06^i%=:m(Z3@nMOOP`ht0;TnCDe5L)Hu:qXi0M/V?Fdp/e1!%$LOq]#S$P7GJ'R4^E:\E2GOaRd1(!E9K0fbAdqdu=G2LIC47,K#./uG$%4]:5HP$us>@X?6rV"iTOEp*g2Cl%1\0`_30Pfd`A0n(B0"]MUb'-`bXkbt5bFmg)>eb(ZipKNsi"<I:8"0boeq>%*3d9PTV`Ms!n%LAGd?O@4n)%KHLKLtSa]fmY>,D0WA?M\PDe<CX&\=V6cueh)Z>ZjHd5!"],1!!Kh<@L%PiB9F=,m$)0!:("4h$5P$5Octu]"2YO5%_1_$&&Goj.BRkV+JI0_aai'!]<^7@l1-SC)d=Q"!;VKJe/P&K54p>%P:<F,;3XGkU(gq</W,N>gOJ_$E`,&O,PZ1S$>%1#T$n$;i%nmR@4fVljnoF\?%))8/Te;-kQW-m%2%6>aS#<$>fcqsO'E+0qV.k!LqNK+%$#lS-RN0k60@0M>r#S\g$j!>jX6P::cKHNj.<'D9L%%NZ%Lj=h]m!spDbs+$>AJf*2iBjh\K(j_r"NW>?j!>1BP.iUfM#mW,bi*f4a&<k6aKOBnG)'4qE8jkY'ZqYAR=p@LFOG/KW-`u]e%_)5@<'r#2',*[["*"o[]+XJHn<(-TpMF$2j;]WMa=9'Hq:uQp/W*t?eUCnS#.1oKN3++"J)ji%E6p#C:,50uHWI1e,;Sr!T]+W!!%6W/Z"P@ufgM1c';3#Nr>MG-..&;l8mZa1d*;*;35VJ1hf_3:<qJe8S8cEP/?61C\#cA%$HMh%TT*2AZj=XY73#niSfe5S//P->Q*%=>KC-!ojCg/6ElS#Tt7q*"Zq.^id.XjFZ=3ObnmG8rQq+4p)-K@#.],#73I8OsfHZ=TMfa31J2b$*ZOnTLFIE895%nX2<k:n^1;S%#Ymen.&bUIK7t%^8`7r'-PbPe.lT@=)PI09?lPdAOlf"&nBc4G3Ohm1b0iI"(H=f3\KF=>*P?%o0Z#MGd#BDB@PsE>`0RbS@/u?b%!ZQq2'Pb2R&E"+j+rFui&KT!/#m!SMD?P&NV@P07W!mXd*'f'_UDFi$'jSO`0n^Z/'MN4;d;nah^iH.]=qJ7t6in,LfI4glBQRX$%_K\U*3-[k8d8Upa_IF/J,Qra[&I''!JV!#Ma'BYeQ#!1*O?mn"6H0!P&<Mg1!J^j$@t9.sYd$qo&kqE)_&B&%j9WR]WMld^LnkV(%<_7m41dISW#@n!l-3ZeQ!Fet&Qs^VI1o!g7g63'rXt3CXZ/2.HJ>pHNUkXZ%lLa9cM4l6Wj)MXqctkN?7)\^2-.._W(n=Q)=WJ?O%.M+B13)(Me=s-6eLmC>*&\&Gtf$dN;_>/UZ%4)HTJ5dp*DPJA9Zp9?TLQd`R<]K=b@l!O(8^5$Y31)OmF@"-."9K8@%GcR?`*-7o%Pk7pKT]9.Rn1^O+d/jVH=]$oY$0r2-J`)oaK4m-mmR"dF*9#$DdfE#M0V[Nh+qZu;VV5]5"k[7foIq,<P=j3K(DMVNJ>O2,7"@Xh%Ote![dADjj3'J77]@)Bd'j2euY_4hJN!Vj!4WtS.FG-HeHJqsK#@:"*'SO,`&r]dDS02Q/(,T#?jPgjS;ICMY35Dd=UdX<3naUVI%NeDrjKZJrtECgc0"+pT=:IT=q=A:[4@":LMFclgcapG,Do#WRnkn#fs8IE*\*B7M)a<E/S"]:Xd4sUTl5]etdJ]h.]@>+a$Lh\DX%(oriE1e:_!6q+I+2c,&M(SL>uYeW5470ttT-Y$&C`L_1gA"qY<je92IF#&;+)@lrB3"Q99-REc"<'CF[(`*hi-\X6o1$&\]JW5[X%.P*Jd]7_?]&qpMs++==.aabe1/;'0^Q:_YT(`s56]bU^C#o!nA,n:&_+HD$W9LV8nE"V5PJe7eh-6qd_X?oiC:/$I)$ts$&BfP?C%B*5tqE"@c,kiNKl4p_D3PQNs?Rd+AH;N`46%@)bUK9A:*J]]kLPCapVa9+js58XtBU('[B?s%AQM&hT)9>ZiS$`Ase0%.k!%&WSu%:'?6XYu)8M"*K3S$</]JPS3\BTd^Ns:uMM0!+8FOk_Xnj!Zr[%9PH!7_XZk])5r?*/dc9^VWoRCK*$[g$Re?8*"iB&1h;c?[#dPD%5-P?I(3nj6Gc6OW;@"]/&c-#DoqXcH\ETCEi"61s0;XMcq1KAGFQ5Upn2L_SFS(7-i].RG%0?j22:XQLJH-Db$Ah_?&JtR':(\TW%d36>7TW&c)RRIMT6@d&)_(\Urf#u#],,4,W'OeR*:(\-V4WtHkcpu2=D-S9EO]4gbiZ^%P$PZ'NE9W0R&dV2U"pUm&!5Mun%M&o;%e5Qk_(6C?s_golWj&E=76.fiiX]1sK(eIC)RQMnDT%K^O$&U^jPf_<0SlGJ=E%(lMWMr"NP/UBaWhh:].DeA=!FgT2+CQG)U4eZ5%+U!cPqdG)PQ:m(WLLT:R!]dE"(p-cqVndt!Et=(<T`ZOnYd-OQ:`p@-0sP]G-8e&i_8lqK6r4S>Zk1\I#nfNYjTe=Gl!X\1Q*!<'%;OS@p8D7HL5dYI82PlT^LJ:lFj]>V:QtY&ZKS$F*%uUHb-c#pa'q2/AJ-O'0<+#g+-09caED^a9BmV8-5`Q!mWY_,h%1E4LTaVDO%$RIAJ85jt85ZXK7_M<bAP,1h(5]@tk8e_pdd<[qG"?Djl-V4UkBOLpmTTZMm$_7M,(R"o\V?1=F1mOqinE?6SiC"kL#mL[=WAl^K%GUs0g(kd.j@keA35\#?./rkL[Z48cP"sYCI!uusBMED(s0HUr?;`Z&jkThr1Qsdu!,hf/H\?]gD;Egrj7`(<"Ua[5s:/X7k',V8k%/"@#*C_/:BdUM3'[&/lt-Y7g"9EgFb9JhYV$lB?s-Q!K$:9ZI;TWgcE'="!`@8KS%_Snl?&CW%0+GbTJHp1:VLf2)j7!p72RQ)9D%Ss3=cd:t.n$dk9Q-0=/1EXXRt<%r8`Lu8u7&;;QQM/,LHc;ZtF((^s'[0ZSa-&Jj".?^5I\ND]b+?1R+;(!_20G9\fJ`=h2"YUE@%,747/C+*d`$qQ&#CT?H?5jTn1F](F35jI?KJu+D@:.i=/7!NTkU8]V:<FPDA$J\C#O'ApM<aDW8lc2`iG.Sd(e74IYCWt=i[G*jq%Wp=cs\m;f=]l)B>h,I`Wp\DBTcc`^Oc`Wc#IB,mVCa2(Be&HGmh)sNTF4TNHaP,MNF7XRd:##+-l*e;!Vn8D/>[DU@=`mW%OR9H"%pJf.Js,HpTX/kXdj0cgPeSEn%mu=M"oD*n52;S9ps$LDWq,a=Th!MajQb1uBZL)QlCt6M6]8:pf\G^#,]mj\eCKuA'h.<//]@`ME%Z,]eU4PXOqm.m)^ZX[?JpRU0$h<XX>[['Y6^Ui(lrnA;slbn.`p=6QtJ(PV4]e2B_reIV](coQ^]PLTJI7;:$?^IpB]$&fKlJXrL%5/V;aq7HN`l2#2]dq/K'qRNNJI/:#@muNf_W9`gB]3S?)^)1)BCV&kXR_%,#ZXN04W0a(,37e\El1Q0I27fZcc4(:+o5HLl?#t1V%d`ZM'f=W;=Z@W["^,i5_NGmF<SN\*5@sI9pca<Z?O*CUAnaQSKGdhC.heQP(Mob7.s6mY/doCSbHgdT)mC[_TR"r;UIIl;ObeG%1%28+2%eYV$$I]pA@mG=>'o3RWaGqplkIW`=[D<lu?qUk<.gM:jlfB(2ZY"[>Uake\CESIAb\9[qs=>qigD<,MGBeDI,n'h=/r_5QT%$:^9-X;3@3/6!utjqUh,s4StR_gM:7Zg1=s?8ocL)r&]`A%l>Z6%so)#QW#rikiQ!U+i=@n:W[$cRP2gf=[MQI`H?*fU/XV0#)l_%2eB&i$sS4R<O"FT?2!(2gCiE:0U!Ac/Jll?]l!AY.YC5b"UJL8WJp[cY_!HuZ4[.."tNOTWtA(Vi">Q))SsWE7ktJj&qrhL8X.%`%JX+o!7\M<:171@n_$jhBH-K%S9NEep!g$M2$;)P2'rV*d$8*0OV.)bJQ,W"Jj$jFW'dt?&""3Y;3ktaC+ecaRH?mn;,Lcum.)?$d%;gn:#*TcK?cjOK.n\>h8d8ZR,dfe[nF!&_`o?ifB_ImCf3e.ghg8V=*aabL:nC$Q?3gsf)*_iK131J/_;gh[b_NH1^$V:@#@DOrA%#Sn[.!(5b!+Fm;@O=Yd4#&("=<5o.J#`'AO&X\Y1!"ttGdK)odJqesO1aFKSQkWLn+q5(pNJ,6d6Al-OFE"GgRY";!+:q#4P"K?h%;ZJ.3U4n;/F<RHr@7%Yh4;\G:-BZLPiQ.j:*stgMjJ!N7"ouUfN$]D*1ND>@9R-^sKY7Zria;eK#Yb:#!5_,FbUHqO`du:q%TYb!%,JmRaC!kQAkVt+^BI\uXQ;'cd7Dq\fTd:q:JHYNE68'j^$P<\t`;h%hKbl6k1`MG$Lg)Jq)_W3MTp>e6N=^]k"(sh84sC?d$md=O%<%JdU_(Tb)P*"<YLGUb_i$>SD+Ul:tP`(4F$t19=_M8.'#=B>aK,L/3]oYFn!3l#[9nff<g&iOF;ESpV)EGSuS5(r+pnJ"i-%`HF%%)clUa:AL7CdL`Z*;oSZ0G*D'g*!BXj)PEgElX%Spn4M,%L1pcL<5"0$GliG,*Y;'@R;5O`3>%&CLcEJ0sOT8VJ6B&Cp\hG3$.d0%']EV6!X1Oh!--S"j2qf8i]IC_p"<^q:-Np*e5R"r*>!iJ>T4*i3=\['8pD[<KJ7B_(^_;l"%8LhA`WF0<#-IS@kj-%TJQ,#@%SCC%&%YRcjFC_Hf3p\!.(BgCnF46p^;@u)K:WW#!%G]mdT@+.,T9?a5+r(B&OpOc&<t*6dXmUY5naG>,I%sf'I8+c9X'1V(/-WdYlL"4%Z4I5Mpm<U-U.qb[BS8VZ$qRItUGGk;Ss!Ri!<C&*i,c#.g'lI\&6XMl'SoX'&M'ObLI8pR1mh`/,on4i.Ht66%C^;4.OI=^4tn3%%/<j&*6R/D+?qR@r"UP<:L_,*<Pl-aV'^A,]`C,8I6e0;+1@G#SVuSE^+[Tm.=DVuU+FQQ^'=lQ.)!)Jp9_f%5(T.ZIhCt<\W2\.\%762qF0HmGM!e&FLid`:A3#2q@iP`)uDCcW\o19hHaTNcL'-&0'n2N]=Ijr_FE=T3qJt<Mm5_7ks&X^?78LbuY?ik>N_\$kAN(A=?%:^K`3naV]aM><f3aAYtTOJ%4nF<.TI,XOO])4F0^.ZgkR6:+:H"9]/?Mr:98)hOedT\5,5!<WZ:P'(eZL_`gI-%]W;n8Tpd!15U5%<"FLq:5Zil?j&'I&T,o.&EaNW&Ec@b7[/<T&;QtC#g&s>+p\sG'Z#EUP];g"i;cG6(l35D'-usmXI(QkkQue@!s/]cWaHJ!,#*d-%*h[srnDH:A#l*>UK7Puf+;DVGON=;A8f@a^f>5hM5b)+'E:MmX,_?,"`l*QM%)gOj?b+!<#TN#+_V*:lPbb>0'8V4U5TF<R0mPIU%'/=J\1_n,`AP.mq$3Um24J2hH]sl\For$K3XkB/FfpRhTfq8+VQHK,75Fu=cQC^$9=Y-i2Z,Y5W.^b5"H\tNNgM+*4H+;P32/Vg6%'G'p[;^9ocDf+<[Fr`K<LQ+%ECeWS=^"-t)D0rD=[^rp3[W_Y]/K8'o?%5WLCO.l:fDGTMY0?2^2QPYHF)=Vno/aX&c8[U7gRd_B%gM56)XUj0(F^_o5CVSI^C;'>Cqg!)T[GNI1J*bkcZ0u2Krn6lb5QC,C^4-(??iFD]^AdE`T>(=(Ic(/(5!ON<s8Vqm(6A:"@p_Io%A`%!)p-&([Q[Z%iIFIrbdPlS-IGI\)I=:_<=)WN=GCA)FbcNPi2WEk*euZ?-<S=j(m-F)RmUNr\`HqKmQi":pd=:W\H#NF`N-kH1%:Kq%MH[E<4\leEDGFlErDj@p%j`>T.gW&q*gM:UEgW&s?525@C[aqAnHhFW3fq,Nm[b#=5>IN."YM&V0>IJA&27@nbqhMl<HeDW"%)V^D2Z=UU@QgMbn=Z.M2e$Vq@a2]$,Hd&q0NZ#1<AUVbsQL-9Yb1aO/[T;OSD3`91,$X3]GlOB0R[McgGo8EpL5_Cgo02VLj1WI5%Cg"&4[a4]\cg0rAY.8hYl^G;.S+iG^\t%At+7FLJT(dN4Heq,uT74P%9b5p@G>EKkq3i?Gk3ahe/T5b`l`r:sG+,nPHcW[5p\&n,%GBnDNch?'6Ebi,)S894,Nq\j#Xn#NEp$*uEL0ZJ(9E&_=ci/_O)uK4!Y$UuXoA/\@Ms&9p\rQO]G"8IsI.s.:Qb1lEno>OlPOgPn%pCEIsC%>;+?dn)tj__VH(U*3a<PMnT?X2o@X4/;1>-(?(*.Z1)%*8[QUr>`t0VYO)kfKX;9?YF(!B]pafV(eY!@ihW"\&O798lC6%!Ku+aA@aMsae6[;VfOnsF#k\H?ZYKe:1cZOA5;8ta..V&RGEmk0g!C6PArMDkqsjW2.ptgF#I<I\lrBbaf`$_kF91g?+np\LT*q\%hRriV<gU,h^@l@>Ic",ZT63'ccbo%Zm&%nX%QT[#YAL`Fc0A3Fqoq:]]\]`mhY^lQHFoZsFh2CQ2cH'Upm:='c8Au!?LRQ0rE`k(%R^-_/Gdr.2\@?dng90ZtokSkJY:7)\m$_P/%lZ":#+6K=HTp"kn&Om5XGM;)q5W5Wl(6l?rG_L,'b;7EpK50N[d'Y,YuAnHD5Wi'%fkrZkgZc$?l*=en$i=&4?0:6`?ERUPm^c`m?>;Pqc0B&uL[@o:s%m^k&$Ol;^!s^Er);-Nc0AJ\A]Ddb3dTWEa3%^kPI9H&A_3Au%Xnc_jiMbLBCL1dW(LCnRm4QjmVHI2M]W9(0?'##H2>:4Z])#IV:Gn27266%dh(SHpHS>%MQ(=dIO\_7%=sgkp4qk=amkW^BHCCA'%a-kJ#S>jP,o/rX&j87'8f1gE?o,@Y:bfW8sC:&bsltUDHofTSFZb<6koK)U5O(IU]bg,S!cE&YECqO'"4O:+3o?>\\bYtokpG8k7%[VP\gR[I2<e\eIXa3UjD=<"GP?GjuVD:^I)X^fP0RFTA]+(k4U-Mo[ElI'I8I_GXQR#L_2hIBSfDWC'=Hd(>fbeD^iAfocM9P/;5%3G+Q9CWpt=0N6#8pMVdiq,lgf<fITuD7eB!$a49RC\NY,Y3ip*DL9t$NA^GAo+BF^0jRX.rK1Db`UpeW:GK1]@U<MMCT;e?k9X`h%CO4&S0e;QHebTt9F`_o?Vq6@Gqf]T"]6iCXcW`%Dqjt:^lHWo%Gi"l1YPWHX9TM&SqhiFrZAt8IX3i*&gs+m1/pAt66q0bCd:b!D%$AjZ@>#J``W0`ee(t8pc#),D'Jr1_nTE7@[K2TCU=B%gt3]nIa>0(M6'Ip/#J!J/5ZHh%tr%=]P[d1lMJ"=,W*l";bj%7*/'9os2%oo,[a>Q<F4C_mbg3PViM[],>^TCGZnr[;[Ac55c/GS&VV8@l(hTAT7Ac2(mMU2P+<b-\ap2]fHP2bR3>I([a:P"1['eB,1`pGA(^%chk$29:Ee?3Ctuj#n!H5;Hn&$\'Ad4Q'KHlk@\(dI*AmuC,58(oW$sC2FP7XrD]#<T3VE@4km)a8hOZc.r"<XWih\74(G`X`h$JB%[$!.uN3VGcpYAekpA<2*5N?SHq0L1?91Z4K'1J-@alP8),k:4[p3=4)K=Vom[D[C2ptJpN<nTMieQ'l;e4d/YN67,+]4LF>V'O5:%/\uO)/+Ma^\X#CXCcr2\apXcBhNj,lqjUkH<i%S*&mMoSCq`Ea0\'^X^)PPEmm_1R3B>K:6k@C\M2/>BHQ9G=:/J'8os356EOO&.%`gi1A)'>_f[[B.Hq0$*lA*PAN-nMp_Uj5]r90=U9AIh@B'9BU/07/PPh<i@Vl'JAL.asosAMu_!2V-aOMFnLK64s8)8'Cs0*>qlb%;+%`[Z$/Vqn`6$uGgZ`J6W1ebl&lZYQXhS%@KqAJpggbsA5Zl-1f+mnN'<YaM??a*^dm1/I;@RrrS;+'o<e2"D2>//GL^&Mf'+C$%AG#q#0k=a"6luKC[)<Lm!6R\1"Y)shag@E`n3E[R,X**I(c&+WnlMf<c*2?6C74Wced<=!pg'_f0`jaRCZ!t=PPoYc3]];_3dPAF%DR;1rN*2:.IAUF3lt1DkQ'pX:A\X2uQi44uN%M(]D02n]9HkjmG->,o<Q`uHme:8KA`pb`>E/?bV*8\>p\PgLi\OAbMhnn+WL7Dt%?InnR]9Td7I]G3*;AmKE=&Z^eo9kjD10KGNVR"Y'Z`d9kPlNRDM*NiNh^l/eIRD,qn&ul#=oQ.<EpkrabJ1QXbj:g%3dQ,K[r4q%%bH*:"B!!q6afHdUl]I`dCTY'!I@n![aC$L+[(;`=fXY$!).mKhNI*`M[3]9d>YWeQXI[Y\olj\'?-bV4;`uq=[AMfLIXZJ:*d]M$%Q>$dE>K^g-S*^%LfcU*m7N$CFr$@WIQt9j#>AF\U+p!77!gT%LeYj&lo2m*Cm++?NbEHXph08-q53??=k$pU;4#_oWp^H'M*WI/;%n_6)'j$3P'5CUMbL;2@0naWYZk4:@#S`2/Ki[91t+hf.LoB+T"N5,.7Mm)o4O,s(<H#*E(^\Kh_jsb5/fe)m;m9]h-C%LV9D2R)\%]!QapgrE1.BC418eNLT_O3O_@Z$A7Rk12H*h58H'3Au'JSaHFRrop9ZHZeHLqr,;N2@m,S]<Z!`RVe;61RhG^4)B2pr3,R)n*bVj%]tILHCV"rNg=7VISc@-uGMi/G['=DEn(#t\r@k8aDL8Riqg<n<GJ8I.Y0V;SI=;'B^O<;gj*,s%I]k=%k,F<O[l\YDGBJ!tG>EG&%\*iV.gmNN$\%DMY]B?H2ql.3>]'$2BFfkPP?gQ)+m+B"4h:qm3qmV(PIJ^L']=0TI^9!m5+)>NVXIZcbFaLTAHad(C[sP`rHTO<-%mFe(dD.TGGkH96V^"dnIgoma!ltE59F'"]Kk:QFK=4]1?j^u]\QFWEqojVh$DXGU;k,p8tY,q$_mGIn[9i(ffhu<'2[b\CHjs@JY%E[*M`lQQ!G2f`i7P.OZZO4iX/?F!M[<PI#6DS/):VVUlH[pJIZ>A[AW`)JVJ;f1&cmHRklDn"GK9`)'*>.^uGo3/beBt%U>l=+>6%g3fp!h9rX?2`n?%4,)A@RB>/3S_]=4Zh[]]4-lH9a)[6Iq(t1>1V7(*p)do?CYiZA[N9(&2J9MRm(^fr^6]b:,h%H6;3s=tMFJil%!!2*l!!#hT&r?ghOs,*XirKho"B7]+5YbWb=@sUXZmZ/&@gjO](h?$B6sta-0hC=&djhtu.)Td)b1fr*7I=mM<@c*TEH6gu"+EQ6%n\jZ.ChRD[Oij#5Mh=#hOb^P7)R!Mp+h-\Xn7<\V1@-BW,1_4W$u+PO.<6c!i`Hhh.WA4GR4/\ZFrb1*A\Ua_8%4NDehaPHQS?oE%bq@6?#A-G;q[$<.anOKeXfBkufG^Ra9MI(4Oog4d^>=X9bkDce@MSHrb*Q+egGkin4XFXX`dqQ>#rd#_fMA^sIO0@m9q0bV</\(3%3[3b]0dF%'"T*1lI&?IG(#q1^=?Ikc\h4`nY@H28_+l?OPA?.`%f%Ma].-6dS>8^#C0qk'M9oF&KVsd@QM;WO_,*b$J!fE4f8`,b%&3sN@bp,u6cKTI0lCaJXqU8Mj6LtOg:Xdj`?J[kNksW#'?CCk4+r;_`(o&!VWjjfR%Z"=7YgZ+,75X\5L`['.ku'_+(6C!Y2t"+p%R&R11.CM"4`/%?54H>W5MQmD<";'A[JV.f>="JPR#E?3'i#$))^a*)hQ5fFH8?%YQUH`Op[Cs<XM;gkNOA5H@Y82J^>LGO=[,*On%(do13IM@%J%Y)4%JX#qY*r`TA%K]6J!r[j8L&tdaVZ>SOE,<(TbpWKEmtfc8-\Qo>]R\isd@;f]B`Q7-m(X9;`*>KG`"/LKl/=VN%`h:@5c@J524(><R-J#dLi!O+arhb*qLl:8sL=VONaq9qUkPYh%-uHX#EjtUAPYqs_q"roFIUf!HJhYOQoPDr5K(o];#P_H_m+6#k%rb#@M<62;%eDj(ohB;2tPZNg/bC*1-?=s3!m!u!UU"bK(Qch'+3=AMpeB=VXg->D4j]#`G4iM4GiMO<)M=65/qSl:((;D(nXE'k;%D@IC=`-#at2E;SV[o_mQ'H_,:c5,_o].e:t+S;PO?JaS=8CC:qH"pstOl<H(P4f2MQAj@,o-5Q:0eYrk<:EDMXt<<hT.j7)b36/<%p^XW+9<O9dl\Z8T"@k%Lq$XmV.\9QRILWd(=edUL/@]#Z7u7[D+a:eK4')8SYAm#):K%uoZkE:u/'fj^gG!/Nk*+(5YV,6iGB4s`%kCg64G4m\bo@1=GmgEboeWui8VK`;K\/lAmNc_ZBH(U5s!+lZ1A8ngO[g_q6KM,<"T0sf&I#[)$f3:VA:Fb)U'&GpRWsIlT-g'+$%loYkQ._XnhE4lR:]kq**/(k:AH&1-'RES_?/6)0a;F1D?8=--O;1U3"es;Sd",8)=k)if7;R+u6dDtoLlDde#FLNJ/;_!-Q$GuM?%DtngFD@CdNQj!.RkpO-a:E/a52NF-:hW>M3UThsAjSg7-M"sZ7Igs'QVb/18Ak/7D0!9A0p(m2rhdUi9omTo*PL<!&bIgYJqs\<(%>/aB'rW\i&A]c^BDVSUp6P2uiX4?[c?q^Or>iku_Hr8>""e(#eSd"*L%jA*dX$7C6;RE##(OuC/[=?$kV#\LrYiuDa&s,?;RJg[1%]Jbn+ca't:["gFL=I^WmTaTeB'*Y72(c^kQG_?_==9=ra5DC`K?=3`haA:MsV?s[^.ebTT0iR'TRf-!Q+fim=WQo2=$_lgY)Edc8%$72+%YCB1TRlZs^aR*ips5r0)>F?VS1`*DO8/k_:T94-uEfgV"oETno@@p[D((.GjgX4XVY<)lO5QE[Rd>8P]RG0WcLkc31K?d`_%Bmdn.bk4=)@U8WS0)U5e>hfGd>#Ma-(+.?sG5+(kL$U)cIrsDgREDu=.!Nrk/(XGkj]`RD]5TPr3FN)7?ffHo/iBSE_n%-IH`EZR%ReD=""ujN%e`VkG#bhT>O''FdE%f)G<"m*>9(f_#QK:J=jaYat2%`/TrpN^&#6.Xd%Bc4mSr,/KRZS'oX1sWf,rFWg<*7KNo<_q3%]p;^feZ!rY4DQX3U<;YYrV;MDe?BAD!#a>BSrP.O,_Dgr%NhjIglN*<I\i?;g[6(A<!WL4qi6,DPs7qL5=-_`Z42$fP[F4mU]Q!i%qrG6CGFIB&W5=:_>-8FO%\uEsM$1B<bW#Pf$'Ko:Z:aE##WKA#Tltd*&Rfge%BmTY3!i<^[OgI1"!0-nE^ae@'@F[k6CFOSEfk4h%)TJ9od>cq>N1Flh(:<#aRI5K,O3;[/;``V0L]emYX1:RP\2Q=GYe<XM$.LV:))'2@>AGX[HXha17peA$^!2F@=e5!DPH<'G3*AUF%*<6-23f>S%e=ng.=9cQ>/a^s,;G@[2#K=3$'da!-!tT6,G.*?"9tslKotFPOcu:slCo1h,a?*H,;aM-WH?W@jf#JM&V-^`c06':7%HQkqQ,;K.61nl4Oc+JJGd@cJ;JLj"ni1kZq_'nPeRBd\k1<V9EYD+jDH!Uo!LkAdm$q.R"jWTCFI(h>Y)1KI^p5t7aD[IkM_\I2+%rW?R"d_>ILQ-:;F@[KY?-aLY`)mf1CoCUB7\[)%2:DXk!\PUg!8Nn?Cc6s&VRn[[(:K_d.Hr6p&R\1*"F+Em&BDfr5f`$!k.(S7r%fb):?Gkoo_07s:`#RV6C;>nVH"H:q")l$s_02cQ/T6LVt'mbU;NL/1hU=e[>=2Yjl@:UL/9smT\*Q!uAQu<IS/;ZM2Ouru>/)`#B%$2/T",[Sd?*g#<>\?8D_UqRs7r@G@5&jSsM3nC*Jb-pdKag-&hf(1.NVaK/fp%"Z>9O_q;>DUl.0Y#S?+Ka'q=J^T$i\\J!<Qnd5%Eb.q-1H(*NP=sI8qd=#uBB<]VChlE>57#g(Fu^h-'HXCWk,fpeRJ^N"]R\nsC@M.D+5Y.C0masYTfg]e=eX7X4<Ft$I*f1K/Hmq'%8\MBY%]H\RH4#1$J4)5q9<]FoP;ZA38[fuK0^bFl6@MKN"F28d*\>&"?Z;=Yrqel_9c"#]U4O%n_$ttJe8\6r'1XFd-c+"X_p>fR%#6DB`"-:c#VV2GU*'<r#?fqed?*G"3is?4kOrst-IYn(gqrAGgeAVB'3;65X6.[[@Bn/_DK&>A;+m'i;1Z"ts8,//oBG6lQFc@_$%W!ne?R"B4c?5Q/P)$^glYB`K6b@FPZ,4/BDEg7DtFIbA[N?AC*^7c;1cMWIbRc,N[-u[[dIoMUa^u^XV]@r+G`AF;V8=D1`G\"Ln%V-fT%<9o&"G"$'"a<,F$7.^92O8)K<Tg/D$@u#bd`#M"-O",*;YI=1cHq`^M1jRXif:Q4G,qPu=s+%4\8aAIo><E$lhsge28n,o(%bYUQV(+jrIe^5mtZR%Bch:HY%>pO[n5Ac1f9-_QR``5T7i!,7@34bcr,DB]DT)^B#dp\[97YJN>?kGUJ]pRg"n\+o<rG)V&$[/Dd%c+mfUN[T1&1Bu)I/4/VTXoDB;`9;#-EQ^hIC+6:_ZpF3&dWJ&^B^q44&#-Qm'@S@W"+Qh!pqF>i.07$)2X#a;jG2d3hM?;P3W5TM%Gcp.jNM9b#F/6dME.9DS#>>ZpQ!g0pP3*@e)FHm$e!q&7NGTK0"412PO<`r(q8\n"hS<._K=Hkck(RQN$lP/?(5b>T-=m>(j.3f0%r4kc6^:D4ZD"N_Alg_<OVYRKq=e_"sdhG)6O`RT0C6fHI(]AdiUo>bs1]mn:Nb60cK(k2N1eq2:dGoA-Y^"L,Th_UL2%LLAdVk2/%,EiA8:41g"dL+PL+WnNek71o%#d!ns=U>n6HZ@YtLMgcH"0e-<@t(\-=<@(Ca%;;D<1>hej?Hp`3YZlC:%=;Oi"Cj2n;(C>!9on4%e1Uui!dn:jRStC^HGHpXOZ8,-=`P%7:k,Z"<n1/\bb3Y1AZc)$)@.n\dZjD5iVhm&&?LA(".?X'2hP`G^F`C3bf20"eQNCc45'o$%rM--FB2TQHL-I\W?Eho^joVjBPR*rQmjQ[AmXcVGqore!SD:cMDo"HC#[4\;i[XY.na6Z[UMde.UfOan#t5"9"IAp^l-B2.QtW%;%?sGAe`JYQGbn:<V3qHX,)F`W4Th4!Tf:sKj`4fgCQl)k!<^DI[`VOi66YV>D1`b4H>U(T,k!O)6hG>I`OmjRq,kH6d,*npV[N!11%3lUgecq2&p%'S(9`o;RNm7M[/1G'\-rHhc(3F+)A_u@Lm;8EA;\Mf8\mV-j6a25%0<Dkr2M?0UWd+Yi+JfW@WZ)[)qp6N)E!"Pfu%6;b\T,:#bXV*.4d_lc+[LPft/gW0:0cfmP&+%AO44V7j0j?\I<d%-2=B,<[9[>8>LFd\_WhV\^Tk-g/s^MqR^Qq)KoA32_AJKn),%[/uNn9$m-c(ZXqX6bi0PVELB"A%?m=_p\)SFfZF"76^4'p1h2uTX[Fg@2O^ueJCT">S%U1aYl<+VYc.D4F@NQ277)JJ>m;E62$Xm%k>s'aR%T0$l;0`RFLB";R3H,IXR8b.-k_]e/27Kn4&Xrt+rAnsUQm4n0p!D"\H.fq$]04?$>LD/?5F]^ODVc7V0>06!X*/V.qi'=%k`Bc=^71TW!Af@ZF;ecKRV*u5h,Sgo!?^1o9.=t<X1r&s1OSoM\&@2*7Q:e9&TV*dS!j@V704NlQFhNdkQZ.VHd*HQ2fK)BY0163%^W/EHmkXRUl<&o=JR^Q.PP!SrW&,>LdTSqUGfrE#0/Ou#]n=s6iQDJ[O#BJRSeO)F"`V?=Y2:m?d8RjK,Y@^kK3[^%`F7<Z1l7;"%<>.U+f&>9RDZek8&o2(jkl"7Yg9jBb*-!,8`l-Tnkbf+M*NDME@th9KnEZNiWs?E7_j>UO>j:"7otdnd_`%mA'U"-0hJncc:<X=%%1dR#](i.BKaD[<IP?+p!`>u,t>5GfT+P<uW(*'!"qnY<#+As(<2EPpOBR;n`9\)uoO2kUY;hP*$iWSfaIngKYgNWR*O!St-"P")8%>;=TH.5pr'EkFE`FRWHnU.t!c>*M>@<DU>Z7fZ78f'"8$F*%eH5VmQa!'G\7CRMq%kq>B.?2?l&8fLpG;_/'%CdMjLB8IG1?3@J8%gZ<q4U?"QmrG-D61b2meo8I]lN#fXF!7]fQ8r2q7(kb"b5"=Q?Dm!rob).R\lB=*q%kXLb!B]:FQ*5<jI)tV2PeJq=hpI?U5ABR]%8[IO#'40o;jfIb^?;Ur:H?fIU22$4o,GrcnfBA55&V:N5&<.45Vrb.7e;jW+[;V=S!VT+QUAGI[_h5?!pZ(+/qsKe6g9c?I;P<%/%dHXsVI>;+K(0GI6Mqd"P)<XYH?nUec0?!<N,Bf%q9-LU5Jj59RI4K/p.'T=0PQS*J^TlY`HF.;sQ0Z.o'S,PPG7s\`qQLe,@jN>@%$2ap^djlWh2]WSHZ8_Fd'psNdX[R^_0ZmDT'S)qA'`H;:>*j=<&E\+*l*S_'o:J^K?%aQ<A&)c"`9\]-6f/5q4B$CL$V:]UrV<\W%l*pQqWfipnN@3?2P3:l93F;jV3oJeAK'DDa#H)C@l_"(KXn`7m%s@L.n/KlIMWY:eoD,NUX-l&[.i?9RP9A`D^TcXkg0t2@;VCp]%Ci)2o/,m"X-pMGKeitt%/D252^U:[.+cbVS#^ckG5&f7t$b:8d<1MrUm#4bP(RWDjLJqn19sCqhR"9^oU6B-(6oZTah;Jdr;hJ.c%ZlC4E:o3l#Kl(IRk93taX.S>"ib4iYI]=+j'#s03><iYC"cCUEpF6j%HOp+JS%70MdKB3?eT-s!CL!63PQ$>f_&=l81$E_a9T0P$%eHRQ5eA/VA3?3q%_"q"5JG.8%;2hj.@idm%6Z3n^C0`l4$IuW[i,H/$Fq$-m_k7kQ+;j/8r$%i;:$CD*K'$Ls3;#%%KnS<5'9FHl%9SIRR@]<[^^iDqGk<YN@9U."shL,4G;5_G"5]!=oNXob*;_SG7,I[C2FbQ1B]<$OfiQ>m`@:::-k18XD[VjY?g$#K"_!$pphpMS=%4#JQ&ds5-hLVfYCK#H;Oi71,E+1YU:@hi"e(dZ:S)(20"4M-u#?QaML*Y*HiFRYTQk#c5e,U1h_"0'>$^NXP&Sp(R;<"Oq%Jbl6,%<fABp>t"re\hm7;$8Z1`Ha"q:mr?7U!bU:&ZhDJaXB;\mCbo6emUuC!h6`5:;Bl*Cd@Z)npB`:^S<f*<)YKE-Qh(GI(i&a[I+fh9%0FNUhYs&p^9L"EM:DN`BL4:0LaS+Lb.HD*i4;-,ENVlWUWj%%U[=f5VK!)Y@3Ye-;f(:utPEN_WpQ"6p8Q+sR)Y>rTT4FrmRB(.O%6Xn%g3"OMS#,7tTCRb2GR`A0(?[FQME`4>_mkZ5<SnPbQ_/4Bs>6-TP[qa@si9R<@S:?1GVi\\a<pL.h'C3RJmYEit^49"A;]&R[%(7?")%[:3'KRb/d2dJS03o+q.bNQq/e#eCJH4aG4JsJFbj6F;Oqi7d80OpWQC58MtduXoW+TND['JLKL!''W#SSYOe,PrPok=B'!%O+,r[(dNo1-08LM`dC2lWTqaF@h^&O,&&Zb?qoE2h_CM1XdE-1_&A*Kar$'!QB7tPFWn1n0:*t%cp`O"bOZR_BHA_RquF/)IspCn%&<;ZREC+b=kc`\0?UM,W2sisWCdOd0dVDF[C_:CWHO8C2#rf4(!b/;^:C1$hJ:P_FAJ]#V:Ta<4Z.dAJM$@GhSJW<VKS#ErFoN<@%g,Sl%b(Vj[$ZpE7heA_'p.IWe,n`]`cn8WUWQOX1Bms?pc"gk.K5%BRgJZd<U+/ql#I2LTD!=^),%*LnMS)8\kfWNW.>5rN.=UU-%J>0M.1<k><3LZ)B0")BNgj3'QpC^.(>%p@@KkX^n?3_LY1-\D?[,p)"%^_Oo9TMPpj/7`)h[$`W:]8j&KXW-.Jc>R)0$ReD2TnMP%)AEH/m>Ci)\LZg&f8FkW?3uRWXk"%]S1o'hJpqj9/"tKX_d.Oj0WEp-ct;,[#FskL\`Zpl,.CL6#qXqYbqK/kob<G;YE4Y=1@$IV%NF[#,$=J;Gr09!YY'<(+!3Ul!UH(+mZKNSJei6$=^g2D?Met@OPNF[\m5"?&NFZZ@nH\i[9;cX&49<;)"PZJ($iN)q(aFkEYJ.fE%6K]mI16asB]$KqJ(P"$h7[p/H/*,DR$o;j`rSTSC5_S#PgoF6_KcA,iMKb3[LNJDG/dXuXQE*XG!dh<MNq_7U:\D$ilb82]m?`R3%2c>JmH*(6\ng].!%Jcf=2%YC!=LEpNFs2V2pMD*W.S\2$lZ!2KJX"dh38t,d)=KU8K%>ad<o0Ct.7R,9AgT-cikh&@ZA)MF$^Y<I%ZJ^<?TmmI$:O9?#DK>)5_\k;*Gl(qi!a)+:$(RqFCL\-D&DN[laZd<M!A?lWL8Dhr>UOSf<B]oD!t7;^X23d9)%A;0Q(tbbh$Z09%4RHeUOu?2`e7[=2rB.CBp[*c]!"WH/CWP*ks/o#="dYk@IRY*FlA#';*H(`X(@m@d\'%sur'KS4p\<2jO5NV@U'[;T7HbO%9EZ#,%HPUc7+R!_U6+?7MWT]\&PY(_]q)0W\UN']%,7E+IdAPhbj"Cs[-X'IgglNs32ZHY_lI,!*2E^oHh[f:kI(q_V0ZRiVMZ>PLqM+8N%IR9QnK(:L\/fR*dnF1P!NF4i+3l88[<\b(09u=(;9IH*sB##OVY%/S-KK&X3/HR09B2`2]ZnMSL&"EA(\tR@^-n(lCqKPDVF)M(%%Ip*ElHkD5<oD4>W.g*\c?cJVOE0ZX>K`2#;%[`MMV&Yj<nJ@HY/MLNfL.jq/.%KssCtihe!/"ZWEEX("+f(=F_O_B#$p;Q\C9=26%?0%=TK_a!h7+<?il.$O]d9na4ZJb8\O"V#uV_:r[RhS28*WVI>gmJ4q^5;hk3%]lM^@h'F9?BXj#/DdUU-lM-[NS3$=4g5BRKGpG%X^-=*hU=&"_^AM6.#cSMWle,aYC_b8UWGl\5Z>kl>:Ok19$)K#&[?tXfC#4W&GqgGG`#mHI%+-10\88?=Y]R3Ril#=fP?[h,@0O8%J9_$ln^>LT67&L/!DE6q.tO!+Eoi#XaLAPa+A6D>9d)H<VFgVBV(_A.V[M[+I)"^tgZ#nPk.^rS,elmm@_]*QLu6HO/eIfnQs^o7%THXbSU/@$Jhf_o]"9:DQ6B;;[R30(a"WRQIYnl8Dkk$D.DV^<q4LPchL_?T[$4_o`h?#"^O`ssfiY)d[*5)jkJuL4^^Rfc[T=,[i%O0,dP@Z.8HEaU7p\91cIJ]oaI'%@n'P6W^W2#puV\=>+-f*QY&8<WtgSZc@e5>MMch5B'9]"i#fH$(:PCj^S+p@a.!@>MbQi4`AJ%9Gh%53NjiM/IBIo!u<@OCYDE@E0-Hb</_PY.82KmgWLCVe^q8Q\6i`lGQf'VY`-V^(^5pl\)e:QNsQ$B\"7;e"o"Ht]r9mI42O>e%^>NqDjC%,G:=,QaOh9[(i;=o<,W`,F?s^B2V)>$*#6q_TT1^l=g8Akb>/fF5ilXfjY!RV>E"@f:DMZNjBF,EE6+$&I2HhnR55?3t%b30Z&UqrBF(NJW*g&/pSB_e(&'eJP]KM7GA?:Ft=nk]r\rAte]q)H8]n#KWQi!N\;(e)f(9>]kL*S8KC2<.Z8:J]%J&>#OYS4`uX%%VE^!F-qqkDI\ph7]!bir?JM@6]L@!0=46b*OC7ja-MaOQkIW?!K6:\R/Ve4P==<I\YhF_EEU!uPsFZADB>*e8gk5i&XN"LI9[q'%L<fnAO^OM0[sYeD!8&+<(O\kpYm#[L';Veg)A_[U^e,W\<tkuP7.+9.A/6`5GH&'$MKf*W-HBFXV>?l2H#!r;/1T4RFBKAW'CL<+%RPI3Pg(#N.9Aqbh`&DLQPR#$;;f_Vi:r']R(`3ZuQIV7,""ou4IbuhY+sp,S=SI7Z[pNUe/#\bZ0.f'SlPAg98HKae^>eHXg6#AG%5mTS5#H!f^rF;c0/?k]V+OZ#5*uY>^L*eIb"fq/ajPb&#'"I*Sg]8"]8%4/X<:N&(^1uJ^d3V`!-GB3bdK`I&`P:`6W6PWHg0^\'%rX9>QKs\?jDMtlE)TQF[VV<N5l#?W;s.'"Bme/V)8?:ORq*0u%s#(/Oht2hJOAAD=^i0TUPTGRH$!>`-aun%)S6c0m>USn9PTU3\%Y^+^[KEsk;q">3UGsHMi';^nrkq$+J/Ro[t:,409'IRC,nP#l#6GJn%Gj0IG0Le"PB\cN)GC6[A0Q,.S`c>&t>n"%gA:]XV/,r:]%0dZo8EA0g7@OC482jc7B%/9mr/aTuVM,an<\J71NfS!ZT`=h==6Njb?P=@YH85X3r?k\FZ)Ro7_Sljd]mX(%O+X)\JfZJh:b]SdT%DT)B@Ngm4V>iFM"La:D+W:$cXl(ZUjYmt6MX-ibp,6?%%^SiLG(cZ]kelnCu*OZ8Bn0'ZEd4UUZoeA!?h6=HL]s/,22odP2/e[J8%#9u%B,*Q3IP2T-Cl_`><+_^!M`6Wq:FtC":W]UG9qc\mSPYOP7k4cQhe-EhV'K0E(d2Wq)m9"1Qd1'1i1!o];c3[EK_X4dLeY0.)%TH\V*@fu`Uk3Z5`PJ9p2+dSh'Ms:ed+<74$C7>]qrgQb4mH'T\el6=S=&8%k$-cmfJm!21^b$q0]%R>[JH9JIM/1#W;W7d?JWrR`%]4+/XJc.t=_m@P$@nq+InK&6*Na@8^FMgM)TD9a[Be1U!K1`b/>NWAQ@M\kF)kp&3/*G)8*3TtuWHY0Dr)&J@`Hb&M3>@R)]hsc7%@(tahn<HNXR96=1CWV]H.Ml[B"[TI[*6p56*?rH0eid9(X:1oSl])$u/r--f0#Fui'<6<6H0WGr'lh`P2#DYR?&W<!hS_]<-QkbB%R!XUEq:37<pM4k)WH*6>j'8NYM+UkUQ>A(,dr^s02E8PH[fh2%eM<MMK+/SBNQ`RsYL*2H2uqWX5oc7=gijpY]#'=JPLd'2&PKhR%#,ln9TaGHud^;=L!%<B.Q50HgQ,>)UKSp]JgY*-W7dLfA>!8rT$)faG/rcKn(]l]\RSCrAYKA't"S[,pH=C'0XdA1C--W'_6ZTDZ%f;p6bZEG%kkJhQN-%9P\3d$reM::g:#.F4[%`6g-Lfq<(dFZMj+UHA;>GCOcJF/[WN-mjki7"O=g)e[<Ad3:Xd:f=ll`)kY,FD<^%r+Q1l!n'h_Hom*_/.Bk0<=]0P*8S^PQ?<0WEa\@o[a%p^fde<*>`NXA,nK4+#`+.:&1kc7XXRU6Ds;mP?SHAKl*1BQQ=%l$&`t\;%o-6M*KD(=Hf^*f6QH1R.%@fhJ#Z^k)IrL9b:OO>oSCb()/DM%P\pfn9?++aeX#C&&`X%#'kBCZ#dkOH6g,^HBp*-Y!g*%u;a2ic-%V9t3jnaT^ehkW\T>9aSiX,UUk*jJDjk8_jZrZn/o"_F$Z5c^1YJ#Ot75RO]6BXc)pRk2j?-k2L*pDKcV/"HK9d77:m#rY(pT$!cX%4kDTL-k/&=il?c656@,:>83S0i\KWAN]<?W:IT%,E8E4eZ:j@Vm?6jWK/6]\QseRTIt0qg@oko%@cKiJ9SuPa$]58L@^97tpYT?[%Q2'WR7ODk+$rP>mF;Z65&FheWi""kjW3KaPr*.VF3fMSUZ-_"r*YZUTP&,e"Vfb&1Z`+&F<NB.T$=6D4EQsJ`jN8B?/nH6]JUH/d%-APsUjq7V_cEpYcMmKiZqr1FKDt&/;$"qmS"Ql/?MW0-qJ^\O`%%O;ERC(OC'FP>\EKhI^9t&J%k.cuGhegLbDsB9ArH+";fU@T&%=s@lG(GAMbA@0r@rudXkXSd@?d>q"a,Q(fDh+c[YQHT#>+0g6ESI4U\WrQS5$YH\%+@8%FAaf)Kdm!ss;]Ch48]Pr4P5UuMI(QAl%>*QH<H`Qj8.b8N6D\`%g=*;[7Mh[m1!>dZ+aj,2VHOri2DJ-_h*u@TD"ARmo`s^`LF_:E9#mJ)=59HAIYK@B[X^*JC%I]=a^Er4s%DG`Sbhs\X_=+:E\fVUD"GA0;MlZ#)\h6Md5.^^'$+VrM.f?[h"O/Md-]c[5Tr(R/I-(E!NFT0^WFUOYfPspKha3kM@m$M1ZC-fmP%W,)d(,p*2V]5$(r>.=:)Em3#\@C%d4,dUjBMS[\u-rUu]Q#$Mr?t]:5#%UlAq933nJ7(@g<<\BA+_!&Kn;.h5CN9G#/aIM2&XG1A%*5N4mWiVcs!:f3uC8lohC2h14;mU@H9#6\tLDi/HF8Kr`TU+MP@RLEZ##)k[*kupU+Q=O>:/N;pLrXIn"CS>Jac:_=8Ilh2)^L0N%bOI)mY:N>59PJ]bi6@r&fu!ceLQ5IA?BZ,\a[4Ba)0tb8KTMp]'jud;iD5"`"X2%I[Hk[K1nV/kqp>WS]/eL4)soZfj^LMhSXFC9%cc8-QN'K+;p)!rjEPj1]6sY>s^jI7*"a.8)R>?L*C4*8o"#*9%c9UW+Q5Bbrg*#'e,,QLPM?u:W:%\_?96q9P^'r@QbU90\PeeQ&%/*t]hUlgDp5SXNhYI@JK$DPQ_[K9i?V*:ORj+=c^1=Y="H7L>(&cN[S,q?V[3PbaRY_nLY3kBSr>7uHfq0/M78Hcir6pSZFEQVP&%9ZA1a*Xe8BA3%;1U/P4\Z$h.MN,liQrIItu"d/e4Z(dFm_237kP7lI[-Ic[Q>T#oi1/`9+1K?_Ss%u'g\AY3c9#fgbh@p4F?&o1'%dg];i#:QZ&=p"^3R*3NZL6N''ROnlHb)s2.kj=qs'e$&gCu)">_RQ\'rIQ<?kJ/UfYnBC%AM6IS,4tA`0URe,d]G7=VIb;YJ31h<%\!UPNM*=&<79mu%`8eLhKD1$29Q!X]Lal,`72CQ<H5R%?L6;jf2Y`kQgkUL1lT?"Q#f2u+lef1ik$%od)DZ7HiE`&jq[5CJWi0iu%%;iO;E!:&7*i[If70Y^'H)9pu%+P&d0gn*J5bFa'&`8g9&.K1jUrS)YL<(mSW31<h>Qo$ML4guRE)/$!(t]5?M'GP^kR\W)5SY;u%k0=@>7Bm+!icqS!E$=m?jTK5"mu0[O"S.+3D[4`-%Hj"kY!g;n(YE/bLji.)!Gt<[0\@lIJnD\#DaH.PpPGEU#_(+t-)e?#!:CHM%k\USDK\0NXRD^,QAb#d)!-c<p80DZ7*%!_(>WWK#HJqU;GDDWj3CWhm*[!SkN5%6n!2tmOAo"Gh[)2r#A>9`<=r[2B0.pU%T0K\l%Z)c]2!'h/N\cd(@#R!YLdcB(J]+gMIAk:?b/phe=`q=XCV7]k3-GB_'&4<M8;[2#LbDJP(N0!>BCG-@lO.[2*<Cjpp\t#f`EulWZ%&Kd,4-OHOR`o=I]pOATI9(l4EG$-6A!_EZQJ\L2WRphd)oLYSQGD`m>*CVG6e)ZH%n_3[%NBI$Eirjm\6a6,V>\=>/PH^Rrf0G?R%]RHJ(LAg@S%Rp^H1#I-HWV'<]qp5?04eP-2Sp9'-)+P-s^C0#:)iOlZ(u.!$R,3RQ)[LsBSd\/Tf`>rnimIJ>KjNDQ:*iXVb>Ql3%n?oHBq_li!<6qHJ6L:)-&2`kT#+B#9VpUnUJ]YpS%3D3?1&?mS5S"YI)?uqm8gLhid8*h)Y!`@E2lRLM8DA=ng`GWu$b_DK^IRmC%(!rtpWgTB4#:;D8<;5gUYk%ib+9j24%Ahj'h&#6UK.V8rEdp]#M!8;F*GkA/(IUaX![QB2?>rMARhN*H8UqddoQC3h,dMR@:C#^k%c'-JNpVe,tSD%c=KcBBuGt@+d#re0Qhebf#Ep8Ibea:977#E,o,F^DV7)ej6T)cL,Dj%\3-l\X'0kLUY7f>b$,NK[!%)Q2P/?Zm?%0]f3*9ZJP>00Da0G;eN\2t(oHA#-NH\9EbUa1[O!Q"oSU'bp)B:qomo"`/TW<Zm2\,HL\OmVJQqrCT@TbKs*5Ct0<=Kd/Qkr8EkR%Y<%VUM)EUoMJPQq_Dk._]WWB\h%@m#J<></GadPVAl`B.oJ#V('-e22O;LM9mf/#t,,QU]`9>Z7O,,pqAu#kDXnW'[/R`X^WSLCU%JI[nFERF(PUl4Aak[Z0(6fDMiIH`F8G/$F!jN%3M?aE/E'iS8&0&/D+/3ijXO&#%_njZ(*>Uiu$0@WKXk>s?,#KB4cBskdMe-/Ni%,!Nlkq7k\EqLk`?/#K3G^!!5qf[1F&B,=8kO4a5H\qJf;H$Hm>A4WW]D:C,D1J4/Cc:S4k>6RneOWP0+Yna4*]F'K$<-em.X@YT"%OCB_:>p+Y%#dh=h"Ht8]BDmod-,me=8bbO9l/=]N%_?-GF\F5s\tk4_3mi^rji?7R(SW.NR'$nNm"V/HJN$dQ1V.&L4f27D6Xko4%k4V]LQu[?jqIS[NMQ->)=lSh8fG.=JDD5A8[,kJ:0'W?FR#$Cd)asTt0_T3V'G#(IqS87(-44'#l%0OC8K)L^k50+Km@?#E%]Hsm%.,eC@@H3sC&H*mh<"9a9DOK<Bb_-lVOCHn^II=I;:*^.11Q'PX($3-T9H<])S<(io^URoT_WAmfJ(*%ok-r?r8K8mQ7/7)81UD78%c?_*Tcgo3>F)u^1c8+Sd?d^[HiaP1k9486+@?Xh&(SiR373kiGp3*LfK_W=W&U,J#l8=EJ6c`h$'FVB'C0L^fUdG`u.(No6U5'Cq%1BSq<BA%p75@/mJD#4SN*Z!BhOSu[`m!#,`/ECHR@9m%P5,jp/3%[XS_o3XE.<$&P5r#kmZ\>QI4cnf%9&mih3)q\q5thMN_=Z!@%edq_Y`4mO_k#+/cp#9$adl`YNCVbHe(F:H=#r?KTkj!68bTOKp8>OctU3hgh]`^M<]o=U&-<IX3TF/TEmY%";D:VYJjiYg5n[/LL%ll;eS->t6@:_Cd%&<3\14YE.J/+@drD5`\bpkD/N4N<HS)q\iNR<e[H<Yd'.f7G,c8i*^^c1UV';l^(VM.b!.Eq2XQ\&0h+i1Y37%l$0;rH9in,COHD:/k]hi8ru^&H%h!c7Hb6_gmt92a+4VW?,.-5g=EbWO3]klR59P@(,USTU+tJN:-)Fc1mAIMp@e\6[.>@\"-o1p%QW,SdPX9&,dB72MBiSVljO1-&$\lcq544n.e^OD5.Pc#['.<_uhbj0,@4]tNa:Y+s06p>k=0sE7ZiliCd;k>BI"!;m6o/5bfInXn%rE/n58!=?`k8V=th&1A1V^RSSa4(K<J*h#ijugDiM(#2DTJl0"AI:ljrdT(/]NOi]&+l:q0s<<h,E6M5=g!Ql")?@o<)<oN!U0le%F7RK`GZf3<A<]MmL-XQYF74s,gX"ZTMX5U;]D]i31520:qF#Hs_Eu3`>dF3M""'J8_7PrjadnlKV/OAC00g_S0*]U(5K(rX%mD/:%km_sTFH!fJM$pLJH3g=bB^%od]tBpPC<B'@H6rlJ%aQm$iJC;AK%u(U@LM<`%musGg\cB:qi70+Q/99u'B>Y#[Yh7dZ;HMq2h5Q4%M7&KX0`7s'+?eQV%9m,27juk0$jBde![B0)TL1_U"c?!=6M\7').M*\.ZhR2b,eA2kQM5hD231Rf]/7,7W..<5pks]-;s;*G(E;D%mBa?6Q;=,uRC(9=%&o[<`4@aUc_T;K#5K;oYDuj)4LF.Kp`THpe33hh>T6+]4g[)]FXJ\tM_u<M]CSRao3E@9nuu<Rh9`5u=+]R$%#8V0r:DqheG',_!n398BmsUh,l*Ds:Ib6i#"73-3Onp/(MCdHQ`d#05p$e*Fm2hXZ_Z(GQ4puNq:-ZV1I<6d"Z?ceb%?.b-Vs'!b%OZ6H;^D8hh-M_4mBbi;mOk5S%MD[(Nc->@A,Djo5pk?Fmh`Rcq_@06l,`tCi.%C\q=YQ!r#EDrF^c;ER%f[n!H3@>1?o]!@B6+]/%>b)u,#O(+p4i$)m#m>,>J;BqjK&>4tmWo>FMC0,/,<C5.bYf4S=qgN-#Z\n5r=22#gY#lLXV#uK[o^,i'S_66jN].8Z(g(f=VD'*%#lN1-Z31md)+SN#'4S3bBBiNZUW1M%:G)&JTQ05Y+AL2Yjl->._1*7e>F"DW0HKGH*,=8bZ+)u`M6HS%&abo)N06M=9f+,)(mVUs%W[TgP4A4#'=\8NHT`+5JZgm(Yh44GjnMAJ'5KqY3;seP8!:j5b4?6g?5aKFbN!SX+PAB?Gc!b2t!cW2j]3TIUKm$15P=e<0=#DeX%'m_ZK=Wjm+;.)P>BF-=Gj"DME?ZHer3ZW[B2mEj)$,?ih*JUj[jF9Th7M\7OU+:W]13;u83m1L^Q]S``OY=MLQd6T4@bgb2:s5oW%bXEM>%]F2qFtOJ\k`]dcbQTo1H^c9JR;%`D_/D\X\p*f$j+"Y4g$6BJ;YL#D?t*ni*'e$h_sb4C\Y>FAg']%p`=-bG_hZ*pp!4OM%j#_lp49MP"&Fd<T)9!k(3%E7\*,"guWjqM"C:<L%'P&f#1aqT9I:;LW-PJ&6>]rg,Xcn>_66_Bd9WB._)`ciPhcs>%kkZ?'1P*a7%;J#0*b2`S8#oqh3SQE?f`>r6C3.^'OfE5MEKd/Yp9n=JOE"@FH\TA=;@H3=h]?!o6)qsASl#u*<L=kGpB/3@?GGHu55^9eN/9""I%hBP.AG4A`r1Jln#jF7Aqi%pGq)V._t+)rP>naT3X,d/;(esch&;n.r9M2JBgZ=XntJA5X7_2F6!'bh1jf"Cr$l`l32d0H[A3-6$,%F=9OW:46)(P(QrJN7BkWEr6/Oc$BY]N6H6n_JD27p9+AcqmH7_eOIPhX%&O3fZ=rmBg>Zb0Ms;+Be,PS<A-@TUYfjSdK8stkVr;8%iNq85H4-4"]g!Ju[rWPQ'UE)Z)=(If%TN4Y#<E/)TV)t*kfW-#O#2Rbbh9,,#1\XQ)fHUcY]@NdMGUQVs0]/L4V6%b4O"IJ7/g"-%61iiU#NBF3TX#V@(P-(0+"7qS)-f!["Qs3L;rn4$%eRT(bF:OEDFbs;RWP;p+^R3WG37"lQ`3gWl)YSklER4KjHA2M-\]?tp^Go0%&ZTJQ"\o`%Kd5Fm`!`ssh\er@Y,aek+Lt]?J$X>@NaUF2Z-A8?B:E]==:n^cT6,M*3?tX;5I#iN<7U=?lh"s`p)7'F$#]7N'95eG%(n,\d?0$1qK9%TN8J?sCLj-12(/-"qM9D7jrf(E8<.M@-CbjuXB6nshUb#nX7]T02(.GoLPe4Pq,q(K*SdNdN49f0):OMS-"ecFO%fI4&%XBs5qUI*!sflAAVqBXaL#`mQHQSC$j)iV_1%uCD,hr/l,QLtikJ$^sU8ia:KM?nS#L!(gu_%!Jt'k.n1cccG"_C'%"I%VHa%k0`^QQ<T#m(!@92T;FA6oeoT9WU_Cr[cLJ'$>i/9+DAiLFJnsJOM:eJ"1icRjFANSZT2Oh*RW6nU0p='\^bD8?kReMDZ^pE`T[@Y%O#-[1^=(i:CX<:8g]<+F;j^)f[S?-E'O_*\8+$@2a+dt7(gX<NcOF"(rI!).an%e2nA_YfgP0$ZP;Ase+T]dL8>02IDM%pYjS;4*%.6&s3`s&t\ZW])ddR:QhX2;_96PjDYG<S-'@+A(>c(-!(_mM?cN!P)DKc3:dK+io0TMO0:-RInMMT8uGUpSSLVHrNP:(aPl=4mU)%$Z'W=D&QMh<[G+C=OUfGGp$nJG+7u2\F=HUR"lflmPK3iAuZF>Kop2b\7s?\gMf8O8\k.[Yco;KSYkSndGS7c<g)@!K<MFg`AA3n%mm^H)_dUsS)s.K;'4Nm6\fV8sC[&7R93M'X$ABQs=dQgTmb`AK,,3S3/Y2oQ.T_innmb-ce@>5E2EX=!Ho!6n[-9mB:p2H;9r[o:%\hUA)QgmQeS[!<ZRD>R&a!.\`Tp1,mj^JL"9g__ZPBA0DAZe/IS<]fc^u'C':D6%q8`1s_h3/ml/ZA2MCLZY*14H`EX>:U=G@[QW%$lpX%/S3p%asokl1J%H&#?n3`d1AeI&b25si(*H\)[ec%q21TT$MrpN*sj`ej8drm2(MZP4_1]:1(mbtW:EUr)k*>U$O%CJBeip9%\@4OWB6Sap)=G4@VU#$GFc?=P*aVJl"HD4=b+]E2h_]oL(Q/KX=Y20aLSPoRpAE2=`toUP7Pj16M7Ipk?l<SC#9;,QP*:f5<QLUm%?jK&""jZ7j"O%asmotr!/GZ\QJRE8&RY1?H9\+q,,%kCl7%6UT%kT)e#Gf"^+m*+Gf,'`'XmUn]<<7S,PaA91mIRTl?^Z?jf"'ka%D@ET"XpQn9E%mLkX=t;_,f']j!*RDl)Fqh/9cNn;>d)&#KuuNgJj&Vb@"9MI4;.^EL_<1R)b3."L)AJt\-b%U5+$gr@6@%lUhGCB%X$"g0:c"hIUp1dOiSU6N-gZMk)Dj\uKF*e_U]Ck8:g5BXX"DZ8UfuC.mF'HKoaGij4AQX)0E-WN^HQ6*IFK(3/smA`:B$=8kes]9%P3]'Y1$*n#o=K1769V4"n3-RAh,\=NY^E'sP(S3d^]41mC:O2ai)fJb&q9#?KV3DTiB;.!:4LOWCJ%mY<8c6oJTSq,I#lPGSua[A%*S"+NMXQIF!.OAmru->71@G^k[>42]6GEnP$t:u[=+$?)ILg`PeM6tle/,e9kGCG"&mTqS0Y(J@XjdGY64,Q6?huVMlu!5QW]5V[%OV"QVWgqCWV*brDMT%b5\jX3*W/FNjNILUM6N:0V^VrWErsGaP_--^ce0_aT%6H&b]_[`R4dSSL.^2Oc-_X?Wg\'lV8=K(;(tH$>%1au<+9'J`@IOBVST1j<8NM/Ph0iiD&'r#mK`Mcb8jLik5_u`\kIdYTT3,#fU`-ZV@2YsC_:E^W95.7EL1c7bZHN0*rcQ@B4N&cQ.%5=Wu;(^@2m7-@>p27%-V$I20$9X`o5mT:3R)p3b**&$k=*>A`$5%e:;mr.Ahjn/X0^:EHifqHB#SS4(F2Khb0^eUbF?>^"$90u-A%WoS^,[Cr:SLPW2dDc;)AKIRnhQEd0FH(6jR%tqb&Z$\]ZRY?QlC&fd<?%>u*iTVFJ*C/m]HDuC7!9X3^m5`=%'(W#jMFT-EdPM::%Wb1?ddC2H2S.=GoP0A^r;Am,>\A:Ci'@S[=r\S"oR(S#Ge9V,5>u3(c@[19P-?bm]i1ucqFJeOp)2k:4BaVo";DWi&\JaSQ8eYFn%duhIT'+DjKmHh5N4;8IR-3DctIH!FkWD!5<[Y1;7'br*nRYMnQXE%E(pPMsFJTon`f?h9%UaKqkgW_60*Og"/F\%QY*W_gMGpnX8%ln[U5LTFp;cXYq:.E`^XH([miDac$V0pok4Cia#o>_:8XVR\%_<UkSCM,'b**JC*7H\-pLFO:EME8k_u%4QR%F9\1Pek'U2XUoS<%'1=45PE/]gSa]O8ETR+V"OsfLd(f6L0Y=DW4M4dJChb]qc(,X`F'dG0qsOf<n!PNh0PKMW<]c,BEsV&QLV1ojFSi:ihFu@i.ZOg5%"a]X2F(;%#`jp,tRX\3L17c^3Z@dI]>SPt<OLFML95H?C/YX4naHcKapQ0$mJBF]BL(\;GjsDR@`e9BtQ%mBUp2(.2>/p#BD"ij(%))fOZ9c(pgT^RKF_)'.$o1eK[.P.D4&PR]c8VhSN<sEJ0KGDBoXIGMQr+-X)%[<i3[g_P]Y`Krm+O?G)5*KofQj_`l!qTbAFHT><%U^I*FV%UL;"U`W/LgaWDO%b<D1%<QZrDO<<)%p,.@7X(d1_kj*0>"P-F]#PEOh,k!V8'k9F!O,6Ua[>>itd(doH<Qh7;2Bg8hQ;j%hTQ*.Tn*a(LP)4#XlO+FA2JO73N%Ba<Z>7!UN$iffp:`^j>c!UHj"0*J,+>A`j3c:$:FQ2RgJV>M3)?I.NG>0MF3g_Z-d(cdP/6r%%ulQ\,pCD~>%AI9_PrivateDataEnd