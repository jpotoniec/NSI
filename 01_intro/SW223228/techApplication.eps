%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (Adobe Illustrator Artwork)
%%Creator: (Adobe Illustrator\(R\) 26.3)
%%For: (kyle Hamilton)
%%CreationDate: 6/21/22
%%BoundingBox: 0 0 571 164
%%HiResBoundingBox: 0 0 570.9869 163.0801
%%CropBox: 0 0 570.9869 163.0801
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 26.3.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 26.3.1 x1103 R agm 5.512 ct 6.513%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 40 8%%BeginData: 4350 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD9CFFFD04A8A2FD7BFF4C214C2228A2FD6DFFA87DA87DA852A8A8%A87DA8A8FF2121212221A87DFD6CFF7D52277DFD04527D5252A8A84C214C%224CA27DA8FD6BFFA87DA8A8A87DA87DFFA87DA8FF2121212221A8A8FD78%FFCB534C4D4C4DA8FDFCFFFD7EFF4C534C534C534C534C534C534C534C77%FD56FFA8FD06FFA8FD07FFA8FD0AFF222122212221222122212221222122%4CFFA8FD52FF277D527D7D7D527D5252527D52A87D7D5252527D527D527D%527DA8A82122212221222122212221222122214D7D52FD52FF7D7D7D52FD%047D527D7D527DA8A85252527D5252FD047D52FFA84C214C224C214C224C%214C224C21224CFF7DFD6EFF2122212221222122212221222122214CFD70%FFCBA8A9A8CBA8A9A8CBA8A9A8CBA8A9A8FDF0FFA8A2A8A2A8A2A8A2A8A2%A8A2A8A2A8A2A8A2A8A2A8A2A8A8FD68FF21222122212221222122212221%222122212221222122214CFD59FFA87D7DFD07A87DFFA8FFA84C214C2228%214C2228214C2228214C2228214C222821224CA87DFD57FFA8FD0527FD06%52277DA821222122212221222122212221222122212221222122214D7D7D%FD59FFA8A87DFD04A8FFA8A852FFFF222122212221222122212221222122%212221222122212228FD68FF53534C7752774C7752774C7752774C775277%4C7752774C7DFDFCFFFD6CFF774C534C774C534C774C534C774C534C774C%534C77A9FD5CFF7DFD07FFA8FD05FF212221212122212121222121212221%212122212121CBA8FD5AFF7D7D527D7D7D527D5252527D52FFA84C214C22%28214C2228214C2228214C2228214C214CA827A8FD59FFA8525252A85252%7D52527D5252A8FF212121222122212221222122212221222122212221A8%7DFD69FF4C214C224C214C224C214C224C214C224C214C224CA8FD6AFFA8%A8A2A8A8A8A2A8A8A8A2A8A8A8A2A8A8A8A2A8A8FDEBFF7DA87DA27DA87D%A27DA87DA27DA87DA27DA87DA27DA87DA27DA87DA27DA87DA27DA87DA27D%A87DA27DA87DA27DA87DA27DA87DA27DA87DA27DA87DA27DA87DA27DA87D%A27DA87DA27DA87DA27DA87DA27DA87DA27DA87DA27DA87DA27DA87DFD21%FF4C2122214C2122214C2122214C2122214C2122214C2122214C2122214C%2122214C2122214C2122214C2122214C2122214C2122214C2122214C2122%214C2122214C2122214C2122214C2122214C2122214C2122214C2122214C%2122214C2122A2FD0EFF7D7D7DA8A8A87D7D52A8A8A87DA8A8A8FFA82122%212221222122212221222122212221222122212221222122212221222122%212221222122212221222122212221222122212221222122212221222122%212221222122212221222122212221222122212221222122212221222122%212221A87D7D7DFD0AFFA87D7D2727522752527D5252277D525227AEA84C%214C2228214C2228214C2228214C2228214C2228214C2228214C2228214C%2228214C2228214C2228214C2228214C2228214C2228214C2228214C2228%214C2228214C2228214C2228214C2228214C2228214C2228214C2228214C%2228214CA87D52A8FD0BFFFD04A87DFD0AA8FFA8FF212100222121002221%210022212100222121002221210022212100222121002221210022212100%222121002221210022212100222121002221210022212100222121002221%2100222121002221210022212100222121002221210022212100A8FFFFA8%FD1DFF775277537753775377537753775377537753775377537753775377%537753775377537753775377537753775377537753775377537753775377%537753775377537753775377537753775377537753775377537753775377%5377537753775277A8FDFCFFFD87FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.cb7c5a1, 2022/04/14-05:22:35        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/">
         <xmp:CreatorTool>Adobe Illustrator 26.3 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2022-06-21T05:38:46-04:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>76</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgATAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYqh9R1Cy02wuN&#xA;QvpRBZ2kbTXEzVIVEHJjQVJ2HQYqldp548o3UyQJqtvFdSMiR2tw/wBXnZ5FVlUQzenJU+oopx6/&#xA;D1qMVU7f8wfJU9gt+ms2y27K7qJX9KUqkrQEiGTjKayoUX4fiPSuKo/TPMeharD6ul39veD95QQy&#xA;KxrEVEgKg1+EutfmPEYq+bP+hv8AzJ/1L9n/AMjZc2P5Id7mflh3vZfyw/NOLzZ5b07UtTiSwvtT&#xA;ubi2tbaISSIxtwCfjoQu38xGYebHwSpx8kOE0z/Kmt2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KofULGC/sLixuOYguY2il9N2jfi4oeLoQymh6g4qxSy/KHyJZ&#xA;rIILJx6jRMxM0p3ht5bVONW+ECK4daDb7hiqjZfkt+X9lcQzwWUokt7eW0h5XEzBYpnMjgAserNi&#xA;qY6N+Xfl3SbzUri3hEq6jFHA0EwEiLHG8ktPj5ciZJjUn9lUX9gYq+cf+hSPzH/6uWj/API66/7J&#xA;s2f52HcXN/Mx83uP5TflfP5V8q6dp2utDc6ppl1cXVrNaTT+kpuBxJoRDyPCq/Ep2J8TmFnyCcrD&#xA;jZZiRsPRcpa3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXnFt+eGg3N&#xA;vplzFY3JhvoxLNy4K0avL9Vi4AmknqXfKEVK04sxovHkqjl/OPym08CeleC3uVSSG9MI9ExySyRI&#xA;9eXMKXgk6rWi18MVS+3/AD58o3ES3UUF19QeMuk5WPk5WVomCoHP2WjepYgGnw8q4qm835r+VItP&#xA;S+b6yYpdQXS41WElzM6tIHoDtHwjZqnw6VoMVSpPz58lvbveJDeNYrB9aS6EcdGi9f6sTxMgdf37&#xA;LH8QFSw7VIVVLn88PKcTF44bmS0RLiV7ooqrwtZY4ZCqcjITzloAVHQ9qEqp1oX5jeX9c+upZC5E&#xA;lktZVaFmYsFjMioIvULGIzIGptv8JIqcVfHf/K7PzW/6ma8/4Jf+ac3PgQ7nY+FHud/yuz81v+pm&#xA;vP8Agl/5px8CHcvhR7nf8rs/Nb/qZrz/AIJf+acfAh3L4Ue5EWH50/mpJfW0b+ZbxkeVFZSy7gsA&#xA;R9nAcEK5KcUe59maH5otNY1LWLCGJ45NHuBbTF/2yVryFNgKg0BNaUalGFdO65OcVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdiqDOjaOYjEbG3MRT0zH6SceBJbjSlOPJiaYqqHTdO&#xA;NK2sJpQD92u1CSO3ixP04qoLoGhLGYl021WNlCMghjClQSwWnHoGJNMVVn0zTXQxvaQshYSFDGpB&#xA;cdGpTqPHFVM6HopDg6fbESJ6Ug9GOjR8uXBtt15b08cVbXRtIX7NjbjcnaJBuQoJ6eCKPoGKqkOn&#xA;2NutLe3igHHh+7RUooUKBsOgVVH0DFXiP/Qrf5Tf9XzUv+kqz/7J8zPzc+4OT+Yl3O/6Fb/Kb/q+&#xA;al/0lWf/AGT4/m59wX8xLud/0K3+U3/V81L/AKSrP/snx/Nz7gv5iXcvg/5xg/KiGeOZdc1ItGwd&#xA;QbqzpVTXf/R8Tq59wR+Yl3Pav0npv/LXD/yMX+uYlFopsalpxNBdQ1/4yL/XGitIjAh2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsH8/655/0rUrKby1ph1SxjglkvbYL/eSB&#xA;lEcYYAsC1aAj7NeTVUHFUjj/ADM/MszpE3ke4PKayj5UmUNHPEXnkBZOKcG4r8ZHHflXFVSfz7+Z&#xA;7ac88PlVxMsJkiQJOC8scjDgyOgdVkUCm3IfdiqZeW/PnmLWPMWtaHcaVFaz6VAjFWeVau6xkM7+&#xA;myqsnNyi0LUWp64q+Gs3ztXYq7FXYq7FUTpn/HStP+M0f/EhgPJBfoDoEnmlrvVl1uOBLZLthpEk&#xA;BqXtSKoXFTRhXia/tAn7NM0Tq05xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KtNTieXSm/yxV4V/jD/AJxL/wCWfTf+4Vdf9k+ZnBn8/m5PDld/jD/nEv8A5Z9N/wC4&#xA;Vdf9k+PBn8/mvDld/jD/AJxL/wCWfTf+4Vdf9k+PBn8/mvDld/jD/nEv/ln03/uFXX/ZPjwZ/P5r&#xA;w5Xf4w/5xL/5Z9N/7hV1/wBk+PBn8/mvDlZt5W8m/kt5j0qDW9A0HTbqwkZhBciz9I8omKt8MqI4&#xA;oy+GVTnkiaJLXKUwaJegZQ1OxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;hHnjyx541LWLa+8uanFYiC3kjjM0twohnKyASCCIGG45GRKibZeGwNcVQUvlv83hHbGHzHB6nr27&#xA;XaPwK+jHDxlWNha1q8vxHkNx3XFUrl8i/nLc6pE915qj/R0T2YjEMrRyBUKtdyyILbhK5MQ9NTxX&#xA;4iTTcMqyPyxof5k289+/mXXYbq3uYI2t1s0RTBcFVaZIxJDvGr8wjMSSpFQCtcVfEf8AhnzJ/wBW&#xA;q8/6R5f+ac3nGO92nEHf4Z8yf9Wq8/6R5f8AmnHjHevEHf4Z8yf9Wq8/6R5f+aceMd68Qd/hnzJ/&#xA;1arz/pHl/wCaceMd68Qd/hnzJ/1arz/pHl/5px4x3rxB9T/kV5W15/J3k2/N9caZb6PNqp1DSWV0&#xA;W7+suUi9Var/AHRqy1B3OavVG5lwc59T2rMdpdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVQt9qul6e0C395BaNdSCC1E8iRmWVukcfMjkx7Ab4qq2t1bXdrDd2sizW1wiywTIaq&#xA;6OAyspHUEGoxVDrrejtqX6MW9gOo8SxtBIploK/sVr2P3HFVea9s4JYoZ544pp6+jG7qrPQqp4gm&#xA;p3dRt4jFVVm4qW8BXFXzx/0OFpv/AFLE3/SWv/VLM78ke9yvy3m7/ocLTf8AqWJv+ktf+qWP5I96&#xA;/lvN3/Q4Wm/9SxN/0lr/ANUsfyR71/Lebv8AocLTf+pYm/6S1/6pY/kj3r+W83f9Dhab/wBSxN/0&#xA;lr/1Sx/JHvX8t5u/6HC03/qWJv8ApLX/AKpY/kj3r+W83f8AQ4Wm/wDUsTf9Ja/9UsfyR71/Lebv&#xA;+hwtN/6lib/pLX/qlj+SPev5bzd/0OFpv/UsTf8ASWv/AFSx/JHvX8t5u/6HC03/AKlib/pLX/ql&#xA;j+SPev5bzd/0OFpv/UsTf9Ja/wDVLH8ke9fy3m7/AKHC03/qWJv+ktf+qWP5I96/lvN3/Q4Wm/8A&#xA;UsTf9Ja/9UsfyR71/Lebv+hwtN/6lib/AKS1/wCqWP5I96/lvN3/AEOFpv8A1LE3/SWv/VLH8ke9&#xA;fy3m7/ocLTf+pYm/6S1/6pY/kj3r+W83f9Dhab/1LE3/AElr/wBUsfyR71/Lebv+hwtN/wCpYm/6&#xA;S1/6pY/kj3r+W83f9Dhab/1LE3/SWv8A1Sx/JHvX8t5u/wChwtN/6lib/pLX/qlj+SPev5bzd/0O&#xA;Fpv/AFLE3/SWv/VLH8ke9fy3m7/ocLTf+pYm/wCktf8Aqlj+SPev5bzd/wBDhab/ANSxN/0lr/1S&#xA;x/JHvX8t5pz5M/5yesfM3mjTdAj8vy2r6jMIVuGuVcJUE1KiNa9PHIT0hiCbYy09C7exafrmiai3&#xA;HT9QtrxuJelvNHKeKuYy3wE7B1K18RTMRx0birsVSjW/Ldvq11ZXTXM1rNZc1DQiJhJFKUMkTrNH&#xA;KvFjEu6gMOxGKsAh/wCccvJ0ScF1LUmQLOoWRrVgPrNv9WcgfV9j6QA9+9TviqNH5C+TRFw9a6Z/&#xA;Ts4vUcWr1Wxr6QZHgZGVuXxqylW8MVUx/wA4/wDlDnfSNe37Sag1y88lbUMDdvE78ONuAADbrQdO&#xA;ta1xVPvLf5X+XNAe8kt/Uunv41jvEuBCY5OEcUaVRI0WiegOC9E5MFAFAFXy7/0LR+b3/Vrh/wCk&#xA;u3/5rzbfmod7n+PF3/QtH5vf9WuH/pLt/wDmvH81DvXx4u/6Fo/N7/q1w/8ASXb/APNeP5qHevjx&#xA;d/0LR+b3/Vrh/wCku3/5rx/NQ718eLv+haPze/6tcP8A0l2//NeP5qHevjxd/wBC0fm9/wBWuH/p&#xA;Lt/+a8fzUO9fHi7/AKFo/N7/AKtcP/SXb/8ANeP5qHevjxd/0LR+b3/Vrh/6S7f/AJrx/NQ718eL&#xA;v+haPze/6tcP/SXb/wDNeP5qHevjxd/0LR+b3/Vrh/6S7f8A5rx/NQ718eLv+haPze/6tcP/AEl2&#xA;/wDzXj+ah3r48Xf9C0fm9/1a4f8ApLt/+a8fzUO9fHi7/oWj83v+rXD/ANJdv/zXj+ah3r48Xf8A&#xA;QtH5vf8AVrh/6S7f/mvH81DvXx4u/wChaPze/wCrXD/0l2//ADXj+ah3r48Xf9C0fm9/1a4f+ku3&#xA;/wCa8fzUO9fHi7/oWj83v+rXD/0l2/8AzXj+ah3r48Xf9C0fm9/1a4f+ku3/AOa8fzUO9fHi7/oW&#xA;j83v+rXD/wBJdv8A814/mod6+PF3/QtH5vf9WuH/AKS7f/mvH81DvXx4u/6Fo/N7/q1w/wDSXb/8&#xA;14/mod6+PF3/AELR+b3/AFa4f+ku3/5rx/NQ718eLv8AoWj83v8Aq1w/9Jdv/wA14/mod6+PFk/5&#xA;Y/kJ+Zmg+ftE1jUtPiisLK5EtxItzA5CgEVCqxJ69sry6mBiQGGTNExIfQvl78vfLmgavLq1gkov&#xA;poZIJZHeoZJZzcNVQAK8z1+fcsTrXDZLirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVf/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>586.459351</stDim:w>
            <stDim:h>177.479996</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
         <xmpMM:InstanceID>xmp.iid:d000fa44-124e-497e-b58f-c9e745812a8f</xmpMM:InstanceID>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -163.08 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 163.08 li
570.987 163.08 li
570.987 0 li
cp
clp
gsave
124.587 0 mo
570.987 0 li
570.987 163.08 li
124.587 163.08 li
124.587 0 li
cp
clp
124.587 155.163 mo
549.73 155.163 li
549.73 134.581 li
124.587 134.581 li
124.587 155.163 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
124.587 0 mo
570.987 0 li
570.987 163.08 li
124.587 163.08 li
124.587 0 li
cp
clp
124.587 123.497 mo
219.063 123.497 li
219.063 102.915 li
124.587 102.915 li
124.587 123.497 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
124.587 0 mo
570.987 0 li
570.987 163.08 li
124.587 163.08 li
124.587 0 li
cp
clp
124.587 91.8315 mo
230.873 91.8315 li
230.873 71.2486 li
124.587 71.2486 li
124.587 91.8315 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
124.587 0 mo
570.987 0 li
570.987 163.08 li
124.587 163.08 li
124.587 0 li
cp
clp
124.587 60.1654 mo
195.444 60.1654 li
195.444 39.5825 li
124.587 39.5825 li
124.587 60.1654 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
124.587 0 mo
570.987 0 li
570.987 163.08 li
124.587 163.08 li
124.587 0 li
cp
clp
124.587 28.4994 mo
148.206 28.4994 li
148.206 7.9165 li
124.587 7.9165 li
124.587 28.4994 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
124.587 144.872 mo
121.087 144.872 li
false sop
.749721 .679194 .670497 .901457 cmyk
f
.8 lw
0 lc
1 lj
4 ml
[] 0 dsh
true sadj
124.587 144.872 mo
121.087 144.872 li
@
52.1325 146.665 mo
52.0275 147.567 51.6944 148.264 51.1331 148.755 cv
50.5731 149.245 49.8281 149.49 48.8981 149.49 cv
47.8906 149.49 47.0831 149.129 46.4756 148.406 cv
45.8681 147.683 45.5644 146.715 45.5644 145.504 cv
45.5644 144.685 li
45.5644 143.892 45.7056 143.195 45.9881 142.594 cv
46.2719 141.991 46.6731 141.529 47.1919 141.206 cv
47.7119 140.884 48.3137 140.723 48.9975 140.723 cv
49.9037 140.723 50.63 140.976 51.1763 141.482 cv
51.7237 141.988 52.0425 142.688 52.1325 143.582 cv
51.0019 143.582 li
50.9044 142.903 50.6925 142.411 50.3662 142.106 cv
50.04 141.801 49.5837 141.649 48.9975 141.649 cv
48.2787 141.649 47.715 141.915 47.3062 142.446 cv
46.8988 142.977 46.695 143.733 46.695 144.715 cv
46.695 145.54 li
46.695 146.466 46.8881 147.203 47.2744 147.75 cv
47.6619 148.296 48.2031 148.57 48.8981 148.57 cv
49.5231 148.57 50.0025 148.428 50.3363 148.146 cv
50.67 147.862 50.8919 147.368 51.0019 146.665 cv
52.1325 146.665 li
cp
f
54.6762 149.372 mo
53.5924 149.372 li
53.5924 140.372 li
54.6762 140.372 li
54.6762 149.372 li
cp
f
58.5258 148.545 mo
58.8658 148.545 59.1877 148.458 59.4914 148.283 cv
59.7964 148.106 60.017 147.878 60.1533 147.596 cv
60.1533 146.295 li
59.3039 146.295 li
57.9764 146.295 57.3127 146.684 57.3127 147.461 cv
57.3127 147.801 57.4258 148.067 57.652 148.258 cv
57.8783 148.45 58.1695 148.545 58.5258 148.545 cv
cp
60.3239 149.372 mo
60.2614 149.247 60.2108 149.025 60.172 148.705 cv
59.6683 149.228 59.0664 149.49 58.3664 149.49 cv
57.7414 149.49 57.2289 149.313 56.8289 148.96 cv
56.4289 148.606 56.2289 148.157 56.2289 147.613 cv
56.2289 146.953 56.4795 146.441 56.9808 146.076 cv
57.4833 145.711 58.1895 145.528 59.0995 145.528 cv
60.1533 145.528 li
60.1533 145.03 li
60.1533 144.651 60.0402 144.35 59.8139 144.126 cv
59.5877 143.901 59.2539 143.788 58.8127 143.788 cv
58.4252 143.788 58.1008 143.886 57.8395 144.081 cv
57.5783 144.276 57.4477 144.512 57.4477 144.79 cv
56.3564 144.79 li
56.3564 144.473 56.4689 144.168 56.6939 143.873 cv
56.9189 143.578 57.2233 143.345 57.607 143.173 cv
57.992 143.001 58.4152 142.915 58.8764 142.915 cv
59.6077 142.915 60.1802 143.098 60.5939 143.464 cv
61.0077 143.829 61.2227 144.331 61.2389 144.971 cv
61.2389 147.889 li
61.2389 148.471 61.3127 148.935 61.4602 149.278 cv
61.4602 149.372 li
60.3239 149.372 li
cp
f
66.6281 147.69 mo
66.6281 147.398 66.5175 147.17 66.2962 147.008 cv
66.0762 146.845 65.6919 146.706 65.1431 146.59 cv
64.5944 146.472 64.1587 146.331 63.8363 146.168 cv
63.5137 146.003 63.2756 145.807 63.1219 145.581 cv
62.9681 145.355 62.8912 145.085 62.8912 144.773 cv
62.8912 144.253 63.1106 143.813 63.5494 143.455 cv
63.9894 143.095 64.5512 142.915 65.235 142.915 cv
65.9538 142.915 66.5362 143.1 66.9825 143.471 cv
67.43 143.843 67.6537 144.317 67.6537 144.895 cv
66.5644 144.895 li
66.5644 144.598 66.4381 144.343 66.1856 144.128 cv
65.9344 143.913 65.6175 143.805 65.235 143.805 cv
64.84 143.805 64.5313 143.891 64.3087 144.064 cv
64.0863 144.235 63.975 144.46 63.975 144.737 cv
63.975 144.998 64.0781 145.196 64.2844 145.33 cv
64.4919 145.462 64.8662 145.589 65.4075 145.71 cv
65.9487 145.831 66.3869 145.976 66.7219 146.143 cv
67.0581 146.311 67.3069 146.513 67.4681 146.751 cv
67.6306 146.987 67.7119 147.275 67.7119 147.613 cv
67.7119 148.181 67.485 148.636 67.0313 148.978 cv
66.5788 149.32 65.9912 149.49 65.2687 149.49 cv
64.7612 149.49 64.3119 149.4 63.9206 149.22 cv
63.5306 149.04 63.225 148.789 63.0037 148.466 cv
62.7837 148.144 62.6737 147.795 62.6737 147.42 cv
63.7575 147.42 li
63.7775 147.784 63.9231 148.073 64.1944 148.286 cv
64.4656 148.499 64.8237 148.605 65.2687 148.605 cv
65.6787 148.605 66.0075 148.522 66.255 148.356 cv
66.5037 148.19 66.6281 147.968 66.6281 147.69 cv
cp
f
72.8156 147.69 mo
72.8156 147.398 72.705 147.17 72.4837 147.008 cv
72.2637 146.845 71.8794 146.706 71.3306 146.59 cv
70.7819 146.472 70.3462 146.331 70.0238 146.168 cv
69.7012 146.003 69.4631 145.807 69.3094 145.581 cv
69.1556 145.355 69.0788 145.085 69.0788 144.773 cv
69.0788 144.253 69.2981 143.813 69.7369 143.455 cv
70.1769 143.095 70.7387 142.915 71.4225 142.915 cv
72.1413 142.915 72.7237 143.1 73.17 143.471 cv
73.6175 143.843 73.8412 144.317 73.8412 144.895 cv
72.7519 144.895 li
72.7519 144.598 72.6256 144.343 72.3731 144.128 cv
72.1219 143.913 71.805 143.805 71.4225 143.805 cv
71.0275 143.805 70.7188 143.891 70.4962 144.064 cv
70.2738 144.235 70.1625 144.46 70.1625 144.737 cv
70.1625 144.998 70.2656 145.196 70.4719 145.33 cv
70.6794 145.462 71.0537 145.589 71.595 145.71 cv
72.1362 145.831 72.5744 145.976 72.9094 146.143 cv
73.2456 146.311 73.4944 146.513 73.6556 146.751 cv
73.8181 146.987 73.8994 147.275 73.8994 147.613 cv
73.8994 148.181 73.6725 148.636 73.2188 148.978 cv
72.7663 149.32 72.1787 149.49 71.4562 149.49 cv
70.9487 149.49 70.4994 149.4 70.1081 149.22 cv
69.7181 149.04 69.4125 148.789 69.1912 148.466 cv
68.9712 148.144 68.8613 147.795 68.8613 147.42 cv
69.945 147.42 li
69.965 147.784 70.1106 148.073 70.3819 148.286 cv
70.6531 148.499 71.0112 148.605 71.4562 148.605 cv
71.8662 148.605 72.195 148.522 72.4425 148.356 cv
72.6912 148.19 72.8156 147.968 72.8156 147.69 cv
cp
f
75.3187 141.351 mo
75.3187 141.175 75.3725 141.026 75.48 140.905 cv
75.5875 140.783 75.7462 140.723 75.9562 140.723 cv
76.1675 140.723 76.3275 140.783 76.4362 140.905 cv
76.5462 141.026 76.6012 141.175 76.6012 141.351 cv
76.6012 141.526 76.5462 141.672 76.4362 141.79 cv
76.3275 141.907 76.1675 141.966 75.9562 141.966 cv
75.7462 141.966 75.5875 141.907 75.48 141.79 cv
75.3725 141.672 75.3187 141.526 75.3187 141.351 cv
cp
76.4906 149.372 mo
75.4069 149.372 li
75.4069 143.033 li
76.4906 143.033 li
76.4906 149.372 li
cp
f
78.7577 149.372 mo
78.7577 143.871 li
77.7565 143.871 li
77.7565 143.033 li
78.7577 143.033 li
78.7577 142.382 li
78.7577 141.702 78.939 141.176 79.3015 140.805 cv
79.6652 140.434 80.179 140.248 80.8427 140.248 cv
81.0927 140.248 81.3409 140.281 81.5871 140.348 cv
81.529 141.227 li
81.3452 141.192 81.1502 141.175 80.944 141.175 cv
80.5915 141.175 80.3196 141.277 80.1284 141.482 cv
79.9371 141.687 79.8415 141.981 79.8415 142.363 cv
79.8415 143.033 li
81.1952 143.033 li
81.1952 143.871 li
79.8415 143.871 li
79.8415 149.372 li
78.7577 149.372 li
cp
f
82.3969 141.351 mo
82.3969 141.175 82.4506 141.026 82.5581 140.905 cv
82.6656 140.783 82.8244 140.723 83.0344 140.723 cv
83.2456 140.723 83.4056 140.783 83.5144 140.905 cv
83.6244 141.026 83.6794 141.175 83.6794 141.351 cv
83.6794 141.526 83.6244 141.672 83.5144 141.79 cv
83.4056 141.907 83.2456 141.966 83.0344 141.966 cv
82.8244 141.966 82.6656 141.907 82.5581 141.79 cv
82.4506 141.672 82.3969 141.526 82.3969 141.351 cv
cp
83.5687 149.372 mo
82.485 149.372 li
82.485 143.033 li
83.5687 143.033 li
83.5687 149.372 li
cp
f
87.8459 148.605 mo
88.2321 148.605 88.5696 148.488 88.8584 148.255 cv
89.1484 148.02 89.309 147.726 89.3402 147.373 cv
90.3659 147.373 li
90.3459 147.737 90.2202 148.083 89.989 148.412 cv
89.759 148.74 89.4515 149.001 89.0665 149.198 cv
88.6827 149.393 88.2759 149.49 87.8459 149.49 cv
86.9821 149.49 86.2952 149.202 85.7852 148.626 cv
85.2765 148.05 85.0221 147.261 85.0221 146.261 cv
85.0221 146.08 li
85.0221 145.462 85.1352 144.913 85.3615 144.433 cv
85.5877 143.952 85.9127 143.579 86.3365 143.314 cv
86.7602 143.048 87.2615 142.915 87.8402 142.915 cv
88.5502 142.915 89.1409 143.128 89.6121 143.554 cv
90.0834 143.979 90.3346 144.531 90.3659 145.211 cv
89.3402 145.211 li
89.309 144.801 89.1534 144.465 88.8734 144.201 cv
88.5946 143.937 88.2502 143.805 87.8402 143.805 cv
87.289 143.805 86.8621 144.004 86.5596 144.401 cv
86.2571 144.798 86.1059 145.371 86.1059 146.121 cv
86.1059 146.325 li
86.1059 147.055 86.2559 147.618 86.5559 148.013 cv
86.8571 148.408 87.2871 148.605 87.8459 148.605 cv
cp
f
93.6996 148.545 mo
94.0396 148.545 94.3615 148.458 94.6652 148.283 cv
94.9702 148.106 95.1909 147.878 95.3271 147.596 cv
95.3271 146.295 li
94.4777 146.295 li
93.1502 146.295 92.4865 146.684 92.4865 147.461 cv
92.4865 147.801 92.5996 148.067 92.8259 148.258 cv
93.0521 148.45 93.3434 148.545 93.6996 148.545 cv
cp
95.4977 149.372 mo
95.4352 149.247 95.3846 149.025 95.3459 148.705 cv
94.8421 149.228 94.2402 149.49 93.5402 149.49 cv
92.9152 149.49 92.4027 149.313 92.0027 148.96 cv
91.6027 148.606 91.4027 148.157 91.4027 147.613 cv
91.4027 146.953 91.6534 146.441 92.1546 146.076 cv
92.6571 145.711 93.3634 145.528 94.2734 145.528 cv
95.3271 145.528 li
95.3271 145.03 li
95.3271 144.651 95.214 144.35 94.9877 144.126 cv
94.7615 143.901 94.4277 143.788 93.9865 143.788 cv
93.599 143.788 93.2746 143.886 93.0134 144.081 cv
92.7521 144.276 92.6215 144.512 92.6215 144.79 cv
91.5302 144.79 li
91.5302 144.473 91.6427 144.168 91.8677 143.873 cv
92.0927 143.578 92.3971 143.345 92.7809 143.173 cv
93.1659 143.001 93.589 142.915 94.0502 142.915 cv
94.7815 142.915 95.354 143.098 95.7677 143.464 cv
96.1815 143.829 96.3965 144.331 96.4127 144.971 cv
96.4127 147.889 li
96.4127 148.471 96.4865 148.935 96.634 149.278 cv
96.634 149.372 li
95.4977 149.372 li
cp
f
99.5819 141.497 mo
99.5819 143.033 li
100.765 143.033 li
100.765 143.871 li
99.5819 143.871 li
99.5819 147.801 li
99.5819 148.056 99.6345 148.247 99.7394 148.375 cv
99.8457 148.501 100.026 148.564 100.279 148.564 cv
100.404 148.564 100.576 148.54 100.795 148.493 cv
100.795 149.372 li
100.51 149.451 100.233 149.49 99.9626 149.49 cv
99.4788 149.49 99.1138 149.344 98.8676 149.051 cv
98.6213 148.758 98.4982 148.341 98.4982 147.801 cv
98.4982 143.871 li
97.3432 143.871 li
97.3432 143.033 li
98.4982 143.033 li
98.4982 141.497 li
99.5819 141.497 li
cp
f
102.037 141.351 mo
102.037 141.175 102.091 141.026 102.199 140.905 cv
102.306 140.783 102.465 140.723 102.675 140.723 cv
102.886 140.723 103.046 140.783 103.155 140.905 cv
103.265 141.026 103.32 141.175 103.32 141.351 cv
103.32 141.526 103.265 141.672 103.155 141.79 cv
103.046 141.907 102.886 141.966 102.675 141.966 cv
102.465 141.966 102.306 141.907 102.199 141.79 cv
102.091 141.672 102.037 141.526 102.037 141.351 cv
cp
103.209 149.372 mo
102.126 149.372 li
102.126 143.033 li
103.209 143.033 li
103.209 149.372 li
cp
f
105.746 146.273 mo
105.746 146.975 105.91 147.54 106.236 147.966 cv
106.562 148.392 106.998 148.605 107.545 148.605 cv
108.096 148.605 108.533 148.39 108.857 147.958 cv
109.181 147.526 109.343 146.921 109.343 146.143 cv
109.343 145.448 109.178 144.885 108.848 144.454 cv
108.518 144.021 108.08 143.805 107.533 143.805 cv
106.998 143.805 106.566 144.018 106.238 144.445 cv
105.91 144.87 105.746 145.479 105.746 146.273 cv
cp
104.655 146.143 mo
104.655 145.522 104.777 144.963 105.021 144.467 cv
105.266 143.971 105.606 143.588 106.041 143.32 cv
106.477 143.05 106.975 142.915 107.533 142.915 cv
108.396 142.915 109.094 143.213 109.628 143.811 cv
110.161 144.408 110.428 145.203 110.428 146.196 cv
110.428 146.273 li
110.428 146.89 110.31 147.444 110.072 147.934 cv
109.836 148.424 109.498 148.806 109.058 149.08 cv
108.619 149.353 108.115 149.49 107.545 149.49 cv
106.686 149.49 105.99 149.191 105.456 148.594 cv
104.922 147.995 104.655 147.204 104.655 146.22 cv
104.655 146.143 li
cp
f
112.811 143.033 mo
112.847 143.83 li
113.332 143.22 113.965 142.915 114.746 142.915 cv
116.086 142.915 116.762 143.671 116.773 145.183 cv
116.773 149.372 li
115.69 149.372 li
115.69 145.176 li
115.686 144.72 115.581 144.382 115.376 144.163 cv
115.171 143.945 114.852 143.835 114.418 143.835 cv
114.066 143.835 113.756 143.929 113.49 144.116 cv
113.225 144.304 113.019 144.55 112.871 144.855 cv
112.871 149.372 li
111.788 149.372 li
111.788 143.033 li
112.811 143.033 li
cp
f
124.587 113.206 mo
121.087 113.206 li
f
124.587 113.206 mo
121.087 113.206 li
@
67.7756 116.587 mo
67.4856 117 67.0819 117.31 66.5644 117.517 cv
66.0469 117.722 65.4444 117.824 64.7569 117.824 cv
64.0619 117.824 63.4444 117.661 62.9044 117.335 cv
62.3656 117.009 61.9487 116.545 61.6538 115.944 cv
61.36 115.341 61.2088 114.644 61.2 113.851 cv
61.2 113.107 li
61.2 111.822 61.5 110.825 62.1 110.118 cv
62.7 109.41 63.5425 109.057 64.6275 109.057 cv
65.5188 109.057 66.2356 109.285 66.7781 109.741 cv
67.3219 110.196 67.6544 110.841 67.7756 111.676 cv
66.6506 111.676 li
66.4394 110.547 65.7675 109.983 64.635 109.983 cv
63.88 109.983 63.3081 110.248 62.9194 110.778 cv
62.5319 111.307 62.3356 112.073 62.3306 113.077 cv
62.3306 113.774 li
62.3306 114.732 62.5494 115.493 62.9869 116.058 cv
63.4244 116.622 64.0163 116.904 64.7625 116.904 cv
65.185 116.904 65.5544 116.857 65.8706 116.763 cv
66.1869 116.669 66.4488 116.511 66.6563 116.289 cv
66.6563 114.372 li
64.6819 114.372 li
64.6819 113.457 li
67.7756 113.457 li
67.7756 116.587 li
cp
f
71.9763 112.139 mo
71.5388 112.139 71.1713 112.299 70.8738 112.617 cv
70.5776 112.936 70.3945 113.382 70.3245 113.956 cv
73.4988 113.956 li
73.4988 113.874 li
73.4676 113.324 73.3188 112.897 73.0526 112.595 cv
72.7876 112.291 72.4288 112.139 71.9763 112.139 cv
cp
72.1113 117.824 mo
71.2513 117.824 70.552 117.542 70.0132 116.977 cv
69.4745 116.412 69.2051 115.657 69.2051 114.712 cv
69.2051 114.513 li
69.2051 113.884 69.3251 113.323 69.5651 112.829 cv
69.8051 112.334 70.1407 111.947 70.572 111.669 cv
71.0045 111.389 71.4726 111.249 71.9763 111.249 cv
72.8001 111.249 73.4401 111.52 73.8963 112.064 cv
74.3538 112.607 74.5826 113.384 74.5826 114.395 cv
74.5826 114.847 li
70.2888 114.847 li
70.3038 115.472 70.4863 115.977 70.8363 116.362 cv
71.1863 116.747 71.6307 116.939 72.1695 116.939 cv
72.552 116.939 72.8757 116.861 73.1407 116.705 cv
73.407 116.549 73.6401 116.341 73.8401 116.082 cv
74.502 116.598 li
73.9707 117.415 73.1738 117.824 72.1113 117.824 cv
cp
f
76.8619 111.367 mo
76.8975 112.164 li
77.3825 111.554 78.0156 111.249 78.7969 111.249 cv
80.1369 111.249 80.8125 112.005 80.8238 113.517 cv
80.8238 117.706 li
79.74 117.706 li
79.74 113.51 li
79.7363 113.054 79.6319 112.716 79.4269 112.497 cv
79.2219 112.279 78.9025 112.169 78.4688 112.169 cv
78.1162 112.169 77.8069 112.263 77.5406 112.45 cv
77.2756 112.638 77.0694 112.884 76.9219 113.189 cv
76.9219 117.706 li
75.8381 117.706 li
75.8381 111.367 li
76.8619 111.367 li
cp
f
84.9548 112.139 mo
84.5173 112.139 84.1498 112.299 83.8523 112.617 cv
83.5561 112.936 83.373 113.382 83.303 113.956 cv
86.4773 113.956 li
86.4773 113.874 li
86.4461 113.324 86.2973 112.897 86.0311 112.595 cv
85.7661 112.291 85.4073 112.139 84.9548 112.139 cv
cp
85.0898 117.824 mo
84.2298 117.824 83.5305 117.542 82.9917 116.977 cv
82.453 116.412 82.1836 115.657 82.1836 114.712 cv
82.1836 114.513 li
82.1836 113.884 82.3036 113.323 82.5436 112.829 cv
82.7836 112.334 83.1192 111.947 83.5505 111.669 cv
83.983 111.389 84.4511 111.249 84.9548 111.249 cv
85.7786 111.249 86.4186 111.52 86.8748 112.064 cv
87.3323 112.607 87.5611 113.384 87.5611 114.395 cv
87.5611 114.847 li
83.2673 114.847 li
83.2823 115.472 83.4648 115.977 83.8148 116.362 cv
84.1648 116.747 84.6092 116.939 85.148 116.939 cv
85.5305 116.939 85.8542 116.861 86.1192 116.705 cv
86.3855 116.549 86.6186 116.341 86.8186 116.082 cv
87.4805 116.598 li
86.9492 117.415 86.1523 117.824 85.0898 117.824 cv
cp
f
91.8804 112.338 mo
91.7166 112.312 91.5391 112.299 91.3479 112.299 cv
90.6366 112.299 90.1541 112.601 89.9004 113.206 cv
89.9004 117.706 li
88.8166 117.706 li
88.8166 111.367 li
89.8704 111.367 li
89.8873 112.098 li
90.2435 111.532 90.7479 111.249 91.4004 111.249 cv
91.6104 111.249 91.7704 111.276 91.8804 111.331 cv
91.8804 112.338 li
cp
f
94.9922 116.879 mo
95.3322 116.879 95.6541 116.792 95.9578 116.617 cv
96.2628 116.44 96.4834 116.212 96.6197 115.93 cv
96.6197 114.629 li
95.7703 114.629 li
94.4428 114.629 93.7791 115.018 93.7791 115.795 cv
93.7791 116.135 93.8922 116.401 94.1184 116.592 cv
94.3447 116.784 94.6359 116.879 94.9922 116.879 cv
cp
96.7903 117.706 mo
96.7278 117.581 96.6772 117.359 96.6384 117.039 cv
96.1347 117.562 95.5328 117.824 94.8328 117.824 cv
94.2078 117.824 93.6953 117.647 93.2953 117.294 cv
92.8953 116.94 92.6953 116.491 92.6953 115.947 cv
92.6953 115.287 92.9459 114.775 93.4472 114.41 cv
93.9497 114.045 94.6559 113.862 95.5659 113.862 cv
96.6197 113.862 li
96.6197 113.364 li
96.6197 112.985 96.5066 112.684 96.2803 112.46 cv
96.0541 112.235 95.7203 112.122 95.2791 112.122 cv
94.8916 112.122 94.5672 112.22 94.3059 112.415 cv
94.0447 112.61 93.9141 112.846 93.9141 113.124 cv
92.8228 113.124 li
92.8228 112.807 92.9353 112.502 93.1603 112.207 cv
93.3853 111.912 93.6897 111.679 94.0734 111.507 cv
94.4584 111.335 94.8816 111.249 95.3428 111.249 cv
96.0741 111.249 96.6466 111.432 97.0603 111.798 cv
97.4741 112.163 97.6891 112.665 97.7053 113.305 cv
97.7053 116.223 li
97.7053 116.805 97.7791 117.269 97.9266 117.612 cv
97.9266 117.706 li
96.7903 117.706 li
cp
f
100.875 109.831 mo
100.875 111.367 li
102.058 111.367 li
102.058 112.205 li
100.875 112.205 li
100.875 116.135 li
100.875 116.39 100.927 116.581 101.032 116.709 cv
101.138 116.835 101.318 116.898 101.572 116.898 cv
101.697 116.898 101.869 116.874 102.088 116.827 cv
102.088 117.706 li
101.803 117.785 101.525 117.824 101.255 117.824 cv
100.771 117.824 100.406 117.678 100.16 117.385 cv
99.9139 117.092 99.7908 116.675 99.7908 116.135 cv
99.7908 112.205 li
98.6358 112.205 li
98.6358 111.367 li
99.7908 111.367 li
99.7908 109.831 li
100.875 109.831 li
cp
f
103.33 109.685 mo
103.33 109.509 103.384 109.36 103.491 109.239 cv
103.599 109.117 103.758 109.057 103.968 109.057 cv
104.179 109.057 104.339 109.117 104.448 109.239 cv
104.558 109.36 104.613 109.509 104.613 109.685 cv
104.613 109.86 104.558 110.006 104.448 110.124 cv
104.339 110.241 104.179 110.3 103.968 110.3 cv
103.758 110.3 103.599 110.241 103.491 110.124 cv
103.384 110.006 103.33 109.86 103.33 109.685 cv
cp
104.502 117.706 mo
103.418 117.706 li
103.418 111.367 li
104.502 111.367 li
104.502 117.706 li
cp
f
108.327 116.236 mo
109.898 111.367 li
111.005 111.367 li
108.732 117.706 li
107.905 117.706 li
105.608 111.367 li
106.717 111.367 li
108.327 116.236 li
cp
f
114.545 112.139 mo
114.107 112.139 113.74 112.299 113.442 112.617 cv
113.146 112.936 112.963 113.382 112.893 113.956 cv
116.067 113.956 li
116.067 113.874 li
116.036 113.324 115.887 112.897 115.621 112.595 cv
115.356 112.291 114.997 112.139 114.545 112.139 cv
cp
114.68 117.824 mo
113.82 117.824 113.12 117.542 112.582 116.977 cv
112.043 116.412 111.773 115.657 111.773 114.712 cv
111.773 114.513 li
111.773 113.884 111.893 113.323 112.133 112.829 cv
112.373 112.334 112.709 111.947 113.14 111.669 cv
113.573 111.389 114.041 111.249 114.545 111.249 cv
115.368 111.249 116.008 111.52 116.465 112.064 cv
116.922 112.607 117.151 113.384 117.151 114.395 cv
117.151 114.847 li
112.857 114.847 li
112.872 115.472 113.055 115.977 113.405 116.362 cv
113.755 116.747 114.199 116.939 114.738 116.939 cv
115.12 116.939 115.444 116.861 115.709 116.705 cv
115.975 116.549 116.208 116.341 116.408 116.082 cv
117.07 116.598 li
116.539 117.415 115.742 117.824 114.68 117.824 cv
cp
f
124.587 81.54 mo
121.087 81.54 li
f
124.587 81.54 mo
121.087 81.54 li
@
63.51 81.6403 mo
65.2388 81.6403 li
65.7975 81.6403 66.2419 81.4959 66.5719 81.2072 cv
66.9019 80.9172 67.0669 80.5303 67.0669 80.0466 cv
67.0669 79.5191 66.9094 79.1147 66.5944 78.8334 cv
66.2806 78.5522 65.8269 78.4097 65.2331 78.4059 cv
63.51 78.4059 li
63.51 81.6403 li
cp
65.5144 82.5591 mo
63.51 82.5591 li
63.51 86.0109 li
62.3794 86.0109 li
62.3794 77.4797 li
65.2031 77.4797 li
66.1644 77.4797 66.9038 77.6984 67.4213 78.1359 cv
67.9388 78.5734 68.1975 79.2103 68.1975 80.0466 cv
68.1975 80.5778 68.0538 81.0409 67.7663 81.4359 cv
67.48 81.8297 67.0806 82.1241 66.5681 82.3191 cv
68.5725 85.9397 li
68.5725 86.0109 li
67.365 86.0109 li
65.5144 82.5591 li
cp
f
72.1005 80.4441 mo
71.663 80.4441 71.2955 80.6034 70.998 80.9222 cv
70.7018 81.2409 70.5187 81.6872 70.4487 82.2609 cv
73.623 82.2609 li
73.623 82.1784 li
73.5918 81.6284 73.443 81.2022 73.1768 80.8997 cv
72.9118 80.5959 72.553 80.4441 72.1005 80.4441 cv
cp
72.2355 86.1291 mo
71.3755 86.1291 70.6762 85.8466 70.1374 85.2816 cv
69.5987 84.7166 69.3293 83.9616 69.3293 83.0166 cv
69.3293 82.8178 li
69.3293 82.1891 69.4493 81.6278 69.6893 81.1341 cv
69.9293 80.6391 70.2649 80.2522 70.6962 79.9734 cv
71.1287 79.6934 71.5968 79.5534 72.1005 79.5534 cv
72.9243 79.5534 73.5643 79.8253 74.0206 80.3691 cv
74.4781 80.9116 74.7068 81.6884 74.7068 82.6997 cv
74.7068 83.1516 li
70.413 83.1516 li
70.428 83.7766 70.6105 84.2816 70.9605 84.6666 cv
71.3105 85.0516 71.7549 85.2441 72.2937 85.2441 cv
72.6762 85.2441 72.9999 85.1659 73.2649 85.0097 cv
73.5312 84.8534 73.7643 84.6459 73.9643 84.3872 cv
74.6262 84.9028 li
74.0949 85.7203 73.298 86.1291 72.2355 86.1291 cv
cp
f
78.0773 85.1841 mo
78.4174 85.1841 78.7392 85.0966 79.043 84.9216 cv
79.348 84.7453 79.5686 84.5166 79.7048 84.2353 cv
79.7048 82.9341 li
78.8555 82.9341 li
77.528 82.9341 76.8642 83.3228 76.8642 84.1003 cv
76.8642 84.4403 76.9773 84.7059 77.2036 84.8972 cv
77.4298 85.0884 77.7211 85.1841 78.0773 85.1841 cv
cp
79.8755 86.0109 mo
79.813 85.8859 79.7623 85.6634 79.7236 85.3434 cv
79.2198 85.8672 78.618 86.1291 77.918 86.1291 cv
77.293 86.1291 76.7805 85.9522 76.3805 85.5984 cv
75.9805 85.2447 75.7805 84.7959 75.7805 84.2522 cv
75.7805 83.5922 76.0311 83.0797 76.5323 82.7147 cv
77.0348 82.3497 77.7411 82.1672 78.6511 82.1672 cv
79.7048 82.1672 li
79.7048 81.6684 li
79.7048 81.2897 79.5917 80.9884 79.3655 80.7647 cv
79.1392 80.5397 78.8055 80.4272 78.3642 80.4272 cv
77.9767 80.4272 77.6523 80.5247 77.3911 80.7197 cv
77.1298 80.9147 76.9992 81.1509 76.9992 81.4284 cv
75.908 81.4284 li
75.908 81.1122 76.0205 80.8066 76.2455 80.5116 cv
76.4705 80.2166 76.7748 79.9834 77.1586 79.8122 cv
77.5436 79.6397 77.9667 79.5534 78.428 79.5534 cv
79.1592 79.5534 79.7317 79.7366 80.1455 80.1028 cv
80.5592 80.4678 80.7742 80.9703 80.7905 81.6103 cv
80.7905 84.5278 li
80.7905 85.1103 80.8642 85.5734 81.0117 85.9172 cv
81.0117 86.0109 li
79.8755 86.0109 li
cp
f
86.1797 84.3291 mo
86.1797 84.0366 86.0691 83.8091 85.8478 83.6466 cv
85.6278 83.4841 85.2434 83.3447 84.6947 83.2284 cv
84.1459 83.1109 83.7103 82.9703 83.3878 82.8066 cv
83.0653 82.6416 82.8272 82.4459 82.6734 82.2197 cv
82.5197 81.9934 82.4428 81.7241 82.4428 81.4116 cv
82.4428 80.8916 82.6622 80.4522 83.1009 80.0934 cv
83.5409 79.7334 84.1028 79.5534 84.7866 79.5534 cv
85.5053 79.5534 86.0878 79.7391 86.5341 80.1103 cv
86.9816 80.4816 87.2053 80.9559 87.2053 81.5334 cv
86.1159 81.5334 li
86.1159 81.2372 85.9897 80.9816 85.7372 80.7666 cv
85.4859 80.5516 85.1691 80.4441 84.7866 80.4441 cv
84.3916 80.4441 84.0828 80.5303 83.8603 80.7028 cv
83.6378 80.8741 83.5266 81.0984 83.5266 81.3759 cv
83.5266 81.6372 83.6297 81.8347 83.8359 81.9684 cv
84.0434 82.1009 84.4178 82.2278 84.9591 82.3491 cv
85.5003 82.4703 85.9384 82.6147 86.2734 82.7822 cv
86.6097 82.9497 86.8584 83.1522 87.0197 83.3897 cv
87.1822 83.6259 87.2634 83.9134 87.2634 84.2522 cv
87.2634 84.8197 87.0366 85.2747 86.5828 85.6172 cv
86.1303 85.9584 85.5428 86.1291 84.8203 86.1291 cv
84.3128 86.1291 83.8634 86.0391 83.4722 85.8591 cv
83.0822 85.6791 82.7766 85.4278 82.5553 85.1053 cv
82.3353 84.7828 82.2253 84.4341 82.2253 84.0591 cv
83.3091 84.0591 li
83.3291 84.4228 83.4747 84.7116 83.7459 84.9253 cv
84.0172 85.1378 84.3753 85.2441 84.8203 85.2441 cv
85.2303 85.2441 85.5591 85.1609 85.8066 84.9947 cv
86.0553 84.8284 86.1797 84.6066 86.1797 84.3291 cv
cp
f
89.4797 82.9116 mo
89.4797 83.6141 89.6428 84.1784 89.9691 84.6047 cv
90.2953 85.0309 90.7316 85.2441 91.2778 85.2441 cv
91.8291 85.2441 92.2666 85.0284 92.5903 84.5972 cv
92.9141 84.1647 93.0759 83.5597 93.0759 82.7822 cv
93.0759 82.0872 92.9109 81.5241 92.5809 81.0928 cv
92.2509 80.6603 91.8128 80.4441 91.2666 80.4441 cv
90.7316 80.4441 90.2997 80.6572 89.9709 81.0834 cv
89.6434 81.5084 89.4797 82.1178 89.4797 82.9116 cv
cp
88.3884 82.7822 mo
88.3884 82.1609 88.5103 81.6022 88.7541 81.1059 cv
88.9991 80.6097 89.3391 80.2272 89.7741 79.9584 cv
90.2103 79.6884 90.7078 79.5534 91.2666 79.5534 cv
92.1291 79.5534 92.8272 79.8522 93.3609 80.4497 cv
93.8947 81.0472 94.1616 81.8422 94.1616 82.8347 cv
94.1616 82.9116 li
94.1616 83.5291 94.0428 84.0828 93.8053 84.5728 cv
93.5691 85.0628 93.2309 85.4447 92.7909 85.7184 cv
92.3522 85.9922 91.8478 86.1291 91.2778 86.1291 cv
90.4191 86.1291 89.7228 85.8303 89.1891 85.2328 cv
88.6553 84.6341 88.3884 83.8428 88.3884 82.8591 cv
88.3884 82.7822 li
cp
f
96.5447 79.6716 mo
96.5803 80.4684 li
97.0653 79.8584 97.6984 79.5534 98.4797 79.5534 cv
99.8197 79.5534 100.495 80.3097 100.507 81.8222 cv
100.507 86.0109 li
99.4228 86.0109 li
99.4228 81.8147 li
99.4191 81.3584 99.3147 81.0209 99.1097 80.8022 cv
98.9047 80.5834 98.5853 80.4741 98.1516 80.4741 cv
97.7991 80.4741 97.4897 80.5678 97.2234 80.7553 cv
96.9584 80.9428 96.7522 81.1891 96.6047 81.4941 cv
96.6047 86.0109 li
95.5209 86.0109 li
95.5209 79.6716 li
96.5447 79.6716 li
cp
f
102.148 77.9897 mo
102.148 77.8134 102.201 77.6647 102.309 77.5434 cv
102.416 77.4222 102.575 77.3616 102.785 77.3616 cv
102.996 77.3616 103.156 77.4222 103.265 77.5434 cv
103.375 77.6647 103.43 77.8134 103.43 77.9897 cv
103.43 78.1647 103.375 78.3109 103.265 78.4284 cv
103.156 78.5459 102.996 78.6047 102.785 78.6047 cv
102.575 78.6047 102.416 78.5459 102.309 78.4284 cv
102.201 78.3109 102.148 78.1647 102.148 77.9897 cv
cp
103.32 86.0109 mo
102.236 86.0109 li
102.236 79.6716 li
103.32 79.6716 li
103.32 86.0109 li
cp
f
106.078 79.6716 mo
106.114 80.4684 li
106.599 79.8584 107.232 79.5534 108.013 79.5534 cv
109.353 79.5534 110.029 80.3097 110.04 81.8222 cv
110.04 86.0109 li
108.956 86.0109 li
108.956 81.8147 li
108.952 81.3584 108.848 81.0209 108.643 80.8022 cv
108.438 80.5834 108.119 80.4741 107.685 80.4741 cv
107.332 80.4741 107.023 80.5678 106.757 80.7553 cv
106.492 80.9428 106.285 81.1891 106.138 81.4941 cv
106.138 86.0109 li
105.054 86.0109 li
105.054 79.6716 li
106.078 79.6716 li
cp
f
112.506 82.9116 mo
112.506 83.6266 112.652 84.1884 112.945 84.5972 cv
113.238 85.0047 113.649 85.2084 114.176 85.2084 cv
114.86 85.2084 115.362 84.8978 115.682 84.2766 cv
115.682 81.3816 li
115.35 80.7766 114.851 80.4741 114.188 80.4741 cv
113.66 80.4741 113.248 80.6791 112.95 81.0891 cv
112.654 81.4991 112.506 82.1066 112.506 82.9116 cv
cp
111.416 82.7878 mo
111.416 81.8003 111.645 81.0147 112.101 80.4309 cv
112.558 79.8459 113.164 79.5534 113.918 79.5534 cv
114.691 79.5534 115.295 79.8272 115.729 80.3747 cv
115.781 79.6716 li
116.771 79.6716 li
116.771 85.8591 li
116.771 86.6791 116.528 87.3253 116.042 87.7978 cv
115.556 88.2703 114.903 88.5066 114.083 88.5066 cv
113.625 88.5066 113.178 88.4091 112.74 88.2141 cv
112.303 88.0191 111.969 87.7516 111.739 87.4116 cv
112.301 86.7609 li
112.766 87.3347 113.335 87.6216 114.006 87.6216 cv
114.533 87.6216 114.945 87.4728 115.24 87.1753 cv
115.535 86.8791 115.682 86.4616 115.682 85.9228 cv
115.682 85.3772 li
115.248 85.8784 114.656 86.1291 113.906 86.1291 cv
113.164 86.1291 112.563 85.8303 112.105 85.2328 cv
111.646 84.6341 111.416 83.8191 111.416 82.7878 cv
cp
f
124.587 49.874 mo
121.087 49.874 li
f
124.587 49.874 mo
121.087 49.874 li
@
1.125 54.374 mo
0 54.374 li
0 45.8427 li
1.125 45.8427 li
1.125 54.374 li
cp
f
4.03617 48.0346 mo
4.0718 48.8315 li
4.5568 48.2215 5.18992 47.9165 5.97117 47.9165 cv
7.31117 47.9165 7.9868 48.6727 7.99805 50.1852 cv
7.99805 54.374 li
6.9143 54.374 li
6.9143 50.1777 li
6.91055 49.7215 6.80617 49.384 6.60117 49.1652 cv
6.39617 48.9465 6.0768 48.8371 5.64305 48.8371 cv
5.29055 48.8371 4.98117 48.9309 4.71492 49.1184 cv
4.44992 49.3059 4.24367 49.5521 4.09617 49.8571 cv
4.09617 54.374 li
3.01242 54.374 li
3.01242 48.0346 li
4.03617 48.0346 li
cp
f
10.166 54.374 mo
10.166 48.8727 li
9.16477 48.8727 li
9.16477 48.0346 li
10.166 48.0346 li
10.166 47.384 li
10.166 46.704 10.3473 46.1784 10.7098 45.8071 cv
11.0735 45.4359 11.5873 45.2502 12.251 45.2502 cv
12.501 45.2502 12.7491 45.2834 12.9954 45.3496 cv
12.9373 46.229 li
12.7535 46.194 12.5585 46.1765 12.3523 46.1765 cv
11.9998 46.1765 11.7279 46.279 11.5366 46.484 cv
11.3454 46.689 11.2498 46.9827 11.2498 47.3652 cv
11.2498 48.0346 li
12.6035 48.0346 li
12.6035 48.8727 li
11.2498 48.8727 li
11.2498 54.374 li
10.166 54.374 li
cp
f
14.602 51.2746 mo
14.602 51.9771 14.7652 52.5415 15.0914 52.9677 cv
15.4177 53.394 15.8539 53.6071 16.4002 53.6071 cv
16.9514 53.6071 17.3889 53.3915 17.7127 52.9602 cv
18.0364 52.5277 18.1983 51.9227 18.1983 51.1452 cv
18.1983 50.4502 18.0333 49.8871 17.7033 49.4559 cv
17.3733 49.0234 16.9352 48.8071 16.3889 48.8071 cv
15.8539 48.8071 15.422 49.0202 15.0933 49.4465 cv
14.7658 49.8715 14.602 50.4809 14.602 51.2746 cv
cp
13.5108 51.1452 mo
13.5108 50.524 13.6327 49.9652 13.8764 49.469 cv
14.1214 48.9727 14.4614 48.5902 14.8964 48.3215 cv
15.3327 48.0515 15.8302 47.9165 16.3889 47.9165 cv
17.2514 47.9165 17.9495 48.2152 18.4833 48.8127 cv
19.017 49.4102 19.2839 50.2052 19.2839 51.1977 cv
19.2839 51.2746 li
19.2839 51.8921 19.1652 52.4459 18.9277 52.9359 cv
18.6914 53.4259 18.3533 53.8077 17.9133 54.0815 cv
17.4745 54.3552 16.9702 54.4921 16.4002 54.4921 cv
15.5414 54.4921 14.8452 54.1934 14.3114 53.5959 cv
13.7777 52.9971 13.5108 52.2059 13.5108 51.2221 cv
13.5108 51.1452 li
cp
f
23.707 49.0059 mo
23.5433 48.9796 23.3658 48.9665 23.1745 48.9665 cv
22.4633 48.9665 21.9808 49.269 21.727 49.874 cv
21.727 54.374 li
20.6433 54.374 li
20.6433 48.0346 li
21.697 48.0346 li
21.7139 48.7659 li
22.0702 48.1996 22.5745 47.9165 23.227 47.9165 cv
23.437 47.9165 23.597 47.944 23.707 47.999 cv
23.707 49.0059 li
cp
f
25.722 48.0346 mo
25.752 48.7377 li
26.217 48.1902 26.8438 47.9165 27.6326 47.9165 cv
28.5188 47.9165 29.1226 48.2565 29.4438 48.9365 cv
29.6538 48.6315 29.9276 48.3852 30.2651 48.1977 cv
30.6038 48.0102 31.0038 47.9165 31.4651 47.9165 cv
32.8551 47.9165 33.562 48.6527 33.5857 50.1252 cv
33.5857 54.374 li
32.502 54.374 li
32.502 50.1909 li
32.502 49.7371 32.3982 49.3984 32.1907 49.1746 cv
31.9845 48.9496 31.637 48.8371 31.1482 48.8371 cv
30.7457 48.8371 30.4113 48.9571 30.1451 49.1971 cv
29.8801 49.4371 29.7263 49.7602 29.6838 50.1665 cv
29.6838 54.374 li
28.5945 54.374 li
28.5945 50.219 li
28.5945 49.2977 28.1432 48.8371 27.2407 48.8371 cv
26.5295 48.8371 26.0432 49.1396 25.782 49.7446 cv
25.782 54.374 li
24.6963 54.374 li
24.6963 48.0346 li
25.722 48.0346 li
cp
f
37.3364 53.5471 mo
37.6764 53.5471 37.9983 53.4596 38.302 53.2846 cv
38.607 53.1084 38.8277 52.8796 38.9639 52.5984 cv
38.9639 51.2971 li
38.1145 51.2971 li
36.787 51.2971 36.1233 51.6859 36.1233 52.4634 cv
36.1233 52.8034 36.2364 53.069 36.4627 53.2602 cv
36.6889 53.4515 36.9802 53.5471 37.3364 53.5471 cv
cp
39.1345 54.374 mo
39.072 54.249 39.0214 54.0265 38.9827 53.7065 cv
38.4789 54.2302 37.877 54.4921 37.177 54.4921 cv
36.552 54.4921 36.0395 54.3152 35.6395 53.9615 cv
35.2395 53.6077 35.0395 53.159 35.0395 52.6152 cv
35.0395 51.9552 35.2902 51.4427 35.7914 51.0777 cv
36.2939 50.7127 37.0002 50.5302 37.9102 50.5302 cv
38.9639 50.5302 li
38.9639 50.0315 li
38.9639 49.6527 38.8508 49.3515 38.6245 49.1277 cv
38.3983 48.9027 38.0645 48.7902 37.6233 48.7902 cv
37.2358 48.7902 36.9114 48.8877 36.6502 49.0827 cv
36.3889 49.2777 36.2583 49.514 36.2583 49.7915 cv
35.167 49.7915 li
35.167 49.4752 35.2795 49.1696 35.5045 48.8746 cv
35.7295 48.5796 36.0339 48.3465 36.4177 48.1752 cv
36.8027 48.0027 37.2258 47.9165 37.687 47.9165 cv
38.4183 47.9165 38.9908 48.0996 39.4045 48.4659 cv
39.8183 48.8309 40.0333 49.3334 40.0495 49.9734 cv
40.0495 52.8909 li
40.0495 53.4734 40.1233 53.9365 40.2708 54.2802 cv
40.2708 54.374 li
39.1345 54.374 li
cp
f
43.2188 46.499 mo
43.2188 48.0346 li
44.4019 48.0346 li
44.4019 48.8727 li
43.2188 48.8727 li
43.2188 52.8027 li
43.2188 53.0577 43.2712 53.249 43.3762 53.3765 cv
43.4825 53.5027 43.6625 53.5659 43.9162 53.5659 cv
44.0412 53.5659 44.2131 53.5421 44.4319 53.4946 cv
44.4319 54.374 li
44.1469 54.4527 43.8694 54.4921 43.5994 54.4921 cv
43.1156 54.4921 42.7506 54.3459 42.5044 54.0534 cv
42.2581 53.7596 42.135 53.3427 42.135 52.8027 cv
42.135 48.8727 li
40.98 48.8727 li
40.98 48.0346 li
42.135 48.0346 li
42.135 46.499 li
43.2188 46.499 li
cp
f
45.6743 46.3527 mo
45.6743 46.1765 45.728 46.0277 45.8355 45.9065 cv
45.943 45.7852 46.1018 45.7246 46.3118 45.7246 cv
46.523 45.7246 46.683 45.7852 46.7918 45.9065 cv
46.9018 46.0277 46.9568 46.1765 46.9568 46.3527 cv
46.9568 46.5277 46.9018 46.674 46.7918 46.7915 cv
46.683 46.909 46.523 46.9677 46.3118 46.9677 cv
46.1018 46.9677 45.943 46.909 45.8355 46.7915 cv
45.728 46.674 45.6743 46.5277 45.6743 46.3527 cv
cp
46.8462 54.374 mo
45.7624 54.374 li
45.7624 48.0346 li
46.8462 48.0346 li
46.8462 54.374 li
cp
f
49.3833 51.2746 mo
49.3833 51.9771 49.5464 52.5415 49.8727 52.9677 cv
50.1989 53.394 50.6352 53.6071 51.1814 53.6071 cv
51.7327 53.6071 52.1702 53.3915 52.4939 52.9602 cv
52.8177 52.5277 52.9795 51.9227 52.9795 51.1452 cv
52.9795 50.4502 52.8145 49.8871 52.4845 49.4559 cv
52.1545 49.0234 51.7164 48.8071 51.1702 48.8071 cv
50.6352 48.8071 50.2033 49.0202 49.8745 49.4465 cv
49.547 49.8715 49.3833 50.4809 49.3833 51.2746 cv
cp
48.292 51.1452 mo
48.292 50.524 48.4139 49.9652 48.6577 49.469 cv
48.9027 48.9727 49.2427 48.5902 49.6777 48.3215 cv
50.1139 48.0515 50.6114 47.9165 51.1702 47.9165 cv
52.0327 47.9165 52.7308 48.2152 53.2645 48.8127 cv
53.7983 49.4102 54.0652 50.2052 54.0652 51.1977 cv
54.0652 51.2746 li
54.0652 51.8921 53.9464 52.4459 53.7089 52.9359 cv
53.4727 53.4259 53.1345 53.8077 52.6945 54.0815 cv
52.2558 54.3552 51.7514 54.4921 51.1814 54.4921 cv
50.3227 54.4921 49.6264 54.1934 49.0927 53.5959 cv
48.5589 52.9971 48.292 52.2059 48.292 51.2221 cv
48.292 51.1452 li
cp
f
56.4483 48.0346 mo
56.4839 48.8315 li
56.9689 48.2215 57.602 47.9165 58.3833 47.9165 cv
59.7233 47.9165 60.3989 48.6727 60.4102 50.1852 cv
60.4102 54.374 li
59.3264 54.374 li
59.3264 50.1777 li
59.3227 49.7215 59.2183 49.384 59.0133 49.1652 cv
58.8083 48.9465 58.4889 48.8371 58.0552 48.8371 cv
57.7027 48.8371 57.3933 48.9309 57.127 49.1184 cv
56.862 49.3059 56.6558 49.5521 56.5083 49.8571 cv
56.5083 54.374 li
55.4245 54.374 li
55.4245 48.0346 li
56.4483 48.0346 li
cp
f
67.512 48.8071 mo
67.0745 48.8071 66.707 48.9665 66.4095 49.2852 cv
66.1132 49.604 65.9301 50.0502 65.8601 50.624 cv
69.0345 50.624 li
69.0345 50.5415 li
69.0032 49.9915 68.8545 49.5652 68.5882 49.2627 cv
68.3232 48.959 67.9645 48.8071 67.512 48.8071 cv
cp
67.6469 54.4921 mo
66.7869 54.4921 66.0876 54.2096 65.5488 53.6446 cv
65.0101 53.0796 64.7407 52.3246 64.7407 51.3796 cv
64.7407 51.1809 li
64.7407 50.5521 64.8607 49.9909 65.1007 49.4971 cv
65.3407 49.0021 65.6763 48.6152 66.1076 48.3365 cv
66.5401 48.0565 67.0082 47.9165 67.512 47.9165 cv
68.3357 47.9165 68.9757 48.1884 69.432 48.7321 cv
69.8895 49.2746 70.1182 50.0515 70.1182 51.0627 cv
70.1182 51.5146 li
65.8245 51.5146 li
65.8395 52.1396 66.0219 52.6446 66.3719 53.0296 cv
66.722 53.4146 67.1663 53.6071 67.7051 53.6071 cv
68.0876 53.6071 68.4113 53.529 68.6763 53.3727 cv
68.9426 53.2165 69.1757 53.009 69.3757 52.7502 cv
70.0376 53.2659 li
69.5063 54.0834 68.7094 54.4921 67.6469 54.4921 cv
cp
f
73.5 50.3484 mo
74.9063 48.0346 li
76.1719 48.0346 li
74.0981 51.1696 li
76.2356 54.374 li
74.9831 54.374 li
73.5169 52.0002 li
72.0525 54.374 li
70.7925 54.374 li
72.9319 51.1696 li
70.8581 48.0346 li
72.1106 48.0346 li
73.5 50.3484 li
cp
f
78.791 46.499 mo
78.791 48.0346 li
79.9741 48.0346 li
79.9741 48.8727 li
78.791 48.8727 li
78.791 52.8027 li
78.791 53.0577 78.8435 53.249 78.9485 53.3765 cv
79.0548 53.5027 79.2348 53.5659 79.4885 53.5659 cv
79.6135 53.5659 79.7854 53.5421 80.0041 53.4946 cv
80.0041 54.374 li
79.7191 54.4527 79.4416 54.4921 79.1716 54.4921 cv
78.6879 54.4921 78.3229 54.3459 78.0766 54.0534 cv
77.8304 53.7596 77.7073 53.3427 77.7073 52.8027 cv
77.7073 48.8727 li
76.5523 48.8727 li
76.5523 48.0346 li
77.7073 48.0346 li
77.7073 46.499 li
78.791 46.499 li
cp
f
84.3047 49.0059 mo
84.1409 48.9796 83.9634 48.9665 83.7722 48.9665 cv
83.0609 48.9665 82.5784 49.269 82.3247 49.874 cv
82.3247 54.374 li
81.2409 54.374 li
81.2409 48.0346 li
82.2947 48.0346 li
82.3116 48.7659 li
82.6678 48.1996 83.1722 47.9165 83.8247 47.9165 cv
84.0347 47.9165 84.1947 47.944 84.3047 47.999 cv
84.3047 49.0059 li
cp
f
87.4165 53.5471 mo
87.7565 53.5471 88.0784 53.4596 88.3821 53.2846 cv
88.6871 53.1084 88.9077 52.8796 89.044 52.5984 cv
89.044 51.2971 li
88.1946 51.2971 li
86.8671 51.2971 86.2034 51.6859 86.2034 52.4634 cv
86.2034 52.8034 86.3165 53.069 86.5427 53.2602 cv
86.769 53.4515 87.0602 53.5471 87.4165 53.5471 cv
cp
89.2146 54.374 mo
89.1521 54.249 89.1015 54.0265 89.0627 53.7065 cv
88.559 54.2302 87.9571 54.4921 87.2571 54.4921 cv
86.6321 54.4921 86.1196 54.3152 85.7196 53.9615 cv
85.3196 53.6077 85.1196 53.159 85.1196 52.6152 cv
85.1196 51.9552 85.3702 51.4427 85.8715 51.0777 cv
86.374 50.7127 87.0802 50.5302 87.9902 50.5302 cv
89.044 50.5302 li
89.044 50.0315 li
89.044 49.6527 88.9309 49.3515 88.7046 49.1277 cv
88.4784 48.9027 88.1446 48.7902 87.7034 48.7902 cv
87.3159 48.7902 86.9915 48.8877 86.7302 49.0827 cv
86.469 49.2777 86.3384 49.514 86.3384 49.7915 cv
85.2471 49.7915 li
85.2471 49.4752 85.3596 49.1696 85.5846 48.8746 cv
85.8096 48.5796 86.114 48.3465 86.4977 48.1752 cv
86.8827 48.0027 87.3059 47.9165 87.7671 47.9165 cv
88.4984 47.9165 89.0709 48.0996 89.4846 48.4659 cv
89.8984 48.8309 90.1134 49.3334 90.1296 49.9734 cv
90.1296 52.8909 li
90.1296 53.4734 90.2034 53.9365 90.3509 54.2802 cv
90.3509 54.374 li
89.2146 54.374 li
cp
f
94.3713 53.6071 mo
94.7576 53.6071 95.0951 53.4902 95.3838 53.2565 cv
95.6738 53.0215 95.8344 52.7277 95.8657 52.3752 cv
96.8913 52.3752 li
96.8713 52.739 96.7457 53.0852 96.5145 53.414 cv
96.2845 53.7415 95.977 54.0034 95.5919 54.1996 cv
95.2082 54.3946 94.8013 54.4921 94.3713 54.4921 cv
93.5076 54.4921 92.8207 54.204 92.3107 53.6277 cv
91.8019 53.0515 91.5476 52.2634 91.5476 51.2634 cv
91.5476 51.0815 li
91.5476 50.464 91.6607 49.9152 91.8869 49.4352 cv
92.1132 48.954 92.4382 48.5809 92.862 48.3159 cv
93.2857 48.0496 93.7869 47.9165 94.3657 47.9165 cv
95.0757 47.9165 95.6663 48.1296 96.1376 48.5559 cv
96.6088 48.9809 96.8601 49.5334 96.8913 50.2134 cv
95.8657 50.2134 li
95.8344 49.8034 95.6788 49.4665 95.3988 49.2027 cv
95.1201 48.939 94.7757 48.8071 94.3657 48.8071 cv
93.8145 48.8071 93.3876 49.0059 93.0851 49.4034 cv
92.7826 49.7996 92.6313 50.3727 92.6313 51.1227 cv
92.6313 51.3271 li
92.6313 52.0571 92.7813 52.6196 93.0813 53.0146 cv
93.3826 53.4096 93.8126 53.6071 94.3713 53.6071 cv
cp
f
99.5801 46.499 mo
99.5801 48.0346 li
100.763 48.0346 li
100.763 48.8727 li
99.5801 48.8727 li
99.5801 52.8027 li
99.5801 53.0577 99.6326 53.249 99.7376 53.3765 cv
99.8438 53.5027 100.024 53.5659 100.278 53.5659 cv
100.403 53.5659 100.574 53.5421 100.793 53.4946 cv
100.793 54.374 li
100.508 54.4527 100.231 54.4921 99.9607 54.4921 cv
99.477 54.4921 99.112 54.3459 98.8657 54.0534 cv
98.6195 53.7596 98.4963 53.3427 98.4963 52.8027 cv
98.4963 48.8727 li
97.3413 48.8727 li
97.3413 48.0346 li
98.4963 48.0346 li
98.4963 46.499 li
99.5801 46.499 li
cp
f
102.036 46.3527 mo
102.036 46.1765 102.089 46.0277 102.197 45.9065 cv
102.304 45.7852 102.463 45.7246 102.673 45.7246 cv
102.884 45.7246 103.044 45.7852 103.153 45.9065 cv
103.263 46.0277 103.318 46.1765 103.318 46.3527 cv
103.318 46.5277 103.263 46.674 103.153 46.7915 cv
103.044 46.909 102.884 46.9677 102.673 46.9677 cv
102.463 46.9677 102.304 46.909 102.197 46.7915 cv
102.089 46.674 102.036 46.5277 102.036 46.3527 cv
cp
103.207 54.374 mo
102.124 54.374 li
102.124 48.0346 li
103.207 48.0346 li
103.207 54.374 li
cp
f
105.745 51.2746 mo
105.745 51.9771 105.908 52.5415 106.234 52.9677 cv
106.56 53.394 106.996 53.6071 107.543 53.6071 cv
108.094 53.6071 108.531 53.3915 108.855 52.9602 cv
109.179 52.5277 109.341 51.9227 109.341 51.1452 cv
109.341 50.4502 109.176 49.8871 108.846 49.4559 cv
108.516 49.0234 108.078 48.8071 107.531 48.8071 cv
106.996 48.8071 106.565 49.0202 106.236 49.4465 cv
105.908 49.8715 105.745 50.4809 105.745 51.2746 cv
cp
104.653 51.1452 mo
104.653 50.524 104.775 49.9652 105.019 49.469 cv
105.264 48.9727 105.604 48.5902 106.039 48.3215 cv
106.475 48.0515 106.973 47.9165 107.531 47.9165 cv
108.394 47.9165 109.092 48.2152 109.626 48.8127 cv
110.16 49.4102 110.426 50.2052 110.426 51.1977 cv
110.426 51.2746 li
110.426 51.8921 110.308 52.4459 110.07 52.9359 cv
109.834 53.4259 109.496 53.8077 109.056 54.0815 cv
108.617 54.3552 108.113 54.4921 107.543 54.4921 cv
106.684 54.4921 105.988 54.1934 105.454 53.5959 cv
104.92 52.9971 104.653 52.2059 104.653 51.2221 cv
104.653 51.1452 li
cp
f
112.81 48.0346 mo
112.845 48.8315 li
113.33 48.2215 113.963 47.9165 114.745 47.9165 cv
116.085 47.9165 116.76 48.6727 116.771 50.1852 cv
116.771 54.374 li
115.688 54.374 li
115.688 50.1777 li
115.684 49.7215 115.58 49.384 115.375 49.1652 cv
115.17 48.9465 114.85 48.8371 114.416 48.8371 cv
114.064 48.8371 113.755 48.9309 113.488 49.1184 cv
113.223 49.3059 113.017 49.5521 112.87 49.8571 cv
112.87 54.374 li
111.786 54.374 li
111.786 48.0346 li
112.81 48.0346 li
cp
f
124.587 18.208 mo
121.087 18.208 li
f
124.587 18.208 mo
121.087 18.208 li
@
71.6212 18.9055 mo
70.6563 18.628 69.9538 18.2873 69.5137 17.8836 cv
69.075 17.4786 68.8556 16.9792 68.8556 16.3855 cv
68.8556 15.7142 69.1237 15.1586 69.66 14.7186 cv
70.1975 14.2786 70.8962 14.0586 71.7562 14.0586 cv
72.3412 14.0586 72.8631 14.1723 73.3219 14.3998 cv
73.7819 14.6261 74.1375 14.9386 74.3887 15.3373 cv
74.6413 15.7348 74.7675 16.1705 74.7675 16.6442 cv
73.6369 16.6442 li
73.6369 16.128 73.4725 15.7223 73.1437 15.4273 cv
72.8162 15.1323 72.3538 14.9848 71.7562 14.9848 cv
71.2012 14.9848 70.7681 15.1073 70.4569 15.3523 cv
70.1469 15.5961 69.9919 15.9348 69.9919 16.3686 cv
69.9919 16.7161 70.1394 17.0098 70.4344 17.2498 cv
70.7294 17.4898 71.2312 17.7098 71.94 17.9098 cv
72.6488 18.1086 73.2031 18.328 73.6031 18.568 cv
74.0044 18.808 74.3012 19.0886 74.4938 19.4098 cv
74.6875 19.7298 74.7844 20.1067 74.7844 20.5405 cv
74.7844 21.2317 74.515 21.7855 73.9762 22.2017 cv
73.4375 22.618 72.7169 22.8261 71.8144 22.8261 cv
71.2281 22.8261 70.6813 22.7136 70.1738 22.4886 cv
69.6663 22.2636 69.2744 21.9561 68.9981 21.5661 cv
68.7231 21.1748 68.5856 20.7311 68.5856 20.2348 cv
69.7162 20.2348 li
69.7162 20.7511 69.9069 21.1586 70.2881 21.4573 cv
70.6694 21.7561 71.1781 21.9055 71.8144 21.9055 cv
72.4081 21.9055 72.8631 21.7842 73.1794 21.5417 cv
73.4956 21.2992 73.6537 20.9692 73.6537 20.5517 cv
73.6537 20.1342 73.5069 19.8111 73.2131 19.5823 cv
72.9206 19.3536 72.39 19.128 71.6212 18.9055 cv
cp
f
76.0629 14.6867 mo
76.0629 14.5105 76.1166 14.3617 76.2241 14.2405 cv
76.3316 14.1192 76.4904 14.0586 76.7004 14.0586 cv
76.9116 14.0586 77.0716 14.1192 77.1804 14.2405 cv
77.2904 14.3617 77.3454 14.5105 77.3454 14.6867 cv
77.3454 14.8617 77.2904 15.008 77.1804 15.1255 cv
77.0716 15.243 76.9116 15.3017 76.7004 15.3017 cv
76.4904 15.3017 76.3316 15.243 76.2241 15.1255 cv
76.1166 15.008 76.0629 14.8617 76.0629 14.6867 cv
cp
77.2348 22.708 mo
76.151 22.708 li
76.151 16.3686 li
77.2348 16.3686 li
77.2348 22.708 li
cp
f
79.9875 16.3686 mo
80.0175 17.0717 li
80.4825 16.5242 81.1094 16.2505 81.8981 16.2505 cv
82.7844 16.2505 83.3881 16.5905 83.7094 17.2705 cv
83.9194 16.9655 84.1931 16.7192 84.5306 16.5317 cv
84.8694 16.3442 85.2694 16.2505 85.7306 16.2505 cv
87.1206 16.2505 87.8275 16.9867 87.8512 18.4592 cv
87.8512 22.708 li
86.7675 22.708 li
86.7675 18.5248 li
86.7675 18.0711 86.6637 17.7323 86.4562 17.5086 cv
86.25 17.2836 85.9025 17.1711 85.4137 17.1711 cv
85.0112 17.1711 84.6769 17.2911 84.4106 17.5311 cv
84.1456 17.7711 83.9919 18.0942 83.9494 18.5005 cv
83.9494 22.708 li
82.86 22.708 li
82.86 18.553 li
82.86 17.6317 82.4087 17.1711 81.5062 17.1711 cv
80.795 17.1711 80.3087 17.4736 80.0475 18.0786 cv
80.0475 22.708 li
78.9619 22.708 li
78.9619 16.3686 li
79.9875 16.3686 li
cp
f
89.4926 14.6867 mo
89.4926 14.5105 89.5463 14.3617 89.6538 14.2405 cv
89.7613 14.1192 89.9201 14.0586 90.1301 14.0586 cv
90.3413 14.0586 90.5013 14.1192 90.6101 14.2405 cv
90.7201 14.3617 90.7751 14.5105 90.7751 14.6867 cv
90.7751 14.8617 90.7201 15.008 90.6101 15.1255 cv
90.5013 15.243 90.3413 15.3017 90.1301 15.3017 cv
89.9201 15.3017 89.7613 15.243 89.6538 15.1255 cv
89.5463 15.008 89.4926 14.8617 89.4926 14.6867 cv
cp
90.6645 22.708 mo
89.5807 22.708 li
89.5807 16.3686 li
90.6645 16.3686 li
90.6645 22.708 li
cp
f
93.5766 22.708 mo
92.4928 22.708 li
92.4928 13.708 li
93.5766 13.708 li
93.5766 22.708 li
cp
f
97.4262 21.8811 mo
97.7662 21.8811 98.088 21.7936 98.3918 21.6186 cv
98.6968 21.4423 98.9174 21.2136 99.0537 20.9323 cv
99.0537 19.6311 li
98.2043 19.6311 li
96.8768 19.6311 96.213 20.0198 96.213 20.7973 cv
96.213 21.1373 96.3262 21.403 96.5524 21.5942 cv
96.7787 21.7855 97.0699 21.8811 97.4262 21.8811 cv
cp
99.2243 22.708 mo
99.1618 22.583 99.1112 22.3605 99.0724 22.0405 cv
98.5687 22.5642 97.9668 22.8261 97.2668 22.8261 cv
96.6418 22.8261 96.1293 22.6492 95.7293 22.2955 cv
95.3293 21.9417 95.1293 21.493 95.1293 20.9492 cv
95.1293 20.2892 95.3799 19.7767 95.8812 19.4117 cv
96.3837 19.0467 97.0899 18.8642 97.9999 18.8642 cv
99.0537 18.8642 li
99.0537 18.3655 li
99.0537 17.9867 98.9405 17.6855 98.7143 17.4617 cv
98.488 17.2367 98.1543 17.1242 97.713 17.1242 cv
97.3255 17.1242 97.0012 17.2217 96.7399 17.4167 cv
96.4787 17.6117 96.348 17.848 96.348 18.1255 cv
95.2568 18.1255 li
95.2568 17.8092 95.3693 17.5036 95.5943 17.2086 cv
95.8193 16.9136 96.1237 16.6805 96.5074 16.5092 cv
96.8924 16.3367 97.3155 16.2505 97.7768 16.2505 cv
98.508 16.2505 99.0805 16.4336 99.4943 16.7998 cv
99.908 17.1648 100.123 17.6673 100.139 18.3073 cv
100.139 21.2248 li
100.139 21.8073 100.213 22.2705 100.361 22.6142 cv
100.361 22.708 li
99.2243 22.708 li
cp
f
104.902 17.3398 mo
104.739 17.3136 104.561 17.3005 104.37 17.3005 cv
103.659 17.3005 103.176 17.603 102.922 18.208 cv
102.922 22.708 li
101.839 22.708 li
101.839 16.3686 li
102.892 16.3686 li
102.909 17.0998 li
103.265 16.5336 103.77 16.2505 104.422 16.2505 cv
104.632 16.2505 104.792 16.278 104.902 16.333 cv
104.902 17.3398 li
cp
f
105.905 14.6867 mo
105.905 14.5105 105.958 14.3617 106.066 14.2405 cv
106.173 14.1192 106.332 14.0586 106.542 14.0586 cv
106.753 14.0586 106.913 14.1192 107.022 14.2405 cv
107.132 14.3617 107.187 14.5105 107.187 14.6867 cv
107.187 14.8617 107.132 15.008 107.022 15.1255 cv
106.913 15.243 106.753 15.3017 106.542 15.3017 cv
106.332 15.3017 106.173 15.243 106.066 15.1255 cv
105.958 15.008 105.905 14.8617 105.905 14.6867 cv
cp
107.077 22.708 mo
105.993 22.708 li
105.993 16.3686 li
107.077 16.3686 li
107.077 22.708 li
cp
f
110.281 14.833 mo
110.281 16.3686 li
111.464 16.3686 li
111.464 17.2067 li
110.281 17.2067 li
110.281 21.1367 li
110.281 21.3917 110.334 21.583 110.439 21.7105 cv
110.545 21.8367 110.725 21.8998 110.979 21.8998 cv
111.104 21.8998 111.276 21.8761 111.494 21.8286 cv
111.494 22.708 li
111.209 22.7867 110.932 22.8261 110.662 22.8261 cv
110.178 22.8261 109.813 22.6798 109.567 22.3873 cv
109.321 22.0936 109.197 21.6767 109.197 21.1367 cv
109.197 17.2067 li
108.042 17.2067 li
108.042 16.3686 li
109.197 16.3686 li
109.197 14.833 li
110.281 14.833 li
cp
f
114.805 21.1198 mo
116.28 16.3686 li
117.441 16.3686 li
114.893 23.6867 li
114.498 24.7417 113.871 25.2692 113.012 25.2692 cv
112.806 25.2505 li
112.403 25.1755 li
112.403 24.2961 li
112.695 24.3186 li
113.063 24.3186 113.349 24.2442 113.554 24.0955 cv
113.759 23.948 113.928 23.6767 114.06 23.2817 cv
114.3 22.6367 li
112.039 16.3686 li
113.222 16.3686 li
114.805 21.1198 li
cp
f
555.177 144.045 mo
555.855 144.045 li
556.282 144.038 556.618 143.925 556.862 143.707 cv
557.105 143.49 557.227 143.195 557.227 142.823 cv
557.227 141.99 556.812 141.573 555.982 141.573 cv
555.591 141.573 555.28 141.685 555.048 141.909 cv
554.815 142.132 554.699 142.427 554.699 142.795 cv
553.794 142.795 li
553.794 142.231 554 141.763 554.412 141.39 cv
554.824 141.017 555.348 140.831 555.982 140.831 cv
556.653 140.831 557.178 141.008 557.559 141.364 cv
557.94 141.719 558.13 142.212 558.13 142.843 cv
558.13 143.153 558.03 143.452 557.83 143.742 cv
557.63 144.031 557.358 144.248 557.013 144.392 cv
557.404 144.515 557.705 144.719 557.918 145.006 cv
558.131 145.292 558.238 145.642 558.238 146.056 cv
558.238 146.694 558.03 147.201 557.613 147.576 cv
557.197 147.95 556.654 148.137 555.987 148.137 cv
555.32 148.137 554.777 147.956 554.359 147.595 cv
553.941 147.233 553.732 146.756 553.732 146.164 cv
554.64 146.164 li
554.64 146.538 554.762 146.837 555.005 147.062 cv
555.25 147.287 555.578 147.4 555.988 147.4 cv
556.424 147.4 556.757 147.286 556.988 147.057 cv
557.219 146.829 557.335 146.502 557.335 146.076 cv
557.335 145.663 557.208 145.345 556.954 145.125 cv
556.701 144.903 556.335 144.789 555.855 144.782 cv
555.177 144.782 li
555.177 144.045 li
cp
f
561.838 144.128 mo
561.528 144.128 561.244 144.22 560.983 144.406 cv
560.723 144.591 560.542 144.824 560.441 145.104 cv
560.441 145.436 li
560.441 146.022 560.573 146.494 560.836 146.853 cv
561.1 147.21 561.428 147.389 561.822 147.389 cv
562.229 147.389 562.549 147.239 562.782 146.94 cv
563.015 146.64 563.132 146.248 563.132 145.764 cv
563.132 145.275 563.013 144.88 562.777 144.579 cv
562.542 144.278 562.228 144.128 561.838 144.128 cv
cp
563.024 140.925 mo
563.024 141.69 li
562.858 141.69 li
562.155 141.704 561.595 141.913 561.178 142.317 cv
560.762 142.72 560.521 143.288 560.455 144.02 cv
560.83 143.591 561.341 143.376 561.988 143.376 cv
562.607 143.376 563.101 143.594 563.471 144.031 cv
563.84 144.466 564.025 145.029 564.025 145.72 cv
564.025 146.452 563.826 147.038 563.427 147.478 cv
563.028 147.917 562.493 148.137 561.822 148.137 cv
561.142 148.137 560.59 147.876 560.168 147.353 cv
559.745 146.83 559.533 146.157 559.533 145.334 cv
559.533 144.987 li
559.533 143.679 559.812 142.679 560.369 141.987 cv
560.927 141.294 561.759 140.94 562.863 140.925 cv
563.024 140.925 li
cp
f
225.414 109.907 mo
225.059 109.907 224.771 110.017 224.551 110.237 cv
224.331 110.456 224.222 110.755 224.222 111.134 cv
224.222 111.495 224.33 111.787 224.547 112.01 cv
224.763 112.233 225.052 112.344 225.414 112.344 cv
225.775 112.344 226.064 112.233 226.279 112.01 cv
226.496 111.787 226.604 111.495 226.604 111.134 cv
226.604 110.772 226.492 110.477 226.267 110.249 cv
226.043 110.021 225.759 109.907 225.414 109.907 cv
cp
226.772 114.434 mo
226.772 114.037 226.645 113.713 226.392 113.463 cv
226.14 113.212 225.81 113.087 225.403 113.087 cv
224.997 113.087 224.671 113.211 224.425 113.459 cv
224.179 113.705 224.056 114.031 224.056 114.435 cv
224.056 114.838 224.176 115.155 224.415 115.387 cv
224.655 115.618 224.988 115.734 225.414 115.734 cv
225.837 115.734 226.168 115.617 226.409 115.385 cv
226.651 115.152 226.772 114.835 226.772 114.434 cv
cp
227.509 111.118 mo
227.509 111.473 227.415 111.789 227.228 112.066 cv
227.04 112.342 226.787 112.559 226.468 112.715 cv
226.839 112.874 227.133 113.107 227.35 113.413 cv
227.566 113.719 227.675 114.066 227.675 114.454 cv
227.675 115.068 227.467 115.559 227.051 115.924 cv
226.637 116.289 226.091 116.471 225.414 116.471 cv
224.73 116.471 224.182 116.288 223.77 115.921 cv
223.359 115.554 223.153 115.065 223.153 114.454 cv
223.153 114.069 223.257 113.723 223.467 113.413 cv
223.677 113.104 223.968 112.869 224.339 112.71 cv
224.023 112.554 223.774 112.338 223.592 112.062 cv
223.41 111.785 223.318 111.47 223.318 111.118 cv
223.318 110.519 223.511 110.044 223.895 109.693 cv
224.279 109.341 224.786 109.165 225.414 109.165 cv
226.039 109.165 226.544 109.341 226.929 109.693 cv
227.316 110.044 227.509 110.519 227.509 111.118 cv
cp
f
237.076 81.5816 mo
237.38 81.5816 237.659 81.4889 237.914 81.3035 cv
238.169 81.1181 238.356 80.8884 238.473 80.6144 cv
238.473 80.2535 li
238.473 79.6608 238.345 79.179 238.087 78.8082 cv
237.83 78.4373 237.505 78.2519 237.111 78.2519 cv
236.714 78.2519 236.395 78.404 236.153 78.7082 cv
235.912 79.0123 235.792 79.4134 235.792 79.9113 cv
235.792 80.3967 235.908 80.7967 236.14 81.1113 cv
236.374 81.4248 236.686 81.5816 237.076 81.5816 cv
cp
238.469 81.5816 mo
238.28 81.8066 238.055 81.9873 237.792 82.1238 cv
237.53 82.2602 237.242 82.3285 236.93 82.3285 cv
236.52 82.3285 236.163 82.228 235.858 82.0269 cv
235.553 81.8248 235.319 81.5405 235.153 81.1738 cv
234.987 80.8071 234.905 80.4024 234.905 79.9597 cv
234.905 79.4847 234.995 79.0571 235.175 78.6769 cv
235.355 78.2957 235.611 78.004 235.944 77.8019 cv
236.276 77.5998 236.663 77.4988 237.106 77.4988 cv
237.809 77.4988 238.363 77.7618 238.769 78.2878 cv
239.174 78.8139 239.376 79.5311 239.376 80.4394 cv
239.376 80.7019 li
239.376 82.0863 239.103 83.0967 238.556 83.7332 cv
238.009 84.3686 237.184 84.6946 236.081 84.7113 cv
235.905 84.7113 li
235.905 83.9503 li
236.095 83.9503 li
236.841 83.9368 237.414 83.742 237.814 83.366 cv
238.214 82.9899 238.432 82.3951 238.469 81.5816 cv
cp
f
201.937 49.1296 mo
201.627 49.1296 201.343 49.2224 201.082 49.4078 cv
200.822 49.5932 200.641 49.826 200.54 50.1062 cv
200.54 50.4375 li
200.54 51.0239 200.672 51.4963 200.935 51.8546 cv
201.199 52.2119 201.527 52.3906 201.921 52.3906 cv
202.329 52.3906 202.648 52.2411 202.881 51.9421 cv
203.114 51.6421 203.231 51.25 203.231 50.7656 cv
203.231 50.277 203.112 49.8822 202.876 49.5812 cv
202.641 49.2802 202.327 49.1296 201.937 49.1296 cv
cp
203.123 45.9265 mo
203.123 46.6921 li
202.957 46.6921 li
202.254 46.7057 201.694 46.9145 201.277 47.3187 cv
200.861 47.7218 200.62 48.2895 200.554 49.0218 cv
200.929 48.5927 201.44 48.3781 202.087 48.3781 cv
202.706 48.3781 203.2 48.5963 203.57 49.0328 cv
203.939 49.4682 204.124 50.0312 204.124 50.7218 cv
204.124 51.4541 203.925 52.0401 203.526 52.4796 cv
203.127 52.9192 202.592 53.139 201.921 53.139 cv
201.241 53.139 200.689 52.8776 200.267 52.3546 cv
199.844 51.8317 199.632 51.1588 199.632 50.3359 cv
199.632 49.989 li
199.632 48.6807 199.911 47.6807 200.468 46.989 cv
201.026 46.2963 201.858 45.9421 202.962 45.9265 cv
203.123 45.9265 li
cp
f
156.997 21.3746 mo
152.339 21.3746 li
152.339 20.7246 li
154.8 17.9902 li
155.165 17.5766 155.416 17.2407 155.555 16.9824 cv
155.694 16.724 155.763 16.4563 155.763 16.1792 cv
155.763 15.8084 155.65 15.5042 155.425 15.2667 cv
155.201 15.0282 154.902 14.9089 154.527 14.9089 cv
154.078 14.9089 153.729 15.0371 153.48 15.2933 cv
153.231 15.5485 153.107 15.9043 153.107 16.3605 cv
152.203 16.3605 li
152.203 15.7053 152.414 15.1761 152.835 14.773 cv
153.257 14.3688 153.821 14.1667 154.527 14.1667 cv
155.188 14.1667 155.711 14.3402 156.094 14.6871 cv
156.478 15.0339 156.671 15.4954 156.671 16.0714 cv
156.671 16.7714 156.225 17.6048 155.333 18.5714 cv
153.428 20.6371 li
156.997 20.6371 li
156.997 21.3746 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 24.0%%AI8_CreatorVersion: 26.3.1%%For: (kyle Hamilton) ()%%Title: (techApplication.eps)%%CreationDate: 6/21/22 5:41 AM%%Canvassize: 16383%AI5_FileFormat 14.0%AI24_DataStream%.((`,!*F@'".oA-A.L5Q7&76r!+<%a-V4U+Jp>*C)h&M:JBN9?VaWMs9t"@0bd9b<!!%NL!!#-E%uLp!&/UcZ;'S),@Y5n>(U9Wj%kVVtJllo%8=gtXE=I52JX7K.gXDU<KXZB<mPj0GS!S*TI#S13B+IP9/EtOoZ\kL$fFU<lXW)FgAKhd+WU@&bn&3:;6J@`d&1$D@R%l06'RUsgc+#Fs(-o/<-c!]5(YPEG*)M?^?'5UMic]/*+3+rF=kK)uCVlO+,QcJ)6^8t^Op'IMX*O2&j[Msns?mG3C=_RkC#`pU?'%/U*+POh7oo[mL/;Ce*u0J_`\VWZ=LI,j@c/UI]T#+FIH0kWh1-P^.?[Z&5=*fL_k0[XCEVkW2f>]$uKOSH1(3kU$du7*"N&Y4EoE%f+%5O#AX'DOp+%bHIFSu\ut?=*8Q-5f0TB=dRB6+*aQV`njmk.f;/Y9XqT,TfBEH4f0O4RM,'oL'qODL']"9?PgANEaX.<%PGf*9%VAc2jPFOS]Y]/aq\[n4X1d)FJ=FcLs\cDmQ54#m$eJVs7$ML(^G3kB%QIs12)OqNIdt$p6QOb8a+_3#oSZim7WQ`0_jTp5JDM,%V%O4=8>&-`fkARmN+H3GlTQ"#o!DbF06QT2<>7,aqLf$BTOFe&RN3+.9:[`I63oOP\=W^KslkEG]g)hOD9;KXr`i/@bJX_#Yl#T.(5%D$L.I%(NrB&XLLQ!kY,8l(W`j9Laa:7_sH_&Zt?f[K-K;!mFmdPuT4@0pF;Z>7F9Z=%!=\*o]#fmW?fuS\QN@JotAnctRUX=g7,$%!T&"r\un+c.(V%'$O.H$V=<][!<WN7(uT6Q7HOY)OtMA)8s0>6H51C:3>XNlJ,u?*6J4rJ!eW_*K>F]c&UrT&+*+K9nMUglVI?c$%AK2Zp'+9P"18BUo,_R9HGfc&)-eGSW)&O#F+dI&p3!16fi4osqg#`U,rQg]9?hWs"Nc[Zc:`5*V`*%t-k"<4f6RAF`fdE/;^;N^s%Fe(golagm4o/*./f6&o@f6*4[2Dj9V5k+!KNWfISiBX.'\qHjE3a,#BTk^<28?a(5"FRoh'Q@$M9V^!Xh'9dFAD(8?FY8EGZs5FO%d<-I]f6(B#jj:nuY3WZ?d<4:,+Ij5&F^6ra+QM/3gCa[MY"LSo?&(^/\o,<6!Aojl0tM+r"$aTn).,V9*)%oWNFm9UiTrT-Ja?6]%=J?2>l&haVh].069VI]^e"m':CRM?k]Ih!cR-cmR;&"W;KY*I'g+/055%O^l1jaLK1QkCDj_I;VRZ_fZTNEZ$"l_M"3T4`eJE`MZ%8/b[S8-:\K'>74`p>S&Q`dN:h*#RZ<PVLlB-AL;+SV>iGL^lBV.!*1D64R?tBX26?PZ\QUOZ-mP<i9)pB,R@)CW_<tOg,Vf"[d(J%KIC%\ngn!U/4Nsr$c@['3dV0tAaH-H0dU#`2.]+AXHOE(eTAgj/=+CeR4"C`.nnN'c!Ft>Un+M@Q7?ON(opp#RPH#dOJ3I:CXHsK%FS7b0AF(iLbZ(iK>$%W%N5\IjRD)o,ct[6j#rqV8-g_XIh23MKs3&@iLV%4dBK@qL1pbU5O>NB)]!7.@c>l@bd#&$H<gnPD;-GM>%bnR"BB5=+r=rH7@@Q4@`\5bP9YtBu8GLKPf)K#4J%B\lR<EmjEZoi%X;cQ\`9N>d.@cbasX_>'[92U&aBJ9G-<3F`P10(.Wkc](t%<gnPbdV+u6l0MD].N3/(@jt"`0Un1)36Bi(V4,q:YnT2K.se?n[%*t'N0T]B7;6;5S5kfNMU>D%.olj&@hkiFb#kbnNTSD$WBtM'%=)H@MlJ)J:dm\W&=ESbddTQB,c+5rE.Pd;FBkVgY!G84/Sh\d<PgqReElc[1$70%1e';,MZs;.G#uOJ:9pM_-'*8:kqGNS+82CmX%9[B_4aYK<ILt)Q@7Ntbgb@j?hbt(5I8XbbiSXH6b,at98a%U9BJ20DH&n)D,RZT!e8Pa(>JD@/0SYiCqJMU5)MGj(oN<78QN5I,.%qK@75^Y"$!LUY".F3c=!s'h&`n$,tDm[HAKHaYqMhjV5`k\EYJaoJW0N0U(g8OY<)256KF^W4D0(I3#pCVF!6aU'A*1mt?&BWmd1%9kUYnG*W/&)U/D)AW*XtAu)?kTP97W@2V_#l"SQKAAD1;_DjLU(Ku:9)D/'3E1[ftbbZQ)3H2:XCK5g%*2t>%X,WV\<cdBTd@,cc%MB'$=7],AWe!drO-sn4&ajb(m\UOSOQ[?sk>ch)+9Ees)<pA9R>JIf-H<)i@=KE52/Q!9V'T879bT-+5bmdENV.X_<T[=QsHq@J;%kPFX7STgT(,jjMHc.I8E]hXRC)t$f>?s[O/.@r@@OX4?hP'a#]P/GL"7CdI4MPW1o4%g?%0.4,>RA+5J1XfOKEC.\`1K>?A`Q6Se%V"'D,ZML;tH>:l)b^$;[50L9ti\#GD0iLM]J*4L*b,nu_MZ\KE<h:QGSWRR-I88GSd[CJ@R57q_96"N8`_?$DEVIIfZ5:ZS-&n^?%*rtOUp.CIHJ22[+".UZ@SfmH-:08!NEC-;n/Wg1'QN51[kbK)Q\8!%b10'UE;M9(n2;hjiq#LI5US0=LL81EG3_;,mT&D>Hn(rQF%$>0[ErKjH`Um@rC-7,ZdIa)&)7jnMrPIEub]q4iQG<@ZgkmK@7%drCp+Yt9BL=4bu"PJkfc]Db1U-3d+,QJTpRMV't.BE*^bVV1U%!X.FtD?'V8hegX9\lu;c"TSP\(g2SYY'5s&s.9*pD;VL<oa3s[HGsb%/9GLL<[CFN`pP?gOHuW)$kQfuSn*?b3b&:XZ%1%ld@0?R%c57$H,r&ti-6pp[7FP.6`_tm`,QjuGi2meHA*$=Z6>*/hAu`uR09lkpd$[9%REbe_8m&,mJh`'5q#A)hJ/UZQ!O,Vf"J*MB!b<E5%6"t&uiZbnpRKIN.="H4=[$:L,dT8J,X_),pS>]DbR?H[2MTH!KXT0bO[Rf(%-"X!rb4k&cD7+\Qo46U/M^@.N0XfUWTM-(Z-!(c1%.`)LbAQha?c86he/G;\)?qCGcqN@gYTP=Y=::%sc)@ZfsZnunc<+jHDbB(O(S[7ll`Ek0^^dPS^S`[dWV&D(^$#=\?Eb27W1Bike%O=@^ado&Z,B*cocOJXfDaSf;$$ukdG#ko`YjK)US1J,,4B/,eS#M5EXc;XpeO-RRZY"SrDLBN-kS=-Q[otl5,Djt_(l*"]ePK"N=%kf\#JD(<o@%3VK4AX\o>'""*="?9G=!P(o)gf>]gEd%nR34l:Pld3Fq3.&19\B@0WQ7Ln["oo9K[udtN34k:umb7&YZXo(BH\oNi%_Ncn)!9>12Brje08kakIRrG\6bZP2+cnYfU<0X!5QUl9;i8m7+ZSH^_>U&T5dR]^\>Kpn09kK8oqPoC^ZWta]/6>Gq881(/A"[r;%,!@;6,@_i$pRmqZ1;GFc4&&b4$1LPe,n3"1OFqneAhOmE-?'I_OfD$0e,d$.#J<ef<L"fZb=*Z%eghL\`UY9aUInRa-icYH9_D"R%&gThO0f(*XJ-\l_4>'W+"sDo#1OZA\>^D,8g5E$ednE<Yd(qlT8'Ee'3#>a[0:XO=6*l3s=f*VSil[Lr$6>VXRW3!uo@1ujX]c-T%nci<6p.Au$'/VKS::+2.MHXW94@*XA.qLJ7,Z>>^RUs/"HcP!/pGcV7AfO;_HCM;YM]$s,_bA];hAtY4EQ96B(M>:2`1aYGN#B;<%e&V!A_2R6+hqNO'^!2<Qqp=*;0t`>!G-B_hnV>uP1#CJChS"h.n%?[QD]``k[C:.6)*?^0@upNEQr2AijuI&GhM+B>Nh[ULUCVk<%6ea>jW,[Q%7ZHrWhM1P[@Rb4J%5V`@DK!F7+6&8=VIM[DR,7?mi[nn`_g!0=DD@msa,t;ak\\#r/a@?"oMLMbUICaJ`HTPi_[FMD%5/_O_MAfuC_].(peeU&NHH18?qDa?P1Ldp+0?+fhUCY&_LH`WqdsX39(lg<dou3XHa%OI33:roQQuO+bNu>DB2;[2%m5S:=a]Jtk%g[+$2_pEc!D=;XdDmNVON3BY`HCMBhgGk5MQF"(!mqq)ENrP$s3;u.&UA2JOMP@TA/;iK_s8SfQNrOI\s.\^os,Z2"NoN*Z,NkS<%c8k(Ja>rFXa>rG`HeUN#mVOsg4-&?goDdj<1[!eco/MV:cCu_E3IBN\U6mb"U,\25k:DMjkPYA[3HP27[uDWq3K#*E3WIENcCAr>%N]H8RME0ktJ'L&qSo`36Q?1@330)Sh5E=<@)s?6pD9h0Tm5Tut[A#(,f)@=[eoEC#f&eN@erJejer&Jeep?*Ns'*\Bs46?1s#>%:%XXJ4-mJi\\b;nb:k01BFNFU8brh$O)SEF^*c8gfW[FY=qXgO['CMhAJ>3g$=R0)<`#q.a&h-"e41*nZH[s?86cK!)B@P;bfP1<eD%U//2j,G+D+9N*])@X\3h]`4&-`W'91lfGe@]je^%SXNL?)L&9b[<PdPZ%W!<9.$uHlZF85/J@.;!6Wo,YKG7,29Q,!VW@(pdo^k[%>B?<E/mlqMX=n3NfA+,E_G/2)a@qtd["FRmSApc"Fde^OoIL*7=KbXa/(9n8Sn>0,GrbPUSg=A-O/usO\]N'CV6u\IQD([%SRfS`%@q2TFR@eu>8JraQ,*WKi,K6s2P+IlWSC$"M2aPpE9]7O4[?.e"?Z&aOG_sj)4DdjWD<&]/&4,(sJFXGJlofFIs8TW2hD=p%`ujcq%5K<A3c=P5k`R\4Qli1&'jdU+r?/oaJYM)WYYPW,0gogJ51*pEe=dedNm^VT:qrN5)gMa^qhn!jC3QkQCK#18\7PiAG_p!M)jI)aG%<Z,XkE;/pN\,EdSII45(qg<n.Z0(t"X1d)3hi@BE^[l3Nc+j7hF+&'.\l['L3i.o$H(3nBBP[<6do'/R8/^U?3MEp%PHmWO$E))S%]e.uc\]J!OA2T!>lrCZfnE#>[##gYh$Q"=2Mj5TK9P7ppr,=G)!$X?f:GZU?-sEXp'9pd7=\WI:4E&[hqtp-f^Z0)+jYF=AlMpJ5%\Gj4QJ$I""J,]KJ[s%1dr:0LZIuQOmBGl,54E%k1En503F.Sj,0JBQ]CGi/\(XEJUd7PJ"K^#1=Tgd,_g(jg:eBn`@9ENB"D>VhF%F<Z\7FeI86da]BJN\4a_MKGSJ;5@D%@3XMBkWl_C`(N-%N:M*8#ZmhfMia],]dME2Z_4iO<VX?eR-9+A:khqWfooZKnCU![^lTRD%T`Rd#+9WXB9;ZPJROW`E7-T;K'j5]]O_&SK=e1Im_.&6H.?Q7XP"#Q`/98daA\IInSL4m.4F*E+_QmkX5m(3/,iY2qXLCb6pO3aN%r?TH[JukRIq+6Z0E?e-q8qb<^Te)9L4:1S-RKRmTOba3Wo.h#mBe7=r7"^b=--_8<(m.95N[]%gL^)$h+rW#u\4#fk6VC)AR4]&P%&qLU7+T`hJMA_/7ef:)&F/2YUD<<*sgrBmJ(W;84!\&\rq32$1j&%bWkA:dN"1>Dn4cuS+JM]-DL*?_6-mFfV[BUoj?5a1#`\tI]%G6jC)LXnc9MtRi7*Q"U>HOqT)EegOf'^mMN18CVd*?(aF'Il*H9e'MdNqeN;/%?=8UnN/>&V'['N%4Wu(AV">!Z<5FQn381OD-nT%VAMhBe.F#:jl<j?L^W:@(e7#2Hmo;Pj)'YfFheuQ7lNdU11Xm+3=qWTOZ[XkV5,;!OY1n-dX6q]fm<42";Z:3H?:p&b-ssX8/Idp%P])15/I;2<]&3id9)3Eo1H6^4;FH.K260R\Tl;2KlYVL_N1b_T+];2,)(o$tdX6os7IUAj&+d5#-A"19"aMsU%>ga/0-ToYYR$5-%cqm/srOgBpM+$9dQ_EKcV<3:udLl9d1iT45id;U))^B<ZG.e>ZBdfE,6!dA2/Zf160;#_E1mANhQnk#Ud:?Ek>C`EDbrd[j+:[H(%[LAp_8qj)%l.jFJ)4<7=:.%St-,p%`Od%8$`nOr@>,5\0.hG$b.</K+ib]$+8Ri>=HibXs6Y[]r8`di0KK;rs7PYRu(WdeI4tq%o%V1BAKdKOsO71:@6&gGRr`61t6W'f]n)l>pm.4!>OTJdR]T_XfVM"4tNoAXTp.=rB"H+Uju6DR&g0Gu"ULCj;YRtf!aLg3Tib!De-%6=d/U;Ei;f(tBdc7/X\,o^J6TJ@A5s'*Z6E+O:fB9nP`dKOE`]P$Y[k%jN76*%dJ9$+-MSe([PR*hcF"OA''?Wu"bt(QQF!9I&J8%On?Y+"bX)V&krH#2AGt4*I%o$Y/UUDUs3emK=LX<5UGoFRfl.+^ki^]61AP7&OPn17IU?nT)k6*f7n2$4DQ2Dco,M8"#e)2$Aq;R%:d/g@+q7_EBN)XK"("Am<A.f%a=q!78g=G8e11j#fLS;dG<l<5g6,qV9s/V*f56>:#kU$ra)T4X#Y'KDVJA."3F_8k`Ae5/Add`b%NM*+2`,<UXZ(\G.,"*V!KHg9._GI3_+Kc9M5pZq=O_)5.Jg)IfRk<Qc4?s0-G-`QW"n'6sW8I_qA!ErgQsi6R*(J!<Lf-$o8"s[%%i,&Jtb3(oa7[VES&2&21gX&27`1fJ@."VcF[,>dAR.;"Vb\/=Q81@4FQXq<C?D#)qBWt<eJIQ,L2^qbd5_+!=o&.[Wo;EKC3.)iS%hV1jM#kk,%#Ll<Of8P%n>2"YYoj#=[$/p^_UJl+9-A5Wj\(*Uj`k"XFMbok0%h+0:jsRIA$)l9GGh^5>KLt8\J_4X;@$]bsg0':q%cUBeND&mW%a=%-bMn$3kF"9AX&bo7$_Pn^gg5_nXT&(7I"us)6_2efKe:!UHJ75288\eH]KN#]u6pR8WVmf)_)RSH+K!HHH`^+<H%#jGcBD#>NU:An-R,:8A7bt&g*S[Tmj#/3@rb#j?qpPHP(-K1Jr[q5RMA2FPo8ITaGhDDBY$,YFVYQG+8#D@k2L@W0&.LYqm9k[9H%"]#iZ7K`gZ;8LGI!Es,H2%:uKJkOU^2+ET26\@\8kp.;tOd.bJS'@\5P8aRtOMM63R7)#,m5mQs(@s5_?sUT?L'E^8FgKjK:iCtk%8b^j<L(S%?QjC&bA`HXl3[COo7$2e"WB86lBJkVY.\a1Y8W02YbYrHpXJ:EcBYEd5b<h-D)A<>KO1&$9Re"mO\@/m&&uC.K4>)eG%kTKMeT]`'hBS]buf6A"2hI_ilGlV&!KmfCP6E-*bl/6D59i'+She7NgMi#>cC<"CSdd?.MKZ65E)RKZMANCQ&Jb/NBO7j8E4JkGT%6_Dt]2kc3;DaV#[N7LtVT-`D3$9h:kUG[`@.EA0WC8\PgbXDVF,R.YMp\!Z$GkCVd/0RAC,q>]&%O^OpAV?'%$4`uC\Tip<Fr;e<%RG`a1pbX%7Lbrd0R"rRN63YXJoqYE\)V4ZoMG`bXN(ub9C>P/TDBMZOMh_QH;"N+D,ga7ZqE.X$#?ll$dBO.?J3fQIJAPR]4?2gJ%H3f(-X?^pUc0J][WYN&hZH"L*-P+&VD&d[)OgKZENP`c46HFj_Cd'/Bfp%PP.5=ks7"kC`k.kEbD50fkMeFq&?n@plCETeu@re7%%S+'ARTJ!XTEh6`cg/n^ITV=L\r<b?36Ou>fPUl*JYBr2>S'kn.jp0C,A>Rgq52/tcD@5b)5om2=TfOt`.O7+rKUk]P'$l`Seh8'[%:Cma&JI"SZXK5f.5)JR*?m6=YVi.b[lI+Ve.N!*02rSA0%%)iE.^m#b!CFnd+;qG#6>BmDFt&:L=Sk(0AHkf[(0Tr(Z=_1ni%D8q%YeDBP/Ma?>%H/IRHe(R*,sP?r"r$#VLa%T?EN/q<"C)ZM"6P(u%[2GZ$<fdXAKaF68O37!7_oGLCs#g.5],k^oGtH%PZd3PJA1q%%%Nj&*i>(LZ;,u6&C(nfAS38!`97lq2CjJ1.E7A;JV.<^GOs$RQ^bh[;\YKOs/:`g0#Qkup51&HA<VaGV#?if=WdGhp.Gqh/&DU.a%A\u-N:dA@rLG(#sDuqD*UBKM]]EbJ$OOH41W0Xck\N:HMB-C__:d2bN$G+QZThZdC9lXPqD1IdiR1":=@&C>%9EGU%Au=>(bSoBd%QkbST5pd6S=C`*`.3U3[XVC@4R=Q2HK0Wj.`/J*)(urL>3%Z&%lnaJ@3%>Jpn@"(l@.n?&-m6/**[^hH:KYguP(=aB^^MBu3YR4T%:(5N9Mj&-uAIAmcWf\&,=K70OAq^B+=F"<t!0u:Skjm+TP-%K[6<HO\,()h"3i8q9U*>l3ND]k^$DekX$8bqG;BSe,+GBgTe4:1m%_E]`4//?Tti[dW#g@0WEh3j)!EV'A+\O``!^CJO<US(FZ$BY75?nla.%gl(sLE9)B*BYMK"c(UG5et4j(tG=$T[6R`'>r!,9q@1"%@A9P=<XfSAghD;3XP;ZYA7Q,2,a,r>n[KnSX;BPEGhh4R8gu`-8pu9e8u`E'71sQe#:'S1%4>^8XE,QDH%lJ+<\%GE2D)L&(*G@@%f'#J@I7BR]@?4dt$)[iV7DtiQkqlWZ'I+>\+iR&X#mZIs-t/d3i"J:QU._.B%N\$;&?$0i0M5/@TO8lM<BrbUFbj9/=V0d&4o!&a%n2AV_%hKB9kRhP\LCPJU85GnIWPSZb8/DIf@$uh'81i5.JF*I$5[aN>",pqZAmh:a$O.%X*ZDOlrA3X?/eB-&;FpS=QP\a>lL*[7%d4fTd+CRXun[8fh&U6pGGBhQf_U\Hm)=!/%(^N09_h"RM.7^NB#?QMUi)>l)!Wu\S'V(U&_%BZV$64lB,NMZ^#n]o_#*EaN)&Huh%4$f6nf_K]35/%<I8*)aE]^7M"E&8)3Z8DcG8Z+l'K@Hh".h0Me!X2%-@\GNBA<9k>lq@bS#K0t)0+%g*Ld!4*-?Lh!?tqhQ^n:l:%*ODc.(7:42`=`R,<$Y@(3#"0eTShV"WD;/9Tt*9j:.snXA2T$iJUe1d/hXF1&[E0U$Xp*Cb(Qr&15@Q=LG#C=A1L=93CK0&m\'g6%*.X>Nd`r1H16NB6LNZL63"78NQme(r(pk*=ibeY3E2%:o*<V0d$:@'=4.6F$mfFCnB/)FZW*H,!_.*YB&;[0?KE0!,MAUT*4?:2S%\Ng6M#gkE3'b3=0@*)B@;6[8;n2Oeg"OI>W,;<k#/RZRZ$NY1`&1"n81fmhKBI\jj8XC8A'84dA15QEag36Y`W'B4_+FMn!EVZ8&%M*JEg-pE<\oC<(e'F(`o@`QqURfU9Cn<*K"[6csn4BEPX.AKZ'4D;=8NN:+g>alk,;>Lkek(ol/8JFeT,4IAY%I/7G\Nh:M6R!,s%[NqmO2uj]%-]4@`kR2m<&D4J>77K/G.$Zi!5Y*s+PmT@C%hRr#9L8&_p0]&;IEM_T/W9(Z$SEHa'i8,YW/'M\-Ghlc6fEm;>u[u2%VF!h`oH8<r/7VTIf-%jgHpr:)"PV)&.GiRnh,Lm+96.3$+X4GS_r+j>o/J_dKh4Ha]/)dr/mqj-WrSt"FsM:N_A!@1%YP=I9g+"N%^ti+s^kVsp"u)s="7T_t'>^eQGq]s?8\fm^O8rdsJlphWFND$1n;QXaA(7L7enHa0NMRK)IMshG[1'1+`"f:+a_/GCP%<#_8PE0d%,?]gV#UQ0TdNp!SP=T'fZ\2iiQBFZl)5W4$O@(Ik5ZJ&Of8+#_%AmYY@_`k$jJ"Uo,2Um<M=dkJ"7^YMK)ABlBAnbW+pK.4U+fq(%Yn?b+VT5;rlga`g:1aiIE-T2A-8Lm=4HsFa6CJ;c8@ce\#Y].dO9gdILF=&X(%Oe$4NR6$LkiH>&h'qRV__22"gNUM=MZKNJRTf[%O,?,#*Ya[55<thH5#gX?nORaSWIrqubi,61X;i_<A9'@lZNLL:o6hT(JMH1U4Tp=G_EW7+5-$_*!_UAhD&!F0D4ER,=lV#P<o`5?%4Z$i4f0Z6!0nC5nd/g/=c-E.o&jR"A</6TROMFcBO=[&``kk)@A(1\+N7"lQ(.5hfa[g+W(`3Af7KR'(,CLE"&_A_Lbn7Z@N.q_/%0E`"o1MAO5AK\'^%>H32*CH]5d6&!*"QAke`6+!g`?%->ROEHIg-skNT_%\Y#VM)a@bHZ0@2KDt?^PkP7N,OXe>Reea+2+t]T&R2%d!8WTdM=\S"^AJt+4d/P0d.@+&SP?]-?W`_J4;k`^$pFcOt^eiNJeAb*N_\37%?r#+]IUu!hpoI(G<tM[qLV\`e%2N81[pf"')kL%cqND8&021QOGR/;iZpgc,!l)9MT/"\;Fh'9&el8#"B#fH(-IK%MDg?E!X"C5!?u&OYQRc)$C$d#`KqHHiCitr2I%M)/>QS_Kr^pc%MT%#:.(DSg9m@VtK4kPrRR3<r-n2eAQm9C=Cp5IU3-Cro+qY2W#m&J?&db=4+Yc??KbF6g3_16,9V+Y2j1n7McGQ"\Kj8(2U3'QO%"([%I0[1pG#tMnK-OM1345k%^cclasnm`=]&!\DV7Jmc*,aTal:g=io:Nf.;?kW]QZ+8b&K@[Ds108D@edYfi3il%e$rGpeecZDg%kedWMR@m%pU"[_%_c+qAD4i]Y\.j<C$Q4_Fi%XuN#%f$X.rcCDSNrK_J\(UKg6>XFQle#(Na\e2HmMNI+sPVn!?W<T6V^*?%1FdC%T;5*FD-N<XerN"_EI@Nl,F1ft&OAKpb,8Gc7`O%g;a/5gM=Of):&4.lK9<4PVCY2;_".!iOc1ZFEJ=o'"0K$a@$o1-J5OrS0W7_T%S+:Qe5XmDoW-S40_PV_C_HkfYn)9A&I!,NqfTZm\&MR=mT^!7#ed;/G"Bo`U$(LKgd#'"<>1>rKb;2+kaos3L(BP,a^pn[JM^[jM%*K5cM!eoJ8C":i^,[dT6YU!XU5)GSqViCWhW/Xdc-n&G'5YrV?b3(c"eHHOCjgtX.eb-Ao-Sjoo'uHhqokUCA*[R:k/W7lU#.gYA%hA.h:3><SJ(X6fR1pH<W&T<l350l`rs3Wj;)A0R^a'HXng9Z?P_$tu*=rJbShS):&)g*rO,_eA)4qAq@co*rO];^g'b<cC9;uBL#%Kn>W/8i5J_7LEiL`(Y$E^lZ^$!E0Xp:8-nZ%MKI9#R5&l_IAO>JYg%<V2^k0+#"BH9e;M4kCH>FdOY6gJk_(29EVWjoL','#f^l+%Yt!m4=\A8l57WN(G6hjH@MkP5iAGD)$PX$Wa$,K")/ufD@"ih[EfG]YTspR3JhP"cRFH*G"j\3>A[<r6d9Op1"L\R@Ek::j&cckA%?uN@Y0U'<,]Zo3rB(Z_I*SGrh6to'q"9O->*`.f'_DJiZks7'f*[K4pnb@Km=\5MZR#Q5J*1tR96"[>m`DLZ'4pT3a5hKH)7]DM`%3$>Tt5j<?_\hsmXk`VqGOf/bZh0E6>h*HarS_iLJ+BWZ;FO3i?M,;CrW);B$QRsOZ;*M)VU^*XqeQqo4\TTii:6;rYF?.YUBQbZA%k=_$ETJ]$)14CKZ_#h02<=3la?NLFg+<N9MBPm'$Euj?CB_t6l^l?eK>&W.>=T^%@S'dK8:b4+/FBnoZ@!!!R<6[dYC-4hV;[FXS%kR<uZ=K5C>&]'5]jMNC<[p@L]1hODFgUo,E^g@3$k\[,QProtrQfr*n-Mfj:dg4YDjoIdl+Z)JOQ&,a@]!e9\ca?WS7[+D=-)P86%Ju\,%%S33_<uVnb#`8r[2`bd`9'KH$Og(AFpj!-r[7+/&$G+mF&HY8W74_kO)S&f)D;H$PW-B8]n@#tjGo#\m*D!i='1a6n%M5d6%f5NEkS[[-%VruW,>@EK7_m6M[.^5J<jpF7)MCYcajp1Nl?ZCreYUi0dH<ViJ(g0[C`68;+TZE)2gF<FX%.:dqUdC33'Lp:["c^@8%+J]=/4G&\\gH]nD/omPEDF=7g\lB4d*@6K(:,Ls$B-0U*DIP<hkf-e+?e9j+^<Y1--(VMjBG$AE5gb*!N&]6kWp8n6K>F>C.HUg_%b[=hWmUO[(\"c_XbS7EN+@9_ND?lop'4)S4%'G:lV-PKp#X49+(i@Dc"80f^HCMC7M?lbn89)jHAs,W@^!5<S&S<aqTPV9cgIgYK%Zp]uo,Kn1G?_Si@W+9f[L_rjSq^<&,p*0QG\hhR:O10D(kgm0Hf6l_->Inc-k(Z?Z_]"1r"C_VdQT9CLZ(N.)bd(AJI):uB7Td))%@TIF=2K/2q%-43L=jU?6cJ(Ig"mNZ/1o[#.3V-K`6ldc[Q@u"[$4D(\#NL=G8-i(>@n$\2khn56TXI7=2L<?0Ae!B]'PT0<$<h8`%hLm6(.&N]^4:D9%PD:sSD%W&ZI*2_,/g<u?K6VQd'6YiSB^pm2$Q5"[XC2<2ahWFX_>n_h%.Hu)iHu=<&'/2->88fV+C^/+i_Vr2%00/#s(kA@0@9^C(dZBbQUbQ9HH#?7?QjgdsW/.7CLh9Hd.c0knhM*_`Uh0`\nO/'\k2\9(=<Jt+efn&4gLT84f1,%BV?\h!4CQ/j%0h#V"QGinqA5#;q,LC*X-Hr2/^n:s4&0)24j],n>QB5aR3/t4qN_uR!M=8R:!.A9.2hi3tQ]-P'_(``H?_C+?"=k%f>_hr./e$6e%_$f*(Sjq(a%]7jgG_j/S6Nj#3Z!tf(#"`DhThRq1S\Gju(Ie_)\%*>^?NsM0d%Ohi3&(kt%Lo*;/BgFj&jgO.%($L2`?oUD>mD@7%kn;Fna<Bc+/EI/FOrZmWm*i`b)!1(b`(R\_"nLlq&P"m7WqmbHL9E+0SKcmg@p`kg0RTEW"-dmeKSbL]W%^.U``[!O"9tP*3O*B+%1b]:^:5Vj2D4Sfe!YZ7XWnTgaKc,KH.:3Qb2V6]d_5;U(P\fbI9>iFo-.2r]3#^.-6k*fs;[BoELr#s9#;(T0bp+hZDnDQ7q'qrb%[amfKKeSb$)0O(,G-40mG!5tb_kU-qHZmoY.]aUH9#k==aTWQ57K+Wr=%u7>0N(?*Fm(@cgb;Bcn(W4%%G#$q.Gn2nP`8C`g6Ad%%;U@H]W3g2O;a*bU8J=B^"CORX&a;3;g=I&r5Y:-H0R/9?->"u6[++b,8L8t#a[f0hbB`KB`FEk<=[j:r"*,=QJNHnX_B>kR.;426%9U0%201L+-BIMb]fT]0?8Y&\A.Kbt>e72or)]8b(I&.4rXVA/!p(`rM[tZ'e<X!5J_1m'IK,Fq?c)3B@)RJ"J0gL=-#m7)Q*jmHS%AlP_ie7R?tc[TnGe?+T0_Zcql#pTutjE6+g+%#DG,fj1)@%`L)W/]W8'PKK/2$[Ai3G=XOB"26)LnK;FUBGie(fTQd'W@"nTbM1R%9i`,^91D#m<)2)1n*E.<Q5<-cG^qVUnFp<i0?h:dOOiYK&LG4h#fR+$!k/MEW!(i!.t$](0QNN$H9@Dn55S!U#:4pO6LMlCJbDqW%&%njIKM!SB5`;dA#CKIK"1B?aBWD@@g7!Zs!c;J'OSam-T9:-$;4of_.qh36D5lkTo!_!-[0IVsJfYA7:Bc=SIZTMWLX2]?-r:l[%QtX.WH7TRaLH8<qPm37N"sskK$^j[.Ng98q#D]1,p4D?u][0-5Cg's)KH&>fo7=;M0s]Js09WgraC\@7#Ri:*S))_5:k@>&e?gY;%"_qNl-di/O0Vo04-%Z?h1d"O.8[]`pLU1uZ2(sRW*YoMP+mLdnTspiSYH"c^+j;2P-2)Y,%h):_JT<1'"CRIt.nGa77n6bX6qF`5%!FfG3-C,4D!/!9>c3#/UA?p/1RB<^&D&++/Lk[19k*hA8cTMdOj96Q1B.)Ys$$?)=R1$k#F@jJODArGjpmQ^X68]Mn<BDokDe2);%70LU"q>N<NGo.UZ-K&'0n*:fAF9[,)3?o:H/s3lQZJcD??s[N,7#MA$-mc[U(j;U/9B4u/&VL:^-QF!X.8!ai0];F#[lE$p3/`S'%)#Ms&8PSd!"s8XL'GVB#r)l/(NGqFVTM>5_jhc<M$"MW45.(kUJ0@4S%N&Po4B5)60E?SHiPAcX!f[KH?"*ka!?udt8Cq<i(g0tu%?urPT]d/ROT4](jTQU$.m2XAgm1_6KkQtkHo0dPF:tFA>Ul;Tn%\5//o^H6!&h+(_:l$f-a%3LDCBP.m)b]S>Z<X>[*PFE=p?.LX%]#rZVD6[UmHSXN(XQ1U>XQO/T2FQbfFs;LY=:c[?YpSh&n9J4e,V\`d#`?D664hYl[<ZG-+lkOB`b4kRP6<1ZU'6%aJq4WC]L%jO%:6ZN7l8W$2=:[NUME[]s9E83*4pYZl2GO<uadbhQQU(n`"'[bl;?L5HJC^g#O%1Ffe6Fkt_>s`E<fn]-,0O$-KOqt36)-If,SDPu%-]N7B8>HKJk%tk<a+P19MD-WD;@2n>-8*Io7)Xs;AONf>ZEt7HUnO&1P``G+U8S&Z^$Phf9+*0lWlS:FZ&p+UZBTpQ9dCp>8;rG[%=A]:Na?Z?+FZ*$hOup%-67"Q%-C)oS$'ea<gEQV@HWu'&^sT[rFgB)Z>:HKj#T)cV3=m/9(PfnZ^c3h-`;E"OQF,.<^<HkYUmk'd%Dd'(EN5G;iUM?i!m=ZK:N6N6a!+?Ka%-eF\%:(1!UupaE@Km,][<%HFPV3(^B]'%8'f$Xgl59<C`\T"S1jkuWTeH]);fL)KB=*pD%'+PNnCT'36Y'i'O"2u5?+5K2_VDo"g#)+DQ`e:=e*?Logpd"1ZmtC>[V$:p+fm$>-Ud.9^"&+<p^oPjN)SHTUq'm6\ThL%@d9"/?%$;(J6T`D`](PYL(f^&t_6*m@gjU,XrlG+GtOM8B[V]3K^Zk$7`69%Yh%][\`TOdQPK0!B@e76YV9.=j`,uMm"lLOPBTq&%PoL5-(%3(kNRbE>8\(.\gnKi!B6@Y@<_dYo$<&OTt^AK%WSX23L^)Nh:]6HI,"['UX(Q55.IV1#!p<X*l?aKfe0b7:Z7.9(?U3jd07@8cn4%3aPmdA;!ONe"M?#Jm0?Ja:Wo!/%>a<LRp%(A-J"8,3K#1Xl*5X!gE>^/-k0&]&6:5K:@i:6+YuI!klBB![YEM8kCI=6PWameH4mK%T49-$VTd#H17&b*AKF$o.<@9USYVKq\:hp3KH^Cg+IE@lBu"*p*+s,Q3DcEk[1>frLPVA"p@+0G(rXJ7s"Zn"@-JB<iMkX`X#nIY%7NG+t!R!e;"8aeRWcj[Lg=mNVM[7JFLJ!m7'jV7G8p)Vn%$:SV6Au4-P@,eQ"igm#4RbolWcg-1"+Pn9g:QS5iZZ>$HZBigQq1:T%<F9BiE(.>@#ZmfPrIW6HOE;!nP]W=K;5?8sbTrag[8;5nH!l:qbS?#2-ZV?cU:IL).g11-Wbr3o!Egn`<+%MA^:=[,+o&VRMdR9&%(/8L8NtSE+5uY7M/6f+bdWm$Ra$`!9fJ0?g&2Zp'#i6.?%:oR'\?%?'=dE*_Q"VII8OFA\9URDWl%(9^,9!Wql1(/dNB&aa)N)!Q%L`oP"\KX(hO=S2p;?;q7'?roN+q<WIO_PZ]`el.LZmW/d-aL+ePIGZ?P=j(4nJA`:E%;*t!Z^_H\Q3Z""eAj?.nFc"V+1??N#(3k%I^iX]"+E'^NXE[d3abI3"-IS&3&QCNi/P4>Pa(`a>?XU:6A4pc"MAHBPk==2R:o(:^l&`PX9pF+jjTmb`VaCM)UuYQ*s1#p5&VB1%EibB9A>[gP^+n(\V9B%]PbCN<)+hs)1(TdDM'eZHZUi2I)QL84+Gg:.E`tfNF\#+3)$<9HKFSt6`l`V3;sioW%MGVt?r]"E>_U6n%S>QgK1IeqV"g0P%hPM]7U$'@/&nK,=;Blb8Kf0FL<@[8)Ud5bI&D&g:L^A_c#S,\+H#A!^SJmLDS`ZWAi!2Bsl^kYi?2r/dp:PR@%nZVoJI=87>GMB1eqf:JAhc0PiJ%b7kp\OF1QsZnpp"NtpZ`VjV]sY#p?`eP'^L!OLm^HZ_]Cn3oDSN=+msKVu?=U'd^:djVJ&_Lu%I/VmoHB%[Dp%mIGp!rp+FoGEClasq2qYIJa\c2$)jnSi?\+Q@tgoIo6hn,rPqtkcIY23[C]>qO0bq8A6F3j<pf5#d6YJ0&1^$YTE%lu2@$>*#f![U8>X^V!a24kB@V?`iKTpT1X%fAFpMc1b9*YM],%I!t0_?X9kU?$!``op>]\YHHGpWnb(urdXllrV>4'qmH+WMu2=6%=+A!8)-^>Dh\YI7GO>4`lZ;H^B<5n#RX^iImf*&gqsScZN&0TXpY)mlrR]=JY't`T^VsN'IsL^5lcf77olK$&^V'RGD=7Dk>HQf_%k$>+PpKGdZYL[@3D;Wrph>=D,bI67dj6OC\fC,d2g4-bb[es@RZ0.J6?gkDtJ$$-9^%9Ndp)<h"n^eY&r]/8rDeuoO>C2sVjuDDe%F0A\qHgUk/j0!I<3UcpO`V]As^&D44h=]A@^MVl\<fFZY<r;darE<]lYQ!'q/o1B1rjr-CD9)HeIQb/)pPc<$[suZ;k?liq\\:;s%+4kiocb<`O^\->fSbKnPg>.2FRGVqhXh"Il1Y02#c7uK5F.<2E2qQdL^3@o[B:nM`?>GRDcQ2ndqsJTNNa'^,rDrfF0=SB%mQ'Fb%hYcp32Ii<Jc1^UcpV"/uIWNiFpYY`-5C[SBc'[7Ulg>PKRkOfVgQ-j7Sb%5QmD$YGs.=4XF3f@-W]SfshUd8%ID6YHNA&:ODnN@:%g\5K'pAb0<0E6EHX)H7RqtFa*]=0k;hCJ"ps*m2g3p5r,hH"Ea]r`7:N4IcTim.@8n^$p`IQcOe>h?YnYP6"algF_dG\^Q(kIB(Z%A#lrfg/`)Oem<R81]Fn&NdL3Jmts39IEigZh6ZbhGL#s]<o9ACVW(h[hmM)5Am]WB0[F*5X)m\k?`Ulb(@-B1hKSjWD9hqQXfLk0%meLMpEW93TbjErkoA2Y)i2f0"+)@K5p\B"$pW*3dr]eH<m`tXp]B)4X^,soZm_4P4li+<4rdVV$h4<lf?`eb%rcbQ\rn(<.2<J"^%N2uB99&o9QmWR4;mH+4[YC":gEiV(<gtR`Gp@e4'F70$:?Z5-$mJ(^-q8PAjCjGFbgWFHlfC/&$hmqq:otPWbhQtfso;f@WpfEHc%SoMGl;fOkis*<.^o:+dpF7*32>]8f>p>>_L5PCZ:H99/'\)62F1!dPi^,s%nCWu0n/+23]pKHsjof@GZDq5YImTtp[p:b.AYHPHS%,+#LJ(k8&3k54G444euN)LK,D`kUZ]h.uiB?Mj'cf"(([M;7KChqW4rR*.EmS%\6]n#AHno@EY>Sc-%,B$BqnoD[DBs*_)^F'39p%p%Q1A]mnR\_gMA*)f&C6^]2P^n(feGIeSb=[pK)o/]Tqgr%6bA=.H\3S6t)8rg[>DIDu-aY5PL@F+&,d1!d@MD)o(Rf?Q;c\$+oj%ra0a0SnlS$cMcMrFgjR'O8&C9Hcu00rd*t>rLR6-Z*jN0Ho8?<gRibpST?c3Y;,b'ibuH3SU:5orqY-j2];A[pR?C+J&_G2m!l4/%pPlS+p@$X?DmeJ-DiSnBT6'dG]63Q9I_3#&3W&:2eJR3BF2^1IbIu5NH^jWPRGYXBkM3N@rnFd:?@S%)]j's;^TO2MhL"-s\+a4q%EW%iVm<uFVpWe3[SC;fAcZ@Ca?^nIK>AoP2Y+BicrVtZRp>;3DI;A!cpXra;\`UEfc+Dl's/U/,R-PMtI/V)iF'L`GIVX:MhHKZ7%p[>h6cLIJ\[e=XQo>gdpq_ddYgR`K+[f=,BeU$Q)IEoCXMtP\ls/J*RGNKZFSMS!hpA_\CSa2='\"-aln_7j70s=d\qt8gWn'6:9%R+qIAYIiZCia+S,^?4-mCT[?&oA@19^2CZa\BO@%s&P_@me:n\n'BncDgSXWo:ItM?>n[bf@o\B]A@aYlhUP7lcLrkpU/_!D)KAG%G0XZ;1%2Ynbj!EbhKiPPII/$3g\JRKA$0U*p\2+BcJ<9J`qF=fo<0*SHKU<rf:1fi\b<aIcLK08Dd9d7rl_q:^\<_1om@E-me>RU%\b=qTWq"sD@uIn#S9'-pbWjub@h/Bs]C*H.]mJR_'=mEn\+ep_0pfB,rHFbjY+'Lcm^rMn(B<`:`n^T`gYG*&Gk\3ufC-sBj';3$%ghtA^^US4;GL!g9c<]80f:COJn*X3I9uVOon*Us(NW8+LDU.(OZ0"/qIClrag0HYh)/mg.rV>0iq53_3muD\T*.-SNrBB86H,%%:%X+0Ma'03_7rZ-4/5MfRjgMQ*mf8DY<nb:`:NjI?fF,o/DH-`qnm'ZdPbOW)*H`jL5Iojtd<eGXD4^@t%BA^J%DiXkK(4XSW^&1ri%3NVVng32oWYF'Md3QYC*<JDc2C8T4:Qp8morgteAqUWDAhDN#K=,a]9rVg"#l8ells'%5?4P.#G?N'#phAL6=0BP=)>P!lUh]1[I%1#Kat^,K'\=`aT@f(Sf`nb&E]?Mj2@]pS[=Dju6rGC.$.mb@W0]<)rlg>ArPkI5@-n+RU`lYGqfHbZu=^$=@WomYM@GMfiUgUZ1+%A+&cdIHDDOrGA\XF1;&&GJEqDrNZ)4lcaA;)L&Bsn%8#4h>cm)gi'lOc@"O;^[D'cIeW8;pNq>^p1CJ:k1G$?q=_47mW.-qn%*hh%D9mLigjb<%k.CYODrs4SSb]^]GOB7eSG)YlNk=aEHZ)"7g$>_&n(7.o^KC*_ZgLrmrUo<<J%iPp]6;EWDnj&t>0c6#o=s/:I_X4^%Em25:r;ZWn[GH5EJ,f@glneCIH]>H#r-*(a[bZ"oXnQ14qlATo?[]E8R.jh`hGi/$cTT=VDbb@jn*`:"^3A2`p[0p$ITO6DDE$1^%B5dV/nF*pUqmX>kg\NXK5L(9j?2*K)kOr-;X2j#_]j'6@eXP%dHHpg0gO!0gk5*[-gR`cCH<5N7pGdM+46C_+RcCD,QS\(*o:3Mf%[W]mVN;;r@n#l>kJ,eqXjW4n=bCB88lhu%`S&k8NJ,_]ZbBpE2J,_CgS(jN[ce\3ZCYmjtQZN+HcMd3h0o,Z)I.rT1e[OhWM&a:F%A,`gl\U0rieii'ZFg$+4]m&lBcedN,lc#Co]78Tlk'Q:&5JMMWT(1)'<k^MX^AiZ>Dsa%;qqCIfcMm]I/`s@Ig2ii?\+Wk;\c-m;%g")(lXnhp&B?[jYeaH5n4SRV(T<m-of8I2P1]EeTbdZ-qDf0X>s8L\UIVm&kj4I\oFmbjm?iT89^DPj71$5joq#?DUjdV4pIJ\u<%hg/X91Zil\SmUpcf2btr%k_2IEqYA>@,//iVgOe92G^IthbD,XT!eTIs))u8pqpeu!!r"%MmjW$&jZ#YrO2Idb]CbY_`>`mC92j8%Q1)?,\Ee.Kh"PZ6Y?,YT\\J&ch*8)$Hi!4/@Z37\]k6TDhg+[mn#c:ic*Q$uAm><0r4B5kheml.c^fETF8pN4XfLpdkDln*4P.kA%RG73#m<e#$43#$NIQ-u6EfK&4MSrYFEiDs"VQ_Y6\;,_6)o>0&'!ZiA=Pql:rh%f54kFmnZelU(>Q*EJN5PF+]tLhChcoioSE6pI%h=?'#rHdLqDq;Z"HhGE@A+-ngfOqBB[f>ZboCeW"T)Z44j(c-JiVd]'[r^>Srk7%QJ?p2L]<c?_F);tZLYH@pmeLd.ECN;jD\9CZ%$otp'5iV,GEcsNiRt*hOL*t/-mYREP(lgq/L>^2.1*L;>R>6,ocEX3.SE9,"/@RS;r@@t7H<.Arl/%C4!*!Fc:b[.Km'A.tk&&u;%D,oBGK2F483-;+.TbbYj@LuU4"FiCLb5$l9!kl^K\)@^h2V*HpPXN:t"G(#PP<]j&8%^E_,EW7H@j@+,";UI8CEFt/5.p8M4[:ei%X=PLe@Ds?QmNe(D#)L-iU#L;RdSi?'%Wt1N@.<c\\_\+<,fk<O";k8c@*2`0!k#9fNT1b*80i.%8ir%E;cBA8'"RWT3)`t9?fi)K%T_LWHcR9B_#n)V6((b.pSO+WX1o8$cI,K[T\L5Boq7KF2n=[=a!JE`0E"=@i[H9^T`eq.EXWWB#g5$;kKgPCLaR,X42KBh/:&.*a%L>?['#B&gZk15@'a;3:<"IY.G<76JR_.:ki$5nTBd#?1bK*:3I!&,ND*"`Q+dr!^J!u(_<<`UP>3^bAK+I%[lYtut[#]_1Z@2)6e%OE-4-VjNl!!7?-N>)ha2b2o7;RY]hci8^m44jrB`2qdACn<dL*Mq8Qs*LG05CE3#YaXuW>!>(/4m(O.8hC-;KHc:!:)WcbIP1<CX%A,"e8%Ou8->;Qs47A9<Wmj;=*3*FS=lLD0]&g']SHDD)a*27p^Wd6Q\S>,])*#52L!'jX>?]ZBf?e,djLPJ>n6.R:8J?dmU-EZ:j%CTl8Um3tZ@P:EEXoNkAMJjOe53P>mdU%b&=M?-^3dYhElIWe"TJY'g!hP&r+0FSs'H4U<pkFkBK`MMWC#QW4%piX-@pWR+RSVK'(%UH4CX0u:L212n)/3-Q+,H+'ZGqIu9._*"@-GZ^<#p8;;;WH1rJf@0t?pu\F(!=5,A`*X;lc"g'=TSIr:+Ir\7CRt[JeBto1R!r1]%8!+f%69FXRP_T5Gl8fH,7Ct[Mi\oW2GlStlO`2AVhZnV%=3DesS;4u_G*Q`L4)YQONjPfC:[6qM5]'6#Oj=EhWf@NDTdR2"Qk2Ga%O,KJ*l$sp"hOXb?^!8(AJq8nf5OmIiQKutHTPjZUZZ&sKfu(arF+TR?3Br@_X9EODWO+&!35t;*0%tZEY`lX/n?+K,W'S"Y*;i:p%gT^u,cT]ZWVX6t`F+HB15@u[VQGYs[D8qiQ9"Q82!qN3F%ONP3E[F)tGtQ`/*TZe^RGn+&'&-NMSJ+Q;:Q=GqdSeKXSp*;WqP$'>%1<-L*H7ojtk84V6YCh\+2N;TjrB9?$aN-k1#8eQ8Y'=FuTs'XHR`t3tc+q1tLU1UrUlfb6MDMN0]mW'Jk.o6EE*GtAnsMIjM+gs;%ju$GeB3!Vr+q95:&GNQKqr+hf%u#=k+r8Je<!Qb%SHBDa8P,]/iX_WA@Fj6d<_XpF,]AKJ(OEIH0f(@69/PUug.i.P\.Z^os"HC*%50Y"&3XEoF$udgRR"qY/@6Pp&N'Q;]6=R\mA*s[Wr$%QH@+?DlL)'?2aeJC%@H7TtIdKI0dds")1MLi4\=6##IDhpPRp(&@NZmd-%:b3!E1!*`5RG9tN(aS.qm=9I\g#ZSVB)O)F?f6T<9K[6BV;ZT$CF6j/m0TeW_Wqs\mT)Xn,r3gFa2ms)96j#_-;6B7eX60g55cV$%d3$Ls9qZI)eoUipas>&\h;SS"f;T1"(a;r/k;MeURF6oZ;GS%^D<bdA)=ep$4"0kYQ9lkN>/HU.j@Fj-DgV[*\'l4=(Q*BA.[UHH%ZAo#?E[Ee#/d,l+U!*QWdW20f2rf#HLgbNXJ&-`):k?c?>k](H92SJ@#9@4d_r,CkhH,26_k[Ef>2%/poB]6si=9OT:2kLpk3ptY%%oc#LWYWB@?Bl`t9j;3a-jb2"'dWIlT;M#j_l(8`pU4O#jp-I)Md>oFgP*-XCI74K53j0:pQ3?V<X@NO?4X>4*fd`7/9$#6C1s#[%3N=)4^%j$h01=%RKoaN.5J[lFrm[-s%'fY!=GInWE!RCY]AR>qVWYAdY_*$"U1oRB)Y$02F=>/,c;&F4&Jj1b1V?4$mF3/`>-"VM%3K>^*N)`"T\6T5>/OhICM[M8dko=\QL5\/@/sB1J==B$2%f1:IP09g#QepO6.Z:Q,KTi%BV*LqC951#ba<M?BjK=[5/J*Eo&MNDC%->old7lbB3rP$KcNT*s335A2).RP$0Jg[I?+i#)UXrIn2(C3WBcsYOG%W<l?R_n(:ElA-SPud@Yfb>?jTggV/;IsJ%q"/QhVlOUr%+D=D_MrC^/QtYtF2\@Ff=FL6W`s.\3;TKcpNG5U@L90INlY][]U,e*Q9E@mD%V!)pNsqQsQuTt[hh+q2RGqdC,4uFXO/ka+PDSiQ%!ao(aH]Kr?MIc!,]1'P=C[0=>6\Rh[Ge5q25V[j`(pA;hps%sm$<cFDg<b/PeL;Q1ngR+rlAK'AO1\35^-+qgZ`0cr)b>-Z_K)Y7%3J*H0_I%$)Ua9BAJMI&U;@P&8OHh(Ob\YAq'om+7V<Z?^e7o_uDB\4$;&F3NmpT(qF5ph,'E)^=/"/G9B/.M;c(iTkdA/*o@+6T1%8S.^d)Z!V?8PH;PL8:9g]'Lmnb%16d6B'q>Bg;1:6H,<u2gMq;eT7o;#ljbCg+e+c.-,Vd29pW.>9)$e,pAd80!)HVEeqL;`Mgso%b3GiEkj+8hLoHH!VK$J5Yr>Vnc"coP'S+Bf&hoRu`%)1@%(011?M&OuZJt@f1j*3V+kSOOcaD.dQ7_p7Y>>9cpclE?d?>.)gg(:C%HK!!Fd(hCtQ2H"FbnIWFik;g4'ZLkt,^#s:iu[K[M*K\)Lhk-[i]0N8pe8n^)b/Eeq;JuAQ7L2=U>U2,rUiKBrCE'J#R],kA]jR(%eV\?J<Q1r-B'2(4mLJ+WGj"S;4DIZjo-#X,IfkOMA,Qh$:T@@-7e20PD!QrUB-;3MfO]#S]VB/u+6NsqUEN@M56InLUQpEK/k@h+%a0B\D"SN'GrYR'D]1FS:05&8O&>6,`91<5[bXfssZrFcrPo[;V4i:)V^JXu4H_De/L-"7t]Aj3d[:!4P2@a'\l3]86A+,N3M0lah%pH@;RZ_TYs>hE0tZ*?GuNQ2L1PfHiRJNN:+7u+)sAYKiYUV+bM(Ti=_h!-uT2%ho+IB/_/ggFD39YFouE/-iXlI[qt(O3b3gr?Jt%rh`F%dSC_<.@fX8.J%YOkm(`Rg&m7E5M(I882&FlFn>jB`;GlE,K5g#4h[#%jqFRn14D^!JhNEb?A[%*=9<Dq^/EOC-*%-e7m0"T%bW,uR/8aWiY3e2U,c`>ZbUFe08m%3baZ1^6=2O7-e0n#2I&61Z/9qVf5d(<(,*k?+/@'aOB8e-W0J:Aj!#h.%Ck+H9)+=_&T54M0%fn!^:l6:?Bl@PMS'(]<.g3qrJK061:LBO-(R`]Juk8a=Kd4poae[am5hrsdobS>k>>U`G0TJ;is4-OP3h.ZEiY;<H#VsU(2E)%`&%k/]`QiQV?l6gJ+K#Ke7c47ef527b=Bl+#>pllHRT$qX7QHp_T:]rqU[@4@daZ'\[G0X?:EJAmO:6,"boqlfZp0_-a!5QP[DM"/Vi%oS<Y&n^Y#VdU@\_bG^7XZ89YD!jfYf^;F32s#QJ2('#L5JQR#\`'Q/B0VY+qNubF]0tIS5OTWb4GrP8.JW=?T?nUeQ'NH-W'+*&A%?>-lQM>J6P#"8ZcPW`fa^6VNk=W4k=joiT.#4F5ATtPOaI+E$1]WOUL_3uGK[Jqn$`m!Hu94A*I,2BUMB2#XZHY)WMM.%Z4$o%I*%rU<0jf1eM:^`c+PVIPP-PjRHLA!Grj_7CDil\W#5<48Uk`q!*5"i>a?YjT'iF@1Htp[5jJbQKI`hejU.^==)5Q(-Za"d*cNS4,,/%nQ>i?WG-J/,9J1Wo+8^3GEE$M>F-XQ8,=88F%(BJ^Gi.<IT:qBi77]Z0eHj*a,:q#h8:*_!`-B<J?;NmpQ6h\D5K)haEc\5j,K-l%UEi-?1=^k*$=l*T2#((1"(<9'$kb%j+a\_N"o`4L;Nd#M;YFCJ)0j+tE>g/_B9/+i^rctM.m-Rf73P&20dZ<F9iSJ#-tFA2;BbD%%1upCm)2#70Z)g[<Jgg5)@;u/p-J1l+J_6NSSLk&k8qKY9f@gM7Y\@"Zd>5T/#S+Imb;3kQLD<LG&OiX'!prb&;(POJ4hGTNc"GfZ%GaL;B_C90:q6*g^h]DLe(Ifp-2_$H>Yp%T\ECa^tkqeT<.SHa$0p.b>IP-Cq79`f@8_pa*VS5cgA/2lBbiQo!L3'$5F:<GZb=9eZ%jV3FD816l+XL5"]mT@0E@(Zdts3qR:iK*_8_nW2G*h,<'d!!dh4D@'\-9AomBD6E1',+"^7$_<$"$WQV#+l?r!mBP7j1VF)X[7Ib%BYt4?B)Z?rP4p&h.WZlO2hmA>I0<'sm[OLEhP/el`j=PH0nk1Ip7qh/KA.mFZ6L\sfHL@6C8oK"$e<@ONMIigaE44Ih#mP2#;Y,`%cW'6'*coT&K".],e%);"T.dmNOO^(I>8$70/$+ZU1mB38!p5.j6t*b2`7f'=P!i_aNPmm3_X"/)L@FXuDh0cZB-,=5%?pVB64;T!%UF`YB[sK50L]KgFDS7l=o]pGAjK^uQDW1K"AH'#6J_Sp\(QSF\IW12$XkX_o-;?n"\33@u8T<em;-^X:q;fQ/Q$_umWr/&BG#[mU%8M]bVD>R<#aMC.s-T@?M4n'tGoeScrcms;DRbV%s9@YH3(,,J+*hBck[7;bWbCPY<5m1#ZZF5U/?BctTN_gMH:N2#Wo?0Dfn:oZV%7"u?c;=1r26RiLFNf;n=5)AZ]Fb0XbK?3:4U8Xcka;^PfURYIk_rRJSBg9O"'Ck?,0M-!lM-^E3ZVZ)O`L.]VCY@"?Lf2BhL=i#T%^B0!g003ZK9O0BF'3)K=DW,/p5QTH=Z)O>O^WDm!9=T7hAo^.rFH<Y(aBTt44ApC#Bfi2%q$'o:6:_654Nra!!b;fYSVd91+e?`C%#^[F(RpZl5b[LM,5>r4k>bheE^tiSu3Zo1>NqP/*h9'4X89/b+h]oVPF!!c3=ST_\f9PYt3dHKsWhYJWnJfV."@3AMTmo!jLO^D@%<BV6)%#+a]+Xldk3aa2/-Cf`@Z8.J"r<m(Y(6:"]+GFXWm"'d%]@^5@5gcCKie!ND<kO.#!KH4b!^XoU,]S'O[CeGV3'_\>#\:_2%QkQ%!&1C[=E=#\hpq)eZV[]l@`!A!ad73+NA?%NG]bPO;V6dF+\-,bIdF%lcIu*R&8`%*SLErH>ZIWj0U(E_lmP_--j!"9:]1)lh%l4eghTlq7c,7Hlm:`">IEisZkFO3-6M"Af2dN`rG^!m]]kpGhb,]om3DtdK.cl"a3T#o'Mou0*_b@bV_A6ALi#+c"j@CF^e(?Q5b%aY9)3V@'tON&2R/'Vt:a2h'C5NJjVF7oug0kZT!fo,;8?>S4Q(^(tAG9Q9JU\M^7rR7I\2fJS/>2A;>s4M9nO)>?Z(&Bi)Ai<0;D%ch'"8B[+'*aFOQUNg7lNad#)e]<[;H2?;jj:Ob)'?m\hNhLUJ(,F@8dMZ%PqI/Z]Q9%+t'K?5sTf*pijFiu&0E`+s;#thugq9<$Z%buoHAnH:"K/6]V;s!UjYlq1Lg:i!(bB8deJM(05_+GT*MC)d"Pbnc-c-L`,>[r:3^WJp3Y&0T-%T-C`Jj%:m$27=kDWHT%1X/03,%s*A[GgQp$*LYb0b\4=%l:L8<2=&ZdR'9hJr\1WJ,IkFHn/a0+r+Fq12XBSETifcCTn)%m>)Ug#YBhOGcq/h8X7Fc6S/&,&Xc^l?S%l*RYU1eiI^S*P''STQ"*X!b4tXU<2V:BRH25i2=J$*CtVN:)/^C__r%-s<8sd/;83V)M/CDeE5k*O_;+gE]!38UJpt&+Gtu9(',n%XF#2X/f6ER*p_Rg^m3V!Wp@WT?'YB(I2mZp,&k#Y]Y0TcW\4src--8>T?)9TQOiW;XU[]2ko<[)[>[\17Neq/I*t\BaSrqe(>"4?%`!273KkCq3JQ?n*]MO=!lOPCJ2<,F[)n1dR0/?0K3u5gs$O^mf3_En.HK^J6OS36^5j/u(3i$6hJSg""`kY#_l1"Q:`JhV/It)pZ%qAUuT(_].F="5>rJ>L4im28Wk[=]5l:FQnF'62b_`WVR2W+gj(?gqY0b-H7&8o$;)EVh<Y_nltsm>g@@0"3\01L`i[W-m$+IB=S*%>Stf?oI[8VcY58c5b)es.@&6$\EnJN<T8eX:ikP_K'd-!_#e2X+JYS0T;j1i,d\3i"7r]WbVaL@PY[!D-0X5$OZl`JGcDm<BH^@7%,XYdjGHSSF0$quT:EOkm!5tVj%6&QJc&`'Hoohe,k=;LL1?&2Tb"q@C:THJd/OR"<!8(gp^i$5-@tu(!;qlle>:^Z2^[JFp_t%*?%7d_K"GY_C3aa3\k<YYd%TW#idAti4pNk"d0(6Iaj?pAEl`N[Q++5]XQIZ6;q_Wh(RSW=(`p,!A9demOdr%oB%\+'[tRm3dlQcAo@%)J@"QkHY(Q+3skPO]b`W\.X\UU(n_DifD-'IJ-6;4HePe]*Ot(3HH!]"P:pKOk<*.:]Dr0I1-X%4PkF6EFU#@CtFq95b;I%r^!F1%+q(s"%Jb-aYF80UbC<.K2=$DN9nB2%$YS<[3*%h?$56dQGnMM_=WiQ;*=82%mZRE[_$os>k117'(d6=B#%\\VaL08Zg($f[n.>lc%:%:P;$;d6`K:bY`(biq"4lsSVQa+bPbQ_cT#YsWWfjt,oitEM5)30%2'!;<=ZAg*Pgo;M:Q#uKdjofpP&_4A24D,8c*J*up*qE7q%,?(EnS5RiQM:TO$Yo4++E6-:+-OKrApB1(og/67&_*Y4p.Li-ppIV"i<$LH;5(Ga-P3##fY:9@a;+B,I17k7^p;I,bpE>"8HoT0T%+Rm4a66-"1cmcTp-@UEf(nBYE%n7d3dj+H!\8oL3R2>=F%r3G-IA;Ao#YuAc781bB@AP>R4,1SLZ!+0_,(-o?Ik)ns8R^44'fA":%T]7,?DVt&LGl/q4@YF&'AFgmTQO\;P0@:]O]E!I6<pC7#JGGF<H6+5O^4(i!$KG"irjFYF:F]7R=[N0#bY=a.XB4fqm^lc6W"q0Z%JLC\TY^Ncc\[/>\d@onF/&U\G,q]UB,i.BuX\eP+Wo\(YIN?NoJrL&(<a8IF4I$c&-fPUdU#cI0SI;fS`Yu1H#/dDS%&;%O&/g'$%P,ldpb01Ilg-t`:8aQF(`F)O6DpP%J#-AiCq;4=N&S"i9^cVm!=nh:2)RP.%]_-a&H:?J?_o3.q6&mPSj%A2-Ah;_k]7`4=nueH>%7C+jX2+?;bVJJI^N0:Tpk2UhE9\76t=Lcu@bA('Mn`8&p)mg+F<7;]"7;51!TiQeC^rXf^TgU?$.bHJl`pp*]C'&>;5rlmt.W\E8%KnuY:AkX/OXS3u:[nW#_K;u8C%%,+-T"kQ)G\TBKbERg([#_Rp7ufJ3k>/&WNe5VH)k9b!O61^R9MOY0Xi)GnP$'g">qT]lJf'3N%L;u&q8/u`G<UDK[?4<Q]9JPU^a0FWR.L&':#H`V2CLp9n*q-O<gE(\kaT8dU7We8tY492G(bcm<UW'/Jc+PgYOk.eCJ7YDn!%Xgu%F3h0qmKQanXobEs^^M)KVklhWkT8n[Qq%5ak(A*Qi,F0;f@KC2R/!`$7I41^lTFXff?D:[fHBNRb!g*PIJE&2\F3drFVHtPoSVrl%Ba30<JOKpCq'""KM^9;H''\28VahkC^jZ\IR7Y>rdg`#t%jH3V<J/qPZkt1-+t)]5R)'Im)m?Ks3Q$ruXHP.R.Y]0mZ8HVE`*6>3%Z*"hij;?cbP.'o1C@dCV`s)I_PKA>oLb,<GX`Qp`eYK3O3TA+<emE2T@F_qUNb;!:dtg]N.saor<fWo*Z3&r>^fcC=DEN1RQU<Vm%T#rk(SZ3D<Xii>UfI;52"f_lbp%<lqVfh:2:'fQ-[#41(Nj'@XNas`)/QDaA+Ya%i<X*\(mCc^W:LfkFJVj8H>!J5P3DbRoYIHq2%ANbbF(k>",1+OP\h./lDb.F*Eg?T&:%PT@Vj;$^@NR'Wn8VLg5Z@&Mqp(A\#W7S-6'V-(ns.lAi>ei^84GlZKHTjC-)2b5m3Bf)a%"_6S.pa:;^3#Sf;%8-\1#lj-8m!`=NfA\Z2JSfV#RV>0'2OYc`Q[f\>R3F'OPpH\l^rdmgQ3<QR#"04QV:]-r]MTS)9S6]2>#G&<%E.3T,/-"*LR0P*a8X%l8Fe]UHC=N9;mFI8=D7@Sp]U7o1ku&GtMk$Rq`NSOpF!YpQ'sdI+/Yk!H;s+%ghf,`'b*PtQJ_WT(%7?@j%i+]f2#;7\3;S@SM2$Rr2C^%JOrKi70m7@*7!7Z"bs6Y?X%&OMDl3nO=;8Yil$!_5M+oQJAM**,SFg,&QhtF6ILW;*9Qb[cV!Y]us%HdWD1aJ$/$^7ohA&TGm?(U0r`hYI=I)_AZ#ESEQkJO+FSU^A8`o]hU;R^l"6k1%jPcVq&jA[V><GNJ.tf-n"lGc8TsC/%Lr"JE9-%=:Zo.2pkhZg4W=>FqUUId?2;q>>BPM<q9"RBI2Rl&k*K@:sC0&T_5huBNqC_!F-Q`QJEqcdLP-+hhb?Fk&>l]ff,EbYkWQ=Kq\;n%oh)BZqkW2q@Nj$7WZ):?G-OrY'%21i!U(\64o%H+:@uuCUA&h(OJsKkC4@W3if35S5S>"C>_1$M[kb4/ilt)?3G3=P&NaMj>S4W0%AoelkbZ>a[m%a:9r5S"'N+G;o\afN4r6hZR_>6,p_37g)pqW:sj.i-7H5abN_VMXh7XK<;m@RMFk7sC)0@23!/T-sGo&cmCV_2XG%LAJ0^7:k2tULkAf@&qI7/Ak<aH\k_9-'jc!Uo7,ns":mfO"PKPMiID\c'19DR+JYCI?GY[\4+rrnl]KS#TrBlFG=bW@8GLi-0SH6%TpOo=^jV(EMLYR/:E$c#*WEejs3_rWQ(i2VrZ+7TW\;gc.t4poS%8_H<%Cu=5lBAhqA6:cn;=\h-(n`?DlR.ZquR2U3U#?_?k3H1%VuV;^rp:2P!5f(KL5,4OiCRXfeYMG:5oDXIR,A<]AKp\>s!eBe]E4["rV%dt&2h_X@DAMU"UiO?pHF9<,Q@A1_'+N?];pE=Hms)6%=q(6Y%#a$]T;3G>\HM[DU_AV6oe/R/-33Qh#i.8P0JHIIQgo%mH]_]L:#r.NJ(K+,Kl8;uk[,2_#"V,Z)s;Y7Oe9FVBH'Xc\HGQk%(!j>$W*=Ks[Bd22ZN8TU(<r++V/EQ*(:1oY;D/O[r%Ga#h81h=,k($B9'to2;`=5:=]tH;-/iK?ec_(RD)K;0^!j92**.qq>`li$%/bk,8PVAZ^/Y&n0Hi%0U>_'A8"csnD6u.ZH-)fUb;I^8Cl`q=)o1q/cLUt9YhXjZ6e\cc^/C!/koguJOU=G'$c-?]D3hr\r`;306%.E](4$#_&#%c0+LLKh1"$8*X.iq^>R@3/Yc7[sdpm+O^>La,1MOA.Lt++bfW-^6/;nl:LN9SZg.g68_o,*-r`PSh=+luGV&\oim,%=KYp08$XK!=m.[C/NWu0f]Hqp3tg'F(EsRkr\8B&L=]\t3Rup+q`U,N<_:$=ZpLSMW8@VmEZ[C(VrcZNfX"S^op@0>7h#R'0;W.1%N8:=HMs&C)[i9]N\Zci<b*\h'eJ'Yh$L_r;!$Fn<CZ$<pS,jnA*cM,ha<tb9o`FjAYZ+/Fgd&>?=PC&)EXmOOL(#%uLqh@/!@/td%pj:MCY6!n?92Cnr+_N+oQ74]L&Ck2EY9;E5*1rVbqm7%N5eXmbQJ6BtA:%o$T\bmN`6c?O^9"W%28l;er/Q(:hX?2&LJob5+6j;g%/5e.E:&I8idLJWnQbVF,TE(LFH@[FOH0r;+.A.BJQa`iH`Bg8a$k=O,B"lmb<jBPX.3_3tD#'s>)oh=%cZ)GlZXWGj+%BQP(kmNk%-%g)e&=<M-k%%,g!!jlSGaFD.)\aU,O-Li2Q[rh6:A47QM]Z(4*.J)tO5nQN7ifhrll,!RMPUbJ/OPC`,:"V8fRdYjE!eZlm)<QE%3b>Q@`5*oC['^<d9^XbGe_]%ER>0_@)%bl+EHTBE4`ENQWWQ/sV6<.5k=s[X`8@#NK$IB9Vmpp*Eg@sba1MY4He7dB`l-1X#+T/a%j=J10)!pj:N-I\.o3?W*<%Qq>l<950aBgm7'$#sc$HS+HOn!8;;>j@M@`fTaK!_H\0Ep>gFn,p1o1Y1]6T>hRE?3(X%*i:3,mu0E%pXksf-,)0[h\Z)Bf3(uuQV"N=127h+J425dfAB8k8bbM`<<o%]ao\_IKY`s^kqIq:k<drpcf"WN/6s[*VViG>:+Mm*_)Zc;<kWY\%"h5<jrlM_MeSE/p5+Fn<W^UTMFS3rIGN](-?6E]Fl;)0_=1n`SEY0_?0bI+0$Z/%J0$hi>;-0sp%U>:G.`e$GW'tO!AgY-tC4B7.%>lS'BNCgpcQg`4IRqpc[H?EH9%b]rAm"j6C.s_-*XHP%+KnTA?Nf]6\M,MmIMI$.`TtfDCUC\_P3^pPjQpY6tPchMe8E+[b6U0!"%1SC[5[&.KC"qlAW1/40*Xg`/go,U=uI1VZf1nLP79?/=ako3GG3a\o<j+D.=!_]Kf6Y]q/_iNbhN42572NHTM<i?+ba(KN$-Q83R%R<-4d8OHeJplA7U\VZT5+[+ucL;9)-;B.<dBN;SVFBq-Jj&2tj9cBl5J6q_,A%dWk1S0.[_aILI?S.)@5R*GP:CKQPnoqYEbb6F0%"\Geo`^OcJL/=I93PRS&q7\pO?FNr<^!QD/Qij:TFeZ`4GX;V5!dT+.ntQflk\Vfsp:n.p<eT:/5`Ff?@(d)a87cXiQmN4[G#oZ"%"XlX<;A%);Xk.i05`3,TUsgk.8;/>H)9h'ep%Neb6o5+=Q^<'5DbSWnnlLIY#N[@TAC&@'be'pp=;a:WDY.A!S0tS7?bMo`kkA5C%4\09o>+C7p`]C?=+aCZ3cN'XrDLhd;Q&1ZQS@o+ugpu`<<3@QVWE^IKI1"um!97A+#-NR@h8R3rP2Z;J&\bmAn>^Ou7&)k\HY<S4%)RYniDgZc^Fg$,UX$SGQmCp4(^Y@NVC_lm6c+kc2:lfgerKSR-,@.t:oeO19SfE6:GD-@TO=<-WDN:^/9<:L=]k\k$F)SJOE1*@o%k6>eYpL%o,Eu=<3'?=8n;A@W=in4G&n,BQ+9IN88^)q6-rjGoA%P*H=,8pjCbD8sO)YT4r!sRlTN"qSgaRA$Rm@,Vke+8RD-1=)Z%Ks,?<Z9jmf*WTn0\t@iK\^PT*G<%!41ek]9<7#)1*rD=IM(]UYX9NAPj.5aQF/cN68mT/)r3#P'&t()!);,m.*&@$2-EB!XQ8kCs%:0G*$`BdE6pC.hh<tMjJ-*d\'io&+QA1eTJ8-No(D2Ad5F.C$4b\rQ)AQ`\U\bQtNX,<"iH6[`aq@3n"<86KIm_kTF6<2rsbE/,$%8^P_FNl4JaQ!l*iq$UF[PnM^fd@Y'RQj(C!X"O2k0@ml`2?QZCbA6f,"DL\rWm\7\3t0\sqSo;E<$o7,eU@NCi+aq#DAQ%C0KXVu%fPmT7Ph+9;'Ya90YkgnUo>#&D2H?8dok[F3DS2&+5t3Zpq-=\Q2CCPLJiLUfi(u)29%Y9,2qDbQ&uC:bJe*d&`i'b8l`d/`kWOur%CI"#"8$L25;9Hj^)LFTUICpRn;W'W[fcVIcAhf9!;rJEHZP<'H;4bf6's93"(dEC6!H5mGUC)f1NPSH)NAgiJ@I6Jo72r]:L%n,b%nhJq(($[!KhSif36`T(Z7+EXNmOhYJI1E3as#P"^KB5!rE^Zi.VJ_s&2dG"\@(I6=cCqF[nf?>Y::^_Y_&SY`bdLD0h(5;tEHM`0%7a*J57Ucagg!M/1ZC)E_(DLdj9;6rRA8W1=(94G0O,>?6F<uje/>;q>k^Ja_@#e3.Xag!,3\To19`Xt9('".Fm^kGN$#OOm)^9.i%C?BR'dIk1%97sF?O"TU&AcoS1^:g]U).hZk`#_,U!q;aE_gs("T\TOuJ_dsS5oEKt1,)P#=LJX]e>t.Zq;Giu$Yk&@`$Rg?qMP)A%&V'aVQMjnT#)XB1+oXKZS&/NfpqX#q'd9@[mg4/BKFt3</C_.0&n81/7krJUkJ*>4,Bf$?\3;okAi!3R]_NJU3)o!9`2Nr0EcH:8%;@,JJjlUsVMP\gso[pPqmlr8!7HqoX$%6-*cRiRBM:mL6RMt:;G/lE1Eu'$MO;f5Hb/I$3>L;.6Ss7"k?OD[^c,#T.@@M".#]gES%=9tnAaplc&l2_n#8:tAOAooN#4=U)&K_m&Re`Dc<KK>6N\ka/D2j+8Vek8)b.]>>5+"2,"q5HR3Mh'A+^<D"MIdQ/B$&8)*X,*a3%JW@B'o(43%91>GY7ACkNNVlORU(:j?R,>:CE6JaK4GeSb3F]BU<r-fgXkZs8,Z+i],@5+N:e#b#8^3NKU*tc_M.iBh+4S.0om;o4%CS>EH6gpRKTHgj*.uu'9Rd"-C_`1ADO6QK[^#^kt+U?RpA+O*>K&?lMQSp=!!"'m00O8q'Ak:MO&$iP]i[Zcr\i&*=+CoVDS-l)#%6j^/_l/"Y^V*<$l)QHIi&3)oBL#$LY+k)]S?YW31MluKT)6&&T4/!:/QuT@]pMB1keK1m>m'k#7$:n/r><@(@*:?i-55btY\`@`r%O"98J`C(f77pQuZ_?k@@0<F-i'(1ERNuK@)V*[>9Y3=p0H<1;7l1b&Y&k1hAr>BWq<>joXl_Mo_GRKl:Q"NTmP>ETqDO*.Bn>]/4%A!<k'1gV%[I:L(4_7K$P=#.er(p^BW[n7ebcs6/m/[MWXi$*=5/pY/OW$hKD9ubk2`css3B)RlWgj@H-rFm,QD2,YX!F/g^*%'UZ%f!X=-c8T2@`hU6oD(J578f-fT@F=]k%X/m/8:'7+1jdoj]7`<TAf+$jQstp$#'MR';<.\!6AIFX(ln8G6t?b1oN7Hq\Z*+"OseC)%KaerE`I\8.$O.Z7g\<RO5C?(E-'Vm@;^Z701d&.I]T).%%3s`L@*'Kr87qYgX*01Z7F`!>0Jc.(+4LtFjI\L@;-]>iCVX#2P$TOb%GsTAfa)hAM>sRR-3THB7&4$cXirURIoDT3*070S9:pO+g(eB$uaKX\78it5=!K8r!>,q'R^8ebUi&!Vs[L+Y:#^3P!a0=u9!OK%N%$08bG_r(95.?j5+XK)HQ$'u>Ug*NW<E7'IinI*5`=sRmV&Q>O4^Y6j@fT\1n6L6/J1DXs\4T0\Edm;k.9T??)RC_ns.Zbe"@c!Ab%%eiOir`pk&#X.'0d#fD61L0Zj;`qp@aUq2f\D0`/]2F0<B&uQIq90.4Lbu9QTrFRJTu65"L9sMMNe:X+2>-<<NXUgekK[(%XC,[P%o1[![B(k]2F0E!Y#0Z%u@Zg@/)FcX;p3F48ESW+"98ij)XP*UYMh;\d&r1'V?M=R;=%,1Z\`5^``87DKa;a_?ZtuUX+h$a;70+5m%AaM$E"m*e5nmnBpG\h'Hd?&_s9-PYBhuu@7D#^1W&(9:!krFiZ]ZdOFE]e9LEfr.j2mJ+Kl'W5%N9s6`4Cfqjmf'0M#];`L*9>qS%Cd@e^D2VkpNu;X9/WX'I'ZXUHl8[c$g&h'4qa"SX:``]GD\J0O#tC'=X])\*V:A"P;[cQ/?W?bNj$[_%gUI1pG%BT3@-ma]QN>M^%\P)#<GR=EcP$XhkPYL"?_e"?;m)IOi:mhnlC_bcYh%t43CmU1/(-GMD`3/D,NqCn3!P?(2-W>>GFOP*\^M]B#k\r?8Qh%ojDMA\@%lIa,r?/Ok_P&*K+%U9G(ln#<Ve,N#'R;OZ8r*L2F.o8;'_/LN>QF(U:61g=UrBA.r[FIGSN'ioe&FKUjV`nVp1MGF<pF56+B^Gk4%1LYb^haV.T+XmE$(hj1D3u!uh8V5?Qi2-T\=5Mm5FQ+/2i6]LdOkXR)P0,3Xs1nE.03De`.\!,a)8:RtCM7<?[b!Kn1gO.rL]f[6%@5.!R2kjI(SAUktJ9/P<YDBbl[U\K7?$n4sIG4o_OYTY9lQk-j(PeE=D*2apl%5RHfu\r7i-T!Z^RZ_HpB@;I]k?X>I5V%r_N3@>%J/GkE-I`g?+m0OihLges&88>US8$WDJ+gOf;H(M-IotrK`0MuBj28Y"<"oT;3>3IZLUe!_3[hS#Q`/9E8=!q_B)0KVqnib(N$6Tc%);k4`@QN09Q4#n$?6ZQ%\!HLqe'F0HrAY23A7XW.jjj_G/*;[t?,/*hkHAt%0K]*'NG6T9Uh-DKW20k,kHMZUJTI+!^"6&GoU\+a%-HL5f5Ll#5=\mOSrKi<f%>98I0=Vlno9=rK['6_K"!WH8QS1aBp73Z/+DL`!=llfB(hP.j1ScE+jQ!Q-?0Bjug/Nl<@#e.k&&2X2%E8c<H!&`pOD!:M:CdMj"Lk1Ct8aqm*\Nn\u8_MKgK80QG2@0;s7'DSdEM[FWO?8]Wn8j*@S##D=<fKPi/tl6cie%M7112?'Rc(sM%jc8b^eb;>_h_OtpG;_It%F"d=1:3$$JZ<]dAH7F+g\UG<^1_[D6mhbS2#1lWqe?.QN2K=kFV.2'q%*G^`^DV:D"JU'LiM20=W$bk%"IQ`G79IS=r@VU1.TIiY!3X#G8j;i\,)kYMjsnjMid>7`H1g5i)5*TjiB)\2\nRNec*9l@<F06gi!jpVHKFQI896"ZneJ@\%2rUr%ms$ao@hB3oro''snl;G);ptErft?L_2,3<H&\p(>iq6eiUOD0BSZ]9u'UZ2sWsc(7_b?3$N5CGJ>(->fFr-:Fa$@_dj@"'l@0'H1%4\-Me$cQ^P&g1maJQ*7U&c4I]MZI4`Yf_;.hG^^@)rDj"jN#b#:9#Q/IZW#Rb$e_g)N2R6H2hOD#PPGS(9ro/jH5(hr)meAH47G^%QmPP'O\Y*(D^Fbj,`Ra^&sE\>-k!ER$a]39ET39!B"\uXaEdQt]V-Y1]]658NmIX.mtg5P&Nl'=5;Y&?&E\mA)qJ33K_ukQgOCYq%IGr/abaD?*e8P7`.;sf7_M/^Vg;q6[X^Zk.GA+fni]Z1F6;;8Wh_#aaRZi9TQ_fBLF%em"$$]ba_R;FA'#M$j;m]]uqriSd7<%:M%'``?76#9peVai7K.-CWsC6QRX10Z`?\M1,)lUF@j--Sii#Q[%kos6F6k<f21m&S1lQ\7:b*&.Jr*F5/XJXSY;Y!m=%m$@oUomD"<%DfD-0+ZBQr3>psD_5JN23SWMP&JGa*b9m[3RQ6I%^p<ObR+VkYP)Y[/0q%c9>%mUrk[5f#*;7d%\Gqq<:sTn4",MbW#kIh4T`C^j%<s*rSY+2p@cS\im7c-cF>i:sBVj!L"+dF'$e@d:fa#QEuqK70'[La'*J3D\^Fd<aaFMF6#S=DX6'F^'s"l<T2#HP8.L^oLM(si(,%[q"V2$qLDH)`ZGo!Y'k+`iF(NNGlQH%F[E*c`sRIl[,dsXD\ed%ms,<iKH%GO5Vr2`gX5M)51Y/q.('XF#_&/l0+4A]T\<l%!UEQ%Ad][J(<MZHX8Ni^XWqCg?8OXJ`7VhX`j4381=<=S\!UhnBtoFG;!Fm0p*OHDFUiX*.KJR5.ntFQjCj&fROYf/aIa'G\qg;[(nOT6%fq1I5/*]U%K%JMV4BU:RpKk<7go[A4(l>'%o9SoZ#uDZRIbFlWb;4l`6>-=\*%R`/N/'Uua:A^U0*<%YbT'P."#qnW0G-E]AE0?G%6puJ8#Qt#1$C`c:ncX#e&1Htj!VTg6E:.%kXD]M41Z?l]Nok\[ThB1Z<Kk(4Lk1rh25$%cO9[-(V0$J'.n33HD%7eC.;/;-Z/(h]%)P6Na1/dj#.R83T-.iZ4I9`W(&\0o%n23Mj(uFGAamjWEYdX3R?]M3k/<+'Z6'rc!*:DcL7/Q(:m3Dd"X+haIJSn\qQ!RolW.@s.%*NKbW29#3BM?A5jK\eH0&#Z;Wi>TRrR5Z-.cTbY[RY/=?AgKd57(r+fT+8#rE[V[m@nOJkpp`2b]<6Ze]Na7Y:*coNTULS-9\gCF%98>C*0+?0oEPTKGrmiWQp="fQ=DMu$X!E=*j,(;p1>ZK>&1n'(UBLp]r/R['<//fhQG@a9W;Q>d9/6VuV$ptr6+k?Po+`)0BVXWj%9Jj-%1BAEm7%R[C"u2AA4snb'o^hliXa>bi;ID7s6-\uelCoWL+\Q8Q%PnYcl;MS`1Bs6#9$mRt#qhPH'-`u],P6:g(YZ,ebq4\!%U!Lp\B#.h0mm,2Uh09pE'P0.tJ1[>^fp:a'W=H$:l<f!<)+qY*>/BWW@7THFEtB^n-EU_qP$dWS&d*c1Cst)6nh<leV?'=$N#U@I%c"4sO"FcLa]Shnnm?TtR#4;_)<CJWC^H#jG*pd[2&SHql[nI7;U0&Fh']'tCR?IO[:V43!%c"\f[s#`#<iuq)oC1LU,MH[j?WMr,%W?<a:rfr1ADjSs<[89C!.i8`)E([KTg$@(pg5):Y3SkA'\G]VQ03M;:Ge`Y+qu*;8[WNr$:CgIm>Ghf?$piPN1JF0!l0sn:AUQPc%SjCcD-qjuSc$]m40oK,nm1C4g%Otj.>RUA@kABe-?[1k8)^h<'3B?*hoD7o8D7^:bZ1@q?/aH5kc4E9E(-U,Ee6lU$l1[HVBtod0%gb37CJ,-@VO=\-_ZZ5nAe2Qf=0bR,:%@'t?BsIj\paXfA2o!M10Elak_t$29^7Wp0JhU7(E]ro&\WJqAp-67bccBTj&O;FNlk\:q%_Fq(&](ObM\92]FLTcu([6E>20XX[FhoME29B[)"gSRb&&@C7"NNrL(]<B[_X4\XT`Ek'6=3[F4T:?q[$RGso)h7fg4R785W2'VC%%os.$iA;iu5qBaHllaFSqj`tG&gfM-&*2+;=/[MM0)('Z3?W9:,h;Z\U#[1C*Tim0*oYqf*/Y8s9>duf8@jt/n:n&@%A!7u:GGhe%P?PJUd(L+B@ZtXKr&=PAI%W:L>fa"@d;/*GpJ@%fD+g56pYr-\+Z!j>qD#A^l'qq:MC5nq+6k1KalOlPo6;".k381VTAQb6LHA^&%T4[T'm=PVnPB`92O!dkhO5Vr1Es5kMN.AlH<i'rEcI3>691m,3,hZ>B*?)KX#)]u_0Upf%ZpCnsRr%J9\Ncl:N(l%^/=9FZrrHfF%ZJLeDNg*'.'!o;X;)9rj>fq2<Kbc-CP5gf&#PWYi4d&gGXI3kFkrL'+m=B:6fJ"qnQdMB@^Xk*Y!ReqA(W:WTLEsuuM':igThX&d%g'?E[#d6s96+I[=RQ"=:(9(<#@`\&+S[*K#+6"Ln@hgX0B\<F9i$'!:ge(RTZUBW[>RL111nOR47LlT(YAstI93MFeOp(=SaI?.R%rUHi?089gGWf.cQ8#j)6Q@2hP>VMa&DBddYHV.!ThA'V2rQ*nW<oZFKaP8IG"$k98YEiDVP3@;uJC(bL&[h(M_Of]mF_WU`2XMUK%E?Y665\MjsnAPPnV*&c"-'CHPc3VGkA$Y]["f(WC\<t3IER,iUZSA/"ILOcJ=](eZI45CSUk55fcUTGS^>R=BT]<u83MM]7M^Kq(%V4h.oY9F8EaU=&[8KT=#_4Ei5Dqq;$._f5Yl/=9o"/go]r:h'V[3+n4(*]D?b)T5?054/a^@\Hm^Ire-lK]CMb3=/T&4i>7*D<=8%MJ>[E$L;42'O.[`iPVbQ"*:1hn`L'/AUfbbs*d$";j/u?L\TtDDm&ddqdYQUm-JKpCmh9q_;T(im$E3A'X;A3/%oi4UPTCo7h/cW%)3M_J-@I&CET[))mf%_l"\k1EJc-*3X2agCnni!;B-%@+'%'BH#fmg2R5X;@Z)1,o7m2fSm*D^^=AkB"9(!Iie:S)nXX4_ZLcsP[%GK.UKY%c!i>0s<]K/]cd__'SoI0P"g<Ymi<-m&HNqC7iU@ub=+O,:E_==YArnO>R'+TTT,XeJSZQKk0&*aUcB]R6qTSr8nmDK'1u%$WMkY]$Zd>:H$E;%H382i**Yb616t@<!_hPp7AGmJOqEa<<oP."%&Y*R,g2^#2.R]V^F!u(AeZOI$P^@(WL"t/hZ1UpE$Lp!;K)H%g%h4d;e3d-CiDkYEtUFX%3-=%EY)<WV+2X_LD)dMd\Z:]M1@)g.6Y8^-]U*ED.26gIOm0p%-79pl6nmmER?(5%I>mH2R+4&NY.W%%)jP@m+;]+@G4U#d(?pj5_$Wpr6HFYnA%SgaUFqsEBt_T60H^)2c?SGcn/)FL\s7*):_i5#*Xq[g>PIEekFsbe6H<mEB_/=K@=6A!%3cH5kBg![jqN`j0=qGKX!$h-tTd6/R'Qj,6BW&i[H'+kS/1\^C0$:!V*APM:#[h@.qb_?H=W#/%oU@.s.84H:H\)>p7$#^rnBgC'%>b72d^,V">)q%Skm-`T(c%$(W#_J>nET1gJYa'jQ\:T%Q@4V89_s%?aTqJt:Ps&!mglbqE0r@N_P8#j'Ysh`VWS`;\)tLEE_&jO=%6=;]rS$]muUm1H7@$EH+Tbk)A<R>Nkr0ro/JYsJ+r#]>Jg-A>cY\(Aq*?!<<<eP&,'L7u(gOHTG:*L5C6SSJePm&/@rd\H3o5*jF%G.=,+:?s:/0JVl,Bfc'oD8>1>-bDp'r3Kuh)W8rLH]9u&_a*K><9O6jYTsR+*-mF.VZg,fh+eV1$_,5C=8F1^L>;:qE+,K,#$Rsr%CVFm-E[ndU#!h)N>oR0-$!4@:4KBDNr3qJG^g-IULBmsF,;i2n9aK>\F+AIH%)Af(iQ7\Y9L?uq"lsYa_k>'HFd)7WoT)8V+_<,6%G\?g+LSk?.hZmQF_s4I4,0J6\h6l3'.AMS=P4*3>mY/ohj'$Z#?"aOZ%Jn!n\[&:'o=/e?$s;C/VPY.R.[LZ[\VIn?pKC7[AWdGo%EARmfjm[M5EfV1pE7';/"[q&"IaQu#*3R)fLAEm83q/-qHc6c!Y:8BulkU\Ib57gB.(Nf\gGMa+Ak&(5'R9L^/X4/7?)-F'>_9`&%+QK,Z;?gb-G_!;:Ju$5'Kthb'6GNi+K:F0UAkFZW?I8@(jG$<UIu,#Y7$P]K"B_0VB:OTi"Un\A)7%9'39&IIKeI5p9"<F9glV:X%5V(@Ie`*WafrR/._RT!%b5W+'fI8!:qSR$c"69'(Dh#8%GRY@MNJLImkT.GZN;gZ%V5G$U-d"^hq&iA-*`#JWWUL"A"Uj!e*ANV`%0"rpcg[#hF8-pJnU=X0FTZcW,:=lk>h8H4fL)7gCO(qoTK*M+"Xee>3bC,G^iG5!m")t`7G'`RNJ-DR.h^N4Ai;6jfHhTS'1s9*5%c';J9HX^\u&@^AY(''h9`Z5)9nsK[b=pVP(F*DC!)$2j7r9"4#,tVTG^ADF!hR0H8>!jL:B_D2_WpHn/]7P?u1g(fYB<B2]-=f4F%QBkX\0EZSoGnC7>QK30l[j.uP47`VJV"?o$?RdV_8>(hWDh49%4fRt&r1`'i\$?B*LLK*.fO-?o1_lRbktsoM)qu0IDQ%5<R:tb\%laQV2@*pYD.Am\@N@6i$Y(r9p5R#b\iYc_`$-^X)fe'GulE+151eJ.Z[S]p8&5@;XWW&.=/^-.#VR)ZX:LHdCDK@WmOtRZn#X[IT%KK(T5D]K)4J"d[:3;YF8SW2m)K,>s1oor&^-&CkcJKPu<=,31RE$_NkD&2Y&4GE6U6(pl7qDI"+e/hTsaJZd%iQC'.T[$CZ*R;<3%9Jq:L+/t,B_eX++bXE[0BSZ:@6ptt&4&ZNZa&A*":LAQ^f#0k3rD^+TE'?#(JCk!uLap;ljU12$a\gdL3GdtVCd4@B2?d7WM6oXC%na++P%-01uV-3iQF_A4=9]q[LMlXt/-RJ*X@?T(/.Fff,T_PNPT_EgoP7o2_YPcI[?$K6_GF+cu:IZ34F"?\10d9Bg9440-_u;'E%Y,3sm,s-\Np-P:!8)W)=grZj^`]hGYn9=h`W%(9^Yf*KVMjV.EcA6h]OmjR])O\$;Xm#HU<Y6FWr&_7O-W^;sp3DL8Mp:3jm!c4X%@Q!M%,Djaq/LdgdG3ITO(S!6d;kW,E'1:E*%ILl<n,d)q-W:)SJsL!.2:-i@,'>QK;r?m]!+\T3NJCQaiG[L>WCs2BSgd3Pq!VHL%UNa4.og,%aQC7M^_PG>o.C(;(j1jG^a<f6'XbPA)RhP;ZoJ7uT5.L(dK"(nU7,Dq`;+g`Wl/CosdcKuI,D=@YHNp"Xe>hc53^JG(%@]+qC^!u=cO-nnps*n7Z4Jees$>_6@`cT:a<DBeD3_`9<$U21$1bA1/Ij1No:@a%%Adi3\fYD7I8c/!&)9kY,#p%.McC/3SlX`[f%pFr,7Ec";gI`X&Y)(1Y)efIe?hg.90^RURbY+gcDa;p*J%5W1s@6o?U]Ji?]mp)jtchnX+\aI@/ASq:]g0o3%adns8S>RN`]P%4)%F/.qbW*8u:WI;$t9HMJqq4jkc=\7IepG]f?(E^oqdM+0Irfu]3e,!)dcMDo)P=#GgJc83-/uu8&$coE[4_tCUo-aag)Am>U;U?Z!%3\_>47_%=(J2iqT0Lbod--Jj^P%3!rl%/Htd)@r^VrdAB*<]P1?,+D8T)DhG"B'UniSeLrU/Th0JRaTd7\+t0'fo^sQA4HArndA8%2J3?EFi$OZVRE?+h/9OM)oN(b(Wrnb_QUJ?dg^?e5K>ia3-,[(c\f_H1Dg$ff:&shp\.=g,!$YkSW>J*7lc<?r;BL#GfAe62)/8\%D?`^NZZd0%4>u=><Q&l=6r#V=_R62?_S%n0geipG?Ps/\k+%+2nOD,1BV<R5%Qs9!gCCb.kCLrs`>P\qs,J.6)\e0L8Mub.8@C#3%@GD;Qja(,_h7@<&YO\(eEVO=*'T4!6Gm++n7MlOV+B8c&%_oT2MEHNS.-#>eZ9qQR1.dnVDA#59iWOd55n(R;&I^s(6bZV4,,o!5%m$iZ@!Hh"DIW3^hnPZb%Ce\6T$m5.(.X6F9XA#5eD-i_64(Dqt_#tAsItZND1Nh#r#Lm.87#9L61L<>S$^EQc5:D]FPXLB$XF:pX%or]Sr$U2ha)57%MFJ;mFi"&k29bC65,_h*gHqs^!#@G<!M+S3:&u9J]"US[PF1=@hmsb$H9Q5L$ADCudJ8B.`E!R8&]fJXI1K><B%87"rBq;N?KKXoGr'N4#b,bU/r,NC:.^mOgoV_Jm/MY0kmIG9u=nC'BXJY1G(AG@X3&X&QC8fDt41A%bm9P5mJZV*+eqASf4F.Po[%VH54j,tN@E6XC?@jtGshY$f)5-9+:dj43M301MRriE%QB8)RlF.dV6)Zsg/3nYK[orm/Y9im<0amDsO(68,0tOd_!<[$`1hM9'06%(=:Ds#'p0t='f;=ITe!;#(B,,;UaM=5F&Gh28VOTjma*d6[\5h<?BWrn`WY,[N:2@p6'f#dhrXBV]mPY$76mZNQMMuJt0nkFE@a^%W[-`6j"*(p(o.Zk[P3_3W.(G3#2PD<dtd.PH8t@M>r[VN4:?F'+@g7S"L<U_1f@d4OSaNBTc?EuZ\[0a0qlfeL$IS*c_jV-aFri/%KSD?1'CLcig_199<WlWX"=08B;?%]2W=an1glLuiS0F2/kV`P=@g1I^W9]iig,<E.T_@;L4s^^/HD)bqM36PZ=,"...)P7S58:,M%delpH1UTnEjpgpt+a/3678/D<(aFT:Wl!PS67hQR.&(H23cu=&TF&1RlJN<?B36FJ?_=+%9;7m^0;0iWl?k]%-3Y&ZYTRUG;^ON/%o.\Mu,T,0%2Jj1BLX[-;aYm[2V1T(S]N.'k,b%Bg7:H2;eOe#c,BQ9u9NVrMj#$!Z'>fA6nfp"H#td=m##hq/N1/!aH0q7&=Ek:2%<D#KQ<cAL#'8OU8W`<P=K53M'TdE@M%fL-.pGfapU33+6VI)]o0/umd'PO5"_?loZ>Ku'7JigJpjXSK5E0[h]jq'/i<!VG(6s"I[%]ESbQPC(_V).5?XCLS8'V@8A,_&\nR7L@3s+npB>H)M2s\4@f)Ti`$#([Cti%93Lm@>"cH?ndGA:sCh])Q$[?l:DnjVl<LoOS;%U%Pc1%e'd7.3L(:@8EN.on@"OAIZ%Ofr!X[GOd'E1k4jmb=4ERL$^FYfs0BA%[@h^+1d`rrBDB@+Lh?hUrn[q956jG/f=q_LMNr*3P%F>!qEOjUI[T;Em:mM&,g()a!AEq(PZ>4`^j)"Kle<.]\]1\Tiu"2u2f<?\fn(&WYUKP2E3$-Uq7[&Tj:H!_-[4p2<YM^Kg))clpl%ONFl.c4DKZL?(/.l<q&LdIL<N8<jmk@AYYC_#r\QKM6Xj.20sg'#(%p17<li6&VRQKGLhIllUfr%9'_\-DK:rlK&jbZsad\.'r,R%mOV;(g4q'[$O//^bPXY0#TD26-OEWPS*"Ds9:9/o#.7:"\g\-GN$sV()Gt/Q[f"&lk6b/K@4!7o'FGB&O@Y`K8/*^H8c4I:%U#c/%7Mq+'e@=S1Ra"/7;U.TPWa\7]G06rl4Gc3.m!q(ci^dWKhP^Z`E^l/M3e8<=GT(:a<Y%f]52nK)"0rnQ90UW>oF[d3aD%J-Jf`R\%/6,tKVEu7c8-^b;s)8`6"mLOaj@#XZL6Nm)$NEC9jQO6E;i_/X>q/1K!"Iii(0J?S,Ck:L6m)L@=F^JpLk#OV!"]-\!Wbt"#f$HM%9L&Rgi'Ii[^kE'0"!iDJ#V>1i!$6(c<WdKM+:Z*g,iF4Z?m#F\!.]Z_i#e:4%#PT8YpXXH2YBgGkd2U\XBlM+Uaf,+1I7HDWPZ/2%D+1H-RaHMdJg?FVYb4t9M+0e&#uiYo1gG=)P<bD%$,Tdef?dV(CE$p#e?"h73]Fe"eY_=i.I,32!nB+ofp.6L'J(@>^@TC-Bi;>>%9q5.8W[S*GO9@i_La_Ik(oLbn$I+oS44T;-%-lNAgkebh>*BRoM*pMb%*&rEX#S<m0ij1-<d+$@6o.d&C'ga#/;PCQJd$P4;41!G%Tf?+KSPWN*-#csc)q#bHC2>0B7chgg#`#dEJjt.5fon$'Z#SX.0O$t:O9q`RRd\2r#30:D$F1ksJC^F4j<OLF=;@ki6R"8/-=uiX%\en)5?@4bKT&"rUEE0ad&[,4o8RBAJC5rl6Se/2o0qB_+7TM)RDoNKdHO=466-,,T,5[=O/2ak1<(BpW2R(0:EbN]#cROMn&4K;1%nHo"5j+nu12F8*k;m;o`Fi0mt.Z2b1F;p/W16+k(L"R.Wi+!rI<Fc_S)uN+rU5I,/dc/)uE(h!>K@H`p>*!`Z+sgT/$Mm/PD(q+;%e-)t#;T/lYr]U\GAX7&I@p-XIU.;=f;]i_^gSG+I%M_LN2R]L</Z;aBLY,j<8VPeX[9tj8[Wb>7B$pGs'%$P$+Z9K;YVcjD2@2o$%'i?!*.PQC.14!&t.SsqXVQQ3)<,&lFe\N_uF_X@hL8MmU;C[AOTjh!D=prOe#03a$Lg&3)N-pBdU/k>_72iBsb#54e*g7NN>#'lS%@6I\6.r5TR<KLNe'`Af`Z%8Em(T-CF*\')3o[DPnIU3]?ns!<0M==W$VT]aFWC+W=*+0>C\kj>n9-j%1J(K_"l;Y$DKZ-(O7'%,E%9IFR);amX4o$k/U`]V)i9GS@Q4Y0(m0X96>_Sf(-2c5sp]*T.?.P2i<CkgRGoP$!5<\+EV',D6O<MUq;nfqU#,r)H@m,;kBr4^9s%Lfd)F;!]s()&Dg;_d]naC=%/B(um$'W5+d9aIXJp`(2RQm*^1OO=*Rm!oX]cK)S[H'/;g^Yo#JB+uUWf:5E#+k'm(YS*fY`%u3AY%$k_6UZm\>d&edR1o"niM%Z;or%?+03fG$/HOB>JIK#DC;4G^'G')Q5SX;)1'MI5)gORtoY7,H&38[V)C@$0"FO_unG5>3N-MG(g6%+Ap&a3ZI2g$m9-M6F(&7L\Y>d%$BFYTsl$VD!:%*Nm1L_"QD*b<ocMiRA*-t)*Q&]W4/_:P_DV:.RB?dN_lH*Vhie4]&?]L=NFYP%p*ip@TW((!:TVZkH9ED]F9N'5p!XBKJ?t=l.paHs-kUb/"rL%u*dUD?C+<[4Mi*sV'\3Z`J^@ZELbpOhEfg,qj4->h01%rgQ;E^$%$$$=VT.:ZscT[<n/ZM6&K7$K`1^8CqqORnbU2#AW^^[as`+6c5_j_B_8eA&_BqPu-4LRC>#)2FH]d=`%&<6\)7B0Qq,NoMNPPaH(%PE=KipSBpGB>i^=A=VB:QTlpJJj9%pRa]dO;oOqc./<Oj6),,aY1C6#8'pkDd,,.H25sDR@"?)Xnt$F1X&U1G:`iM0iYP>>.`QJ$%4/-$b9f1339L//K`ESugb#OUn2&;63k+(of`DC>32iT#d!FD>B<CL?r7dh'C0R:SmlupGplu\Gt4N%scnAHS".E!B95ms9SYX4jj%@a:,MKt%7qH,ULl^tEM5ES/0MEbN<k`B@08m5q.UD8@8%EB"ePU4SjH8_"E:O^mht;'M's@XNgmY*L&D"Uk#BTngYW&PA0Q')K*k%a4rEW[fQj?$OWX`ifS2i'c:?*+en)WV:XZIn.kM$Uj]6eUCrk<g^4g!C/L\/>IXn^1Z<B(,XTSF*`3Pred;%8pl<DR*1S*#TiB-$%=b-SX0-Q=/^/XL==:Q3p2MUe\_j7==68I#emMl"7"L8(8#3BG2'<!;fM,7N;@a>ZLki>)V_)$"jMGiqoUa94(qC*E(ZHllVT#4Z]%!JZE+U)m:]0UAAIo7*/^<j4j/_(`U`NX4YGOl^QsIDS!XI&>m&FV$'*0VE92a[@3c_um!2Ym708(KXEE%u=hUKhp(bK?9/YZ%<9Q%0Y!$#_ba9"%gq<==A`K2!\ufgU/KFqFtN!8P87#to"ks*d3%ojQBP>m4Jk,lfg!=g6JagNAiLAMV"2@_n"=&L:,Pt(_5ik\#!72B%(M^ru.&mF*<36Qc$I+?,,];f[/241sL1)taX,r,VUiAp=A:r"h7c9e8+G%W!)(M15&m/!O<fo`N9*1M8Pea>&e0TM1L_FVM#*gf8%NNDCO>Jq]r2jJ0pK1Tn%75A'l(OZi$A'4BsIPcUtPjmI6[#LlT(f#[`lj,unNhL\D)i^4UMDB@p$[Pe%q"Bmp9qRPX%HHa(OZYf1%?_p#qhAld/TWUj/(MP-AO'd!EB#BZ>8$K:D91g%aF_N7EPAD2<PRHK%Cs6eW8GX!?_f%ULQOj=H&B*SN-/ZS$R0N2SNk&G].#9ui%Y^o.%+GE@\kb<*;>a"*`"$*.L)(J5.*Oat76EDja@;?OZ#kWXf.2n$lJ[')L'3`n=mu'_R*^VAO9WdAY`$f71#tM_VqeA\>?Q_oe%VX>;+4*$,Y"#*4;/*Ff/F+T64PnEiH:kg<?aL..rL'n;uLaYR/HJX;m)/#<G<LAnW3bN)YDS5TpW_L;2f"?ghLMm*2eS#Sr5U2WY%Bfh`?(TJY3H`\V^D)_jYgbi/)+d\@imAEZ8FR3:kQ,?:I/7BltfQYE[]5u_46pH%.;9\QF7&q6(LXB'M=O<3TEf!Y%'>>_+.qt@b%\]1cl2fSk*CGa%nE2gi#/g46RWpQ&k[jf6rZq*2hY)GgpV.u.Q;A563RL'2tj=WD8<\YsV*?CcMW/&P8W_u77R&Xb`.R?"SR#tI3%=,F)/KI-0G1lTf6Le-(24G9C_MASG?Vcmu>(8VA79Z7'r(eu3?7(>S+1KPSFk*!SeMq>BhihK=Q/(a6bra66^.\bG7-C>tq.^k7/%;7nM/rhKm]FUK$uO;&:&8]%'tkXJ%]5p98@T.(FB3j[I07%NA441pE_9FIHg4B,#AUK=cJFiA+b,=45C7;Rbse\(J=afl-_cNPh$%+;5ht+O>Wqj;)8MHH@>1%>K0@0r!BS+-%CP:GKFN#(KI5nQeV@!_oofAA#)'!!>a=8iio2BKQk]Ln+8(%s>plek*7-Vjci\/P\Y?%&W7J`N!EZ^0skS8Qo\_HU7SkeG%jpS#7ILREkPRU*u0Uqb"U&8duarq(j^lbI#'e>=ba8M&K2/"[>6f52YTg`C&"P@IddRNOrQ&'%aZ?&A`6!ko&'h*ZA^I/TijFJ9LCrg(3JOR!.'%7_ALUKLG;B"3p#6n_g240/oV,1@9MjL^H>81\WsEce6dqhs?;Y1p)Yr0[rMQ,r%V,ESF=O&8gH(LBG#tA-]PkJBF#-onfIj.(Xn0od(cO);s@QHQF]m*81$O2;&9-e=#N2OO1P$qTo&%=qp*^S'W)Oc;+5U@RO_@U3>%$=gUkp]rTInW9Fg:$BqT(E:5j&nN7#Vs/k`DNhK=b)CVeJu5@ZZhS4C+&]%`N,kA+-kFsu*>+$^CEeWA[W`)VJD0RpnQNn*;+.4>%:XK"Hku<6K>a>cX_'>r5<g$c'\OlKK\K1!O.LeKT/&b7e#s:GH^aiOV9hU>1b=Qpk$^1)QIgJ^o,\ClO>d'\qbQr8V5BtF!W^\_m%a!>ts8l;Y-1nl.%?6uFm,KMkXpkF.A<%EeC.4M_Gq$\3ab1I>5WM)o:l]el\OfhB7Rl.oeS=n(=o?Lu9P$KARqL`=4W%@1<,4/"`%OI@\jl'FbtKrX+MN+[[hgp0Iu71]<hA7"o>22iY"XAnei5VAL#+s,gCWDSmJ[&0@2,g6MQ(`<OH?pL1<H[P15q)>B_9bJ$Mg5L8$%%B9=g`Q7TY0eB"b2<(g/:U%\FTf?"d6!JimLrQ,5U2cl!j\DgJ2Qr6g8rnrZVNHVeokK'mb+;!IC,cO]JU!kp749rcj"$L):lWLU%NKKt*7fo)hVPK>aP)e8Jd6lu2RBJr$::</3`[%+P#C0h"U'Wa/e)MEc:ESVqOf;uj,A1,-PUopr`2GpZYp;3t_N<;6+[-GR8Q1%!%I!SI5VF(T`S<3!*1-uTG:Xq<1;7mf;d;]IB;n?!C?5T"=-B=X$%$c\2/tu/Y+&r%ID4g#cj5E@208Dp6)N07MH-i!X0sB-3Z.`=7%KQ8fUZ;IZh:ad"5mX28\3TO;(5LkFG,UfZ+NE#`7a:E!k;6`O]b5Rcl]Tm6Z8;2_c/>\*lJBIP<_q7<,.]DS(^o``f_bm3m;p>rk%OkM!WM=HBLTtf:q.5^e'<bEY!<`<0u)O2l#L?R6H4<SB'3m=ug_G;Qn7orh@'#s-XO(ms!/iBg%"=I>IX4JoTX9jl.1ul118$2DO%.4?BN]WdPt7R)Z1FLWg;9j5e;,nc-Q5DQ2M8O2^W0U3C>OJ;T#N=W1s$R:71Z8l0tc!%?-@W&0D,9t_-i]jP-r%SLt\;S@2Zr*$D%O^`W@MHDl-&m22tb=?RXHFVk+O.Lp:1s-5`5RVEq4ZJS9"s)\(K1,?5p"h#G=3c9F92*hH*m>/f@&d]2iC')mOks"YKmHRc(XWe&%GXY[E-K26NZ<.3S+D4)ACC2\W&B@E!:_i6-bK,1I:,AW5kiJF+@hM\31XH5MnI@:u/7K\!(O\,.WFA]J5!mP_&p^nGL:H=Y?KFO@%HpDG/BjTb-K_Ue!VIEH2%>-,&L,Pm%;b*26@tgr!</gPWAr0$H#;Ho]`fiY/0YF')-YO\Ke5-ZD5%h72ngH9m_g&u&,Z4Oq_=7hg%:jls7Tb*)D3g8tk^`Y1Z">.qN>!gaX:$b.NKu:lXS?u^^_Ca#cI8IKkWGl*qVX\qdGY'`hWXGLn4s6#1/5d]"ZY&9QaKL@OR5I[K%Z"f@u0Yt\LU#;)pO;(leQZPcW7-TnkNWUjo`.i(F6no@#9+n;Bi>@tM_A)PWbIQtud^"PE8[t%#:aVOg0e1u>4@DYl+[i+XHL2#2%7+;>h);S37M7>9:.9J:Vf/;?N)$rm_:3.`83b)DAR5!*87?^mg,TIHU^e\3A.0SHd0oQ8.dR,9P=.!*a'7$fKGsJa$9Lap!Qr!'(%9$\pRA<UM"HpR:C<&;_*l*$.a6AQJ3P=_0b#N8?^(ln4?OGlO.Oq9.@_D%!+M.A^](K*$%`5GC"W8#7LKQ:m%jJ\FP_poeH)EDTO%rSgR"_2c+S6=JXc4?FN+GD+&t8hr/j7WYP.(f#t.0\g/o9\%D/aJm':RbM+7UWsCd>rkAo/n..dZk-KpV$On#8q]+e,QtTU(`LBC%+ZQq#9,K$8OiPdM?Ll_RE[):m_pIcnSQ_\gL_6?'D\77p%'PI2H.7FQ.i"IQSGX)&=bC.>NLu.OhO>2<1-lf&%9[9_85]Y"q4COB%(:A?%R!$hV77`Nq-B&.-PV"j,7K_UD;din8cB=`m:l/*oA!SuPAPh#)E#WqgJ7^e5@$M#2jMrDqWVqWG"U.I?*CbbIGT[.o#U1aU%@&ce;eR76b->JAm_%*2[CiPjKO3=cdZ#U/Y<3PeN-?)<==qP64S0T8dWlAkTg5qo?J7KY6=+V!siA$;DKU7%4.&>n+'[hKu"I\O+%%!ghY[0mS7%8.jAZZ%_sEV)6&`@L&p/;=r?"JN)W,B4$ECQ<$!KOHUBK1ClPN6tTIUU1jF%FZdq]uD=9bIte6-^C,K#T'"a0MLi_%Isd>[)5DFER>)QSLdFcW`BV'KD_/WBGiGA$U$<_(s%Y^R#N&eZd+F<TSIqir>8AqrL!G=ohb90Z(em\lnL-T(*j_M**!o3$BL]/c%+]2/oN?WX=7JXG>:O&m<7=GEXBNQL1Kmn]o.([S!eKC-i^fWg#Y"N/!CaY#7'Es<q@jT$0oFur-FZdRA`l1fH#];dT;8U6gFKElE%M1)<hlq$Z0-pt,'@'/<$UBiqckp0cMo2VPJP(>-)9Mq[j,e>*m)\aUY0eCoT;4X^02&@$dI9;:lbrPY[*PisA$LBmkZbcYj=4'j(%km<MnNV$--;fl_*6pjLsGhN`-hZl>9oai]!.SfoAZ,]d\%5H3D,&4Y0p3DtC\B'hqZ$Zu=!Hg]3=5`?YiNoUloI3g`*;(qA6rMmk%9`=`EVoNTa;XZ(]`5fh2VH)VYX&n=LGZ?7?2;tB>_'a>f6?r!dCA&=#%5Kr&ig6[)FsL?1$&#*$aEXMA=b]6gJp9!Jf4h'IY*V*Y%dgbNG$dG<lK,V:b66i5r/o9fG'dH9n$Zf$f9V.DEUHBM??RIl)peW?*<I0mMa,CDn#2P2@&upi/<GImskOof;6!C)<]nJDW=q[iA%XN/[VVV^&\nLn%DMLq\/g+SL[_$$m&:.\PH0Kl-MhR/i7,&+3!$k;U4VcXP`bqt@`&[>.e1URCg7"VAsQ;Ft'PEtK__FRZ]RYT*@%`QY,KQD,4%)%OX<WQnIud4X.]0?#F+7T>AB=!s_70'7OKM,*FQO&KAi4EnN`n5SDI3ol>UgGkEGl6tk>TT(fTf*EUGR_;SJ']Z-t%Ob@JoQf)ReU))Wno2(5)R<T^?<KSIl87^*eDcjY3@C36i;tNFTBda`;Q:EdZ+\$6<*7r\G<>2926m$gcc,qaqH>R,uR>QHSW#4(G%+pJ],KVZ[E%Z^@&/%V4+oSJCANK3=$Z#)@]X5X"=*JgRtdR0^_)E.g+.7#%<?,'$[QRTD<NNan;&=m^Hb/^G.a+CIg&k3OL2*<=M%<u$.>Zns0s<CL(7MJn?JbS>nQ<36H&*(X;pZCnIA4JkRlN5B7=@GZ<f&.DIRWg4-;,&^R)rW0PloK%GB.7jZ/G]@i&=@D0TL*p6*%#Zk,E<)d9e.AF[#%nTcCL0U4W@AMJ30JS#pPjFY'83fNMNPuT3">*MYVkLPQOl.p*peldBkc.OZ71pm>$,WNM(pA`;6Oe*=)jugd%n'("p,ou.G)!4g?&_>b/I<u_$#qj^pU]TAUE@K7;$1qoY6:(;[Z`=$1ItD%4"CGU_Th\@2M*S6bXNG8&KmkD4o/\ml0UE\YaG#nP%4:P'lX)fJfN6mV5gX+RP<W0m5D$'ZqGZ?oRHO1m2'']f4n7q('5VK*i?;)a2TqO0$+m23Y5$!qhb5!/-=^T--O8b,J"[2(]Vbu*.%;*ph^TM.VB:mVC:DIID)'/CI$m^G55^$6:VZpin5@2D[J*obY:TGX"h%IlGQ^WtWb+[3f$=NjJB54B_m[![hL-$:c=NGFO]8'4gX%T^cVbW68$GjH47ud"sY[hF!DBCmgtbq(jTQ=<LS:Hr:p+-`VhTFblaX+^*/-as'6ki!F-?Z@cQh'#\G!KbqXQ"s^bp85N7V5El_E%@W9[/B(I`#[1$Ni+e*Nck_e$$+BC1I4C!WB$<p.PI\1o&(=M[(8/S90Pq%sj%Fch`0X?R@(2:1di^aGKdW&,9;G8>aMaBa-GYf0Q%#/p&KnUjduV9GYPXbU:E'W.`KVPm67'.\8)r'3-,,/6D+UI;^D<5d.Z/=#XB6Ih_dU`c@gNhM>D?FGMJ73tj+ZDm&0Tk_ipQ3j\P%a?&FKTr<c7@;8UXqC*_I[maP64e4(4An1UlH=9W>()<1!@V6c7R#'7[=JLqm#!EApiLiH4@"GkUFiG/"Y&N^uXif>FLCn*r+tW>L%aWD.qQclNS11^_LC+coNE'K_^"_BcT@nW)!&>;?nB8A=3'!@mbRWYc@!ajOS*\%IMdG@<?R>4?l0p72OoQh&mWud"?H5MgLkq#Pf%HO2!a.$RmbW<ksldd"c0.M,16<4ni"6toUf;/HXeejR>reh<bkcdE5epo:#_d&Id1$r+tsCo9B@;\@#O`NOk[9Xi>sNUfVu=;*@`%$mN)GctaV0'O/g9P)>&L)L5eJYIYq]Q*Qk:Z44D/;!hW?;Q*XoVGGFSJQhX/3cp.W1q3l.r7jI*[Ot?\(a6sOnr%*I:t93?O?OCK%,7"1(HOQ]!Pt3$'U*>\H#)u$(&Z]\<#Z@lLg3k<\Q^G:8CPsLKr'T!Y1pVk9KVN;CJP(JS62Lj9Sc/iD2#[au`uHg2'M4M-8qQOG%$DLqELnR5%p70Bd,'6MR:><DQ>2:'19BnM`Umb'rZ>[WKItiTBMDEEL;4()infWG04@k0)6G\^NQn"J215[8oTd=]Fdo=\)G+:^%%k*smpac^%P1;cV5!PU$h(mV?j'bd;DTsGmO;4>TU;cSV`2RDT8?G[#d*A(]"Yb3I,iAEgu-EoS^-+'Vd[A6>ao`R1O$5T!S4HXql%#:-&G3D-<g3^e$JXAgq#%4fO28Opu@"a5J`?2RrkO)[h@Y4utCQs`![DV850RL$;D)t].A^@LR&-Ia#M(\S<0Mj,n?@t^#$(D<K.%JcYi?)%*d&8_S/4nLQdgA"hFLbS_>.p0,YcGboW,7Yai>JQ<A!FJalncrsuiT##MD;sm`KE?K#:Tf-nq&4I#lh;uC6"#2g%lO;AZ%eR>#/6I#5/<;V90kPNW""N0k'BV`PEN-lIXO!:<+'p1mX<KJ(hF:4;,Biot5plPk<6MAX?<$;],K@a$7SOK:hp7UqaB##:D+YQ;T%_#g%^Ted7kcr:QDU-o%lQ-:q\U+;A1YNA)+G_l0+Tk:O_,oBfQN<030jQ3d;[q:TG)*3DDO?P(IW*r/H!=$I2#W(M(;e/Os#+5K\%NDP3A//Yng+c]%.;J'kt94ih#CLf;*(_YVVbUgV)r>drC-s//XTehGqZTp=N.m,O!ZW<`]C*:+7g9mb[8NC4X)%>8fKQO.Y$]0`I%2*n)i%qI74UCfs",fA=K1GK=0`>/q.$5UiP(mHnBgeAn/Hppq6A5D8O;Y,TV.($?;^(fs!PRPWQ3CH7g<Ft?<I:s9F"$%)f=@5cu%&mg6LJcumZE1qU6lT?4@K<dp$Q@A2"$o)>84pH]f`!g10Ar!%7]autJY&4N:fS_%hnRC?t%(ZjeOMX=ViiniKWl9[OJculA&lN4:%A8mi(kUHg1<&ff?W[/+?_=m+F)cfB1K4Vh(=_Wa(,pQuTP/0[&A].R?&kXF2-s/aaMT/"VQD2_A.[<!VShQm(K#*@%%6KOT_h`mN%W&&o73NHnQ&9:K6[l%o887MkHJj]Z!DTG4XM[C+$$TQjn$!/8Z#oSgS)@h6q#pBX$TXBb&QRG-Q9D;h?[a:p*MiD2M$mBWU<!Z@*%5\ciD)),ARL9)(9"8XP\;Pg*]\4".9"*'b*HC-*?^`]B4MQ`+JLpdWCmb0k3m&t@O;2?daFc+ViU*'dYOA*$XMXkj-U(W6+0BDXL%KVWb#Jd%*5JlbGOeK`#_3$cl9PHeBV@A4?jq/h(ZntaeI$#tkmB8W<R9'UPE8;/6G_R%cN6\6[&G=OZT$4\cZ)W@`La/0_h6W:+M%Ps#m,`tj?W]rYU-YY7Kl:PE[<d2o!=RSdICOk&?=O3g?rA!X,El5@dBSr2*t5pY_Tpp$-ER%eN,<&,%cZ!EZ'#r_LT^]9!feOG@:%KMR=;e/2pfO^snP'iJ#8?pHP9,_`;$P=1+>-j$187%b&JPR821DPG.0-k'_uRP^`]<+(4WH),J<0PF^Fl6^4tP6t@->cl$--!j^h%WbP(PdFJGQ"kC[`6:>'ejFi<R;g'gKKhR4(jUce^WPUHI>rI(_dG$0KeAWG]_`C+RZ<0M^cEk$b.QGCcA>NakCtqf+Je="sA@X=k%-q"hd"N.1R!2_p7[trXEWYf.QFqk/gAi(6'W6UKiC'.Wtj64cL]b0K62e$3/[8HF,A2;HS1t\5u#tT_O0k$TFVQ49[h4R?XHnm3.%*YODR1T\eD$/E<2WU4/;G0ap1##6_=nr,q:i//9cTD!gTLj7&bj%tA%_1Fkl#$[>12G<8h5UM)J<CFEjBLNTc2Q3;mAO6'tg/`lE%n57gLiX,EC(4nkONRE`td*6m!&F;5gp^.Y<!!E9%!!!"L!XV[G!ZMDr"tIuNJHRs*!=s9;!Z[lK5QVXU^]l(BJI$Kc!u]0F"9oJ=%5m056!<jI)!!Xtc!=h(S!YgFj!rr<$"ToSA#:)!T#Y6(h"?>lO$<U[;*KYdW,!bF\"!TNfd%[O.'L#EoPJ]Eq,AN<u?%'SOYX(\"%Xb.X.>`S>:%"68-)MZh.H>KHskd9WA8E<(AM'g;6g*g5=BgO`M$a#Mk@3hf$>@RYr/eV&H?4o_m[Up^`<LSblP0l6/X^pS##jF_l%/GL`W2NY&:Wj0guW[8C&Xd$>l3i(-RM--ke;rT)U1U!r.9M@l+N$AaJ5`A`s>U;31$cnH&5uNS/#]7@b,AJt['85S=JMes0:`D%'%^/50)JdG$nds1Al_YVQN_+EFL$I3b7HjC<G)-2M`;jn6967cY+!:_hF\qKQTHJZR1ni]TmBgZBclk,Q)D2I1N=*/C9<J^lRc!B9o%MVuTk_Ln)H3*i81kP5i&.a(^rb&R1lJj,Y"V8H^l-'ChLk.st.af=@E&]X&`4Eu-CU`pXb1dGsk#"'/8,(>Wbh_<Tu0dS%lj?M^D%(c@*mW5&D8`FdDLcV--_i5Ot:g4CDEejHPY)L<56W]k`J87c)2.JZGr9uUFJWfW[1YZ?VM7XcN:;IA?klJR*)f,ZhgBFHF9CM8*b%`"Z7H#ohKC0e-;@\V(e)SUL#>\U:mo%ot6_*/4\_of;:Pe;6E61$?VgiP>f13I2g%>Y'I.Lk?;]<.f:I6F8NT#%`+*Fh'dbB\;UC%I38rmQqp;\F<>*AUooLNk/,Hh9r=["hV?XqKU]t<,".`;AuLMlNFf+V?5\G7SgHMG;Cp@`m*Q`t7od]b]g?r!b13HEU5$dN,T%[:%$84hPS_E;5WKPCl'$3WgU>=&sRMaE_p,^t-2*Rk`c:I0G!:LU*m>22"QoI7(Ld8>7SS_pKf1W%a'89&54;f$1OY(Z>,D:q"bcjL<%5S?I>)DS%p=A^E%W`8o@V50[rFXD0^]"2IGiC@.I((KLBVg+o4b,L5\03EhB8l61TS*CcQg[6+acmgcEdcYA-AjT(Js3ta,e8S6I%k;DbHiG";U/ZMI@[Fslgje[[t0"PSNAuJn8&j+0&#rt:MO<FopRb<os"rU$=+[-m*:Q/FFKLW(a\80j;aN>WaKmRB29J7\uMde[(%PZBidO<qg^9DGHQTSSL^@>;^%R%]*8_\O9a6e+Rljg-(N%#;:619#CE!Y#C;'(HBZUClP:%%4,HL'f7ER/53OnYmqV2;GtldH(p+%R_=h>EgJDHe>8?P[tb5N)&'n6MMe\Z7`_%@!7PE(VOEU%l;4Lp"?iath<1,1r/<A5@#BHqe&3/RT@-<56AKbmb9b4LDY<NE-5<LS%8<Ah\84!k@S`uO6K>OYD;hdt][L"an+Yb`/\@j#R-4\LsP[+KBj"s]'g'md5%^!@L`.sWQ,pp\l6a$;bTQ!=s3<`\0-k$k=(36i1%kbm(/ZC5&f_P2![k!3K,N)9/L4cJ-?aMcmE6mcO*!/#Dt#Dn\_`;`uI.q]YRaf"f8Xs'`WV4&N8#TBco[2>0\"m*$oIlR5rg3Mq<%8=*0"&+S;pOR"I(Ln'5EWi?9r$ku`He.?LsoN)9?M4mVmWV4F:FX>S;N.EMoU=i7`T#(M."I6qC.J8?a==GFY'.@,AN!LV,Yi(Ku%6o^9(9e;\<af4>R2%p`?j!,;,[Zuc)%P@EBLOLL#B512<:JerjfF(:cVNDQr3f!<OCRZ+l0t[mpU)K4Ld2OBq:a)t/JkMhZMX#l-%_L_)^rc)jCVK7Fu.:UB8cup<sXW+!%>>Y:)!?;hXs)rZb0ZZ-;[jNB,(6+Eq>\8j;VbF!]C)UOC3CUuf?DCXPPDTjO)4CNs[H\&k%_C#WR<4./>2n-t,@^T$1ZkH&Pn:i2';l,'lM>DO5NN/pl3cuF6?oXLO?GQaY876sn7D,YbI"o`'s.XNjG;iJ>@Z.?LVb2OBNRSlL%"O6,!bZAO='Qr=>8k7$kaeYp2d603n`Zc*Y'ijBA#?-8LZO*NZ=Q#YCWMZMTOdQI]X/a9LbYQ\!a2seSM'%<!?)1]Kb\SK)p#8"7%Wrp@8a^i[KYY$(aA1B,_'Fr-_D7gj_WaJ,85Za&g%%U!13QbG`ECd!8EcS,kGm.+O6Ob@&3_(Ba][H&FF`Ajn.Z59A,Pf89`;dD`%E"/Ch<OHQlJH7g"d"-j<-Q^rRk9^VZW^<\?)+MiTTobtta&I3B@H\#G1k&)Wc7foY.6)"Z-5oiLTgTWd+P]WqTaY3qWL7,'L7B`%%33%j1fRY#98trIq`bpE!G])J>&.(7cdkeB$5FI?6S:sV$bsk)n.8h9Q'^-^N"Q!"ih`6lKWD8`>'T1@m;H+bDF5.KNMlC=/7s0I.%kS:HJ3K,F2RV@FSX<aRnr'V2S#ApIu.N)f3IQP\<ZpHV\g-Ll-.>L`q5)E:\Z61+8Gpnra)7M$uXfW2c'gs;\C6#tUC,QWG7V*\T%O3eq1;bg"k&RTN+15cdf,\"n^qi#>*KIS>/68'h!Y1lmIR^e!VcXOs/_%LkT6kMtTR[NhG*"Znd#>tfVDk7-E*'pO,=r%K<&=T>\%InV(3\kpGOO;DjU;c;Bt3iQZ4N6#=*QOf3F-mbSJCogs=7I.aIHg9<]#@1Ro'Trt5f%Nq89JDk/;.8i??_7Wk2;+!rnKA4W[5Ff2%-KKts;6L1E*X<<IM9aSo_2e_o-3>R%,!%7rjA7?>`d-[4kVZN=,b7SbL1`Fgh<PEYA$=)X>CAkO"1_-+JNQq,ZN8I<(50WZ/#uLp%fnT#M<R8Z"m7&SHUQRk^eQ3pQc\/rQ-l6[EMbb9j"E2fR"HOcNFddBO,p&N,(1WeC2W:XbC31AZ//XLEU]aKni73`\3d%?;'tc\3%aEDMu&WS'7nEEt$Ou@OuA%EI$)[SC=QKh1A,n>5KF>H2<m:.Rik,hkJ1(.W);gHH+A14-u&P^3-`55MraAo!mRms.76%W^T>7-lo%"M.@sJe4%mU8X'7'^^#-je]bpL39uNH-"c@"^P/$62pZ(KHq9e,UnRH53?jEK>Q(k[Wpb0iBn,AWhlC%e0@##8bd*=%O'!mrEd%t%l+Vp$:seOeR@&mVMC]>f,jpS8jAT`n6ps3P+r!.d`\kRe1;Q?e8,/;mC(rYpALH;lRX#(W1Eh`kh$`r&q2%AA7<Ba7oH5qVlkdJs%IL-ZcOs'=O+>Ktg8.[V/CllM]Uqk:R['dchZrV?U`!Tkf!oE6p-]YF:M'+*-e#6?7W)''g26aK26H2hVWA3]aM?3]AnYu%:U`tt\%6k3'<?'s&.a(5C/V'%Yq&l(&\[%kBBU;'k7\O%_(kJVa/`JB8gU?@6iU8KaB[#G/BGY%j@D\"_37?Psh8.E$7'mn&ZkW7*C>,:AL%&@GtFWX7Z0,9I+m8o@O$KTj.O@S!4Cpb^LL/$oj>&rr/CVdE\c6PZF)2'(6Y5&H@Z^:I%PBG"+Ba<P;[16dJZSBNJ$[7:hfWGjp[%AnTE?B,7qT3]H.k@-sq,<:r&1Wc54N4g=6AUh9T.j$V9h]MO5bOI#/RZ=-dbo9p<bNRoSp^^>k8s2Qj9==rNp[WJ1o9+lOS$S2mE%*:K_(OdAbLnuC1$MiT2*=[eFlLhJYG8.uXo$aDM)FJVUq1_OFXaC5m:/Rnq:'I9k_/S_'u71V0e,nVUn6k`1l/$'/shsD>9h>lYC%iG;sKeAKJLX+si;A9?K-Z)+.V3eY-WI:T4%k_=\-:Got]9R0!BWCRk!:d`MX%5eg8WGMXe,pnLu7D+JS*4&d?*4$2.ZR5;Ve[T4t%E2EuCLW?b9Bcco@=6stP'4-=>o_"CDojDfo+$:^r&1W]6<R'(E_aacrnl.JOmonema/8Flich`F+/fkj@)_ong#\snU%Tm46u)=N%mkJt]i4:;W-*l`:r0e'1V)5+r%#O,2&m\4(k*R>:#m^ME&HE@BJ:U6J+;0RNo:^UI!!O0q,R_Hh0JFI^c%A=($ig8-!!!!D!!Al&%/HoT1m^coV0!#mFq"D&KYG`TNrDl9(r.:+sa?!-bU>&:ATa/At?7sssFT;P`o]/omO2VuoZXNJ<V1a50@Ei4?#TnLVKf*>E#;f(d%MU:>'lUtq_o\A/dJ]076,lT#)JBs4_--U%"m+4#]+5#eFcI.F>4Q1PVb@lqocFBTPZ:HspQ[j6$M;Lds;8lY)ppF!35&oS0+D<\N%`rd2dirmJjmO\_`Zp#CYE;"nk;0Gb>peQ*%dSP9Rb8qF9]pBYA=c:O)EnM4NHmS/)E#6\%]f^Do!"mh9U$hjgY$f(A<OF_$X7Lj@%mmD\e.KqhQg-iHV1_\E9"\%D-Mj7(*k5q+eHhQU'#OY3>NdY@bcWAV.D826ZfMa?%cZFd-)=e:rj@uCI+hl(CJ]t1T4\21-_7d`a%(R-F2GENN+WbH<tk@+Ie2M4:W,SJ0I&bIZ=C'3H?'F#`sb#S:Q64P<>!^'>NRN3%WT#=//X#KS.)F@Qk1$0#[Z!b)A5i$)F0/eZ;%R)pWg$CK&fX<2D!Q_0s1r%+c5)P^hBfA^47gI6_:G&uGY`+If#>ARGV)=-a#9?X"!U&BWK\gMF?/HK=<P[lP1WS3jPQA8-,0!cM9%l?n0FB5skrT`*'%7Z:X/n+L*4HV@qJnksD$Mo/kZ)iW'['s:sM%X^f7'EN64lAjWWGMJd]8<#kCq3ZM>=p[A07;7a)fs$-SNij9P%s7*Za7oH;Tq<4:!BFlb2m2P$0Ket]gP9EuVe65Bd!0cVfnY-.6:us8BJ*g[l5UAt*k:-F7q^dQ&,"NY#<%E9Ee@>3G>#2)`+8Na=%4*4XErA2<i.Jt*V"WS>>6]c$4XdUIm-\jYm"=IaH2."#(FFq<@]K1mpLaOU8-<5;jU;Qn%,HSsua=p%%LGD35r!bhT<FAck8\0h#%mV"YYF1Tme'p!+590?174(B/YY`!ET2DQ1jKqP8.)inW"kTHWC)UI+k)<>cH7D<NiWt_^^C+=@@bhZiT<:[cah#EOnCJT\#JYX\u%a4SMUHqX?]W!bm?Zde?'(J69:oS6fk9G>PXo3I2)eU81d(i6a+\=\t,o2d-c[JB6X7]&l;qE]*d"A1E_(h*ggBJ?D>)XZL_d8[&l%Qm/V_5MG$2H'6SnnA;cQg6Mspn\e\fL?jR!6)iRl6u^S$QVIEBrqgg/#3(*kBM?0Ijj_h=IlG0toc(Q#%<M]*Hb:1RTjAh@%:<ZW%LH=4CV/H_fWo)h^CVgRTX".$9/UD5YTH5VQ%H7XE+:H=LI=DTbF='pCA:r7>X:ctS+NMqZJb<&tksuP-O`I"+$cZ??G8:OB;omDJ%l_MuN5k`qF@4.&V8J=aCgKeYKMJ]mr#')p6I8i^om^/ZN.2,g2XG'XIE*&kXVWPcRSMM4f2n(4[3sL!ZVX2]pkb@]#L>S;A4<hcM%7?;e;W+=!kk\c=jW*,M.,1o0Lhq7Q,)tt<O.=FHgbjM%[h`Z)=U)1-N\S,$S"n+/0L/_)M^,mN%]4"HuMgd.AcBk>TnR$NT@2pu:%"ed*WZJ3#8>"7ln?#D%HK8Q/(9V[^2#eFoG%'$u3]pH=Q9Bnf>?+qn(eW-!XRit-"4b+SWO$mfR!6jTKEI[p[I(`!)>,k-%82+ML%%cYG;!=tn?$KV!`=991oH5cd.h75U).TfuQ'%f2sAUc]1+"IPT<RSD*IF20n#jRnG4Hd,.Ac^ZqLP.ujWtI$<F]%7?@1HH:T7G"O%'THW?bCg8%S/(OK!1a)LG(@T[KG6Mo&`hbtZ%nJ%!%h>Akdl'O`KFQg37-"Q54h:fBk#gt$tDMEA1VX>U,EV7@:P;r<`%_Y]g#32%DmKp^J+1]A\qOk:&,uae#2Z]B#'D>$aR6Gs`jghRYu8'02(?CkZSI/"9l6`=)$H`F&0B94Uf_l%M4SI,m,8E$CXqcu=d&9\ljlA'%jE4(`"IL4FF03DZ.@o9Lem,CT[4$%,(<1C+8r3%SN1/8TKO>HV'+r0a[C5MGInA?]+`b3IM11Sspf+PmJO8d29^>(@1I8ZG@4*^Y%For+N:ab'EcrV&pj.n7(TfETj".8%a@o2;Nq_i]G_>&gu7Z\?k%`GpU-P'*i^r),Jcr(Bkb$@>.!YHmD;!&mk@s%dOf$^he+PrAY%Q3X[OLo>2"::+@`D?K1q0rn":(X?Z=0l`)D"5s]pm/qq#\L2#L^OWos($nBpH?uL.H9O_^:'9E,.J^L`^'ISR1akE'?<e('/iae&%6?"D!qsRgOEf8_U8tpqA.M;pS+Mc5H&c=?]#mH[Zij(D`1'"X+Klk7ROoH7P1o:Oe.(7d9:PKVfY&phHqZ3*<M>Yr@*CUJB2p_A*%Qh.+f!-mbel0l+Xfh;.95%&+'J,a62?ZPHpDVU@$iCt!qq*7)JQoJJ)$:3sWjCbrB#k++S5g[bkEgPJPCs7=d%E(R;0^iuOB>*DY%/3a\X&*]dNMEKU[X\=HW8kk+no#L03p&A/K9.H^a;</;\?*oA@'08OITg?q,/r`Ya!]TCr'N>=DnZsje\<`n`E:eH=V?J]GqM*L:%!)$EFMhkhDEhcOkiP8!k,bmPKL,<)<X"'T3.`5?a=Y*o]?-3_)RBa^]1Dc45XB.mc#&Rr9_A(-"!ME=X+.g#5F+`A8o/ieVg4P%P%VVi4jq.Wu\;f%P`SK3ud9j"Fr9_:bt2sLmTl:>B($S,E;G[XDJ;??m76>Z$;,+p0s>`^;NLI[Q+dVU?0@b#OU!("$pV/^2_o9:k7%mMS(FL]+XZi`oB*&ie2KaE+:oh"6YaeH0_'E;==s3mpo2-NCo%Kgl"PV*i*>aD2#iJE?a&&O,pT]B)*&Y&pcDTM$_sILar(e"Ufu%047*7OV8<7G6,F3Se7gG5F:[/1LMDrZ(<?$Zb>%_9^4t"9ZKoD:Z^P7"Cb+L4,",8Q>]HdHg4]L_9X?Wd"aSS<L"mGB_8W)h4iCo%8!f9$kpV7!2-*3%gHq:?+ttL\N<0:J>$fRk93jY/E?ITD*#;.3UQIT_FJ!*;38145H5/6ZV_$1lK/Xr$d-,[KiMbkI!(o`&U2W5^%P9DRP3a'D;m32.":AnqCho6/&2q-[\H?^\-VFb#3'[_Y'CS;3q4]DS&d2'C7@nGffq1f#*7I1+#'9WMm6?j7t9\76W)"KT(LP/h\%JtbDJU3a[gI[eq%0a]t/ShBnbBg*3-F1Pd=\\9-!W<cs1/6X`E0bWf/61MiM&<eJ"BS9!,rp9G(EU4iHW-Y:R@-Il2_<i72]n(L@%q<;9jJ(k.&6bsEJ=P?$h,b1Te5Wa8pjNfAsEW5VI\N:SH"6YiRDuALae^n>kZ4Fd,3T+m@+YXD0M472\jWDh?Wo=G9K5`-L%*$k2%OuPZ)h]laPiOMP[0mX,"_WP?*RC2MKWdNLXI.b\ui>Tl?3)-8DO@;O*-'XJmYRm+[atlKAYNq,&JD#W8e3O;uJEp;-;F*TUYen3/%rY#-GJdOYbe>%V78P&p<GaTZs6ND;Z5%GC>7at"Kma@96GS4*^Eeu,BMLujO>U22oK8oJVH;'@p6^EFtlN;-?l7YVFbG_pl)eA*U%XRN0EO$^^8L3*?e"C8?lM_.gUU7WQ:)_Mu=4\1J4@M<4@GMl*&Pl;.gD7>]sq4-Im[^&?X^[Qb;OtDYMZCl)(8s(G<1.GeM'&Y%A%_%N(8/on:T/<%j<M$9#@^&GNo#SosP9FDCd3jk3`FmV@``<:Yf-JP^Ub]RTf"pJJKHdac#jMQ&\>9E[&gqb=q)LBXdF9JcOd4g=7%eY,EP9Db!&:%j-lUVY$ie--F7F6(3)-3VkZMP3ElmHup(8Me^OIXYPk.6#Hf%(qhK.0tbp=YfW/\Jaq:iAg6G4VCnoOf6J<ZU:rR%P3AR?VQ%"=TF1<9eUH)e%lALIi2Qs=P&R_M7\52D+=a_^ZjHIMHq+@2/NsQ04NW[W8REl7&(0=JL\4,E6if*o5<PuGTL!g[<,kmX%DI%Td34;kU>[-%fN))/[$GCFhJr!.6rs":U+f&,?ehu_3A*LU=Tu1JX=Yu<V7[60bi>-'lFtY`\+:Eej.7Yf:C.Ks1I(_$(DkC?>%*gL]j`hm[Z:Q7WUdl3\qL`F?fpK,66#1Y>l\+@]+V^dHS4JX];XoOMN"1D\S*s\=>HagO/%Uh`h(ZqB$VFngpf=!Fm/B*//3-"Ld%\Okt6AcD6qn5.`c2P!\7R4lc\l\+&/a)EA8:D@[kd3I(n=(JMqjc-=Hb38[!s5&1C8Y>=/D;d.b=H\'F<QSj?+/!6&_%p][&j^Yu%)Q^Qi7,7cDM.bVhoP_3]f<,;Td4#t;%&`/'%L+7PJ#h:kQfGW9#aXXnaNgrH<!4SU'j0!GSWbe)pp;DkSK@JN*iPE4!I'tf*>%K:%h=8m"XYFK?\_"lZAoV[LZaLmg<%C\?Joc03+5[%C`P]s+(UZ\=7eD:@PAGBm3%f'lim^EH>emqtL9<LRiSD=YFWafTM`+i@*L!$6%_p,MO/"7MAKt^H]6mQ"2FIc[NWX(1%M.4\*EEX!r"%7<9CFLr9,K4aj#Q#,EiHYO$`mU%Q$4p9h^:'P5-$P/J^WS03D.Y,X:Uqm,%cc*A(7?q-0<U*5Mj_lb&*D"A+(>YNaGs.:cLa4@j(;_Hj@I4%mV0L9;m6b:dE^m`0/*lSmV[@nXBS^n6@7(Y4JC<A>^r;`QQZuE&%*XQ,f8LD2cEiDidDKb-pqD>+>W%8+rR\("@I\m4!<e,?52,1g_dm,OJT`9)!k[l8"cr%g$2:Zg_Gi6;H7IE$$Hb\hLs6*GTS(!9]%_S`(Q">4PZkJZPgcTYFu\2jS/,1@8m+G]S&I2le7Ujfm090eAB\/5W^M0h(s#nE%+1M&q-MI@-\"TeE$;>h]mKLCfR78R>\@//'<%,+r6,.68%+h_3k%J]QaJLNh;u[7^_IM&Ce_`$EK2qi(MNKhgWm,HHqbamd=SqN>,_VBrq!.lN*>(jc#FIM0N^=g5p+j`5oZeDFEH%b:p($N@KWlT4Ra1UWLk^3NTO]"Ac,:F2)p.0S'Ck@PiSM\6'erVa$>rhQ(Pl=1+_s);[Q$YHV=uANEPSmi2r0Ce?;,/[*CL#["?l%fH$.,<oc"g5$\L/4"Qb3'eU_1mh;!hCpbWpf[<n9F%/_H&%co^_g7@9HgYi0HE;\"SmW"mZ_Sh?_s@Uh_71b3cpGn[R%"sr*iD?T%*ucZ2Kq,/DCcRr=1PQl_#E`aM6Bdcqb,<fXP^a1%`./Toecnbh9.:*2_m:5T?YQ&QQ$KulOt05^VMHBZb+lkGjW^hJmei!45ZEt*%9cTm3HB%:6P.fkFV1gAclH^$n,F2,:-db^D>_qMBb"bu7WNr!'<B0\k_p(=tjgD61Ku&+:*&.bQ\RkB&a*0'p_:W\QppmbnnPIiW%]N;WU(R_q"!]riDaJX,V-3ZuFBJf5,0C<OFjJF;B?6rW`0Dld+#IuQ?jB31]!n"O13,o%>=<teIfP?:%$[<l;f*Q!ib!C*FgnuRr%3+fs3/j:]J=R(NPXoPhajmDk;ZaqLV2b=AnC+[g$%R%3TS>^#<^n-BJp#qp0"`D*f*!@:I&o5X=K\IeP+4^9m7;\4;QlamU..?l^%Eg.AY4J]_WKsUl$Y"7A!D%`[D8dU#6O54<::/dk4lakQU].]MYp\o>3F3+8[pD?<sA4K_o[)Io>oq-8>9h^/4A:L_(X!"j$ToBb*%dL/[`>"brTMa9B8T"\Ol9T))U)An9,)"MUuFUr%-eG?3,qan-OK0k#T'&2(_Cb\J&[mb6b.0C-c-gUlF&ROA$V^jDoX[Oc;+r+PP%81Q"GW>:mj%gbdqpkjdD4RGgOHVUUIFJRJQiu]*<Ac\Z\r,Mg^LLhG$,c&B99e@nMEK))Q[^IH]BR?".?eanZ(=N:HgD;>Ca-Cui%.%$3BdogcRm4B4Wb?@lu<"A-E#7--H9N4J*hMF]!!I2&qGK<"mia;Qd^ZM6`^jhqn2(]1m?Nf7q).^siOKul347:^3#'T&7hT5?X%F0MKLg_Oj/_nec&:'Otq)BEYpZ*$a2cI=qVAOuX\h5oh)Q][(AE8CSQFqMj$M,TgK9W+q".:aa*0EaiYTW4QF;d[rf72D%-_D6g]%!-mfI*=G-Dg=,X[q%iVs)<tN]PEK9+'Dr@ClO`Sll9usi=:LP]h9Hb[lUF4=qLVX$m;RcI@-i"\0<i(eXKdS#),I%+0Q:3Kq6jjn%OlC7HKku/_LV6Kijt=GN1f#8-kG[N1pL,#.LE@]C#5m;G2%XDVAQs!/NS+ET8IoeQG.Z[i(@<OqcY;45#1PK06NdHP'u*4a)?G-B%&L9#X1fgR%TVW\704Jf3Lb-2bND1/_$ohqVh-Afj$m$]k'aTH4\GGr7i#(pMJ!uh^e+<b^Jm?D0R<'S#bXO+aA4VGLrdlRT_=^H.%)h`7/pcCBC?L]a?96%CUDpH*H&so;_JVfD.+@lJY<+34/\@AduIo')dO2c=DY]HZOiJ,TpI#"iBFZJiB]uPl(1&HP2L=9k]0OPQF%^W('ZatY^-P:pBl6Lue+&s14>bNn$("#JWL)m4D]F7p9+K7]iKPa)s>6+9+!W/Es8;D\Nui^`DofV-*A+?Xj:[LgMSqg%KCasllN%\SsC(DRi\?`.PYE)r(TA2dil:.kc6G3j:eodBI;[9Q.E8X'n#6*dNLAOfh#_/QIW?GU'!g]HZKT:"9TVoT@n_0g(dhQ,W3OA*k<R%D;?'_e[saRP"nd_-@msJLX]!;F6?;HB+r@Hj<$kKcN%TC+ksa#AZ%i15gbK5aU/q6.tZP@2?Hfk]:>2nU#FP@b7D7OcNIBn0[n+o%HPql@C6BsN.WG^hd`mng`G&H(_7Q@I/.f8;bN5Fqpd?*n])*6c]O[l<aF5_gii\9WNbAGY&1]oEI$OrYZOB&C6o_:gTHm<;GQD*"%Np3!e$p>j[b],[Ym))*6J=dqCHB^!Fdrc.cqGIo.l5e+mjI=o6ep["'(&$S-;HF31lU7]hTqs)'c1O.]-Ng/"%`ju[:nA<4nG0t`%.8Y]XbXuiIPBEQGiVEndYlquadr%^7-rKkGaIWsGo>'RNB8CA$&N@9d#>'HFJbhlU81g_'7[<]=P0@Q^Z[T&kL[f:r'qOmRW+a"M%#Ijj(NN@h,#&BKR5OiB'.PT!RaHq]rP:<+,^-]K:]*1%`T$kEO(ifOsL^E'd[@mbWS\R`l3CgQ\`'`-4Ve@Nf(,L6obOsS"U'1Sa%Z+N3*K_MWOdi%6r*1QqVAR`:S<,t_BmeqB5$@#I+TCS1]XY=\0s%RCW5S=-DmQB5pXm"1H8-;fd`SO#!^(/KS9W#CKEQF;8eW;5Q%,_Ta&IbX@7UeW1JiI'`urgWMG#Z\P8qn)[e`Qg'f7`sKWZI$7\jYSC97=`0R,!1'(q+UEXbNG#_IIa]_dH9Uq1>g8V7<K#QN'cd>%")tp&;DjVPhZj<5F-3<9`qD,Jj-g%i&lfa0%,#"h:BDub)MOOr*:($@RCT&=>()o)31[&#O@bqgbK:V'.&>V=@HfT4XF@.XT`+$u%8&htS$b`pY(2GRcM"9E><[+q)-5Y5bZp]]PMeZL*7Hi##m$pm+[UZAe&\/Im6W)BAi!c_Fl/;q_'gZM'7/@\'\SrHs$F'3E.HARj%.E#E__8[=0I"9KIb+a:\N7/DQJuE%iVR7[$\N)s`Bbs83AVk7BDb<jZL0`S]F@Te\^$e*,)=8-1(#p3_',\][m1)#dg8TOBV2!gO%oA?l]Hp.:E0HNMhTmJ8HiKKOrb<;g_MJ6^EG4!5@?gS-4SB6=KQ.F@mlNL)Ag30@?OT.R9,]`Zj:D&R>iRqs^SK@"s!%1%tJ'kc/%.fLS$)8V&<\.[rm35l-V9K)b@Kjkp[nYfq\loJCt=6hX^n3Lq,V2NlR,.5I381cIsqdiR(Zl\YuL8gg#bO9%"21S+A%r9lu^;!bK%VNsKG71qrg<ARIL0jo;AbYh7CSWbIqqLI&\_EMd57"718?&Ztr!34c^B9I<8,t5U2<h6!fU=QTJ_,R"ZG,XNSPZ9%3.G/t64)OZn%#-D[s5'mnkhR!9?@b<AE?;%\uM1XWdfU)`B%u7)rN"%?!1<-IHnmpiYTB*kZ`@"r>l$t/5laA-gTi9\f`#Ufj@PI=SS\UWj&2RH@%ETdtUC>*D0Q*[ELEEb65=LqI8h^B)7K/Z:Jl)<PL6_62IZ$(O%\tZY(SVLbSL8H,8"*K"M;%6Fp5+RDCpSG0[N'`.Po?n.2On.)R%')OcqZ2k.Cd!i[%keIM!]N.T^`+P]A/[7Qi!FRY6%l2#uaF,c'oPF\W<YRasd"7"&0P-4BM_Slq\YIV\H]iT+-&Nii-<+Mc[5rD7%qX_O0k6P%6;:@)_Ms;CQ&AqC.d1IRr6SiUWE%E0U'uGCA0;JPO?Kb'#LuYNF:02]1gi2]SO`+*+Z-Y2pRpaDsTq]N_i*nK_;IdXO%#=_-b:c"%7NVPFST2V'TCXK/J41Y9:E:sg;1AfG<dPXR3M@u8);4EGXr'[n?5#3^n^C!l2=&QqeL"h8:m\.JI_Aa$.U6`"eM0Mid%dTY5VTan:?7&r#OMl0Eh=Za@c[&Koq&Qoclc5D[O2J2-.%p#Wh=Qa$59)LGV"dDJ_DiPf`l5HtKkde9!R\`cg$I"J8c)]G@ZPGr-%1BD!D)*2MiPP,N%UjYu?pX28-*pIPdaj4N?1F>?@'23U:3HMHkHEVs7('QlkpMar>G;<X+Y29-oX<pfikikeVi>("$i'bU=r*H;Z%)]cHo/n*hYk9^U58RlmJ8j0I^TG2n\Mu<R*s6s/X=feR\he?4<EoG?@SH4*)A8,("g#EIQ*,c#M1,#3I!)$==T4eO*FNB/Tbj6:R%+;fFb4f*pH/\$QIKDdl6eAHPd/!LheB"1*^='JLNVK4AP5H'/E$5oYH,Lo>$$&([oNOuJ$P#IB/fT&g0S#)NF4%3t,85<GI=B>T[%;Z#!R((#37"rk:69>4@ta!cc$F!FEhX6"7TYc)BTq4/FCJ7kUTN3U4DrurQYL`h_4@/@%-,tp"9f\dCRYLiD5*k."6O!Xc3S8"/(%F8Ri>LbGD45iRDUcB<N9l7O^[WjF*@S$s4mQ-`b,V-D]8Vf6J?1Qn*:!J;2+#`=/4&9I"u!9@Xh7b8dT%GS_F9/*W&>86=G9gjSU%@]:T.q&2BK'UpqQlaViLAA+P4Mri]XnLiEY!F$PT3abfCe5qD[CqhCEcU;5q'L@\OWer)R)e0`(E[a?SSObM!!5]WsGU[pp2_fTD%H$T\oN]shpm?Llt&]-0X'@??FAQ)gj%u(-gL#i0/LYRQ"Ft6sPgr]0S!99Rihfp98.,f\ASh*trO<TtSN"V[cCu!8cYjnrCmT?%b%@c=\ed>j80)LTg$%N*egULj!eHGr8n_Y(I^<12(2%!%c`g`OtD"+tb#HJDMl9n@=!>nA7=Od^012Vd9.+5r33a(TjUnuiclk'[c=%;M=>pkK32ucPrW+R^I[O"THO>Uj[!JhTh&ZS\)ri$4>C'=i^[LKDSc"0Y(sG/.GdKCr%aQUrb$@,lp\X#EBT,%,T1t.-)\"YIOko%A8^pk:^&7MqTFDVijq]Skq(>:K?`hs7a)HVHsVH_la.cQ4pRDa.1=bo@p56j-o"4!'S1kM(,t6[`J[S@9WSgoR&4Xk"sl?);3bB>%DhC?1=dl^/$!W$0g^@B&[)[ZR"_]9`A%+l!BO$'n!Pr!UfToV3,)89(#W.W+=d"F2<+:*k5.Z8[;dHa<kSsKMn[ed)i.nu2$?c+I%i!,[*5jeoi+HOWX9sN8s'J^^caF7@6hJeiK&U"p!GWg]5PH"@t.M1a?gFa:oPU@lCK\c@n[ggl!:l77"s,BuPg1aUsk/'9HB\c3[%h0t1=DIB=[nTm@FOP:1!@+i@H@g<^WcXo_.Xp;0jNbjH,C"hT#rM?".ck*Z>''P!r"gS:+fsq"9B%UKdHQI?W.STT3UtZbDB%l7H%@pFFH2n(r;?/87+GJYE4IHs_R#(nWDTK,37B7+_3Tf1=j:c_Je:%KV8-d0c=gSVXpSeRZGOG)W"Bs7+GLK4TYZd#-T6>qI,ms[$%%S)LchJ0R9aVq!eIF!M%<cI\+MHM)=\l-[Us2R!J#ZFFFD7BF(RhQc))Ft\n!T+_b.^a0*?/l&p!/]#ce`usmc-c66%aDD%@be/fI%'+J.]I(J,R`asH!F8)]hI3f0MdKK&5Mf+;ije?8Q(=Vb/k:IIl<o$N?9:XZI>H^eRDQide<Hb*Q\rl7NGb7-1&qR5qV;$&X/+l#X%,9OG1&p&$=g^jPd_3,&e+47N*?tBBLFr\lW-!@+X(8$Y!GkATG/e.\<=L)hZ-A(6N+@eZ4Q\_6>\m;M[V#KK\["J&hSV/P43]DIc%lZQ<-+L*\8X4rmm=1H_7Q%9M&Y1.3[gM!iI30A0^7gRYLq!Q9i9T(Q'Na<tFPSOg[PUq24afW'c3Rhq"mSMfumJ[`t2LM2]9+lFF%*IJqB$AE[7\(bs\h*d5$68&[O;YP?_K($mrA%UL!YbYfiXQ7O.#tB3)H(W2ePi(kO6%;V;i,\pB[k$\<piU`E?V:SDWk(JHT<i@C%ZWcp^1RZk(jsQOk3W"_1.mm-_mOb9$0Le0UAI%5tN<TCEDU46E\#[FEUTYum-kNnT!jqZb`,<=3CI.?Q6*958q2_(-]FALUL5"aV%]#!tIQ=1Ka/h2M^A6&UZ_`i(p=l\o9m_#4qVHaDYjmD4'VPaFQ6&:(PjT#tL51aiV!TWR!_0%Lc;5FtHEln9"2&OVbb7L%6H&^j^%$l6&9,uWogF$NkQJL)5V]7.aPEdD;oc]A0NgNF(6e*\LAPWO;Gh(_Zf@qb^9dGE#K\@fmLLlrc5B#-at%SjDeKM-W?9+^\enVZ6\%oN<%UgY7)*r9[Q'g*7D9j'9Db/EDZ>Th=GrX:3oVdljCXS#J.kG3?Zr.D\`Xp\i01q'H;.(]JhEBHN=6)8aWo2crs6(t%XAp$Iu0%@paVZ\2M-#-lQ*ue"fLba97>p)3iSeD'g,>J2%TAa)QUD;'JppZY_UTjFkR?WKh.)gK$D-l1<?1pg&'7L^+?J"(MgpikrYb$&_j*%F_J-kS<;mSJNP*b$K^Ua5!XGODBqHC$"kOmNr,b(KucVEHpA/f,p5$3`A*=Z';]Z'P<Zo/F?S\8U6^4+c.LeHa"nNBm;ZhGUpf4n%dG"[b"njb\<mo_o@W8]5Oo4qH.bYpVRU_^kYH)m<FECs74kbT7#sZOb^)"ZTm1BkI]iSUY0u0Qn2i])9=G;)f</KK"mhNdW0fU8T%U0(YCl\oaDo5&gm@>f,R"4Z-G6^nXT>MQ_tJSR*Fg#Xa^a[)jNaf[;J=1kg;"ngh_T/MFQ9bX3P4KM#kfW3+)-_gm1)n('j8Y/fU%s).(pa_S7R$,O\0%Ujq!O/WE5WEtB.#jh`B.L=j+4_)n5!XnWXM%LiF6<^E,/4ck8CcCP7m+,!MH.P'nAd0EH,OXg1(CgtqBFqhJ%0*PI1M7sS.W<1E_&oPf.(lhpb``4;,(!lRCVUnfo#"VrSR`M:/Y(O7Wpl=pWhP(]+Khg$`/Or1O*g$\+.])\:Z[M!qfr]G4<%\Hl%3I`m+M'>^Wns$Ulq$N@(*iILdCXn@U?60$4UV.HoFTH9kC4q%(Bc3fr(RAR0iUJf-#"k_m,)-0LB+[1%d*&stW>[igBi37Y4"&eh%#krbsf9lOJ#@((H`IlLKlr8H92:]3XNGm0G4udNTC4[/oR"85h$u>ur@$egZ:'nY=E(koNrP"r&e/m!5^%cU'*mtc*;\d`E#`B?D%;'JcGh,-Q)Ck>653hsp1f>,orVp#e3%TQ[oJ=Yq+2mqUB\<TsUFA.9%*l`2!-Ii5kp^EMXA#Ck?80KEO;`l3$7="GE,5f8YKMV[F%/!)&@:^4=`3r,/jN!,gjfmkTSW=fa"?$ZR5BmpM5%kkZ\a>412+V$*='4K1cW#M$PrRG6qZp8A&-s/e'eJD_T!!?_Sd0*lYo:(N"%*h./]r<r9YYbh8H"'S\E74keA'edg^Yp_m$7kDkEq[I5h#m:+Q=BLC2ZA,%<Fn0qm8fqgdS9`gE[K!/%\l1$TBItSJ8l[,d%r5@I%LR"6%Y)u`KLY&+6@%(q4.Tr;cM$^0td3#Ii'#;&V_UrR;@Wt`BML`,S<8EJDC"m_c5pB`YpS)!UUcN/plaj%C#cck3,osO@52SJ/%.-uj!gA4sMMk^:[0jb3qY_sEIS#]eCaGE<O4;ZOuW;8ULL?fZ+O#GjJ2Tas:$@hGoJVu!gT+:%2Q^G_[Mf.brbPaci/jW*aaJgY&%HKt6p"*RP@1kLiY3\E6*<O7ZnhF#4Gr&UtW@>[oJHRsbd7YhMK$;Atkdg+lAe:]d3G`NsnNIbNfU"D=!74QP67_Q-nT5XqunkA+d%Gaff2UcsPg?LHdY?%hVV1Kkqk($n2JA`<qW@oU'1V!(%g'T?f$HVi[9QlPmQ;9t"?SK25q.\2/Ir9S_c@FR]c%hU:1^'=(i;-P>c%TBFfsC+/ujKCgF@gk(J7ftIo17THZ(P_>fJB%-j`:TcQ1O\sXaI,YlG'ZMM>/#"(T<+OJd[S,SNK^EI\O49[B7ND]d<gYrg7eM%1%88e&8UTuX(4Om#riM+5h=N.3`4"QZd0hV`G$<]<`#V/VPgo?KfJ&]?PN&mUK8/u&-M,C+SfBGVq;<Z>W(35NP(mTSN>>q;>(6$Cf%)jWQUEJGC],amYWcNL#c6H2epC/l[4L^&3Ze;4%Hs%mb@5t<rV4C\T6OOf:d71M!:LAD$Bp$:)bdhTHR;6BKAdL0"_0WHI=]>A;o%2)hTl'oj1GSK7_p%K[R,h/h@'8.T[];cJ?\N-5mi3%?l)h$d<<;]Xh.iD<tSCB`s\O1:k<(HjjqS[i<r"O*6sHb95`EiutN8ohO<%nssjj&2!:?H.d$N8>Hj1K*;o<&5V83!ur>]Dg.Na/"BA?>cZVM6SUd+c1oa.$-nD//GPXoG,GD)'Q1O&Q%p[)[RR"4YMBR-ij*WS%N\Xpc-jOWdZ!%uRqKWncJ;p2^,go(;D2EI=G;2Fa<#;DNWIY'@T:MmNpdMHh8"bl)Sn',!hEN"+DiY7E`sAa^^k%sK(aEpb6oF@%%PS*<24+<&#WnEkg;eJM^L'NkTrKsU==9_U`FKe*S,>atUc"6ThZ3"mmG>W^GW3S9K/$1-HZmKi3_,+W79GSY=&V3gB+&P@,o@I+0%]6"(Z:Xr8q2F`K5=Un_fa$5PCCu_UF[NEs(ce-MPHV@'W4T-W(#=pPP&T$F9s)f!pB?`5jCiY9PI;e(]k%c#%Al9"]Ih+Xq@$Rp'%co$,Q>Bg&efRMd=d4-K>B9PR3HLZ<t>e<krV>eiQRXluZI!#3S.!0I].%)3dL<,U:FH*c"n<-)&ZpaXC5GgK/a-;,J!UcEe)JV<K%4R(ULg*gch9\mVDg!+.*0As*ZSIjB+/i[_MDeD-4RZ*>5^clW2&GK\-R=Pd9p7*Z#^lcnRa#:HrLL3jFfu6/!!F>p1e%oc"qsk!+%j9AM_COHColO=)rhGl^9JpX@Pe99'OIBL<8#Xi+a`8NoGoXZb9M"p@dc$&d*-@3MYKifg_epAZ2Ad)\:6M@g!bG:LYE@0dV*E2%.%gR_ECs'$bFdB1(JB-MBd/O8D#FKW!*MLa3V[rZ&Jf<uk[)-2:!GHVhg0I[],FdR.PT^^`oV&lgF>9.97;T[<qqt@6AfCT<uJP90c%e_>RN%*`tW6>nXj<35E[$cb4c_IV=bafmdjNK56t#(2V&C#G'uMD+b%S%#pb?$s_dncM:S\6<o,+;tj;Op9$YK%4><XcIRD>_M^$%'Sl(#1[`F/!JDSU7*,V5"L/"(J-(Z@*X8&ML,tHhP.o:a'\.o+qc:7Po!Cha7WUBR^PBs[;[rdZ*2=m,TLQ3l\;7Q3ra1^6YGGpO%^b>7e.I_sK]5Q>Z#A[,hl`3@HC4>Ya/iZQ5%8hT%&^M_=,;QHW%8gudJAGP?I.d;b=Zo/hB-fdR__@&Ia4%og'dcii;SFB%kp_jM%;'X>2MM_$#Hn$KFFl<IVR/6sCgJL4nC?k&u@m:lhjL"Kq8@'+&+(o(!:h=5Es.!1ifMBr@bUC'"lEXEJS#8^.rji5H8/NTqj09hK%_H#)0%mh>&Rc*#>?ssK6G`F;aCcf4Shh[j061^-qR%Vo;j)p%?(kD.ae#de;:cB$A%,LiR-XgN)714"&:$7n0pJZnFF?dgfPC%FP%+hi#&E2cjL37?e+>OI8;i]3<.r)ds#mYATQ&N)\nAeA2!P/RmE8=d&;FN6K(EX]m4:_;_B`<`clYmC4F>ruomVnhEH"Dgh(3OW;?%#&G@W"/HpCA`h]hll>?D&72/B*)p-T@l^F3SIsJ!N)Pa*HKBAP6U-9M`n^8DIb;_(7*W;3DZ*[#W:LtNQk1spnXJ>YRjh0G3O[iI%OW;=q/``,#21N-h-3UL,'H/_Z8c8f3[]EQ:#om9Q&HN.!3khZm]dCaLj,p'<aJ("n-#au?]Q<GVDo4eW&=Tf%pc%[X37C.YL%76t%^f`%o$OBc756VPs,t@65HehL_YJ.9g'f]%M+[HK,jT<ISq@o`dU&udl.RsqTI=C*V`js\h(a+:(.',!,]FJ0`3:+rJV:Y?>'m!X)%F;!ZM!Fhac^Z9bH:19bL<Jf?U^cHFfjrf\j]TM"NR"<0QYc\c7]nWFQ-u+LCrmE1`JO;7`:eW3-&3+1>ac%2*0:,K2/,WrUkp+7#%"K$hRh4B@k!':gL!lpk=GSGL<(-&?U`JRX!9]SHi_d1blIfU?F`i-pKc+G3X`$fRmH"D^JE3qst>!C"Y?'pDbq7lH%E;);493LO%%30AZbO>`If=%BRR"HLOUP(PFr=g$YP:Ve0+=/lP!ceA3C>VMs1OsC&rlZ\/6e+#1-HNhu=5V+6Yf9R*6U'"hZIKRCiZX:,63Hu26%NLhcO:?=1ODl*ZO[j4eC%$:8o[.ti>*"Y^_O]Di0jYtJsh9=calI^acMORD;)']`\)*7#@#.5^_f>rCKQf5AX(9j>"3le--5$I`-%%Zp+T9YoqfB`#fm#b6+P*M:!?N$dID8U:j51qK>'7I3:!BIa1Tn%Zq=Z5g)<Y>YSN)D7G&Z%!jU%+Hu`Ni%j5SIuga9HG.M5['Y@%XI:E*hp?KP_(aT'kor45&PQpl8RJ6cO,I.#Mb2$5l"*d`=Tr3+(G'$>JBI>f04_7_eF,%)QpIAK,G1JpAaA53+I[K%;NLXN5]Ic+%q/:KN[Up:_\/m*"DUk=iEP_&4HM=F-_B]i_FtjjOK_NgYq8*q.>(Q8Jm"W\*;0]1TmXPYmN`J!Vf2!hVaqo)n;4ZHY'_atj(pBnt%P=o_8?,"t4FR\Mbks$a$<aK31!_ik+7c;)KOqD#VSa,_t8j-S./Iq-]rT-Xp@%:*Ir_R;;VH5")-NQi;2U#0#rtM'BV^Tai_mHAg%FEr[Y<\(TZ9r,F>ho-0aJUll1pgi:`l*nOq!Zt`Tl$u8GfX4#D<EEPLmIC\tGjapD7Zn=-KLI!:isVA1^50;biqW;:[se(+ln`:7%bk`htSVf_9S<hpVs*i#,R'\=>'Q*#7/Ed8]]Q!$ML-:_MFsi=\JY,?$'J-G-!sus[HH,I&d=.&S)o$[4$_3>SHZY2P.=(!B":i7d%j@$kGFtAbK;+*qrXCh20k,b&,*)B*(05]q1*9*pVrm['.#m:G9D09Er;:l"N,6SOiQl8Jq2cXF<N),k"!4A'Q+hs@Q3+Gu;;6elQ%"t6K6L';18(ZE1*5d+'NCaK3jXgF-rH]HS":("TAR@c:jK@,/-2:oraVR)_=[@NSXg5kq\<6qJD(-WIkF_I_X18FE<;0^[WM[UQ"%ZRWgm+]'GMpo;PeKIWDKP6`&[(.mm%)CU7]VjRb,G]]iUqb'buB`L(a9#7'!^)0JPJl=.k<oNlf@:959N)]4hSd*sfU?rjIMtg%0%+r7bm2:?bk!>Y?2Q(1I>H?Lm6).!Ge4W^1\,9m$a.g+62UDJr_QS(".>GpHe7Z0g=)%IPj!p0!-"(fgh+ZXd:!RoB'_N@M4.g,+b%RN,hhS(NeU,Jl0_dNeuX/ErMp]ueQ/@\_"N)F=)j_AE:Z$KHhA%gg:8<usV7-[R^%mEt`W*G=\ni8B^;+_Y[F#C%/d'Xo+'"NDnB%^j@)_W.TDXBLS2$[X1!\YrEMEKj50'N!=6H(:f1T'!.!_&T`41=6i!ZJ1Wul5K0WG`RHQjqc-5dhAO[k03'(P2#)U_6kHMuQc"7O%id*=H/F"'b76+4i*otG9>^#7Sk;p1A:^)]5l'99+L;2\t,ihTSW]D9<DL35SN^g6R?G5"0O+thI9?@Jb?;oKchG]>nmT>Q%2\>%7%QY/+%aoDsX-FA/Z=splDCD!%c0i(!@d@]RQ$'(s\N087'%J]Tq-;O":),n4R<9@(+TNf6*0%SfN=99Pq]RRbIHcdP:fo_LccE?Oq%4X55TGFNSU[J5c#JN@YG2I_[$lb@<^%rCIQ1IsI[KjJWbXJ$\XehMGg*q?0jl$t+a%nr_g6@/@XarXY`.?P^o\oP"a?i$Z99h\V+%E:=QkHS5V.VXNk!E%L!q[P;>)h1/\DCS4u[8TMn]%+As1.A8eeWXM#soUi6]+#l^<,NUH,8Pm!Y,+E39#q?[9.(Q5:)An?ilF&MT%)N1JjF,jq^<^1*,/?-:u)0`-C;,bp9/A>[ellpgJ%5S%H4-MXRUQcX(1DL?_(<ghgFhtc;?)\Y(+FE]T'd:,52_M,7X4ZA2%-(HB%]g]J4BlSb*j,[fH,cK&DD^mF8Fof;Z=d@E@J@`EjL;M&C-eh(:!&QTa;^X#TNb#rf;Cfmuf_Sr<M#akpF@]8m3oL;cB\=ZXEC(-Q%!/".#e1)4u!TqTlc7^P1ME+O6"7iOC%K0"lM1]>:W9E*0$/%$i46B+-95ZVPU(7U+,MLN1e+CP`Lm)oO.aekt/FS-L]TPCLE#9<&%EjcgqBkM?8a1BL^Ct5S_6X+AYB-_X#SR!qpi.c[ZKi1^`FG"]Lqs/./a.cGJ_eUlb]u'1pam?O'Rt#ib`.etW4toba);'c*V.&?b%WV]uETa/caQ_sobol6#69-S#@XkGDNrBQX&)(Jb/^RtU7SW2,q)&*jGh9Sn&^)5\Ba&b)3c;U'dgQ_Y+.`3f4^mD@P3D9ndFI2Rf%#O`-;WU5TT>J-8[(AuL@Nj9AA6r2i(*^93A3$*-R7jGRY#1e>XXHH/"`s&B*K!9WFcZj7XXH(FkU3u,C$B$l-MCs'p=mJ%$.h9o3%5MOh;kBLKOZR`%_9fqG^p/ZJPba\c:&lTIG2U\Nl*->QP?n@'Lo?mo?G>`8Xk']Sn_\:_*W=k2\C2)Mb0%rkdp?R>=-UFQJ'K/s"%N[Nodqg4SZo\INt8j_[[3os]_'A;HV)((HS8CbK`Y8'[T>S+M0P(gi(q-PT#9>l)A"(=aiN5q;_]bp>dJNHa4$^sGgW/*,A=FSUd%"k`=?,q,GO8dEC#ah*-!)m1@'6L#\qgW<\@d),TClh7%h-*u21*I9bWS2n@Rs#*H\dL8HI@ZH>orR87c:5Q"LUM=Q_'VZnK8<qs6%%16XePUJ+?Zq]6[>.d7[Z#!E.S-)t-5WE3`L?^CAfPejk?'<`#'mhe@[:VGg>9iB9s#)jgGXPi>BUpsXkQ('jch?,kR2*L(#!ldc%.:.@$[88mph7^gmpiA`rBA=eo*Lr$iUrMk#j/QhJ5s87P\>G0'g]8R<2)(;!oaMQh,Uc2BbsH+t,$Dp6o@)kjUiF>48-8HGZ>?Q\%e`BUP8@d'B8n0)W="oG-AIXj`@nFXZ"n*F0)d:=-<fX)6&#SI@2aW,>!\=MibVs.I*dWsC#V$nNJ*anpf]MUS,@-X@-q/#l,6C.C%JG/RUm-l3oo[?08%R%`*THV'c9(a977$,DCpA=Y;jqsfl%IHEd>K+7%eT*]Hd^<pQ-dNA!>Pf<P\kX]ZRcEelM[@<FBj'?`Nc@@/%*'TU/)Ndc59&'HRN1:aoo2Y5c:%)KCDYolC&Ui,J0g<^\E&%[WPf2T/]tLo%[A'.W#XU9?1'sc]`B=FXC?\UcXTdBlo(%$t:O88V%_FLRjPSqc9&:G]f`DCn<Z;UYcN<+hIj@rjX!DIQWRLrn)Tr/5)?\kVg%L"j1B=g$fB9s&G#b^OOHt)J%]7Mc@e6D.LDuI<3fGWrq%[K#gQoep2?,pO.O8$1mb!-#u-aGNO:pi*d@.4m7AaAa=R-/`32<F!Vjgcq6l&YZPC-)J<9XHQTHat9LUO8L!0O1E<YUVGPd<le9t%T!5AK8OGm\#iC`IRHf80S_'tT-V!;GlfK:PN?.*&H7q'a&b]M0JP!=0J7)LB>68j(,M$I"ctPE_3VN)SH,hs=N1_.r+t5.;9Inc_%QUmK`je</^[AZXc`iMBOgBlpOs.)&2IH?Gd:u_ZR@b2r_@)'cK?5rntJ\P@dI,]NKdG>>qAJ[%8D`CDNB@ht4)\5E-cK&J;Z@0AY%3RU/H:=[,aI15SfbF3n0+$5*ClfgVC$JV$$3W7DCrT&0S@*lmX*\,SKa=E5nKf(*YTW,m*,G.&AnEA<m4380-.SJ2-d,I,"A":"&%TfA-cGAiNJ:Y5(#gBtp#fY=e'/ZO9ch.P_LY40AjaeH_Qn,l%rZB`Q58M\Lb^"#b9TGUs]BNT7>+aE;Q*fVDaKg-`="hh?H>0O>H%dg-@1BPuJ$0`VW<DeCr@<+/DtYr/5-%V@/7I@VEV4FMb!-q5'A31nYGORg134Caob#K'Xa$#[9t#P1</Qb9m(G423c^`7WR[L$j_%Z,N>6b-`ct+]+:C.;R?UnBYSk\tc9g0/0^6XGc9#h&ZfH-Xt$ueZWsYir-b,UMCT]-o@9>,IjI/s'q-!rY!Lsl8g9@A1$]4on5j4%[^AbR:s,9]hF@L]/C>m8bK^4(:cK(>%Lhe)$`M:U(UXe,iK>MThD\I+oQY@f[><F,0e5?5HpL<0.FD[F>$SCmJ$jSb:0d25`hV5I%BI(ItKKr/WKKa5:TLk5^n!rpa"MY#E5u(0R^N5=jXa6p;WZmK8(Z_J86#@i%f;<B!EhXpP["A+!iu!E9ihJIiC?eW1)<c>!GfZ($%DU"sPc/[X^i2;D_JO)175)8X3kbho[0$SnG#ehbO5FFS>\k1OZ<Ck"$5202km\QOpq]88=3OU=rne,ZY1H26UD6B\,KN?f-s%0"A%1cJp;J!0ZC,EA\IXBPP?%DQob)Iae&7I643rkj^`$2-mlQOcsUPgVbc'>;SIFs9,T\:h<8nb5W2No=<:r.S"8E$,,`gaspFS1jU^%Xfb#_RlC$DLeAA<*CX=.%T=q>Uld$]ajmP8AsafR9'ocZ\ItC$:Z1G%:\^jFq1MZkgeJ2(6?/Uu0;#Id-j(Fi1(^2#;3@4]b.^.Z%Q=A?Y/Y?Ad_lL2IHA9l"_SK?lM@*1PXIH!/!(A^-2Sh2m8f!)G,ZTW>.mLtHHr*`:nap"iC.r_is&j^*(p3,>VM7R3#UC=f,V7P`%UaLis,j)O5>i!jF9K[2309Zd+l/c7<j:H.>jXHP>#4e,b\!`KZlp3`;U4.@GLB*>a/eQ9XRTq0r$f3T9nl0/FiFIDuJ[aj4HQtnt%ONX#-P`2T_bYR\^d<%oL*:OfE+,fO5G\\SP<BWaCELc!2:e]Da+^r4?M*lWt&PX):(u=H:#03-+DJ_p>:d=N0@a`XiAn%`*kc*oF%9u".C$-U1$/c?&en>_&Fd[W'^<[i;;R<,6snh4J"$T`m69#;9tjV'Y3;)'/PI4i`0&roe[-tMFqUGf2lI^-#P#<73"m*UMEN58dt%/:@5^TON+^dW#:SL?`Y1,l&j1aCVR:ZBukWq"P8:?r#Htdu?V-ZFCSI"IG[rp)!F.i).3`N_"OsE+@"fK?9rjrjX[^d<J6d;SEaA%-nm-RGXKr*3E&$acd?e4$(!If7TpP:2m/g'YAO^nr+5@B#VRBuEi.L*`bT"'hA3<FpH<,dh>""aK/B6bd^f1O;Z1SH.#WI0Q">R%%hg?T9%[XJh)j?LPRh[?u+8"QPC:WL%Jfq3sNo6-P!iUufo5,r_\H$YA+&H<M7W7g16I>@ck;rR1qRbYF[9sh-KjHR5V&3_UeY-+e%h6ff4nSgH"iXf'uOFW>u3MG>:KBm<PLU\FX`WTe!K$bVHFTf&I2C^Ir&rIU@jp(N?=H*/#YZ1KX+M;5m5:BhI$<pY+9k_gt@s\#B%4BcBaO`XjM[GA0kl8;Xq:m>R)H/U"F`*s"Vm#s.ANgR(jJDhu+FO1*e0Fl.R7s*8mJ(1-'poZ`J,DG^f6G:7'aPPd+kk"d/S8?B]%DhjTXOmkA90GHKjKIt:dEq3kNEZFt43.\J:hlqP9W8t7"80lhq$G7B(06Wi]jXeI>i:TcrOc"(+d\Ts`@38mD)HeKXU$Q8V.0ij,%/g+G=kG5Q^Gq;f[JACI8?"iMG\h*Cu//.Y$M!Cq^N8%.eR,0f*3"<%5;W[FBPYTCXd>-W@PAohcN.+YD^dJhL[U&gpW$5hC8cUPP%)8O2:is7E&bcS`DkUh#r\dC'J,$m(#41pm@n?#%DcUK'r#9X[MaVl&uC@5`>8[?:K,!s'3<!R]\+"D'ZOu-1=I0G,L9hM+gF^j:_%,YfEG3n'u0+Z8><:9Uid6*=M!7@#5h)!-/-=cG*8OM];kQjWPWRhK]JhUsFK=e^Y\J[2Z5(TcWU$d9LsnUlhKH^TusRI[Tfdc6/u%ILu3X]Mt\n//$u0U,Y0=!f@/g'mh+":bpkP$D9u6(eIJ>L'hG_a+_h-,<l/?bQc#X_;W%$_Bo>IM'O6i@h8[!kCFc'o1KFBL,d,L%Ya8VJE8u_bY3#FiJYD[I8TGVkca/Dp*pW!>[S8C<#=3,k1K;X;[dV<J9k]qW1X1%.)s7G6ELlca17^RDNR^g8_X_'L/iO@)TJh\Y%Y:-\`-PZVOoraX-q'&FhM&8L;T@=H!2Ii)"3;$0Lao%gjVl$ur"JONOha#ZqX@_o(\<P5cIf5HJZ^.+^ge!so$AVHgAqX7m!bO`(%H5VW>J],K!2Wi&c\[e_["slCoiQH<2oK[6>"U[K--P:,jJA)@oCdgpL=h:;R1UOeqAAlWAK,%8\4tDGa]j:sK;[WVd04Q$6kZ=`f%/&.\^4s7/A?$DG2MZZmsN9)o;?`Uh"/@lYNU*u1(&g)/WH$q.iXj2GM3H:Y!KWMf[)H+I"Ma<2RdkSTSqGG@t7h,gC8`bK9jsb03%K"H\O3;@cL$4Fqk*q+'Z.;Joe^6)]7&f3,>Q!>3cF8SX?\F>aRQ3QZUfeh+-B>%P>P(`qL!pI0W%*01jf&J=".9coU1CiuR#iid(%Cr(u=`6>1X$JjDIkf.g]H,Sk)/f)]F'l>d4>%Kd%O#slYUB8rKTL`8+nC*$2S];`"17Rf'e9o?de-"fLaE_EIZXqSddo9/e7\T_'%8584gl73/&Lu.Rt"Fh_/TGb8=N+Eq1X%44J@Mrll,gSeFlMQWc`\@C\NK`qn904Q5'e@up2A#Fpa<bX\R&$cRBM3ST*R!d=q\q"X%]+j*QUNaZ."=Llq06/aWUn>nuE&I4#[6ssE[WNZ3a[jtGNYYsSi5sGA`Q4MGEfUZA-]A_/<+(Z(h(b0*e(\6E%CuoG]<#Iojd`1G%&u4/fFnAkC[0'<67>*UW>1Lrn'j:bunVW5Qq(@08K*[%GOD5+*aPs^u4?B$4NXQSPg%1gIS#+dUP*P;/Ja"Y.AlO-PIWV5HFT%i<%h%EH<p-u#$]\@[6W.emGi!s[qIipb^Q]WX5ac(cPe<J.<c@*R7//D>/#OUjDK'4r-!blM5qkd0dR5a@'jCcp!m%mUUm88A!/$:kS%R2fh[7K3HKHA1Q4)e0op55lt=>D>;ZWUlq#^9P2R%\<cU#\apXqjr174o*W%%.p#1I$(s\#8G?'#(@,,7WWts48!ZeYB/J.]!*lc%@lX`;"f)bJ-U-L5cjnD]`P,T-nL;th:GhsCN!+r]i1[G)&kgTlY[Kna(dSp!NAGY+:`uDQqbXd-^'L_#r_5OUkqXm$po(kSL%K_b%-dE[]V"t.e!LEB%%CM"gB"WM'X9^%+prbarZF@:Yf*On)bkZgR'n?OtQ,)<M;$f?],>``V!#J.-F=eK?mn')>]fpi8Q>IgK-n(cf%l`W#_bY8@A"aG'=>pkX9+eS#7]O=u=T:D-r=QF!,AQ0dc9`#^YGbR","%K*p9Se900r<XVQ4[HRdQY&.4lb<#;;`''Y`PD87s(e4%lU$`J,cWWD;n-a<%$8:E+C.=$*0(C5'd>G4'l+1.5ou1h4q1&KCj9]U.T'QOnuPM&P+RJCpIZSg0E]-])WWbD9C'/-:Rr%6\Fac(%crP,p`;\YIIU#gWq/ART")B^a],a!N3_@&B.L,q#g&VC$K9"N%T]gtRgDdoW:XUdGA\i5l9FW4o^ktK^iEH^!(9+$nAaaQ]#u!F@%:0kF7r7GXiiGlb56jX<5Zf#m<9qM_"^]Kr7g[_KubhqcGF.*h<NS@'KdFFR37%fW.Ci;>L.i?Qpf$@'k54dh%E!NH6C2F&e@*A3C%aDS%l/>hF6G".L\Z7/K(&aq&nkjP2^&k_Q-n!o0.K7LCn_5h6M%rTeeNTX16QNU96QVkan$p3sc(So;(&G'D0hJ6VUFr1t?Ts$UI%)i1\"YMqaWJ<0(]lU78`o*4Be26%MP(Mr#!lr`(`Pr1f>`@!tGi32`(#bMJ0+Ws!qJc\+Gq9OYhTsZL\76U9FQn*^,g.tKmDIVrt%HHJc"9Iuu"FFG,K@$bsU+WS[+3g6cK>7q<J-,jM`YXJp=g[jEijYQ84(MD:DAX*6*:,5j-aM/Lq4'R9i;#2=n)Oj!2"P2&NFQC59%:[8o!)A0snc<NMH?Q*KiNM37=2B_UKj?-*9P6YlUi8ga8)hn):!aT2*)]2Jj^sFN]20Ada-g3Pu,C'(%UXAmSg&RdUDs\`F3e`,B%+]sA.3*;sH=!T'keeF#S[k,o%134j!?OGH*\k$BCcu-l+"P<rh254NTj(@H&mY;qL;p@k)hQ0J3*'F>imlCONqa!QX'C9+[TVV(,%J9XX-'jDF1CSIa@.tGMaT:^ai(uXOJlR)b&5,4X//_Ha22?LZl]mIOm(s8KXHB$ZtON^)GAN^q(H4Ds1IoN"o-[esO1*r+H1R%-7%.7bn)`DGo3[-&M;Z]K!m@lR3EFbRumO_0K(!fFRN=HNL_3u<*,+bWS?3C_M3-4YYLG'XUJ<q(9<%Lh"#<D:gik+ig^qSgA-K-(:/%I"tgfV-n3#7<+,fWR[<S0fFGdr`bncP>tuAbOi[t,u@7KU5)hB<VR(?c3$,)>ikV83*Dof@E9RimQWNnllXt%#joVA<.ciA.f8kb%TPd<_:Y!UD47gr$\t1B^;_Nm7fJoa%&4Wo%H\QuKV]6@bkS[j+#m0sEJ+dbMFskK&8Cb*n8U+a-XbHb%qp-u=bA_#@80:2Kec0bY%kF<HNb!2S.#L>@6?D8X)=)Xqp+&:i5EjUZY2Gfe.[4'j+R,f)`fll5f1-,VGhUntN"2kuiA%3agG3Mcm'0<,XS<9`eTA[]!KpkrK%5le5S^LJD7d/&.$k1h#/*n3mX?oWSs*_g'=!lG2k%XLW2@(>gFYYat`s,DT8Op5AT@eGYV8Ctl>^GT:ST1(_&(p68L'YicbmSf=Y%Sm('Uhj=K!UbLGbTj!G#bJH]2'WHYl1#/ut+$rD0$kVX+:u&90o]MuH&k$4P<@CPVMe=YQ\aRE"B-pO:?K-Y@9"FK7.nYiBi9\$+%L?%gn[,!_/5H.c!0.(]PjarGgC*-&;IQdo%N>0;'F:nYZ`aQA:2r"8B!>=qs/,J;Hi.&?`H44Ss')]&mKk'8[T0:3m(l_CaY7;:f%Igj+.Icq/jh*BCu+<ZJdd2ts%]Z;)JA)M@TV""7^ouGWrrQ[bQq.`N?:VOoN$skfN%,)A#l'\Cf!K1&rW6??(ZAJi;AJuPn!l$GO%?&:O-<(Cd$lJ=(M[t^[MbjdY,)3^EIN_k34Z<N-q([;B#c!iI[;C1&(gsGYLm\e)KDiIbGmKl'a7qULV=N*C[9F/5@,-ho)\,b*m%Tn.;fKkW,<#XWuT+OaCQI=7Y*d,]S#\_rj/dS3p[A+kd[gTt.W@\H<aHp!c]$M:(gJf1]NlU(i8GsE'?Xn9P"q"V.4:9?8N2Ld1I%GEZhl44[K?]7?]R6>q:+&pDSl/F)o9KU6nRb,qj/_Cphr]R!F.R)g%,jkJA^NI'L<4Gg/`%p+$X+XV@^3k>k>T_(X2-hAVH9gH(4%b&lYRcPZA;puA1al/$C.mM*#ujOoQAIM7QnZCB8DiN-GS?DtLjbpb6GTZ8Q,WKue8QPNg:G+iH[-DcDR*CZ+`DW*aAO5aiMqPbeJ%JKeVB$e0U[0eI2Fkaf^3G;6JFX/<j0Ycpli_`GrGC!gNS!=HVpKb2`r`ItX+_o)g?&fE/]W6q"KL":\VW3Dr=Zmb#G==4=G(Y$%'%=?0BZ;A*aJ1&'*_(RtS$L^]WC;=Oh@=FGmi(/Wi;3.1]@USjJblL-ggE3gR^Jr'MmV^+bL72%78nQVM?9aqZ$B.a]NU>0>"/2u&u%=tjQ,Y.F^'DA@tL$ZH!pqGm32A8QQ6#o/K5#l+h+-*&>@5[ZLtjK8YbMki?[,f4Kl^ZFkS/N#Cj0T?5jQA#Dp:`p[Gg+3&f-P#/t%Zlks4D5mfg,`.!%(GFcf')f3b@=f(5A1!N(&&u9[5W\_mkB>n'-k=l>_C,2pfFMP-3>;A=LcOCRb<Ee8BWH^HPm&.e6Qp7q,Gimu%jE"_`/7?DqNUE'^*=sk"FToq)*XaWZ-_7LPL*#]9HLB$SG.<f++*+/jcF8)H+"N-VntHZ+aeljiODL$!:*&E5Wg0[^!TiE_[>u;s%*`5idGE+:TO0,r6O\f1+X]5tH&ZVRejS-9Tb5mJa)&tZq-?\>O!`8MhYH4#\lYbX"0D[OhB%g;2qT4,84-[Ra&0H+/OeiR*OO:Pg%MstfeN3O!!CSQs4a+&H#0Tq.$F+t=7HmRtO"0CZ8C%U(!9*WREo6&NYo,*=D5$\8dknjo!TIENVnaRU_JNLnL2>VJu%+s^jM;RhC%,SGabd,gND(,2`82dC-.1iHKZLAQ1X!/?A'.&1^LTRjOW91()%cX;@1Y2=j@8f<''gJ@WroEU:q1>ft&\W99Y$@3lW)LkAS^T*Yq%V'Z3sd1`e<TE76IhY)7X0O?l5IX0J4!?DeZoL%"ga0k-[-3-QC\3),?lg.B@NB,2u!`-mq5+7S;k#,q?6--T&(B%gp_6[e]6Xsat%h;)a[5"AT3M'l[Kk3i0QU"o-hWf[nFrOo)hpW>4-s+F8Ah%eKL8i07K93>o>;?5mNom/K4<d+7p*BH6S/-oXSL!_c.o0<2iq<^5'%f*U][s%'9W-kme.([g5@>SZJsIeN*"@IYjl[%[U[4pc/ZWft6X\l.j[9L#[BK;,0Ii2->kZ%ZS/pr"C;>q/NO`oR',Q[1].3-&E8%e]0==ci[=9GMb@'^s\V`=57"W-ES-.gpS&=-nbRiZ%@0e#u_6.+Fp"q-NeSi$<(LP((#>GL7AS,0npogqrTb3/56$u#VZ5u3?VBG%qL7M"*Q7hGJ$S6?s,^^o>7??K`^e`<X-TGq\9`O^1j@Cp!.NWmT=WRCNC8;J)E1R6?)MV:5pRjSNhfW^@!HNQ]904)>!m?V[=hm4%F.dH2A>M8kHqE4XbVL&7DUs><'0@s(YOV$OEC7QO`DQbimpbiW!+h9bjG3pWs"`$K+!lpbGurR\OZnMH](B_f7P^Qt77KaUm0DJ-%1FGS906S#PIbWG,L1;L6P&,6W622'rgQd#q?oMI51K#[D(FU/XUS*a4OU&E^%i,K"-/DP.]#]arX(>;h(O9!55**?X?!A<iOhd4-%(WS()Y.V9h?@IOiZM%CYHoTSC[>F`QqSM%7o6f5&iD=pa2c-uLoBd:;%>d$o?<1U#fd?pJQd8Tr(!-RkHT\XXrmjP:L3]Rnd_hQG%OlQp,klB`QD%_n?pB[V"/c^Rl2Nj"7a`bRZCo=`P+:1Q]@PI`oOqBR^!^1a)eBpT\BFI.8HYc4[$GYR]E?V<'$r*jN4_]?MipuQ]%d:bo\HaT.F4L]iL9#%q[4KA4f&)oe"CSQ)5gg._8O^9P0OsBtrk_G25Tu&7TCm\tZI"e9"O7q*;6ft'k30<3Qd/\Y&1p&cW8<Q?a%Gc5SW4=h*lFi3a]!IO@;7SA72OkeTSbOe"0_O7L7(4DW"oWV_(^5ep"_b$<UE#$elqHMIe9ZTfH0J\"EYW41:7Tftma!3G5[miFp%SY[B:MJC(C/Q3Ht(C2#+iige/S6XXu2/'tV5iH")mV^Vs3H+>s08$m:Of`X4,mdDTBHEp@.2T"]YERQkj/Lhl2!8&1*)u\9IE]2^%U+HcfGnq?4`A`3$e'+Nl!tN!2nihQ?-+jIs/JkhacHISfT&'`08cu#Fj,!a/'/AJgOp\Ym5fdFRKiqeTYS']\QQ,9/6DjerEp4ch%^)`(\HsK>XD&@Png\sODVaG?c,?h/<VS&1M7eJ9"`!k.QF<!6pYd5,%6<on#4h"Y..s)hYc5]hUG=dI5^9?*)@BBKCY:JYf!=HVa%g50b>l$)Js<!21L9c;BoO<12WL0\)H[8m3'SHAJ[r5VS`E`qZ<gED"2GQ@/8nVD:j%Y7+oAJ[$fb$8gRmAsL6"#tnHqJg,V3k0$:%(:ND(Xp*`]f:Y5*?L7pd8q(kI>s6>YBl^`k,Aok`\[ils3UgU*gJ!Qg*69#tX,\g6(kppKMGG"u*b$V!`u3=c#VdkTi(DK?nCah3%UKjB##ULJfd6Vhc4JnrI"g=Me*c:sG,(k2F]nG!`8)eb!.<fCB5rflX;2+#PWgZg1r-!tN84/=Kq\X_2UKTT8mCU<*+o9aLodp8E%N8g/gdFK>!h+NSdj"L[Cnk&Y0Hh@/hOuKo-Rti*(E^P+Mcd@@!;Uh-Wm8Nm!BaEYa8'bNr_<Dn2Yq;*\=Xpd6O+Rq\d0]ij9<tZU%3\ej+La:DV`S$_*QP4B%L&qq-8;!EsVe8(N6+%ppm.<mJg9.+iW3ESXI&T/DO-.Tm>Qh6.Gm=9\`?n`,PGf-TA3kj#LZfO[<8hOc%f/6X4`ut>5\DlX=:=9m<R9nA-BVsN\,LGOlNS%fT_IAMsHaA$RBf)FVRq#!NSgR>J3'VL;h:8pa\QCG9jWuKSNr^]i&=q\J"OZu9%<597BaV0A.YEnG_YO=Ul.D?l\g-$T&8YkQH3GGIW`TZek.4L=TD?fuUY[3X`$d*PEpEYQ.ljNdZkYPQ]P<baH!/&HC"$9<HkMMup%DZlJ#[haBlf,5quCSPOMn@^a@\)VFS2sN=[Gnqf.eJQ&I%7$7`JuB-`dF8`ph!)J.):Qn._t*!F5!>D&>?YNEXrWD3UJWc@E3l0n%8^NXu<gYchhofXSQWtP4n*DA_ltNr\QJRDp':3lIN#R[j^AVk>s.Wt$JJiO_6NkKI2t3`K\?(Lr2O1W)S:K5uo1kOP)H)^d_`7^d%S=Isj58csa[u3Fc=pJ)"bm1!GUNUB>S;rptq^#mOj>8<"q$=db<$l#ibPh+d8-4O;0'2'fe8>HZ#5en7lIgV)8^1Z!agE_Nb]$jL%j^:_dhq$Z/,U>;X`u3G_!:5%W0q_e8A[KV>NVKqh!$:p=f?LJB]&9:c=:bKq5ODM`-3(#P9f+XgZ<FpCYa9.p<)YTa:uCiF`NP:&%2=W6]6_:VT`VB@9'gUcml5tCKeJ:,JiOOL>@%C"dO^+uSqU:/_!u`$AQ/a0/5'_%g1,f!5bn-GcbMaB66RVCD`/$pkJoC(N'OS!b%_t;.rcUi@2QuFb.$BArJ;/aRP$UqDQ.p1IX$N7/M`R8p4b"9k'9,n;&m'[ssW["trpr"#.ELtc9W8Z4V##<.9U!e!:67mQ\Zp!(/%Qqd%A2W0Ti-8Wd^o&L6TV$DU;]M7d@b=f8=i"<\QXLfd+N[@R&cA.9W=cn:\mk`HT:I`A[&Z>tD5=R$;Fs^4Tf/=CBe3Auoj2Pd*%5Ilbm:UT33Ll+R*r23_sihSJZ8Umi5Og+<[Gj"LH)4_Om::C;m\S>8a,Sqj(.#+<#d^2QfValMPr(^</#=DMS<MQf+o1[/^1*7!R%=*d)Lg\XblIhM2##7S4+0mR`t&'YBT9KglSV"aPZ7Z&T,D(GH\j3?qKCc]g4``\j_nXF7p:8mDRZS;V=01jPhmI!kZQm2sAn3r/e%_FuOZ4-R:6<`BZdNXW3D9&MUuQo36H(^<"u[+r^Va"[XH'ofIB@#VFsep2(CK'<bZaS)bG;3GTJL35Y]L`3-?b*>q4/+004HbDLC%#V">.*IoKY7U?nX7\Qr`*VGiH`lUO^-u[)Wls!_GY^+&-\PmiJE,*&&OJH=5_ES\.."BS.[d(E&r)ee`n?P/&d3mZh3*cne:T7$?%>j?XuWsYuT<4_lShgpa\RFrpcEm*j(D*qO0jR._p:D+:QO?JsEfB<o>q`Vk/*_^)#16nE&Af*+3GKZCp[i;miL5ZJ+P:bT5<o/7<%;O3qd:J>adX68Yj1b]Isp.oLm.HX7TUiI)+P.-_.RYd`iUA*<M@J7K,,!G=D?8TP:h?lT[@4Og4pAt2gLCWC^f]/Vq6;3c<9*pX_%[p<D_M?aR50hXnP5pfVF`]c`9U!8Y/@F=%sAnOIJTHc_iggjI1W@pPS7?ZgQS[XQ0"LCS!o7tdFH!ZC8)1l874Z)HKosqlZh5mNq%B+Ka@'go939'HuZGWia2Mm]36-7c`q/CLi"3t!f2.;-phGG,'nU\0^/2jgQ#GjM^pdHaYia,Z_oom9c;G[+fR&>\+2_4/PVMIJ8%%>KgS1*ei]1B:1jO\9bI'AS@Z!^+mID6f6@f).H=?Ljrt1c`Z^:*]%G\5WnI6k.Y?Bi\BiL`Hh!`7e",d0\ptS.emEGID+7mYtH"9%&u#_5,7X9j30-L<:.u'[AKL<oZ=6aR'59qrL*#oS`rN"qCU79Y4-)8D#!\[!mErU02,<o3Q4=DfYsX.'7C#0RIX>=qVcNqk-/#R,%9sW8n%"4([]Mt#%c0,*h*og#AFd/K<TY7th90`[VE#r*A%_79D"nFV_;h-.rVE?15gMn\FgYtNWH-@7GZr4QCM1ql!(kBOuR`B'I%^fnPK?1YSI\BiB/:1s;q$sPafFH!0Z/=AG\Jn?j;=UF$&8t^Iba-I(:4B?[@V\=Ea]KLPQ!KPPNU&`D0<[aFsc9gQ$]f.#'fE"JR%:`_jR&lITWOkBk;WIp@^KehR@W2<8JeHZA@o/G!9BL9LEegDUhcjc%+CRnt.E[-njn2&,k]2aPC;F31TA+8U@R"Hprd#KR:@b:e$%/a\pTeL*"L^a:Z(;V1jMr89h<PO@*IkVh3K7M8W/7^C'sRf':O,5>*5\_@sVJPU<`&aUA>CiR?lIC8NH3r!4P?jJ]qpH]I\,GL:J%UkhfPQ`[S4Ck3l:b0N,`U9c2di[+&#mLd/P.R:knQh)DTUh#3[_GU%:OP@InE79bMOM1en?_O#Y+0\P*eDA%^m1=\7MNp0jJE>ZW%\,=Eqj@b$Qk9,M7%FpP>4`;1I+r;dDhX.JI=b@[knSk1]-AnseW(maJR6YQ,LK*(>dE^!=&3fP@\T>[^b!M'3@6TSf]\GP*etkH<%O3:PLgEPbA\=nXp9%H!+WT*;a2NHg!'`OhSoL(lU;>BbP<U$Eh#5m-VKaF7iY"@]MQqlN,op;[1)HE6mZ)%g[Y!s4132P$Rg6Z]l%9WhOh!tVKl`4!'%O$R:G"La03[8[%jc2ZlnO0,2S6PLb!\c$qtCoti]XSaCjnT2"Y#O\o=/F>ki`?Afo\ph?HP/K][8CjHfZ)t>Q%`Ck:OCQ91"AU)3q-E4s]@R-KJ?+u,-g>oX7n824<iIfIh'QkLRqaotJ$94DI)0:aH:>pOXk4h/i/F!5c6Pd;A@XN$%?qIJ>8('?2%_'Oh5<PWqOKoVP%BIl1KOJ(`n4)Vio!EtC-%[j1.$JB>+0*>Z(TJTe8I4MhS_H-o)Y0dP,BYar+!,CSFJm_mN*Wn_K9K\\0#?nJ9%IT#*.jpWTZ#At>>)=tFj;!j6R-:e-D^a\'rk-'KWRH7^ePk)^fMhg($rTL^rF`;)4(m7OGDV8Q9/ug$dHB;:b::$5cLsUFI)8qtP%8O;/4rf8sileP^LHfmd>:dV@S]RAnS2;)s#X*DUG[:(]9833]fZpPc1le\J!Rqtjq!&(X8nX$P#9*@mfb"9F6c!CQq3N?tom(e#b%W[U]RQPb3t0I`Ir4o0F5Vde((GZ$YQM]J-1pF#:Z4\$>^5Lk$X1E7eJUQ`&-:4Fa_;jMM<D:j5*nLcp<BKX`G\heP"ffr=skj"38%C'q2fEBM`JXbpA,$,(9/%$uCc#)+M(EBL&5ed;rN%ab/J(49=#@i+t-\VP7R$o+^07D^tE,-Z]e[d[jk?6^=++?_FCJ3q.,=e]-L%E2(iNJ7l70.+mC,!=[``eH(]?`c,IeUPL)E[0j]XW(uAT%.]=:@T0aI.(3PP9N?8j!jm_O?5#F*nHLMjc3G=",F\FXZ7'ogg%`=,%6d?oS2NUJC<5Ari?:[bQ/4&1mLXIiA5d-S;oZ"R"[MA0oO*Tiei&VB,eDYG>&CVm8e@8<G]'eOE+9@]3U#JIjX61XuJofX@`kaC/%)gXV:Lb/s[&7nSjTN=K>=&'#EHJu9.Bbps:N*_#g8Vis6-NR-jg$MO:cj6r~>%AI9_PrivateDataEnd