%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (Adobe Illustrator Artwork)
%%Creator: (Adobe Illustrator\(R\) 26.2)
%%For: (kyle Hamilton)
%%CreationDate: 6/4/22
%%BoundingBox: 0 0 884 373
%%HiResBoundingBox: 0 0 883.2392 372.5195
%%CropBox: 0 0 883.2392 372.5195
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 26.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 26.2.1 x197 R agm 5.5 ct 6.4%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 56 8%%BeginData: 9306 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD39FFA852527D7D7D527D5252527D527DFD4EFFA8A8FFFFFFA8FF%A8FFA8FD1BFFA8A8A8FFA8A87DFD04A8FFA8FD1BFFA8A8A8FFA8FFA8FD2C%FF7D7D527D527DFD0552FD1BFF7D5252527D7D7D527D52FD1CFF7D52277D%7D7D52527DFD2CFF7DFD0AA8FD1AFFFD04A8FFA8A87DA8A8FD1DFFA8A8A8%FFA8A8A8FDD7FFA8FD21FFAFFFFFFFA8FD72FFAEFFA8AE84A883A884A883%AE5827A8FD58FFA8FD13FFA8A8838459837D8359837D837D837D838352F8%A8FD57FFA87D527D52A852527DFD07FFA8AEA8A87D847D84838483847D84%83847D837D7D7D7E5227A8FD50FFA8FFAEFFA8FFAEA8FD067D597DA8A884%A87D837D8359837D837D847D7D527D525352535253527D537D535226A8FD%31FFA8FD17FFA8FFA8A883A884A883A87D837D83275283A884A883A88383%598483837DA883847D7D597D527D537D527D7D837D847D847D8483845227%A8FD32FFA8FD0FFFAEFFA8A883A87D837D83597D59837D83598359835927%27837D847D837D837D837D7D597D527D52535259597D5984838359847D84%59847D8359848352F8A85252527D527D7DFD38FFA8AE84A883847D838384%7DA883837DA883847D847D837D842752597D597D537D5377527D537D527D%7D837DA883848384838483A883847D847D847DA87DA85227A8A8FD067DFD%29FFA87D83AFFD06A883A883837D847D7D7D837D8359847D837D837D837D%847D8359837D83592D277D597D597D597D597D598383847D847D8359847D%837D837D7D597D7D837D84FD057D52F8A8FD30FFA8F87D83847D8359837D%837D847D837D8483847D8483837D8483847D8483847D847D837D84838427%5283847D848384838484847D8483847D847D837D7D7D837DFD04A8FFA8AF%A8A87D847DA85227A8FD30FF7D27528359837D8359837D8359837D835983%7D837D837D8359837D8359847D83598359837D847D2727847D837D847D83%59837D835983597D597D7DA884AFA8FD05FFA8A87D7D597D597D7D52F8A8%FD30FFA8277D83847D837D84838483847D84838483847DA883847D848384%7DA883847D847D8483A8838427527D837D847D837D8483837DA884A8A8FD%0BFFA8A8FD057D7E7DA85251A8FD30FF7D27528359837D837D847D835983%7D8359847D837D837D837D847D837D847D8359837D837D847D2727A87D84%7DA87EFD04A8FFA8FD0BFFA8FFA883597D777D7DAFA8FFAFFFA8FD31FFA8%277D83837D8483847D847D837DA87D837D8483847D847D847D8483847D84%7D837DA8838483842752A8FFA9FFA8FFA9FFA8FFA8FFA8FFCBFFCBFD05FF%A8FFA8847D7E7D84A8FD38FF7D27528359837D847D837D837D837D837D83%59837D837D837D8359837D8359837D837D847D837D2727A9A8A9A8A8A8A9%A8A8A8AFA8A8A8A9A8A8A8FFA8A884FFA87D53A283A8A9FD39FFA8277D83%8483A8838483847D8483847D847D8483847D847D847D8483847D84838483%A8838483842752A8FFAFFFAFFFFFFFA8FFA8FFA8FFA8FFA8FFA8A884FFA8%7D7DA884A9A8FFFFFFA8FFCBFFA8FD32FF7D2752847D837D847D8359837D%837D837D837D847D837D837D837D847D8359847D837D847D83592727837D%A883A883A8A8AFA8FFFFFFA8FFA8FFA8A884FF7D7D77A883A8A8CBA8FFA8%A8A8FFA8A8A8FD31FFA8277D838483847D847D837D8483837D847D847D84%83837D847D847D837D837D8483847D848384275283847D848384598483A8%A8FD06FFAFA8FFA87D77A884A9A8FFA8FFA8FFA8FFA8FFA8A8FD29FFA8FD%07FF7D2752847D847D83598359837D8359837D837D835983598359837D83%7D8484AE838453534C524C27277E597D597E597E59845983598484FFFFFF%A8FFA87D77A983AFA8FFA8FFA8FFA8FFA8FFA8AEA8FF525252A8FD24FF7D%7D7D527D7D7DA8A8277D83A883847D847D8383A8838383847D847D848384%84AEA8FD04FFA97777224C2246212227527D7E7D7E7D7E7DA87E847D8483%847DA8A8FFFFA877CBA8FFAFFD05FFAFFFAFFFAEFFA8FFFFA87D7DA8FD24%FF7D7D527DA87D7DA87D2758847D847D8359837D837D8359837D8483A8A8%FD07FF7D532121214C28532E592F2727847D837D847D7E7D7E7DA87E7E59%7D598484A853CBA8A8A8FFA8FFA8FFA8FFA8FFA8AFA8AFA8FD31FFA8217D%83847D8483847DA8A8AEA8FFAEFD0AFFCB4C22214D535A5A855A605A8427%525277537D7D8484847EA87EA8A8A87E7E59847D7DA8AEA9AFA8FD07FFA8%FFFFFFA8FD32FF7D2752847D837D8483A883A8A8AEA8FD0AFF7D21214C7E%5A855A7E7DA8A2CBA8A87D7E7DA2774C4C7D7D8483A87D7D84FFA87E537D%59837DA8A8FFFFFFAFFFA8FFAFFD37FFA8277D83837DA8838483847D837D%84838484AEA8FD04FF77214C7E8560857EA9CAFD05FFA87D52A8587D5277%7D7759AE84A8A8A87DFF7D7D7E7E598483A8A8FFAFFD3CFF7D2752847D83%59847D847D8359837D837D8359837D837D4C2153848560A8A2FD08FFA852%7D7D7D527DA8FFA8774CA8A884A8A8537DA8FF7D7E59845983598483A8A8%FD39FFA8277D7D847D8483A883A883A8A8A8838483837DA8532221778485%597E7DAEA8AFA8AFA8FFA8FF52525258527D7DAFA8FFFFA24C84A8A8847D%77A8A8FFAFFFA27E7D84598483837DA883A883A87D52A8FD30FF7D275283%59837D837D837D847DA8A8AFA8FFA8A85922217D5960597D59837D7D5883%59837D837D2727FFA8FFA8FFA8FFA8FFFFA84C8483597DFF7D7DA8FFFFFF%A8CB7E7E59845984598459835952F8A8FD04FFA8FFA8A8A8FD27FFA8277D%83847D837DA883837D84838383A8AEFF7D4C4CA88485847D7D8483847D83%83837D8483A82752A8A8A8AEA8A8A8AFA8AFAEA84C7D7D84AFAE7D7EA8FF%A8FFAEFFA8FF847E7D7E7D7E7D845227A87D527D527D5252277DFD27FF7D%27588459837D837D847D8359837D8359834C2128FFAF60A8CAA8FFA8FFA8%A87D7D597D527D5227277D5259527D597D598483A87D7D4C84A88384AFA8%7D7DAEA8FFA8AE83A883837D7D537D5952F8FD09A87DFD27FFA8F87D8383%7D8483847DA8A8A88384838452224C848485A9CBFFFFFFA97DA2777D77A2%7DA27EA87DA8A8A884A87D847D847D837D7D777D52A8A8AEA9FFA9A87EFF%A8A87D7D77FD047DA884A87D7DA8FD30FF7D2752847D8359835983598383%A8A87D522228835960597E7DA8777777A2A2FD0FFFA8A8FD047D77A87D7D%52A88484A8A87D77537777A87DA8A8FFA8FD38FFA8FFFFFFAEFFA8A88384%8384837D224C7DAE838460847D7D527DA8FD0BFFA87D527D7D7DA8FFA8A8%597D77FFAEFFAE7E53847D7D77A2CBFF7D847DAEFD45FFAEA85983525259%FFAF84537D53837D837D837D8483A8A8AEA8FFAEFFA8A8FD047D527D7D7D%597DA8FF7DA9A8847D5353A27D7D59A883A8A8A87D7E7EAFAEFFAFFFFFFF%A8FD3AFFA27722224CA8838483845AA2A2A883847D837D8483837D847D83%7D848384275283847D847D7D7DCBFFFFFFA87D7D7DA27D77A8FFA8837DA8%7D7E7DA87D7E7D7E7D8483A87D52A8FD30FFA87D7DA27D7E53532122214C%53CBA87D59835983A8FFFFFFA8A87D8359837D837D83598359837D27277D%7D7D537D7DA884A87D7D777D7DA2A8FF7D53A8A88384A9FF84A87D7D597D%597D52775252F8A87D7D7DA8FD21FF7D7D7DA87D7D52A87D7DA8A8274C22%4C2222224C4C777DA87D7D7D8484A87D83A8FD05FFAEFFA8A883A883847D%84838327527777777E7D7D777777A2A2A87DA87D84A8A8537D7EA87D7E7D%A8A2A27D847D7E7D7D597E5227FD05A8FD20FFA8FD057D527D7D7D52A87D%27214C224C214C4C7D777E7DFFA88484FFA87D598383FD09FFA8A87D7D53%7D5327277D777D53FD047DA2A2847DA8A2A87E7D7DA8527DA8FFA88484A8%7D8483A884AEA8AEA8A87DFD32FF7DA8A2A8A8CBA8FD05FF846084FFFFCB%CBAE7D837DA8FD04FFA8A27777719C7777779C52527D7E7D7D777D7D847D%A883A884AEA9FF84A8FFFF5284A88483A87DAFFD46FFAF5A6084FFFFCBA2%FFFFFF7D835983A8A2777771A2A2A8A8FFCBFFA8FFFFFFA8FFCBCBA2A877%7D7DA884A8597D7D847D7EA87D5284A8A8A8AE8384A8FD42FFA9855A85AF%FFFFFFA2FD05FFA8847D7D777DA8FD11FFAEA8A8CBA2A2A2A8FFFF84847D%83837753FFFFFFAEFF84A884A9A8FFAFFFA8FD33FFA8A8FFA9AF84855A60%5AAFFD04FFA2FD05FFCBA2777D59837D8383AEA8FD06FFA852524B522752%58AEA8FFAEFF847E77A8848484FFA87D7E7752847DA87DA87D837D835984%845227A87DA87D7D7DA87D7D7DFD27FFA8277E6085606060AFAFFD05FFA2%FD05FFA87771CBFFFF83847D837D84838483AEA8A852527D7D7DA883AFAF%FFA8AEA8AF84847D7E7DFFFFFFA8A8FF7759AE84A87D847D847D7D598452%27A8A87D52527D7D7D527DFD1DFF7D7D527DFD0552A87D2753845A848485%A8AF84A984AF7EA9A8FFAFCB7777A1FD05FFA8A883837D8359837D837D27%27AEA8A8A8AE83847D8483847DA8A8FFCBA277A8A8FF84847E7D5984A8AF%A8AFA8AFA8AFA8A87DFD09FFA8FD1EFFA8A87DA8A8FFFD04A8275A608584%856085606060855A858485848559785AAF84AFA9AFA8FFAFAFA8AF84847D%848384275283847D8483848384A8AE84FFAFAFA8FFAEAF7E7EA8FFAEA8A8%7752A8FD3BFFA8A8A8FFA8FFA9AFA8AFA8847DA984AF7E7777A9AFAF84A9%848560845A846085608584845A85842E27847D8459847D8484A884A8A8FD%07FFA8A27DCBFFA87E774C7D84FD42FFCBCBA8FFA9A2537E7DA9AFFD0DFF%AFFFFFFFAFFFA8FFAFFFFFFFAFFFAFA984AF84A884A8A8FFA8FD04FFCB7D%A2A8FFA87E4C775984A8FFAFFFA8FD38FFA8FFA8A8A8CB777771A2A8FFA8%AF848584AFA9FD0EFFA87DFD04A8FFFFAFA8FD05FFA8AF848484A884AFA8%FFA8A277A27D7D53774C53527D5952F8A8FD06FFA8FD2AFF7DCBA8A8A2A2%77A27778719CA2FD07FFAFFFA9AF84AFA9FFAFFD09FF7D52527D5252A8FF%AFFD0BFFAFAF84A8A8AFA8A9A2A277A2777753774C772727A87D52FD067D%52A8FD1CFFFD04527D7D527D52A8A8044C714C71719C77A2A2FD0FFFA8AF%84A984A984A984AFA8AF847D7DA984A984AFA8FFAFFFA8FFAFFFA8FFAFFF%A8FFAFFFA9AF84A884AF8484597E597E537D5352F8A8A87D52FD047DA852%FD1DFFA87D7D7DA8FD047DA8FF7DA8A2CBA8FD19FFAFFFAFAFA8AFA9AF7D%A8A9AFA9FFAFAFA8FFA9AFA8FFA9AFA8FFA9AFA8FFAFAFA9FFAFFFA9AFAF%AFA9AFAFAFA8AFA8A8A8FD97FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.b0f8be9, 2021/12/08-19:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <xmp:CreatorTool>Adobe Illustrator 26.2 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2022-06-04T14:26+01:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>108</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAbAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYqxTzL5i&#xA;856XqbxaZ5cOt2T26yWzxTrA3rh+LxSM4dV+Ehg1AO3bFUPc+a/PkTzsnlBpUiMSwxJeQGSVpELO&#xA;xJosaRsONTWuKqD+dPzDjhE8vkeRYxFNJIiX0MsgdC3pIFjRmJkovRTTl/k7qs4iZmjRnXgzKCyH&#xA;ehI3FfbFV2KuxV2KuxV2KsQ8+eRfL2tRPqt3pbajqlrEq2yLLLHUIWpVY2Tlx9VjTqenhirAoPKF&#xA;6ItPg/5V3NAI7gSHjrDH0TD8UUpYSVehuZeQ5fER9yqHH5eW1tqlpcf4AnuhGs0sc0eqMqwspkeK&#xA;OJQxBHFOHxGn2KUrTFWcfl5+X2gafZaVrbaI2j65DA0bWxuJZfS5s/Nasx5c+Zb4v1jFWeYq7FXY&#xA;q7FXYq7FWMea9c87addImg+XF1m2ZFLzm6jtykjepUcH3YLxStPH7lUAfNn5grbWsw8o+tJJAzXN&#xA;st5HG6TJM0ZCl13UqocbdGGKp95V1PzBqOmGfXdH/Ql8r8DaeulyCvBW5h49vtMVp7YqnGKuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KqSn/AEqQduCfrfFVXFXYq7FXYq7FXYq7FXYq07oiM7sFRQSzE0AA3JJO&#xA;KqEdxbw2SSyzRrDGg5zFgEFNj8RNOuKqwliMnph19Tjz4VHLjWlaeGKrsVdiqnPc21uvOeVIl/md&#xA;go+84oJpLLjzb5egYq14rsO0YZ/xUEfjgtgcsR1S6T8w9GCkxxTyAd+KqPxav4YOJj44Qf8AysqF&#xA;mIjsGIHdpAv6lbHiY/mPJpvzFkP2LAAe8pP/ABqMeJfH8mPN+cV4fzJ0Tyx+jIvR1KP4rn1G5JzZ&#xA;60XjQ/3IwgtuOfELerYWbsVdirsVdirsVdirsVdirsVdirsVUlH+lyHsY4x9zPiqrirsVdiqlcXl&#xA;pbCtxPHCPGRlUfiRigkBKrjzj5dgoDdCRj0WNWav0gcfxwWwOWIS2X8xdNqwgtppCvUvxQfgXwcT&#xA;A5wgf+VkzyE+lYKgHdpC36lXHiY/mPJQn/MbVUqFt4KnoCHNPn8QwcSDnLHPPH5oa5B5T1KQ2lnM&#xA;vpcWjdZgpDsFNeEqt0PY4QUwzEmmK+X9M8s67o9nrOo6Nbtc3YjnnQTXvpM0SmJOStcNyAUftVrv&#xA;4nElM8pBpH3XlXynLdm9Omxm5KJGG9e6ICxRiJRQzU2VRg4mBzlldx+YGtxAtc30VspGwKxLsdv2&#xA;gThFnkoyTKRS/mPHcO6fpw3UhH9xayGVh844Knv4ZLw59yTHJ1v7kvbX5p1D22m312K1MjItvv7i&#xA;6aF6f7HHw+8j7/uY+H3kff8Ac363mWRjSCztEYbStLJcNXw9NUiX/h8aj5lHoHU/c0LDXmJFxqio&#xA;O31O2WMD5mZ7jJbD+H5n+xHiQ6D7f1U4aJfFgza3fTBTug+rIKeBMcCH+ON+Ufx8V8YfzR9q9dBQ&#xA;Elp7xwRuGuXH01UqcHH7lOU9w+TGdPs4rT89PKccbSMpVWrLK8zVJmH2nLGm3TBduThlxB7Nb/nt&#xA;+WEin1dWa1mVeT289tcLIoNOJIEbD4g6kUPfFtTbRPzO8j65fWljpmpCe6vg7WcfpTL6qxhi5Usg&#xA;A4+m1a06fLFWUYq7FXYq7FXYq7FXYq7FXYq7FXh1t+Z3m9vzJ8z6NJeL+j9OkKWkYhi5KoegBfjy&#xA;alT1OAlqyzMRsn0nnrzI32LoKP8AjHEf1rkeIuP40lq+a/MkoLSXz0PTiEX/AIiBjZXxZd6DbWNV&#xA;uJG9W9neMfstI5H3Vpgtjxk9UFUmN3PVzgYr6ASeyLhVYDSFm7scCr0pHFU/PCqh8Tt4k4EJD+Yk&#xA;BXyVqjE7iNdv+ei5Ic23EPUEL5I0DTLnyppk0ttG8jw1Z2LVO5HY5Z4hHVlkyyBICef4b0JaCTT4&#xA;JBvSqeoR9L1x8U95YeNk72odC8tWJ9SDT7Oybf4hDEh8fAeGJmT1kV48kup+ZR/rRUAXqdlEYL1P&#xA;vwByNeTDgkjrfR9cum/0fTp3qP7wpwjb2q1KfdiyGElNLfyF5nmHxrb2lftCRzJt3A9MYWwaf8fi&#xA;0a35dtDGHvNXWCMbcEiBBJrsOZrXBTPwgOaT6rZeXbFmt/rF1czqQGjjKQnbrWgPBvZ+ONMTEBj0&#xA;lxYfWGVHbiNhGbl2kH+siU/XkqNcvsZcMquvsH3sXsZBJ+evlIgkgIg+JXU9Z/8AflWxIptgKH9n&#xA;6H081vbtXlEhrsaqO/8AtYGbTWlo00czQxmaGvoyFQWTkKNxNKio2NMVVcVdirsVdirsVdirsVdi&#xA;rsVdir5it/8AycXnX/jO3/ExkZNGo5MujhLGp2XxyDiUrSsEjoO+wwpKmvwQE92wK6n90n0n9eFX&#xA;E/DI3iaDArnWpjj+/FXXDVYIO3b3xUqkUYRf8o9ThVj35kf8oTqv/GNP+Tq4RzbcX1BkX5XeWNJu&#xA;/IGiXE1m0kskFWcMoB+Nh3OWOSQPxbK4/KWiRVpp9Ax3+w1fnvhv8bp2/Fo2LTNPh+zYRH/Xt0f+&#xA;OCgjhj3BMLfUfq4pHBDH7LE8X6gcaZCkXHryt1iB8fTkVvwPHGkrbnzFborrGpR0FZZZVPpxClau&#xA;Vr27fq64GJPcwHXvN819dfU9JdmLbSX0hMcjI3etKwR+CoOb+B3yQj1YiN78h3/qU9D8hrqHF9Qu&#xA;lEAO8dQsfjQRg/F78ifnWq5Pl5ff+xiJE/QKHeef491fFnmneV/K1hEqRQQvxFKyFW/4X7P3DIGR&#xA;ZeCOZ3Pmi10Ly39divF06z+vRD9zciGL1VG/2XpyHU9MBJLMRA5BMsCXYq7FXYq7FXYq7FXYq7FX&#xA;Yqkh88eTFXlJrthEKuv725ijNY39N6B2U0D7VxVdH518nyOEj1uxkdgpRFuImZg7iJWUBqspkYLU&#xA;bV2xV4Dp/wD5OXzt/wAZm/5ODIyaM/JmJIAqemRcZDMxlkAHToPlgYr5d2SMdMKS4n947fyCgxVp&#xA;ULekgFSxrQYqmFtoWs3EpeOymK9FYowU/SQBjTIQJ6N3mgahpsDX+rGDTrRT8Vxd3EEMYJ8Wdxkh&#xA;AnkzjgmejDdS/MnyXaSPBFqiXU6faS3jmcU8Q5QRn6Gy4aTIejcNHkLCvNH5oeXNZ0S90y0W5Nzc&#xA;LSN3RQnwMGNTyJ6L4ZKWknEWaZjRzgeI0y/yHrjW3lLTESZw0UP2EljWg5HsXWmRGGxf6/1NE8cz&#xA;Lbl7iymDzVetX0rq4BU0IUtKP+E5rhOA9/4+xgRkH4r703tfPeoxShJWilYjaGdBHJ9w9NvvyBxS&#xA;CTknHcjb7GRaf500SchL2BrRv9+KS6dK9viH3ZBnHPE802+r2upbWLhrf/dl18LLX+WPxbxPQe5x&#xA;bRvyYNrJi1W7fRtGdYNOtQZb3UPiEaqD/eGhq9WFEHV23+yK5YB1PJIHU/SPxScaF5PCJxjR4okP&#xA;Jg7AycmG/MkbysKFz+yKKPY8XU/BrleQ78h+K/Wnx0yaMBeYCgUAIjoAPoGQts5LPqbfzp/wC4LW&#xA;1lrGU1e3BINaHYBfHwxtkCl2l/mf9cvoLKbytr1nJPJDF60tmDAhmIFXkVzxVK/GSNvuxSzbFXYq&#xA;7FXYq7FXYq7FXYq7FWP3H5feR7mUyXGhWMzEMDzgRgQ0nqmqkUPxmvTFVdvJnlJrpbs6PZ/WkVES&#xA;b0I+QWJxIig06K6hsVfP9k4T85POpPQzMNv9cZGTRn5Mvos3+7CB/Lx/tyLioiCLS4W5TyzlSQKp&#xA;Glad+smLIAJrZw+SWIlnuL1f9ZUC+HRA5w7MwIebIdOtPy/NDC0Ls3/LQ7At/sZSB+GHZtiMbJII&#xA;9OtoDJAsMMCqWZ0CogUCpJIoKDJBuAHR4r56/wCchbifUG8u/lzaHV9UclTqQQyRLQ0YwJ+3xFT6&#xA;jfAKV+IZmY9Ntc9nJjhoXLYPPm/LXzL5iuv0l541yW5uiDzhjkEpjWSgK+sawx0YfZjVk32OZkai&#xA;NhQcSfaUb4MMeI/YzHQvyKsX4yQaIX5KAbnUJXjUkbbxmp+6OmVy1MQ13qZfVMQ8hv8Aj/TI/X/y&#xA;Fso/L14eGmac6pUXMNsZJE+IVo4WN+m2Y+XVCUSKWGGQNnJKX3feWJaFdw6dpq2dn5o0maz0+kNZ&#xA;rLUkfdnoWZVdd/Tf9nam/vjgQre7bjhxnc3fwRdr5oSfUTZ3OmDUHVPV9fTq3QMHEP6vFo0ZU4/F&#xA;srHJi/4ZfA/imH5avol8OX7GUaLcafqFp6mm3pkt2IEsVPrC8gan1bWY1elfsqwpSpXHjo1IUWq5&#xA;QlUhv5bH9R+SYLp9jIIpdQQ6NHPVYb+0PrWUkpPwiRCxEP8AqKEP0DCSff8Af+Pmy4YzF1Y7xsfi&#xA;P7fgl+rXGo6JdzWFvOLqSWMgS2TsY3jZan1APiUBPjf7QVe+QGIS5fj9H3IhgN+k+n8fP9KYeXdZ&#xA;hsrKC1Kq0Yf6xJcoOXrTmgWSQVNVjH2VG2w8MidzvyDXk1FkCq7g9B0250m4t1WHUFkUVqnKj1rV&#xA;iVajVJNSaZAmy3w4a5o1bdH/ALqIlf55CQPuGNMqXjT6/acD2Uf1xXhWLpMYu47kSGsfRadev9cW&#xA;QFI/FLsVdirsVdirsVdirsVdirsVdirsVfMduP8AkMXnX/jO3/ExkZNGo5MtgKiQchXw69foyDiB&#xA;EerG0npyRAoR+ySG+88h+GFkibZdClT05HuLQvX4iEnUU8aekfwxSOFW1HR9Ns9Kl1T9NWf1CzX1&#xA;J5pS0TKtaCqUZqkkADudhkowJNBsjhMvpNvH76Tzb+YV1d22giW08n2xVb/UeLIkjGh4t0LdRSP5&#xA;Fu2Z+PGMQs7zPRzIxjp48cvqZloWh23lXSBp+lwMv1oAyO20lxw/aken2FJ6fZB6CuSnk4dzvL7A&#xA;6yU8mpNyPDjZNpGqXmnBblEhnuUH7tnj+GPsfTUHY02LfaPc9MwsmeUm+OXgHDAVH8c06j/MnWa/&#xA;HBblfZXB/wCJ5VxL+YKSfmF+Y+rr5J1cxxwqWg9MvGXVwJGCEg8tjRsILOGUk0kflXSD5g8t2uqX&#xA;Xm3UbGTUY3e4sIbh1iXkGjCAcvsqtKU8B4YbZyyUebO/LsFjpH1mvmK7vhdPzKXEwZY6V+GLbnGt&#xA;DSit2wWjxB3oLzJ5Y8t6lN+k9Lv4dI1+PdL+MsRKQeXG5Xf1Qa/aPxDqDtlscm1S3H45NgyxI4Zb&#xA;j7R7mPw+ceMN1Z3qCDXB+6vbYBZre5SQFRKinZyWI7d/i95cBHLeP4+TVLDIEGB+PT491JjoaTaB&#xA;ZRanZ3cE91ewvFd2jUae0ReT/uXYgnjsCD9tqU5fCAzkDszlkiRUT+iz3+Xl+Cn66d5C1izF9DOl&#xA;m7hUhaGVIpqJtWVW5I7E1qzqdqYTIx9JYXEipD4FKLzyvPbqHtdUsL4AVKmZYJa16KCXRj7llyNw&#xA;Pl+Px3tZwR6Sr8fjohf05r2nFYzcXEZUVCRuLlKf88WlTB4Y6H7f10xqY5EH4ogfmJq6gL+kUVqk&#xA;BZUjVtuuzKGx8KXT8fJPHk7ik1t+a/m5/wA09A8ui7hl0rUFU3KiJCxJMtaOACPsDImJHNvwyJG7&#xA;Novzx/LCRJn/AExxECq8tbe5PFXpRjxjbarUr/CmBtUrz8+PyytKiTU3ZgvPgtvOCV9QRV+JFp8R&#xA;PXwPtVVmWh65puuaXDqmmyGazuOXpuyNGaoxRgVcKwKspB2xVHYq7FXYq7FXYq7FXYq7FXYq8Utf&#xA;yv8AN8P5jeZtea3jOn6nIzWjCVORBcHdSdtsBDVliSNk4fyZ5jhk5/U+aezRt+HInI0XH8KXcgpr&#xA;e7tJK31ky/FRTKjx7H+XjxB/HAxII5hKfM3mTypoWkNqF3JcwyBuMVqqLP6jsD8KuDEF6V+Ifflm&#xA;LEZmg24sPiGgwi48q+ZPzBe01q4tLrT/ACZCoaBpAVknNKF+ALqB2Eh28K9soSGEUN5uUD4ET1l9&#xA;z0Cy1OLS9NsdMWBX0iyYC10yOkQdj2LAVJJJJZqnqcePh63I8z3OrBlnn6voCd6f+Y14XaHTdDY3&#xA;8x4XOo6nKtlaDgPhSIRLczmJAfhBjX51JOVExPMu08SFDeh3JtFofm7W/wB7P5h0q1Q/7q0qwinZ&#xA;R4+vdvOCf+eI+WDih0FpBgeQttfyk01zyu9a1O5c/aobS3Wvsttbw0x4x3Baj/NCG1r8ovIi6XcP&#xA;qUmoS2qoPXreTsGAp/usNw/4XImV9Aih3BiWnXX/ADj2ln9TtL6SOO0cW5LQXDsWYOygl4Xr/dN9&#xA;2CyxMfMpta+W/Il9psuqaBrUKWsTmHndRekvrcFfiCotnrxkHQHG7YSx+aTvqk9jLxsb26gkZuMZ&#xA;iuZmV1HVglxx4gk7s4AXvhAJYxiZcuny+avfeQdbmt01f9KW1tq8am5hE/q1Qir0jnRmW4Eg+21D&#xA;7UywZANunVv44xBj069/w93T7UdZ+dJI7iefUIZbbW4iLbVEAAjZQiqynYOpNOaycab9ugjGNHfk&#xA;4mWMgfM/aPx9qtda9Fq+prP5SsJzqx2lmi9NLdwtCFlU/uXHEdS6t06jbJ1/O/H6XKjCx6tvvHw5&#xA;/ZTtQ8x+b1v3tdWkh0OMKA/oxxXIqw+EBgU4sxH+/QfbI8Eem/4/HRMhEd8vcP7fuR+neStZ1WEt&#xA;L5hdrdq7RuJdj2eNjKAd/wDfmRMh3fj4UxEoy5D7f1UmNt+U+koK3F/dSuRQsnpRfqQ/rwGSSB+P&#xA;22p2v5M+VLfzRYeZBPevqOnUFuHlQx7cvtKIwT9s98BNppm72lo/24Y2+IPuoPxLup3HUdsCrhBA&#xA;DURrXrWgxVuKKKJAkSLGgJIVQFFSanYeJOKrsVdirsVdirsVdirD9X/NvyJo93dWmpX729xaPJHI&#xA;n1ed6mFEeTiY0cUAlUVNN8VU7385fy0spJI7nW0R4SyzKsU78CjhCGKRsB8TCniNxtviqqn5s+RH&#xA;u47NdQcXcqxyRQNb3CM0c0ywI3xRigMjgb0PfpvirDfMv/OR2laF5j1LRJdFnmfTpjA8yzIA5HcK&#xA;V2y3Fi4zTPHDiY3qP/OWTeulrpnlkyTS/Yea66eH7tIqn/gsyRo+8t403mxjV/zR/OPzUj2819Z+&#xA;U9OlLI7ySR6cOBHwsHuGa6brX9zX5ZYMOOP9L7WQxwHmyfy3odtaaBLFNdat5vupFNZ47T0NNi8Q&#xA;bvUBAJh03Dn2XMfJj4jtUfv+QcTPjh9W0E/460dFAczQaXK45emapyB3CFlK1FdiVpXsaZWCcMjt&#xA;ZdSf3g68F/NkHlLyt5Q1G1fgJo7oVWOKa4kmuI0/aYvKz8y53PZRQADetc58TsiYSFBEX35d3sbc&#xA;7K4SZAahJPgbpSlRVT+GVcLQcB6JFc+WtftVXnZSkoagxj1BTr1TlgprOOQ6KU19rVrTjc3MHYqH&#xA;kT+IxQSQkXnjzd5ltfKOozW+p3UNxGi+nMkzhh+8Uda+GEFsxTJkEl8tee9YudAsBeX11POU5SzS&#xA;XMqlmJIqfT5E7bb5kxwki3NGCRF3+PiUfFqtq0glnkIqT6qxK6ylQNv9IljkH3x5IYvK/iPutRgH&#xA;UGXxFfIH9LJNI882mnoI9A0y0tvV2uLi8nWaWWm1Xk9RJae3D5DDLFLq2yxTregPx5Uh/rrPHdWs&#xA;usQ28S3AmOnWYl4MrEtIYeUaRxmp+EOlK9fHK+HrRIcfgHOiY/L9f3oS+07y7ZiDXNCnGqXkVwBc&#xA;afcRGYzxA0C1EYg5pXkv2epFa5aSeXJnCUyN/T3c9v07p7d3ei+YrlNW0/SZ5VhK1W2tpXWQ9XIm&#xA;jWiN/q1r3ykRNUXHngJ3FA91/erWs8Swyx6Jca9bwQFhdWstol2lWqGDJJRgPniYV3Mox7jv7xt9&#xA;tMdnmuRcNNa0gKn4XitpLNx8okleL6RH1yW/v+IRM/zuEn3j9G/2qy+afO1uR9Wu5pwOomMjN32H&#xA;7tV+/BQPPZiJR769x/tSzTPPn5hz/mz5e0y7vJk025C/WrVUAiYH1d2qP8kZCYAOzcCOn4+wPVtO&#xA;17z7NeW8d55eS2geRFmYTI/GNq835Bv2PCm9P8oUilluKuxV2KuxV2KuxV2KuxVZ6MJYsUXkdy1B&#xA;XoB/xqMVWm0tGl9VoYzKBQSFRyoSGpWleoriq4wQFuRjUtsORAr8JqPuIrirEtR/KH8udS1OfVL7&#xA;RkmvrmT1p5jLOObnepVZAv4ZKMzHkyjIjktb8qPyut1LzaBY+n1P1heaV8aSFlrlgyzPUqcxHMtC&#xA;+8g6CQmhaVZi66Rpp9tFEKnp8aKBv/k1ywYckvqO3m4WXXxGwPEURb6LrGuTrda8TBZqaw6chpXw&#xA;L+H6/lickYCoc+9qjhnlN5No9yZrDDqcv1dIwNGtG4FAAEnljP2QOnpxEb+LbdFNaDtz5l2XCIik&#xA;h1/yV9XLahpEnomKsjRM/DjQVqkhIpT3P05Vw9ziyw/zUmi/NLU7TTiVtF1iTYQvG4QntViocMPk&#xA;MshHepbNmGXq4ZnhasL38xfNDAtrVloVu5INpAA1xx6A0arfc4y7ixDl6nNGXAOXqKYR/lJ64P6Y&#xA;8x6nqDNuT6nEdewk9bD+Y7gAy/NVyiAg9T/I/wAgrYXMmoXV6LQIXuJHnUAKPiYkhMjPUSkKNMJ6&#xA;mUhRAS6y8pfk9Y20NvbebIYYUU+ijXmnlgu7dZIy2wr1ysT2qvv/AFtNiuX2n9bcXl/yZM3q6F5y&#xA;gkIUsbci3uZWCuUJCWxt5actthhM4nmPt/tRI469Q+0/ptEQ6D5wRebCe8gmZkNrBdPbS+m3R2hn&#xA;eaKnirODjUT5NfDGWwJA8/2KlhrV1dy2+n2ersLyUtD+i9Tgig4Kp405VBkqNqRE7YeEx35+5hPF&#xA;LkNx1I5Kt1f65ZeYEuYobW/1PmTN9VbkkicePpcBGzIygbPXkO/IbZWPNj4gB33Pkxq71tPL2vXW&#xA;pWiz6Vpt5cBbu3VTILWYn965J4qqOxHKM7Bt9hln1/1h9rMmWTcbSHzP7Qy1tM0O+5S/pQX93IAw&#xA;mE0YnXaoD28pFR/sq5VZDScIIsm0ba6nb6VxS90uGRFFFu7eII7fOOUKxPiVNMlYPksZGHMAp3b+&#xA;cPLjqFFyISOsboyU/Cn448PubBqIfgOPnbykNWt9I/Stv+krocre15jm43+z/wAAcBFNsZiXJN4b&#xA;q2mgFxDMksBBImRgyUU0PxDbamBk57m2jQPJKiIV5BmYAFRTep7bjFV6srKGUgqRUEbgg4q3irsV&#xA;dirsVdirsVS/Wxrhtozo5hFwJP3ouKhTGVYfCQDurlW9wCMVYjNcfnmDwitfLpYKT6rPecGPNaAr&#xA;XkvwV/mr1qPs4qjFP5ui9jR/0K9kUiM0qC4WQSGdPVVFLMOIg5Urvy+7FXnVppHn3/lZvmqeW21L&#xA;9ETSsbF2E3oMvMU9P9np4ZkaYgE24WtjIxHDbIv0LqfqCa4067mYdirmvzohbM3xI8gQ6zwZXZjI&#xA;ptZa0+lbW3l9YCBQyyM6N7gvKoP45TLHxc5ORDMcfLHX481UecNT1pBDZ2Si05Fbp7e6QyuFH2Ii&#xA;AKK3d1rt9nfcQ/LxjzP2ObHVyBow9X9Yfj4L5fzHsLGQaXBp1dQjX04NNhkjryUfDHRR8O3t9GD8&#xA;te97Ngy5DvKEq76tjLx675kvDJ50+uWmmxv+60azjZIzQ7GVyat09z4cctEBEeir7289o48e0Iyv&#xA;vIZKtz+XMVhHYi0W1t0FIwsLqwoAOXNQWJ8ak175RLT5JGzu4eTXY5m5EpJeab5Zdm/R2sDcGkdx&#xA;FKO9ftqn/GuVHSz7mg5sR5S+woUXuq2jqttfPwGx9KV1U/QeP6sH5fJ3I/MAcik35h+aPMMPkrVH&#xA;S/kB9JV+0DUM6qQQa9Qab5E45jmG/Fm4pAWlfkay8sXXlXTbvUNJjuryaF/rEv7pOfqEq9eMdaMu&#xA;x33wUnJlqRG7MdKl0rTrk3GiaJaWd1IGDzABpW5kM9XHBviK1OH5MfGPcnAuddu0QOtRKPgt3Sdl&#xA;NGHJuEMaoyrUV58sRFeOR/BRg8uWl5GsOpx3mpRBhJ9WEC28AYfCDwYpuo2BFKDJcRHI024wY/zv&#xA;uXWWk+YdDupJNEtnn02Ql5dNvGgEgY1NILlHLAfZAWXl/rDJXE8+bkAiqEa/HxUIdRTXdRmFtFb6&#xA;drRjMN/pF8WD3EVD8E8DRgSLx6OhNAetDTExMd+iyhkjuK97B57R/KxaFtPNzpwDvd6fMpklsUBP&#xA;9yorJNbKOkiOxUUDDph4RM2Of3/tYnEZ2QRxd1V+nmyvy9onkvXYIrnTLqFDIteEIKOe54n1HB+i&#xA;uVk9C1cBOxJ9ycSflrpUjcjd3Q7UD0G2AHyCfB8/u/Ulafkvo0fnPTPNK6hc/WNMUCO3biyPQufi&#xA;Yjl/uzA2xjSO1L8m/wAvNRnE93pztIIlgBS4uI/3aSeoBRJF/a74slOL8lPy4iVFj0x1VIXtgour&#xA;mnpyGRnB/edSZm36jtirK9E0ey0bS7fTLLn9WtgRH6jGRzyYsSzNuSSxxVHYq7FXYq7FXYq7FUt1&#xA;fzJoGjPbpq2oQWBuyy27XDiNWK0r8TUUfaHU98VQdv5+8j3IYw6/p7hUEjH61CKIQDy3b/LWvhUY&#xA;qvh88eTJ5IooNe0+aWdkjhjiuoZGdpTxQKqsSeR6YqkF/wDnR5FsdYvtHnnn+vac/pXKLC5AYbbN&#xA;0OWY8ZmaDZjxGZoIGf8APPywwZbCCaWVf9/j0kI8QVEp+8DLhpJdXIGil1QH+PdX1ze00K91iMtx&#xA;WAx/VrIGv2pOPrGUf8ZHCn+UHJeCI8yB97LwBHmQPvR0nlHz/wCZnR/MF3b6LZKQRZWKK01FYUBk&#xA;BalV/wAsj/JwDLCH07tMxg/m8Z82S6X5B0PSSJdNae2vCvGS8EnOR/8AX9QMn0BQMrlqJS57uJOF&#xA;8iY+7l8kxCeYYPsyW98g7SBoJP8Agl9RT/wIyNwPePta6yDul9jf6XuI9rrTrmM/zRKs6/R6ZZv+&#xA;FweGDyIXxiOcT9/3LDrnl4n97LHET1E6NEd/+Mirh8KaPHxdT89vvXpceWpKcJbJ69OLRH9WJE/N&#xA;IliPWP2IHzJcaLb6Dfzx29hdzRQs8NrO0KxSSAVjRmf4RVqdcieLrbOPBe1MKtPN3mM2EZi8i6ci&#xA;u3CJF1Gx9IqxcBwYw+ylV5KAT8W1SKYxEulsZeH1plHluS51jRYJ7/yzBpd+9RNbzKjxxlTxrUKp&#xA;etKrx2p+1krPUsTGJ+mI+Sap5S0IL+8tVeQmrSCsdSfAJxAHtkZTJTHTwC8+XbdaC2u7u1VeiRzu&#xA;V/4GTmMF+TLwu4kfjza+peYoeTQ6jHc/yx3MIWn+ziK/qx2XhmOoKA1jT59UhS31rQodQjj+ITwT&#xA;AOhqDWIv6UiHYfZfJRJHIso5skeny/ax2/07VliEMUtzdWsRDQwa3bSStG4blyivbQ+uhGwFQ3zy&#xA;dg8x8v1MvHxy+qJj7g861bQ7m1u5rvTYbrTZQy8jbNHcRyUAHJ0cW5JPH7TQ89/tVy2uLY7++wzO&#xA;XFPYyjL3+k/NWtvzB/MrS4gNr5VNBRbiKi1pv60c6fdQZH8vE8jXyP6UDHA/TOvjE/pVNA/OHz7q&#xA;H5maDol062unXpC3NoUidn/vDy9T00Za8R08MpyY+E1dqYcPXiZ9F+cTBkiu/J/mGCYisgSy9VBy&#xA;oV4uGXl9octhxOxytCLX80g4klXyzrQgh9f1A9oVmb0E5fu46nlzr8NWFd8VZH5X8wjX9Hj1L6he&#xA;aYXZka0v4vRnUqaGq1Pwnse+KptirsVdirsVdirsVSPzT/gr0Y/8Ufo/0eLej+kfRpTknLh6v+Vw&#xA;rTvTFWPQf8qO4zfV/wDD3H0f3/pfVP7j4K14/sU4V9qe2Kqln/ypX65a/Uv0B9b5wfUvQ+q+pz9Q&#xA;eh6fDf8AvKcad8VTK6/5Vj+kbj61+hf0lyP1v1fqnr867+py+OvzyUeLozhxfw2mWmf4Vqn6M+o1&#xA;/Y+rej49uHvhlxdbTLi62muQa3Yq7FXYq7FXYqgpv0Lv6/1bpvz9Pp9OTHF0tqlwdaS++/wL9Uk+&#xA;v/ov6pt6vr/V/T6inLn8PXDLjre0R8K9uG/g6y/wL9Wj+o/ov6rT916H1f06V/Z47dcRx1taJeFe&#xA;/DfwV/8AnVP+XD/kjh/eeaP3P9H7Hf8AOqf8uH/JHH955r+5/o/Y7/nVP+XD/kjj+881/c/0fsd/&#xA;zqn/AC4f8kcf3nmv7n+j9jv+dU/5cP8Akjj+881/c/0fsd/zqn/Lh/yRx/eea/uf6P2O/wCdU/5c&#xA;P+SOP7zzX9z/AEfsaP8AhGu/6Pr/AM8cP7z+l9qP3P8AR+xDL/gD9MW/H9E/pqg+qU+rfWqfFT0/&#xA;92fzdPfK5cXVux8Nemq8mQZFm7FXYq7FXYq7FX//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>884.000000</stDim:w>
            <stDim:h>500.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>ArialMT</stFnt:fontName>
                  <stFnt:fontFamily>Arial</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.01.2x</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>Arial.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -372.52 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 372.52 li
883.239 372.52 li
883.239 0 li
cp
clp
181.12 91.0195 mo
308.62 91.0195 308.62 66.0195 436.12 66.0195 cv
436.12 69.3246 li
308.62 69.3246 308.62 94.3246 181.12 94.3246 cv
181.12 91.0195 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.48127 .12842 .425422 0 cmyk
f
446.12 66.0195 mo
573.62 66.0195 573.62 41.0195 701.12 41.0195 cv
701.12 42.6721 li
573.62 42.6721 573.62 67.6721 446.12 67.6721 cv
446.12 66.0195 li
cp
f
446.12 140.246 mo
573.62 140.246 573.62 201.85 701.12 201.85 cv
701.12 203.503 li
573.62 203.503 573.62 141.899 446.12 141.899 cv
446.12 140.246 li
f
181.12 223.223 mo
308.62 223.223 308.62 309.579 436.12 309.579 cv
436.12 312.884 li
308.62 312.884 308.62 226.528 181.12 226.528 cv
181.12 223.223 li
cp
f
446.12 309.579 mo
573.62 309.579 573.62 106.956 701.12 106.956 cv
701.12 107.782 li
573.62 107.782 573.62 310.405 446.12 310.405 cv
446.12 309.579 li
f
446.12 309.579 mo
446.12 310.079 li
478.132 310.084 502.188 297.339 522.168 278.281 cv
552.14 249.692 573.058 206.926 598.431 171.357 cv
611.114 153.572 624.901 137.59 641.453 126.065 cv
658.006 114.541 677.313 107.458 701.12 107.456 cv
701.12 106.956 li
700.62 106.956 li
700.62 107.782 li
701.12 107.782 li
701.12 107.282 li
669.107 107.277 645.051 120.022 625.071 139.08 cv
595.099 167.669 574.181 210.435 548.808 246.004 cv
536.125 263.789 522.337 279.771 505.786 291.296 cv
489.233 302.82 469.926 309.902 446.12 309.905 cv
446.12 310.405 li
446.619 310.405 li
446.619 309.579 li
446.12 309.579 li
446.12 310.079 li
446.12 309.579 li
445.62 309.579 li
445.62 310.405 li
445.62 310.905 li
446.12 310.905 li
478.132 310.91 502.188 298.166 522.168 279.107 cv
552.14 250.519 573.058 207.752 598.431 172.184 cv
611.114 154.398 624.901 138.417 641.453 126.892 cv
658.006 115.367 677.313 108.284 701.12 108.282 cv
701.619 108.282 li
701.62 106.956 li
701.62 106.456 li
701.12 106.456 li
669.107 106.451 645.051 119.195 625.071 138.254 cv
595.099 166.843 574.181 209.608 548.808 245.177 cv
536.125 262.963 522.337 278.944 505.786 290.469 cv
489.233 301.994 469.926 309.076 446.12 309.079 cv
445.62 309.079 li
445.62 309.579 li
446.12 309.579 li
f
446.12 321.698 mo
573.62 321.698 573.62 269.486 701.12 269.486 cv
701.12 270.312 li
573.62 270.312 573.62 322.524 446.12 322.524 cv
446.12 321.698 li
cp
f
446.12 321.698 mo
446.12 322.197 li
509.934 322.203 541.936 309.11 573.809 296.054 cv
605.686 283.005 637.433 269.992 701.12 269.986 cv
701.12 269.486 li
700.62 269.486 li
700.62 270.312 li
701.12 270.312 li
701.12 269.812 li
637.305 269.806 605.303 282.899 573.43 295.955 cv
541.553 309.005 509.806 322.018 446.12 322.024 cv
446.12 322.524 li
446.62 322.524 li
446.62 321.698 li
446.12 321.698 li
446.12 322.197 li
446.12 321.698 li
445.62 321.698 li
445.62 322.524 li
445.62 323.024 li
446.12 323.024 li
509.934 323.03 541.936 309.937 573.809 296.881 cv
605.686 283.831 637.433 270.818 701.12 270.812 cv
701.62 270.812 li
701.62 269.486 li
701.62 268.986 li
701.12 268.986 li
637.305 268.98 605.303 282.073 573.43 295.129 cv
541.553 308.179 509.806 321.191 446.12 321.198 cv
445.62 321.198 li
445.62 321.698 li
446.12 321.698 li
cp
f
446.12 319.769 mo
573.62 319.769 573.62 228.125 701.12 228.125 cv
701.12 228.952 li
573.62 228.952 573.62 320.596 446.12 320.596 cv
446.12 319.769 li
f
446.12 319.769 mo
446.12 320.269 li
509.994 320.282 542.048 297.266 573.911 274.354 cv
605.798 251.444 637.493 228.638 701.12 228.625 cv
701.12 228.125 li
700.62 228.125 li
700.62 228.952 li
701.12 228.952 li
701.12 228.452 li
637.245 228.44 605.191 251.455 573.328 274.368 cv
541.441 297.277 509.746 320.084 446.12 320.096 cv
446.12 320.596 li
446.619 320.596 li
446.619 319.769 li
446.12 319.769 li
446.12 320.269 li
446.12 319.769 li
445.62 319.769 li
445.62 320.596 li
445.62 321.096 li
446.12 321.096 li
509.994 321.108 542.048 298.092 573.911 275.18 cv
605.798 252.27 637.493 229.464 701.12 229.452 cv
701.62 229.452 li
701.62 228.125 li
701.62 227.625 li
701.12 227.625 li
637.245 227.613 605.191 250.629 573.328 273.541 cv
541.441 296.451 509.746 319.257 446.12 319.27 cv
445.62 319.27 li
445.62 319.769 li
446.12 319.769 li
f
446.12 329.134 mo
573.62 329.134 573.62 355.786 701.12 355.786 cv
701.12 356.613 li
573.62 356.613 573.62 329.96 446.12 329.96 cv
446.12 329.134 li
cp
f
446.12 329.134 mo
446.12 329.634 li
509.838 329.636 541.643 336.288 573.517 342.95 cv
605.393 349.614 637.338 356.288 701.12 356.286 cv
701.12 355.786 li
700.62 355.786 li
700.62 356.613 li
701.12 356.613 li
701.12 356.113 li
637.401 356.111 605.596 349.459 573.722 342.797 cv
541.846 336.133 509.901 329.458 446.12 329.46 cv
446.12 329.96 li
446.62 329.96 li
446.62 329.134 li
446.12 329.134 li
446.12 329.634 li
446.12 329.134 li
445.62 329.134 li
445.62 329.96 li
445.62 330.46 li
446.12 330.46 li
509.838 330.462 541.643 337.114 573.517 343.776 cv
605.393 350.44 637.338 357.115 701.12 357.113 cv
701.62 357.113 li
701.62 355.786 li
701.62 355.286 li
701.12 355.286 li
637.401 355.285 605.596 348.633 573.722 341.971 cv
541.846 335.306 509.901 328.632 446.12 328.634 cv
445.62 328.634 li
445.62 329.134 li
446.12 329.134 li
cp
f
181.12 94.3246 mo
308.62 94.3246 308.62 69.3246 436.12 69.3246 cv
436.12 72.6297 li
308.62 72.6297 308.62 97.6297 181.12 97.6297 cv
181.12 94.3246 li
cp
f
446.12 67.6721 mo
573.62 67.6721 573.62 42.6721 701.12 42.6721 cv
701.12 45.9772 li
573.62 45.9772 573.62 70.9772 446.12 70.9772 cv
446.12 67.6721 li
cp
f
181.12 180.257 mo
308.62 180.257 308.62 205.045 436.12 205.045 cv
436.12 208.35 li
308.62 208.35 308.62 183.562 181.12 183.562 cv
181.12 180.257 li
cp
f
446.12 210.003 mo
446.12 206.698 li
446.12 206.698 li
446.12 206.698 li
473.714 206.698 495.331 204.526 513.566 201.122 cv
514.795 201.969 516.008 202.836 517.206 203.723 cv
498.22 207.528 475.567 210.003 446.12 210.003 cv
528.542 201.202 mo
527.565 200.325 526.575 199.456 525.579 198.604 cv
527.643 198.124 529.672 197.626 531.656 197.116 cv
532.728 197.927 533.789 198.75 534.84 199.584 cv
532.783 200.138 530.683 200.679 528.542 201.202 cv
540.088 198.118 mo
539.113 197.287 538.128 196.463 537.136 195.65 cv
540.377 194.749 543.535 193.81 546.612 192.849 cv
547.734 193.589 548.85 194.338 549.955 195.092 cv
546.745 196.129 543.465 197.141 540.088 198.118 cv
556.018 193.078 mo
554.969 192.327 553.913 191.579 552.851 190.838 cv
556.013 189.788 559.123 188.713 562.189 187.629 cv
560.907 189.188 559.61 190.749 558.314 192.29 cv
557.552 192.554 556.786 192.817 556.018 193.078 cv
593.034 179.941 mo
594.011 178.505 594.993 177.077 595.981 175.66 cv
600.032 174.334 604.179 173.05 608.5 171.822 cv
607.613 173.166 606.733 174.522 605.86 175.891 cv
601.44 177.19 597.191 178.546 593.034 179.941 cv
591.554 179.517 mo
590.556 179.067 589.562 178.614 588.574 178.159 cv
590.256 177.576 591.949 176.998 593.662 176.426 cv
592.957 177.451 592.253 178.483 591.554 179.517 cv
607.169 175.509 mo
608.057 174.14 608.952 172.783 609.855 171.441 cv
632.786 165.043 660.403 160.344 700.87 160.325 cv
700.87 163.63 li
658.81 163.65 630.633 168.725 607.169 175.509 cv
.0827039 .0118105 .0663462 0 cmyk
f
590.636 180.754 mo
589.26 180.129 587.898 179.501 586.539 178.868 cv
587.216 178.631 587.893 178.395 588.574 178.159 cv
589.562 178.614 590.556 179.067 591.554 179.517 cv
591.283 179.918 591.015 180.315 590.745 180.717 cv
590.709 180.729 590.672 180.742 590.636 180.754 cv
.48127 .12842 .425422 0 cmyk
f
590.745 180.717 mo
591.015 180.315 591.283 179.918 591.554 179.517 cv
592.253 178.483 592.957 177.451 593.662 176.426 cv
594.428 176.17 595.206 175.913 595.981 175.66 cv
594.993 177.077 594.011 178.505 593.034 179.941 cv
592.27 180.198 591.504 180.457 590.745 180.717 cv
f
181.12 183.562 mo
308.62 183.562 308.62 208.35 436.12 208.35 cv
436.12 211.655 li
308.62 211.655 308.62 186.867 181.12 186.867 cv
181.12 183.562 li
cp
f
446.12 213.308 mo
446.12 210.003 li
475.567 210.003 498.22 207.528 517.206 203.723 cv
518.354 204.572 519.489 205.439 520.61 206.324 cv
500.932 210.525 477.349 213.308 446.12 213.308 cv
531.37 203.8 mo
530.438 202.924 529.492 202.055 528.542 201.202 cv
530.683 200.679 532.783 200.138 534.84 199.584 cv
535.864 200.396 536.879 201.219 537.885 202.051 cv
535.755 202.649 533.587 203.233 531.37 203.8 cv
542.933 200.585 mo
541.994 199.757 541.042 198.931 540.088 198.118 cv
543.465 197.141 546.745 196.129 549.955 195.092 cv
551.042 195.834 552.12 196.581 553.193 197.334 cv
549.849 198.447 546.445 199.533 542.933 200.585 cv
557.032 193.808 mo
556.696 193.565 556.355 193.32 556.018 193.078 cv
556.786 192.817 557.552 192.554 558.314 192.29 cv
557.887 192.798 557.461 193.302 557.032 193.808 cv
570.621 191.211 mo
571.361 190.289 572.101 189.364 572.839 188.441 cv
573.026 188.531 573.215 188.622 573.402 188.712 cv
573.987 188.995 574.573 189.278 575.159 189.561 cv
573.645 190.112 572.136 190.661 570.621 191.211 cv
597.024 181.93 mo
595.641 181.335 594.269 180.732 592.91 180.125 cv
592.952 180.063 592.992 180.004 593.034 179.941 cv
597.191 178.546 601.44 177.19 605.86 175.891 cv
604.999 177.24 604.152 178.587 603.304 179.959 cv
601.177 180.604 599.086 181.262 597.024 181.93 cv
604.572 179.577 mo
605.431 178.21 606.297 176.852 607.169 175.509 cv
630.633 168.725 658.81 163.65 700.87 163.63 cv
700.87 166.935 li
657.248 166.956 628.558 172.415 604.572 179.577 cv
.0827039 .0118105 .0663462 0 cmyk
f
594.856 182.64 mo
593.914 182.226 592.983 181.812 592.051 181.393 cv
592.336 180.971 592.624 180.546 592.91 180.125 cv
594.269 180.732 595.641 181.335 597.024 181.93 cv
596.3 182.165 595.573 182.402 594.856 182.64 cv
590.7 180.783 mo
590.68 180.774 590.656 180.763 590.636 180.754 cv
590.672 180.742 590.709 180.729 590.745 180.717 cv
590.73 180.739 590.716 180.761 590.7 180.783 cv
.48127 .12842 .425422 0 cmyk
f
592.051 181.393 mo
591.6 181.191 591.15 180.987 590.7 180.783 cv
590.7 180.783 li
590.716 180.761 590.73 180.739 590.745 180.717 cv
591.504 180.457 592.27 180.198 593.034 179.941 cv
592.992 180.004 592.952 180.063 592.91 180.125 cv
592.624 180.546 592.336 180.971 592.051 181.393 cv
592.051 181.393 li
f
181.12 200.087 mo
308.62 200.087 308.62 253.181 436.12 253.181 cv
436.12 256.486 li
308.62 256.486 308.62 203.392 181.12 203.392 cv
181.12 200.087 li
cp
f
446.12 253.181 mo
573.62 253.181 573.62 93.7631 701.12 93.7631 cv
701.12 95.4157 li
573.62 95.4157 573.62 254.833 446.12 254.833 cv
446.12 253.181 li
f
446.12 275.958 mo
573.62 275.958 573.62 306.329 701.12 306.329 cv
701.12 307.981 li
573.62 307.981 573.62 277.611 446.12 277.611 cv
446.12 275.958 li
f
181.12 186.867 mo
308.62 186.867 308.62 211.655 436.12 211.655 cv
436.12 214.96 li
308.62 214.96 308.62 190.172 181.12 190.172 cv
181.12 186.867 li
cp
f
446.12 219.092 mo
573.62 219.092 573.62 260.7 701.12 260.7 cv
701.12 264.005 li
573.62 264.005 573.62 222.397 446.12 222.397 cv
446.12 219.092 li
f
181.12 203.392 mo
308.62 203.392 308.62 256.486 436.12 256.486 cv
436.12 259.791 li
308.62 259.791 308.62 206.697 181.12 206.697 cv
181.12 203.392 li
cp
f
446.12 254.833 mo
573.62 254.833 573.62 95.4157 701.12 95.4157 cv
701.12 96.242 li
573.62 96.242 573.62 255.659 446.12 255.659 cv
446.12 254.833 li
f
446.12 254.833 mo
446.12 255.333 li
478.1 255.337 502.135 245.323 522.123 230.324 cv
552.104 207.824 573.031 174.165 598.394 146.192 cv
611.074 132.203 624.854 119.636 641.407 110.566 cv
657.962 101.497 677.291 95.9169 701.12 95.9156 cv
701.12 95.4157 li
700.62 95.4157 li
700.62 96.242 li
701.12 96.242 li
701.12 95.742 li
669.139 95.7383 645.104 105.752 625.116 120.751 cv
595.134 143.251 574.208 176.909 548.845 204.883 cv
536.165 218.872 522.385 231.439 505.832 240.509 cv
489.277 249.578 469.948 255.158 446.12 255.159 cv
446.12 255.659 li
446.619 255.659 li
446.619 254.833 li
446.12 254.833 li
446.12 255.333 li
446.12 254.833 li
445.62 254.833 li
445.62 255.659 li
445.62 256.159 li
446.12 256.159 li
478.1 256.163 502.135 246.149 522.123 231.15 cv
552.104 208.65 573.031 174.992 598.394 147.018 cv
611.074 133.03 624.854 120.462 641.407 111.392 cv
657.962 102.324 677.291 96.7432 701.12 96.7419 cv
701.619 96.7419 li
701.62 95.4157 li
701.62 94.9158 li
701.12 94.9158 li
669.139 94.912 645.104 104.926 625.116 119.925 cv
595.134 142.425 574.208 176.083 548.845 204.057 cv
536.165 218.045 522.385 230.613 505.832 239.683 cv
489.277 248.751 469.948 254.332 446.12 254.333 cv
445.62 254.333 li
445.62 254.833 li
446.12 254.833 li
f
446.12 266.373 mo
573.62 266.373 573.62 221.543 701.12 221.543 cv
701.12 222.369 li
573.62 222.369 573.62 267.2 446.12 267.2 cv
446.12 266.373 li
f
446.12 266.373 mo
446.12 266.873 li
509.924 266.878 541.911 255.64 573.785 244.43 cv
605.661 233.225 637.423 222.047 701.12 222.043 cv
701.12 221.543 li
700.62 221.543 li
700.62 222.369 li
701.12 222.369 li
701.12 221.869 li
637.315 221.864 605.328 233.102 573.454 244.313 cv
541.578 255.517 509.815 266.695 446.12 266.7 cv
446.12 267.2 li
446.619 267.2 li
446.619 266.373 li
446.12 266.373 li
446.12 266.873 li
446.12 266.373 li
445.62 266.373 li
445.62 267.2 li
445.62 267.699 li
446.12 267.699 li
509.924 267.704 541.911 256.466 573.785 245.256 cv
605.661 234.051 637.423 222.874 701.12 222.869 cv
701.62 222.869 li
701.62 221.543 li
701.62 221.043 li
701.12 221.043 li
637.315 221.038 605.328 232.276 573.454 243.486 cv
541.578 254.691 509.815 265.869 446.12 265.873 cv
445.62 265.873 li
445.62 266.373 li
446.12 266.373 li
f
446.12 281.577 mo
573.62 281.577 573.62 352.784 701.12 352.784 cv
701.12 353.611 li
573.62 353.611 573.62 282.403 446.12 282.403 cv
446.12 281.577 li
f
446.12 281.577 mo
446.12 282.077 li
509.778 282.086 541.495 299.819 573.376 317.617 cv
605.245 335.422 637.278 353.294 701.12 353.284 cv
701.12 352.784 li
700.62 352.784 li
700.62 353.611 li
701.12 353.611 li
701.12 353.111 li
637.461 353.101 605.744 335.369 573.863 317.57 cv
541.994 299.765 509.961 281.894 446.12 281.903 cv
446.12 282.403 li
446.619 282.403 li
446.619 281.577 li
446.12 281.577 li
446.12 282.077 li
446.12 281.577 li
445.62 281.577 li
445.62 282.403 li
445.62 282.903 li
446.12 282.903 li
509.778 282.912 541.495 300.645 573.376 318.443 cv
605.245 336.249 637.278 354.12 701.12 354.11 cv
701.62 354.11 li
701.62 352.784 li
701.62 352.284 li
701.12 352.284 li
637.461 352.275 605.744 334.542 573.863 316.744 cv
541.994 298.939 509.961 281.067 446.12 281.077 cv
445.62 281.077 li
445.62 281.577 li
446.12 281.577 li
f
446.12 277.611 mo
573.62 277.611 573.62 307.981 701.12 307.981 cv
701.12 308.808 li
573.62 308.808 573.62 278.437 446.12 278.437 cv
446.12 277.611 li
f
446.12 277.611 mo
446.12 278.111 li
509.834 278.113 541.629 285.691 573.504 293.282 cv
605.379 300.877 637.334 308.484 701.12 308.481 cv
701.12 307.981 li
700.62 307.981 li
700.62 308.808 li
701.12 308.808 li
701.12 308.308 li
637.405 308.305 605.61 300.727 573.735 293.136 cv
541.86 285.541 509.905 277.935 446.12 277.937 cv
446.12 278.437 li
446.619 278.437 li
446.619 277.611 li
446.12 277.611 li
446.12 278.111 li
446.12 277.611 li
445.62 277.611 li
445.62 278.437 li
445.62 278.937 li
446.12 278.937 li
509.834 278.939 541.629 286.517 573.504 294.109 cv
605.379 301.703 637.334 309.31 701.12 309.308 cv
701.62 309.308 li
701.62 307.981 li
701.62 307.481 li
701.12 307.481 li
637.405 307.479 605.61 299.901 573.735 292.31 cv
541.86 284.715 509.905 277.108 446.12 277.111 cv
445.62 277.111 li
445.62 277.611 li
446.12 277.611 li
f
181.12 352.757 mo
308.62 352.757 308.62 276.316 436.12 276.316 cv
436.12 279.621 li
308.62 279.621 308.62 356.062 181.12 356.062 cv
181.12 352.757 li
cp
.432929 .877256 .010956 9.15541e-05 cmyk
f
446.12 255.659 mo
573.62 255.659 573.62 96.242 701.12 96.242 cv
701.12 96.9031 li
573.62 96.9031 573.62 256.32 446.12 256.32 cv
446.12 255.659 li
f
446.12 255.659 mo
446.12 256.159 li
478.1 256.163 502.135 246.149 522.123 231.15 cv
552.104 208.65 573.031 174.992 598.394 147.018 cv
611.074 133.03 624.854 120.462 641.407 111.392 cv
657.962 102.324 677.291 96.7432 701.12 96.7419 cv
701.12 96.242 li
700.62 96.242 li
700.62 96.9031 li
701.12 96.9031 li
701.12 96.4029 li
669.139 96.3992 645.104 106.413 625.116 121.412 cv
595.134 143.912 574.208 177.571 548.845 205.544 cv
536.165 219.533 522.385 232.101 505.832 241.17 cv
489.277 250.239 469.948 255.819 446.12 255.82 cv
446.12 256.32 li
446.619 256.32 li
446.619 255.659 li
446.12 255.659 li
446.12 256.159 li
446.12 255.659 li
445.62 255.659 li
445.62 256.32 li
445.62 256.82 li
446.12 256.82 li
478.1 256.824 502.135 246.81 522.123 231.811 cv
552.104 209.311 573.031 175.653 598.394 147.679 cv
611.074 133.691 624.854 121.123 641.407 112.053 cv
657.962 102.984 677.291 97.4041 701.12 97.403 cv
701.619 97.403 li
701.62 96.242 li
701.62 95.742 li
701.12 95.742 li
669.139 95.7383 645.104 105.752 625.116 120.751 cv
595.134 143.251 574.208 176.909 548.845 204.883 cv
536.165 218.872 522.385 231.439 505.832 240.509 cv
489.277 249.578 469.948 255.158 446.12 255.159 cv
445.62 255.159 li
445.62 255.659 li
446.12 255.659 li
f
446.12 272.956 mo
573.62 272.956 573.62 266.484 701.12 266.484 cv
701.12 267.145 li
573.62 267.145 573.62 273.617 446.12 273.617 cv
446.12 272.956 li
f
446.12 272.956 mo
446.12 273.456 li
573.65 273.455 573.65 266.983 701.12 266.984 cv
701.12 266.484 li
700.62 266.484 li
700.62 267.145 li
701.12 267.145 li
701.12 266.645 li
573.589 266.645 573.589 273.118 446.12 273.117 cv
446.12 273.617 li
446.619 273.617 li
446.619 272.956 li
446.12 272.956 li
446.12 273.456 li
446.12 272.956 li
445.62 272.956 li
445.62 273.617 li
445.62 274.117 li
446.12 274.117 li
573.65 274.116 573.65 267.644 701.12 267.644 cv
701.62 267.644 li
701.62 266.484 li
701.62 265.983 li
701.12 265.983 li
573.589 265.984 573.589 272.457 446.12 272.456 cv
445.62 272.456 li
445.62 272.956 li
446.12 272.956 li
f
446.12 267.2 mo
573.62 267.2 573.62 222.369 701.12 222.369 cv
701.12 223.03 li
573.62 223.03 573.62 267.861 446.12 267.861 cv
446.12 267.2 li
f
446.12 267.2 mo
446.12 267.699 li
509.924 267.704 541.911 256.466 573.785 245.256 cv
605.661 234.051 637.423 222.874 701.12 222.869 cv
701.12 222.369 li
700.62 222.369 li
700.62 223.03 li
701.12 223.03 li
701.12 222.53 li
637.315 222.525 605.328 233.763 573.454 244.974 cv
541.578 256.179 509.815 267.356 446.12 267.361 cv
446.12 267.861 li
446.619 267.861 li
446.619 267.2 li
446.12 267.2 li
446.12 267.699 li
446.12 267.2 li
445.62 267.2 li
445.62 267.861 li
445.62 268.361 li
446.12 268.361 li
509.924 268.365 541.911 257.127 573.785 245.917 cv
605.661 234.712 637.423 223.535 701.12 223.53 cv
701.62 223.53 li
701.62 222.369 li
701.62 221.869 li
701.12 221.869 li
637.315 221.864 605.328 233.102 573.454 244.313 cv
541.578 255.517 509.815 266.695 446.12 266.7 cv
445.62 266.7 li
445.62 267.2 li
446.12 267.2 li
f
446.12 282.403 mo
573.62 282.403 573.62 353.611 701.12 353.611 cv
701.12 354.272 li
573.62 354.272 573.62 283.064 446.12 283.064 cv
446.12 282.403 li
f
446.12 282.403 mo
446.12 282.903 li
509.778 282.912 541.495 300.645 573.376 318.443 cv
605.245 336.249 637.278 354.12 701.12 354.11 cv
701.12 353.611 li
700.62 353.611 li
700.62 354.272 li
701.12 354.272 li
701.12 353.772 li
637.461 353.762 605.744 336.03 573.863 318.231 cv
541.994 300.426 509.961 282.555 446.12 282.564 cv
446.12 283.064 li
446.619 283.064 li
446.619 282.403 li
446.12 282.403 li
446.12 282.903 li
446.12 282.403 li
445.62 282.403 li
445.62 283.064 li
445.62 283.564 li
446.12 283.564 li
509.778 283.573 541.495 301.306 573.376 319.104 cv
605.245 336.91 637.278 354.781 701.12 354.772 cv
701.62 354.772 li
701.62 353.611 li
701.62 353.111 li
701.12 353.111 li
637.461 353.101 605.744 335.369 573.863 317.57 cv
541.994 299.765 509.961 281.894 446.12 281.903 cv
445.62 281.903 li
445.62 282.403 li
446.12 282.403 li
f
446.12 278.437 mo
573.62 278.437 573.62 308.808 701.12 308.808 cv
701.12 309.469 li
573.62 309.469 573.62 279.098 446.12 279.098 cv
446.12 278.437 li
f
446.12 278.437 mo
446.12 278.937 li
509.834 278.939 541.629 286.517 573.504 294.109 cv
605.379 301.703 637.334 309.31 701.12 309.308 cv
701.12 308.808 li
700.62 308.808 li
700.62 309.469 li
701.12 309.469 li
701.12 308.969 li
637.405 308.966 605.61 301.388 573.735 293.797 cv
541.86 286.203 509.905 278.596 446.12 278.598 cv
446.12 279.098 li
446.619 279.098 li
446.619 278.437 li
446.12 278.437 li
446.12 278.937 li
446.12 278.437 li
445.62 278.437 li
445.62 279.098 li
445.62 279.598 li
446.12 279.598 li
509.834 279.6 541.629 287.179 573.504 294.77 cv
605.379 302.364 637.334 309.971 701.12 309.969 cv
701.62 309.969 li
701.62 308.808 li
701.62 308.308 li
701.12 308.308 li
637.405 308.305 605.61 300.727 573.735 293.136 cv
541.86 285.541 509.905 277.935 446.12 277.937 cv
445.62 277.937 li
445.62 278.437 li
446.12 278.437 li
f
181.12 97.6297 mo
308.62 97.6297 308.62 72.6297 436.12 72.6297 cv
436.12 75.9348 li
308.62 75.9348 308.62 100.935 181.12 100.935 cv
181.12 97.6297 li
cp
.48127 .12842 .425422 0 cmyk
f
446.12 141.899 mo
573.62 141.899 573.62 203.503 701.12 203.503 cv
701.12 206.808 li
573.62 206.808 573.62 145.204 446.12 145.204 cv
446.12 141.899 li
f
181.12 277.969 mo
308.62 277.969 308.62 224.875 436.12 224.875 cv
436.12 228.181 li
308.62 228.181 308.62 281.274 181.12 281.274 cv
181.12 277.969 li
cp
.793973 1 .278019 .337499 cmyk
f
446.12 222.397 mo
573.62 222.397 573.62 264.005 701.12 264.005 cv
701.12 265.657 li
573.62 265.657 573.62 224.049 446.12 224.049 cv
446.12 222.397 li
f
446.12 225.702 mo
573.62 225.702 573.62 350.306 701.12 350.306 cv
701.12 351.958 li
573.62 351.958 573.62 227.354 446.12 227.354 cv
446.12 225.702 li
f
181.12 100.935 mo
308.62 100.935 308.62 75.9348 436.12 75.9348 cv
436.12 79.2399 li
308.62 79.2399 308.62 104.24 181.12 104.24 cv
181.12 100.935 li
cp
.48127 .12842 .425422 0 cmyk
f
446.12 70.9772 mo
573.62 70.9772 573.62 45.9772 701.12 45.9772 cv
701.12 49.2822 li
573.62 49.2822 573.62 74.2822 446.12 74.2822 cv
446.12 70.9772 li
cp
f
181.12 316.189 mo
308.62 316.189 308.62 326.104 436.12 326.104 cv
436.12 329.409 li
308.62 329.409 308.62 319.494 181.12 319.494 cv
181.12 316.189 li
cp
.60058 .0573434 .119661 0 cmyk
f
446.12 316.464 mo
446.12 313.159 li
475.045 313.159 497.405 305.805 516.184 294.431 cv
517.37 294.79 518.545 295.158 519.702 295.532 cv
500.206 308.152 476.874 316.464 446.12 316.464 cv
523.733 292.827 mo
522.655 292.454 521.567 292.089 520.466 291.73 cv
522.532 290.374 524.545 288.977 526.53 287.529 cv
527.753 287.719 528.961 287.912 530.156 288.109 cv
528.061 289.729 525.917 291.307 523.733 292.827 cv
.118257 0 .0197147 0 cmyk
f
522.933 293.379 mo
521.841 293.006 520.735 292.64 519.618 292.282 cv
519.9 292.1 520.186 291.913 520.466 291.73 cv
521.567 292.089 522.655 292.454 523.733 292.827 cv
523.464 293.014 523.204 293.193 522.933 293.379 cv
.515862 .108736 .365789 0 cmyk
f
536.386 283.057 mo
535.3 282.862 534.203 282.668 533.096 282.478 cv
536.179 279.984 539.174 277.39 542.098 274.718 cv
543.345 274.666 544.579 274.614 545.802 274.561 cv
542.742 277.481 539.611 280.322 536.386 283.057 cv
546.565 270.525 mo
547.394 269.727 548.219 268.923 549.038 268.114 cv
549.63 268.625 550.221 269.14 550.808 269.656 cv
550.57 269.895 550.336 270.13 550.097 270.368 cv
548.932 270.42 547.75 270.473 546.565 270.525 cv
.118257 0 .0197147 0 cmyk
f
535.264 284.001 mo
534.16 283.806 533.044 283.613 531.918 283.423 cv
532.314 283.108 532.703 282.796 533.096 282.478 cv
534.203 282.668 535.3 282.862 536.386 283.057 cv
536.013 283.373 535.638 283.689 535.264 284.001 cv
.515862 .108736 .365789 0 cmyk
f
534.442 284.683 mo
533.324 284.487 532.196 284.295 531.054 284.104 cv
531.343 283.878 531.631 283.651 531.918 283.423 cv
533.044 283.613 534.16 283.806 535.264 284.001 cv
534.991 284.229 534.716 284.457 534.442 284.683 cv
f
545.843 271.217 mo
546.087 270.984 546.322 270.758 546.565 270.525 cv
547.75 270.473 548.932 270.42 550.097 270.368 cv
549.866 270.598 549.632 270.831 549.401 271.06 cv
548.224 271.113 547.04 271.165 545.843 271.217 cv
.499031 .748196 .00274662 0 cmyk
f
521.766 294.171 mo
520.652 293.798 519.521 293.431 518.381 293.072 cv
518.794 292.811 519.208 292.547 519.618 292.282 cv
520.735 292.64 521.841 293.006 522.933 293.379 cv
522.547 293.644 522.155 293.91 521.766 294.171 cv
f
533.264 285.647 mo
532.126 285.451 530.977 285.258 529.814 285.068 cv
530.23 284.748 530.642 284.428 531.054 284.104 cv
532.196 284.295 533.324 284.487 534.442 284.683 cv
534.048 285.008 533.662 285.325 533.264 285.647 cv
f
552.468 267.976 mo
551.89 267.462 551.306 266.947 550.723 266.437 cv
553.597 263.552 556.419 260.605 559.203 257.62 cv
559.749 257.951 560.294 258.282 560.838 258.615 cv
560.608 259.044 560.37 259.489 560.14 259.918 cv
557.613 262.642 555.064 265.33 552.468 267.976 cv
562.34 257.533 mo
562.328 257.526 562.317 257.519 562.305 257.511 cv
562.845 256.492 563.38 255.481 563.918 254.458 cv
564.184 254.367 564.452 254.274 564.717 254.182 cv
564.82 254.318 564.922 254.452 565.025 254.587 cv
564.131 255.573 563.239 256.552 562.34 257.533 cv
561.643 257.105 mo
561.227 256.851 560.808 256.595 560.391 256.342 cv
560.697 256.012 561.002 255.682 561.306 255.352 cv
561.823 255.176 562.338 255 562.853 254.824 cv
562.451 255.584 562.046 256.348 561.643 257.105 cv
.118257 0 .0197147 0 cmyk
f
570.296 245.422 mo
570.366 245.343 570.434 245.268 570.504 245.19 cv
570.582 245.215 570.662 245.241 570.74 245.266 cv
570.592 245.318 570.444 245.37 570.296 245.422 cv
.515862 .108736 .365789 0 cmyk
f
569.434 246.385 mo
569.719 246.067 570.012 245.74 570.296 245.422 cv
570.444 245.37 570.592 245.318 570.74 245.266 cv
571.065 245.372 571.391 245.478 571.716 245.584 cv
570.957 245.851 570.194 246.119 569.434 246.385 cv
.499031 .748196 .00274662 0 cmyk
f
577.153 241.048 mo
576.389 240.799 575.629 240.551 574.866 240.302 cv
575.135 240.001 575.406 239.698 575.674 239.397 cv
576.176 239.935 576.682 240.475 577.184 241.012 cv
577.177 241.021 577.161 241.039 577.153 241.048 cv
579.837 238.055 mo
579.329 237.516 578.826 236.981 578.319 236.44 cv
581.966 232.372 585.63 228.33 589.365 224.36 cv
589.984 224.808 590.604 225.255 591.227 225.7 cv
587.368 229.748 583.588 233.886 579.837 238.055 cv
.118257 0 .0197147 0 cmyk
f
573.955 243.31 mo
573.496 243.16 573.042 243.012 572.582 242.862 cv
573.345 242.007 574.103 241.157 574.866 240.302 cv
575.629 240.551 576.389 240.799 577.153 241.048 cv
576.658 241.601 576.164 242.154 575.67 242.707 cv
575.097 242.908 574.527 243.109 573.955 243.31 cv
.515862 .108736 .365789 0 cmyk
f
574.866 243.607 mo
574.563 243.508 574.258 243.409 573.955 243.31 cv
573.955 243.31 li
574.527 243.109 575.097 242.908 575.67 242.707 cv
575.401 243.008 575.135 243.307 574.866 243.607 cv
f
594.823 221.98 mo
594.204 221.548 593.585 221.114 592.97 220.679 cv
593.989 220.698 595.02 220.716 596.053 220.734 cv
595.643 221.146 595.231 221.564 594.823 221.98 cv
599 217.805 mo
597.904 217.786 596.816 217.768 595.735 217.749 cv
600.196 213.241 604.796 208.866 609.588 204.73 cv
610.49 205.064 611.4 205.396 612.317 205.724 cv
607.704 209.555 603.286 213.607 599 217.805 cv
629.348 193.324 mo
628.144 193 626.953 192.667 625.778 192.329 cv
645.573 179.102 669.317 170.288 700.87 170.24 cv
700.87 173.545 li
671.19 173.59 648.421 181.39 629.348 193.324 cv
.118257 0 .0197147 0 cmyk
f
627.534 194.479 mo
626.369 194.154 625.213 193.821 624.076 193.484 cv
624.64 193.095 625.207 192.71 625.778 192.329 cv
626.953 192.667 628.144 193 629.348 193.324 cv
628.739 193.706 628.135 194.09 627.534 194.479 cv
.515862 .108736 .365789 0 cmyk
f
624.076 196.789 mo
622.977 196.462 621.891 196.131 620.815 195.793 cv
621.891 195.01 622.977 194.24 624.076 193.484 cv
625.213 193.821 626.369 194.154 627.534 194.479 cv
626.369 195.233 625.213 196.005 624.076 196.789 cv
f
574.088 244.48 mo
573.982 244.446 573.88 244.412 573.775 244.378 cv
573.117 244.163 572.461 243.949 571.804 243.735 cv
572.064 243.443 572.322 243.154 572.582 242.862 cv
573.042 243.012 573.496 243.16 573.955 243.31 cv
574.258 243.409 574.563 243.508 574.866 243.607 cv
574.605 243.9 574.348 244.188 574.088 244.48 cv
.871 1 .229892 .104494 cmyk
f
551.95 268.503 mo
551.367 267.988 550.783 267.477 550.194 266.966 cv
550.371 266.789 550.546 266.614 550.723 266.437 cv
551.306 266.947 551.89 267.462 552.468 267.976 cv
552.297 268.151 552.122 268.329 551.95 268.503 cv
f
181.12 104.24 mo
308.62 104.24 308.62 79.2399 436.12 79.2399 cv
436.12 82.545 li
308.62 82.545 308.62 107.545 181.12 107.545 cv
181.12 104.24 li
cp
.48127 .12842 .425422 0 cmyk
f
446.12 168.89 mo
573.62 168.89 573.62 339.151 701.12 339.151 cv
701.12 342.456 li
573.62 342.456 573.62 172.195 446.12 172.195 cv
446.12 168.89 li
f
181.12 107.545 mo
308.62 107.545 308.62 82.545 436.12 82.545 cv
436.12 85.85 li
308.62 85.85 308.62 110.85 181.12 110.85 cv
181.12 107.545 li
cp
f
446.12 145.204 mo
573.62 145.204 573.62 206.808 701.12 206.808 cv
701.12 210.113 li
573.62 210.113 573.62 148.509 446.12 148.509 cv
446.12 145.204 li
f
181.12 190.172 mo
308.62 190.172 308.62 214.96 436.12 214.96 cv
436.12 218.265 li
308.62 218.265 308.62 193.477 181.12 193.477 cv
181.12 190.172 li
cp
f
446.12 224.049 mo
573.62 224.049 573.62 265.657 701.12 265.657 cv
701.12 266.484 li
573.62 266.484 573.62 224.875 446.12 224.875 cv
446.12 224.049 li
f
446.12 224.049 mo
446.12 224.549 li
509.82 224.553 541.589 234.929 573.464 245.328 cv
605.339 255.733 637.319 266.161 701.12 266.157 cv
701.12 265.657 li
700.62 265.657 li
700.62 266.484 li
701.12 266.484 li
701.12 265.983 li
637.419 265.979 605.65 255.604 573.775 245.204 cv
541.9 234.8 509.92 224.371 446.12 224.375 cv
446.12 224.875 li
446.619 224.875 li
446.619 224.049 li
446.12 224.049 li
446.12 224.549 li
446.12 224.049 li
445.62 224.049 li
445.62 224.875 li
445.62 225.375 li
446.12 225.375 li
509.82 225.38 541.589 235.755 573.464 246.155 cv
605.339 256.559 637.319 266.988 701.12 266.984 cv
701.62 266.984 li
701.62 265.657 li
701.62 265.157 li
701.12 265.157 li
637.419 265.153 605.65 254.777 573.775 244.378 cv
541.9 233.973 509.92 223.545 446.12 223.549 cv
445.62 223.549 li
445.62 224.049 li
446.12 224.049 li
f
446.12 216.613 mo
573.62 216.613 573.62 219.064 701.12 219.064 cv
701.12 219.89 li
573.62 219.89 573.62 217.439 446.12 217.439 cv
446.12 216.613 li
f
446.12 216.613 mo
446.12 217.113 li
573.608 217.113 573.608 219.564 701.12 219.564 cv
701.12 219.064 li
700.62 219.064 li
700.62 219.89 li
701.12 219.89 li
701.12 219.39 li
573.631 219.39 573.631 216.939 446.12 216.939 cv
446.12 217.439 li
446.619 217.439 li
446.619 216.613 li
446.12 216.613 li
446.12 217.113 li
446.12 216.613 li
445.62 216.613 li
445.62 217.439 li
445.62 217.939 li
446.12 217.939 li
573.608 217.939 573.608 220.39 701.12 220.39 cv
701.62 220.39 li
701.62 219.064 li
701.62 218.564 li
701.12 218.564 li
573.631 218.564 573.631 216.113 446.12 216.113 cv
445.62 216.113 li
445.62 216.613 li
446.12 216.613 li
f
446.12 227.354 mo
573.62 227.354 573.62 351.958 701.12 351.958 cv
701.12 352.784 li
573.62 352.784 573.62 228.181 446.12 228.181 cv
446.12 227.354 li
f
446.12 227.354 mo
446.12 227.854 li
477.914 227.856 501.714 235.615 521.57 247.255 cv
551.352 264.713 572.252 290.963 597.697 312.911 cv
623.136 334.858 653.181 352.466 701.12 352.458 cv
701.12 351.958 li
700.62 351.958 li
700.62 352.784 li
701.12 352.784 li
701.12 352.284 li
669.325 352.282 645.525 344.524 625.669 332.884 cv
595.887 315.426 574.987 289.176 549.542 267.227 cv
524.102 245.281 494.058 227.672 446.12 227.681 cv
446.12 228.181 li
446.619 228.181 li
446.619 227.354 li
446.12 227.354 li
446.12 227.854 li
446.12 227.354 li
445.62 227.354 li
445.62 228.181 li
445.62 228.68 li
446.12 228.68 li
477.914 228.683 501.714 236.441 521.57 248.081 cv
551.352 265.539 572.252 291.789 597.697 313.738 cv
623.136 335.684 653.181 353.293 701.12 353.284 cv
701.62 353.284 li
701.62 351.958 li
701.62 351.458 li
701.12 351.458 li
669.325 351.456 645.525 343.698 625.669 332.057 cv
595.887 314.599 574.987 288.35 549.542 266.401 cv
524.102 244.454 494.058 226.846 446.12 226.854 cv
445.62 226.854 li
445.62 227.354 li
446.12 227.354 li
f
446.12 224.875 mo
573.62 224.875 573.62 305.503 701.12 305.503 cv
701.12 306.329 li
573.62 306.329 573.62 225.702 446.12 225.702 cv
446.12 224.875 li
f
446.12 224.875 mo
446.12 225.375 li
509.763 225.386 541.469 245.458 573.352 265.612 cv
605.219 285.771 637.263 306.013 701.12 306.003 cv
701.12 305.503 li
700.62 305.503 li
700.62 306.329 li
701.12 306.329 li
701.12 305.829 li
637.476 305.818 605.77 285.747 573.887 265.593 cv
542.02 245.433 509.976 225.191 446.12 225.202 cv
446.12 225.702 li
446.619 225.702 li
446.619 224.875 li
446.12 224.875 li
446.12 225.375 li
446.12 224.875 li
445.62 224.875 li
445.62 225.702 li
445.62 226.202 li
446.12 226.202 li
509.763 226.212 541.469 246.284 573.352 266.438 cv
605.219 286.598 637.263 306.84 701.12 306.829 cv
701.62 306.829 li
701.62 305.503 li
701.62 305.003 li
701.12 305.003 li
637.476 304.992 605.77 284.92 573.887 264.766 cv
542.02 244.607 509.976 224.365 446.12 224.375 cv
445.62 224.375 li
445.62 224.875 li
446.12 224.875 li
f
181.12 206.697 mo
308.62 206.697 308.62 259.791 436.12 259.791 cv
436.12 263.096 li
308.62 263.096 308.62 210.003 181.12 210.003 cv
181.12 206.697 li
cp
f
446.12 256.32 mo
573.62 256.32 573.62 96.9031 701.12 96.9031 cv
701.12 98.5554 li
573.62 98.5554 573.62 257.973 446.12 257.973 cv
446.12 256.32 li
f
446.12 279.098 mo
573.62 279.098 573.62 309.469 701.12 309.469 cv
701.12 311.121 li
573.62 311.121 573.62 280.75 446.12 280.75 cv
446.12 279.098 li
f
181.12 193.477 mo
308.62 193.477 308.62 218.265 436.12 218.265 cv
436.12 221.57 li
308.62 221.57 308.62 196.782 181.12 196.782 cv
181.12 193.477 li
cp
f
467.618 216.138 mo
460.867 216.122 453.723 216.113 446.12 216.113 cv
446.12 213.308 li
477.349 213.308 500.932 210.525 520.61 206.324 cv
520.912 206.561 521.211 206.798 521.51 207.038 cv
522.284 207.659 523.054 208.288 523.817 208.924 cv
508.185 212.457 490.122 215.104 467.618 216.138 cv
534.081 206.397 mo
533.182 205.519 532.284 204.658 531.37 203.8 cv
533.587 203.233 535.755 202.649 537.885 202.051 cv
538.868 202.865 539.842 203.687 540.809 204.519 cv
538.612 205.16 536.368 205.788 534.081 206.397 cv
545.684 203.053 mo
544.771 202.221 543.859 201.403 542.933 200.585 cv
546.445 199.533 549.849 198.447 553.193 197.334 cv
553.362 197.453 553.53 197.571 553.698 197.689 cv
552.55 199.008 551.397 200.314 550.232 201.612 cv
548.735 202.097 547.215 202.579 545.684 203.053 cv
.0827039 .0118105 .0663462 0 cmyk
f
550.232 201.612 mo
551.397 200.314 552.55 199.008 553.698 197.689 cv
553.857 197.802 554.018 197.915 554.177 198.028 cv
553.246 199.105 552.307 200.179 551.365 201.243 cv
550.988 201.366 550.611 201.489 550.232 201.612 cv
.48127 .12842 .425422 0 cmyk
f
551.365 201.243 mo
552.307 200.179 553.246 199.105 554.177 198.028 cv
554.325 198.133 554.471 198.236 554.619 198.341 cv
553.88 199.199 553.136 200.056 552.391 200.905 cv
552.048 201.019 551.709 201.13 551.365 201.243 cv
f
552.391 200.905 mo
553.136 200.056 553.88 199.199 554.619 198.341 cv
554.873 198.522 555.127 198.702 555.38 198.883 cv
554.965 199.367 554.554 199.843 554.137 200.324 cv
553.558 200.518 552.974 200.713 552.391 200.905 cv
.449073 .761257 .0835584 .000976577 cmyk
f
531.944 206.957 mo
531.014 206.081 530.076 205.217 529.129 204.363 cv
529.88 204.177 530.63 203.989 531.37 203.8 cv
532.284 204.658 533.182 205.519 534.081 206.397 cv
533.371 206.586 532.663 206.772 531.944 206.957 cv
.48127 .12842 .425422 0 cmyk
f
446.12 216.613 mo
446.12 216.113 li
453.723 216.113 460.867 216.122 467.618 216.138 cv
460.868 216.448 453.723 216.613 446.12 216.613 cv
f
566.869 195.873 mo
568.123 194.323 569.373 192.767 570.621 191.211 cv
572.136 190.661 573.645 190.112 575.159 189.561 cv
576.461 190.19 577.767 190.82 579.074 191.447 cv
574.998 192.92 570.951 194.403 566.869 195.873 cv
602.054 183.646 mo
602.889 182.277 603.726 180.924 604.572 179.577 cv
628.558 172.415 657.248 166.956 700.87 166.935 cv
700.87 170.24 li
655.709 170.262 626.557 176.11 602.054 183.646 cv
601.059 183.632 mo
599.7 183.071 598.357 182.504 597.024 181.93 cv
599.086 181.262 601.177 180.604 603.304 179.959 cv
602.552 181.173 601.802 182.402 601.059 183.632 cv
.0827039 .0118105 .0663462 0 cmyk
f
599.238 184.525 mo
597.762 183.904 596.303 183.275 594.856 182.64 cv
595.573 182.402 596.3 182.165 597.024 181.93 cv
598.357 182.504 599.7 183.071 601.059 183.632 cv
600.98 183.764 600.901 183.895 600.821 184.027 cv
600.293 184.192 599.762 184.359 599.238 184.525 cv
.48127 .12842 .425422 0 cmyk
f
594.856 185.945 mo
593.437 185.322 592.032 184.693 590.635 184.059 cv
592.032 183.582 593.437 183.108 594.856 182.64 cv
596.303 183.275 597.762 183.904 599.238 184.525 cv
597.762 184.993 596.303 185.466 594.856 185.945 cv
f
590.635 187.364 mo
589.259 186.739 587.898 186.112 586.539 185.478 cv
587.898 185.002 589.259 184.529 590.635 184.059 cv
592.032 184.693 593.437 185.322 594.856 185.945 cv
593.437 186.414 592.032 186.887 590.635 187.364 cv
f
554.137 200.324 mo
554.554 199.843 554.965 199.367 555.38 198.883 cv
555.672 199.092 555.965 199.302 556.256 199.512 cv
556.22 199.554 556.178 199.604 556.142 199.646 cv
555.475 199.873 554.809 200.099 554.137 200.324 cv
559.533 195.627 mo
559.39 195.522 559.255 195.423 559.112 195.319 cv
559.434 195.207 559.747 195.097 560.068 194.985 cv
559.89 195.2 559.712 195.413 559.533 195.627 cv
f
181.12 110.85 mo
308.62 110.85 308.62 85.85 436.12 85.85 cv
436.12 89.1551 li
308.62 89.1551 308.62 114.155 181.12 114.155 cv
181.12 110.85 li
cp
f
446.12 74.2822 mo
573.62 74.2822 573.62 49.2822 701.12 49.2822 cv
701.12 52.5873 li
573.62 52.5873 573.62 77.5873 446.12 77.5873 cv
446.12 74.2822 li
cp
f
181.12 264.748 mo
308.62 264.748 308.62 155.257 436.12 155.257 cv
436.12 158.562 li
308.62 158.562 308.62 268.053 181.12 268.053 cv
181.12 264.748 li
cp
.793973 1 .278019 .337499 cmyk
f
700.87 140.494 mo
675.239 140.489 654.757 139.671 637.365 138.368 cv
638.499 137.322 639.642 136.305 640.803 135.311 cv
657.444 136.468 676.91 137.184 700.87 137.189 cv
700.87 140.494 li
635.736 138.244 mo
633.128 138.041 630.592 137.829 628.116 137.606 cv
629.237 136.582 630.369 135.579 631.516 134.597 cv
633.964 134.803 636.476 135 639.052 135.187 cv
637.932 136.183 636.831 137.199 635.736 138.244 cv
625.965 137.408 mo
623.914 137.217 621.92 137.02 619.95 136.815 cv
621.154 135.818 622.373 134.838 623.606 133.878 cv
625.456 134.058 627.343 134.234 629.264 134.403 cv
628.151 135.386 627.053 136.387 625.965 137.408 cv
.125002 .180667 .0336919 0 cmyk
f
628.116 137.606 mo
627.398 137.541 626.673 137.475 625.965 137.408 cv
627.053 136.387 628.151 135.386 629.264 134.403 cv
630.013 134.469 630.756 134.533 631.516 134.597 cv
630.369 135.579 629.237 136.582 628.116 137.606 cv
.552636 .323613 .409186 .0273747 cmyk
f
606.502 135.267 mo
601.876 134.683 597.428 134.07 593.092 133.44 cv
594.246 132.497 595.408 131.561 596.578 130.634 cv
600.747 131.221 605.027 131.79 609.487 132.331 cv
608.481 133.301 607.491 134.275 606.502 135.267 cv
591.387 133.191 mo
552.382 127.449 521.581 120.416 446.12 120.416 cv
446.12 117.111 li
523.784 117.111 554.14 124.56 594.822 130.384 cv
593.669 131.313 592.525 132.248 591.387 133.191 cv
.125002 .180667 .0336919 0 cmyk
f
607.348 135.373 mo
607.066 135.338 606.783 135.302 606.502 135.267 cv
607.491 134.275 608.481 133.301 609.487 132.331 cv
609.782 132.367 610.085 132.404 610.381 132.439 cv
609.361 133.406 608.35 134.384 607.348 135.373 cv
.552636 .323613 .409186 .0273747 cmyk
f
608.095 135.466 mo
607.842 135.435 607.6 135.405 607.348 135.373 cv
608.35 134.384 609.361 133.406 610.381 132.439 cv
610.641 132.47 610.897 132.501 611.159 132.532 cv
610.129 133.498 609.106 134.477 608.095 135.466 cv
f
609.335 135.618 mo
608.923 135.568 608.505 135.517 608.095 135.466 cv
609.106 134.477 610.129 133.498 611.159 132.532 cv
611.585 132.583 612.01 132.633 612.44 132.683 cv
611.393 133.651 610.362 134.626 609.335 135.618 cv
.532555 .937102 .0736706 .00384527 cmyk
f
610.87 135.803 mo
610.357 135.742 609.844 135.68 609.335 135.618 cv
610.362 134.626 611.393 133.651 612.44 132.683 cv
612.972 132.745 613.507 132.806 614.045 132.867 cv
612.974 133.835 611.92 134.81 610.87 135.803 cv
.552636 .323613 .409186 .0273747 cmyk
f
181.12 114.155 mo
308.62 114.155 308.62 89.1551 436.12 89.1551 cv
436.12 92.4602 li
308.62 92.4602 308.62 117.46 181.12 117.46 cv
181.12 114.155 li
cp
.48127 .12842 .425422 0 cmyk
f
446.12 77.5873 mo
573.62 77.5873 573.62 52.5873 701.12 52.5873 cv
701.12 53.689 li
573.62 53.689 573.62 78.689 446.12 78.689 cv
446.12 77.5873 li
cp
f
446.12 157.46 mo
573.62 157.46 573.62 255.053 701.12 255.053 cv
701.12 256.155 li
573.62 256.155 573.62 158.562 446.12 158.562 cv
446.12 157.46 li
f
446.12 148.509 mo
573.62 148.509 573.62 210.113 701.12 210.113 cv
701.12 211.214 li
573.62 211.214 573.62 149.611 446.12 149.611 cv
446.12 148.509 li
f
181.12 117.46 mo
308.62 117.46 308.62 92.4602 436.12 92.4602 cv
436.12 95.7653 li
308.62 95.7653 308.62 120.765 181.12 120.765 cv
181.12 117.46 li
cp
f
700.87 143.799 mo
673.646 143.793 652.234 142.871 634.16 141.424 cv
635.217 140.382 636.284 139.365 637.365 138.368 cv
654.757 139.671 675.239 140.489 700.87 140.494 cv
700.87 143.799 li
632.632 141.3 mo
629.992 141.082 627.424 140.853 624.918 140.615 cv
625.972 139.593 627.038 138.59 628.116 137.606 cv
630.592 137.829 633.128 138.041 635.736 138.244 cv
634.693 139.239 633.653 140.263 632.632 141.3 cv
622.851 140.414 mo
620.689 140.2 618.575 139.979 616.502 139.752 cv
617.638 138.758 618.788 137.778 619.95 136.815 cv
621.92 137.02 623.914 137.217 625.965 137.408 cv
625.667 137.688 625.368 137.971 625.071 138.254 cv
624.325 138.966 623.586 139.685 622.851 140.414 cv
.0827039 .0118105 .0663462 0 cmyk
f
624.918 140.615 mo
624.224 140.548 623.534 140.481 622.851 140.414 cv
623.586 139.685 624.325 138.966 625.071 138.254 cv
625.368 137.971 625.667 137.688 625.965 137.408 cv
626.673 137.475 627.398 137.541 628.116 137.606 cv
627.038 138.59 625.972 139.593 624.918 140.615 cv
.48127 .12842 .425422 0 cmyk
f
603.626 138.202 mo
598.826 137.574 594.217 136.919 589.702 136.246 cv
590.826 135.305 591.955 134.369 593.092 133.44 cv
597.428 134.07 601.876 134.683 606.502 135.267 cv
605.539 136.232 604.574 137.218 603.626 138.202 cv
588.037 135.997 mo
550.571 130.355 519.41 123.721 446.12 123.721 cv
446.12 120.416 li
521.581 120.416 552.382 127.449 591.387 133.191 cv
590.264 134.12 589.147 135.057 588.037 135.997 cv
.0827039 .0118105 .0663462 0 cmyk
f
604.431 138.307 mo
604.162 138.272 603.894 138.237 603.626 138.202 cv
604.574 137.218 605.539 136.232 606.502 135.267 cv
606.783 135.302 607.066 135.338 607.348 135.373 cv
606.368 136.341 605.395 137.319 604.431 138.307 cv
.48127 .12842 .425422 0 cmyk
f
605.15 138.4 mo
604.91 138.369 604.67 138.338 604.431 138.307 cv
605.395 137.319 606.368 136.341 607.348 135.373 cv
607.6 135.405 607.842 135.435 608.095 135.466 cv
607.105 136.434 606.124 137.412 605.15 138.4 cv
f
606.356 138.553 mo
605.955 138.503 605.549 138.451 605.15 138.4 cv
606.124 137.412 607.105 136.434 608.095 135.466 cv
608.505 135.517 608.923 135.568 609.335 135.618 cv
608.334 136.585 607.34 137.565 606.356 138.553 cv
.449073 .761257 .0835584 .000976577 cmyk
f
607.831 138.738 mo
607.339 138.677 606.844 138.615 606.356 138.553 cv
607.34 137.565 608.334 136.585 609.335 135.618 cv
609.844 135.68 610.357 135.742 610.87 135.803 cv
609.847 136.771 608.836 137.747 607.831 138.738 cv
.48127 .12842 .425422 0 cmyk
f
181.12 210.003 mo
308.62 210.003 308.62 263.096 436.12 263.096 cv
436.12 266.401 li
308.62 266.401 308.62 213.308 181.12 213.308 cv
181.12 210.003 li
cp
f
446.12 257.973 mo
573.62 257.973 573.62 98.5554 701.12 98.5554 cv
701.12 101.861 li
573.62 101.861 573.62 261.278 446.12 261.278 cv
446.12 257.973 li
f
181.12 213.308 mo
308.62 213.308 308.62 266.401 436.12 266.401 cv
436.12 269.706 li
308.62 269.706 308.62 216.613 181.12 216.613 cv
181.12 213.308 li
cp
f
446.12 261.278 mo
573.62 261.278 573.62 101.861 701.12 101.861 cv
701.12 102.687 li
573.62 102.687 573.62 262.104 446.12 262.104 cv
446.12 261.278 li
f
446.12 261.278 mo
446.12 261.778 li
478.1 261.782 502.135 251.768 522.123 236.769 cv
552.104 214.269 573.031 180.61 598.394 152.637 cv
611.074 138.648 624.854 126.08 641.407 117.011 cv
657.962 107.942 677.291 102.362 701.12 102.361 cv
701.12 101.861 li
700.62 101.861 li
700.62 102.687 li
701.12 102.687 li
701.12 102.187 li
669.139 102.183 645.104 112.197 625.116 127.196 cv
595.134 149.696 574.208 183.354 548.845 211.328 cv
536.165 225.317 522.385 237.884 505.832 246.954 cv
489.277 256.023 469.948 261.603 446.12 261.604 cv
446.12 262.104 li
446.619 262.104 li
446.619 261.278 li
446.12 261.278 li
446.12 261.778 li
446.12 261.278 li
445.62 261.278 li
445.62 262.104 li
445.62 262.604 li
446.12 262.604 li
478.1 262.608 502.135 252.594 522.123 237.595 cv
552.104 215.095 573.031 181.437 598.394 153.463 cv
611.074 139.474 624.854 126.907 641.407 117.837 cv
657.962 108.768 677.291 103.188 701.12 103.187 cv
701.619 103.187 li
701.62 101.861 li
701.62 101.361 li
701.12 101.361 li
669.139 101.357 645.104 111.371 625.116 126.37 cv
595.134 148.87 574.208 182.528 548.845 210.502 cv
536.165 224.49 522.385 237.058 505.832 246.128 cv
489.277 255.196 469.948 260.777 446.12 260.778 cv
445.62 260.778 li
445.62 261.278 li
446.12 261.278 li
f
446.12 273.617 mo
573.62 273.617 573.62 267.145 701.12 267.145 cv
701.12 267.971 li
573.62 267.971 573.62 274.443 446.12 274.443 cv
446.12 273.617 li
f
446.12 273.617 mo
446.12 274.117 li
573.65 274.116 573.65 267.644 701.12 267.644 cv
701.12 267.145 li
700.62 267.145 li
700.62 267.971 li
701.12 267.971 li
701.12 267.471 li
573.589 267.472 573.589 273.944 446.12 273.943 cv
446.12 274.443 li
446.619 274.443 li
446.619 273.617 li
446.12 273.617 li
446.12 274.117 li
446.12 273.617 li
445.62 273.617 li
445.62 274.443 li
445.62 274.943 li
446.12 274.943 li
573.65 274.943 573.65 268.47 701.12 268.471 cv
701.62 268.471 li
701.62 267.145 li
701.62 266.645 li
701.12 266.645 li
573.589 266.645 573.589 273.118 446.12 273.117 cv
445.62 273.117 li
445.62 273.617 li
446.12 273.617 li
f
446.12 267.861 mo
573.62 267.861 573.62 223.03 701.12 223.03 cv
701.12 223.856 li
573.62 223.856 573.62 268.687 446.12 268.687 cv
446.12 267.861 li
f
446.12 267.861 mo
446.12 268.361 li
509.924 268.365 541.911 257.127 573.785 245.917 cv
605.661 234.712 637.423 223.535 701.12 223.53 cv
701.12 223.03 li
700.62 223.03 li
700.62 223.856 li
701.12 223.856 li
701.12 223.356 li
637.315 223.352 605.328 234.59 573.454 245.8 cv
541.578 257.005 509.815 268.182 446.12 268.187 cv
446.12 268.687 li
446.619 268.687 li
446.619 267.861 li
446.12 267.861 li
446.12 268.361 li
446.12 267.861 li
445.62 267.861 li
445.62 268.687 li
445.62 269.187 li
446.12 269.187 li
509.924 269.192 541.911 257.954 573.785 246.743 cv
605.661 235.538 637.423 224.361 701.12 224.356 cv
701.62 224.356 li
701.62 223.03 li
701.62 222.53 li
701.12 222.53 li
637.315 222.525 605.328 233.763 573.454 244.974 cv
541.578 256.179 509.815 267.356 446.12 267.361 cv
445.62 267.361 li
445.62 267.861 li
446.12 267.861 li
f
446.12 280.75 mo
573.62 280.75 573.62 311.121 701.12 311.121 cv
701.12 311.948 li
573.62 311.948 573.62 281.577 446.12 281.577 cv
446.12 280.75 li
f
446.12 280.75 mo
446.12 281.25 li
509.834 281.253 541.629 288.831 573.504 296.422 cv
605.379 304.017 637.334 311.624 701.12 311.621 cv
701.12 311.121 li
700.62 311.121 li
700.62 311.948 li
701.12 311.948 li
701.12 311.448 li
637.405 311.445 605.61 303.867 573.735 296.276 cv
541.86 288.681 509.905 281.074 446.12 281.077 cv
446.12 281.577 li
446.619 281.577 li
446.619 280.75 li
446.12 280.75 li
446.12 281.25 li
446.12 280.75 li
445.62 280.75 li
445.62 281.577 li
445.62 282.077 li
446.12 282.077 li
509.834 282.079 541.629 289.657 573.504 297.249 cv
605.379 304.843 637.334 312.45 701.12 312.447 cv
701.62 312.447 li
701.62 311.121 li
701.62 310.621 li
701.12 310.621 li
637.405 310.619 605.61 303.041 573.735 295.449 cv
541.86 287.855 509.905 280.248 446.12 280.251 cv
445.62 280.251 li
445.62 280.75 li
446.12 280.75 li
f
181.12 196.782 mo
308.62 196.782 308.62 221.57 436.12 221.57 cv
436.12 224.875 li
308.62 224.875 308.62 200.087 181.12 200.087 cv
181.12 196.782 li
cp
f
446.12 205.045 mo
573.62 205.045 573.62 92.1105 701.12 92.1105 cv
701.12 93.7631 li
573.62 93.7631 573.62 206.698 446.12 206.698 cv
446.12 205.045 li
f
446.12 217.439 mo
573.62 217.439 573.62 219.89 701.12 219.89 cv
701.12 221.543 li
573.62 221.543 573.62 219.092 446.12 219.092 cv
446.12 217.439 li
f
181.12 306.274 mo
308.62 306.274 308.62 168.477 436.12 168.477 cv
436.12 171.782 li
308.62 171.782 308.62 309.579 181.12 309.579 cv
181.12 306.274 li
cp
.60058 .0573434 .119661 0 cmyk
f
446.12 149.611 mo
573.62 149.611 573.62 211.214 701.12 211.214 cv
701.12 212.867 li
573.62 212.867 573.62 151.263 446.12 151.263 cv
446.12 149.611 li
f
446.12 163.106 mo
573.62 163.106 573.62 299.719 701.12 299.719 cv
701.12 301.371 li
573.62 301.371 573.62 164.759 446.12 164.759 cv
446.12 163.106 li
f
181.12 226.528 mo
308.62 226.528 308.62 312.884 436.12 312.884 cv
436.12 316.189 li
308.62 316.189 308.62 229.833 181.12 229.833 cv
181.12 226.528 li
cp
.48127 .12842 .425422 0 cmyk
f
446.12 322.524 mo
573.62 322.524 573.62 270.312 701.12 270.312 cv
701.12 271.964 li
573.62 271.964 573.62 324.176 446.12 324.176 cv
446.12 322.524 li
cp
f
446.12 329.96 mo
573.62 329.96 573.62 356.613 701.12 356.613 cv
701.12 358.265 li
573.62 358.265 573.62 331.613 446.12 331.613 cv
446.12 329.96 li
cp
f
181.12 309.579 mo
308.62 309.579 308.62 171.782 436.12 171.782 cv
436.12 175.087 li
308.62 175.087 308.62 312.884 181.12 312.884 cv
181.12 309.579 li
cp
.60058 .0573434 .119661 0 cmyk
f
446.12 158.562 mo
573.62 158.562 573.62 256.155 701.12 256.155 cv
701.12 257.808 li
573.62 257.808 573.62 160.215 446.12 160.215 cv
446.12 158.562 li
f
446.12 164.759 mo
573.62 164.759 573.62 301.371 701.12 301.371 cv
701.12 303.024 li
573.62 303.024 573.62 166.412 446.12 166.412 cv
446.12 164.759 li
f
181.12 120.765 mo
308.62 120.765 308.62 95.7653 436.12 95.7653 cv
436.12 99.0704 li
308.62 99.0704 308.62 124.07 181.12 124.07 cv
181.12 120.765 li
cp
.48127 .12842 .425422 0 cmyk
f
446.12 78.689 mo
573.62 78.689 573.62 53.689 701.12 53.689 cv
701.12 55.3416 li
573.62 55.3416 573.62 80.3416 446.12 80.3416 cv
446.12 78.689 li
cp
f
446.12 151.263 mo
573.62 151.263 573.62 212.867 701.12 212.867 cv
701.12 214.52 li
573.62 214.52 573.62 152.916 446.12 152.916 cv
446.12 151.263 li
f
181.12 124.07 mo
308.62 124.07 308.62 99.0704 436.12 99.0704 cv
436.12 102.375 li
308.62 102.375 308.62 127.375 181.12 127.375 cv
181.12 124.07 li
cp
f
700.87 147.104 mo
672.115 147.098 649.853 146.07 631.149 144.481 cv
632.145 143.44 633.143 142.426 634.16 141.424 cv
652.234 142.871 673.646 143.793 700.87 143.799 cv
700.87 147.104 li
629.707 144.357 mo
627.029 144.123 624.432 143.879 621.89 143.623 cv
622.889 142.605 623.899 141.601 624.918 140.615 cv
627.424 140.853 629.992 141.082 632.632 141.3 cv
631.646 142.301 630.674 143.318 629.707 144.357 cv
619.895 143.419 mo
617.62 143.183 615.407 142.94 613.227 142.689 cv
614.309 141.696 615.398 140.717 616.502 139.752 cv
618.575 139.979 620.689 140.2 622.851 140.414 cv
621.856 141.4 620.87 142.403 619.895 143.419 cv
.0827039 .0118105 .0663462 0 cmyk
f
621.89 143.623 mo
621.225 143.557 620.551 143.488 619.895 143.419 cv
620.87 142.403 621.856 141.4 622.851 140.414 cv
623.534 140.481 624.224 140.548 624.918 140.615 cv
623.899 141.601 622.889 142.605 621.89 143.623 cv
.48127 .12842 .425422 0 cmyk
f
600.843 141.138 mo
595.869 140.466 591.088 139.767 586.388 139.052 cv
587.489 138.111 588.591 137.178 589.702 136.246 cv
594.217 136.919 598.826 137.574 603.626 138.202 cv
602.69 139.173 601.765 140.15 600.843 141.138 cv
.0827039 .0118105 .0663462 0 cmyk
f
601.612 141.241 mo
601.356 141.207 601.099 141.172 600.843 141.138 cv
601.765 140.15 602.69 139.173 603.626 138.202 cv
603.894 138.237 604.162 138.272 604.431 138.307 cv
603.484 139.276 602.545 140.254 601.612 141.241 cv
.48127 .12842 .425422 0 cmyk
f
602.308 141.334 mo
602.076 141.303 601.844 141.272 601.612 141.241 cv
602.545 140.254 603.484 139.276 604.431 138.307 cv
604.67 138.338 604.91 138.369 605.15 138.4 cv
604.196 139.368 603.248 140.348 602.308 141.334 cv
f
603.484 141.489 mo
603.094 141.438 602.697 141.385 602.308 141.334 cv
603.248 140.348 604.196 139.368 605.15 138.4 cv
605.549 138.451 605.955 138.503 606.356 138.553 cv
605.389 139.524 604.436 140.499 603.484 141.489 cv
.449073 .761257 .0835584 .000976577 cmyk
f
604.908 141.674 mo
604.428 141.612 603.96 141.551 603.484 141.489 cv
604.436 140.499 605.389 139.524 606.356 138.553 cv
606.844 138.615 607.339 138.677 607.831 138.738 cv
606.852 139.703 605.871 140.689 604.908 141.674 cv
.48127 .12842 .425422 0 cmyk
f
607.2 141.965 mo
606.432 141.869 605.665 141.771 604.908 141.674 cv
605.871 140.689 606.852 139.703 607.831 138.738 cv
608.627 138.837 609.419 138.934 610.226 139.031 cv
609.209 139.997 608.199 140.976 607.2 141.965 cv
f
608.579 142.136 mo
608.116 142.079 607.66 142.022 607.2 141.965 cv
608.199 140.976 609.209 139.997 610.226 139.031 cv
610.698 139.088 611.174 139.144 611.651 139.2 cv
610.618 140.166 609.593 141.146 608.579 142.136 cv
f
584.754 138.803 mo
548.705 133.277 517.262 127.026 446.12 127.026 cv
446.12 123.721 li
519.41 123.721 550.571 130.355 588.037 135.997 cv
586.939 136.927 585.843 137.865 584.754 138.803 cv
.0827039 .0118105 .0663462 0 cmyk
f
586.388 139.052 mo
585.846 138.97 585.295 138.886 584.754 138.803 cv
585.843 137.865 586.939 136.927 588.037 135.997 cv
588.59 136.08 589.146 136.163 589.702 136.246 cv
588.591 137.178 587.489 138.111 586.388 139.052 cv
.48127 .12842 .425422 0 cmyk
f
181.12 268.053 mo
308.62 268.053 308.62 158.562 436.12 158.562 cv
436.12 161.867 li
308.62 161.867 308.62 271.359 181.12 271.359 cv
181.12 268.053 li
cp
.793973 1 .278019 .337499 cmyk
f
700.87 150.409 mo
670.646 150.403 647.59 149.267 628.304 147.538 cv
629.241 146.504 630.193 145.48 631.149 144.481 cv
649.853 146.07 672.115 147.098 700.87 147.104 cv
700.87 150.409 li
626.937 147.414 mo
624.224 147.165 621.584 146.903 619.011 146.632 cv
619.962 145.614 620.921 144.612 621.89 143.623 cv
624.432 143.879 627.029 144.123 629.707 144.357 cv
628.776 145.358 627.85 146.38 626.937 147.414 cv
617.076 146.425 mo
614.7 146.167 612.378 145.9 610.102 145.626 cv
611.134 144.635 612.177 143.655 613.227 142.689 cv
615.407 142.94 617.62 143.183 619.895 143.419 cv
618.947 144.407 618.006 145.411 617.076 146.425 cv
.125002 .180667 .0336919 0 cmyk
f
619.011 146.632 mo
618.358 146.563 617.72 146.495 617.076 146.425 cv
618.006 145.411 618.947 144.407 619.895 143.419 cv
620.551 143.488 621.225 143.557 621.89 143.623 cv
620.921 144.612 619.962 145.614 619.011 146.632 cv
.552636 .323613 .409186 .0273747 cmyk
f
598.143 144.073 mo
592.988 143.358 588.029 142.615 583.133 141.859 cv
584.214 140.92 585.299 139.984 586.388 139.052 cv
591.088 139.767 595.869 140.466 600.843 141.138 cv
599.938 142.107 599.036 143.088 598.143 144.073 cv
.125002 .180667 .0336919 0 cmyk
f
598.88 144.175 mo
598.635 144.141 598.387 144.107 598.143 144.073 cv
599.036 143.088 599.938 142.107 600.843 141.138 cv
601.099 141.172 601.356 141.207 601.612 141.241 cv
600.695 142.211 599.785 143.189 598.88 144.175 cv
.552636 .323613 .409186 .0273747 cmyk
f
599.556 144.268 mo
599.331 144.237 599.105 144.206 598.88 144.175 cv
599.785 143.189 600.695 142.211 601.612 141.241 cv
601.844 141.272 602.076 141.303 602.308 141.334 cv
601.383 142.305 600.468 143.281 599.556 144.268 cv
f
600.706 144.424 mo
600.321 144.372 599.939 144.32 599.556 144.268 cv
600.468 143.281 601.383 142.305 602.308 141.334 cv
602.697 141.385 603.094 141.438 603.484 141.489 cv
602.554 142.456 601.624 143.44 600.706 144.424 cv
.532555 .937102 .0736706 .00384527 cmyk
f
602.085 144.609 mo
601.625 144.548 601.163 144.486 600.706 144.424 cv
601.624 143.44 602.554 142.456 603.484 141.489 cv
603.96 141.551 604.428 141.612 604.908 141.674 cv
603.957 142.645 603.021 143.62 602.085 144.609 cv
.552636 .323613 .409186 .0273747 cmyk
f
604.288 144.899 mo
603.549 144.803 602.814 144.706 602.085 144.609 cv
603.021 143.62 603.957 142.645 604.908 141.674 cv
605.665 141.771 606.432 141.869 607.2 141.965 cv
606.22 142.934 605.251 143.91 604.288 144.899 cv
f
605.628 145.071 mo
605.177 145.014 604.736 144.957 604.288 144.899 cv
605.251 143.91 606.22 142.934 607.2 141.965 cv
607.66 142.022 608.116 142.079 608.579 142.136 cv
607.587 143.104 606.604 144.082 605.628 145.071 cv
f
581.523 141.609 mo
546.782 136.212 515.13 130.331 446.12 130.331 cv
446.12 127.026 li
517.262 127.026 548.705 133.277 584.754 138.803 cv
583.674 139.735 582.596 140.671 581.523 141.609 cv
.125002 .180667 .0336919 0 cmyk
f
583.133 141.859 mo
582.599 141.776 582.055 141.692 581.523 141.609 cv
582.596 140.671 583.674 139.735 584.754 138.803 cv
585.295 138.886 585.846 138.97 586.388 139.052 cv
585.299 139.984 584.214 140.92 583.133 141.859 cv
.552636 .323613 .409186 .0273747 cmyk
f
181.12 216.613 mo
308.62 216.613 308.62 269.706 436.12 269.706 cv
436.12 273.011 li
308.62 273.011 308.62 219.918 181.12 219.918 cv
181.12 216.613 li
cp
.48127 .12842 .425422 0 cmyk
f
446.12 262.104 mo
573.62 262.104 573.62 102.687 701.12 102.687 cv
701.12 103.789 li
573.62 103.789 573.62 263.206 446.12 263.206 cv
446.12 262.104 li
f
446.12 274.443 mo
573.62 274.443 573.62 267.971 701.12 267.971 cv
701.12 269.073 li
573.62 269.073 573.62 275.545 446.12 275.545 cv
446.12 274.443 li
f
446.12 268.687 mo
573.62 268.687 573.62 223.856 701.12 223.856 cv
701.12 224.958 li
573.62 224.958 573.62 269.789 446.12 269.789 cv
446.12 268.687 li
f
181.12 127.375 mo
308.62 127.375 308.62 102.375 436.12 102.375 cv
436.12 105.681 li
308.62 105.681 308.62 130.681 181.12 130.681 cv
181.12 127.375 li
cp
f
446.12 80.3416 mo
573.62 80.3416 573.62 55.3416 701.12 55.3416 cv
701.12 58.6467 li
573.62 58.6467 573.62 83.6467 446.12 83.6467 cv
446.12 80.3416 li
cp
f
181.12 130.681 mo
308.62 130.681 308.62 105.681 436.12 105.681 cv
436.12 108.986 li
308.62 108.986 308.62 133.986 181.12 133.986 cv
181.12 130.681 li
cp
f
700.87 153.714 mo
669.224 153.708 645.433 152.462 625.602 150.595 cv
626.494 149.562 627.397 148.539 628.304 147.538 cv
647.59 149.267 670.646 150.403 700.87 150.409 cv
700.87 153.714 li
624.299 150.47 mo
621.548 150.205 618.87 149.928 616.259 149.641 cv
617.168 148.625 618.085 147.622 619.011 146.632 cv
621.584 146.903 624.224 147.165 626.937 147.414 cv
626.047 148.42 625.173 149.434 624.299 150.47 cv
614.376 149.43 mo
611.9 149.15 609.476 148.86 607.106 148.563 cv
608.096 147.573 609.095 146.594 610.102 145.626 cv
612.378 145.9 614.7 146.167 617.076 146.425 cv
616.168 147.415 615.268 148.417 614.376 149.43 cv
.0827039 .0118105 .0663462 0 cmyk
f
616.259 149.641 mo
615.627 149.571 615.001 149.501 614.376 149.43 cv
615.268 148.417 616.168 147.415 617.076 146.425 cv
617.72 146.495 618.358 146.563 619.011 146.632 cv
618.085 147.622 617.168 148.625 616.259 149.641 cv
.48127 .12842 .425422 0 cmyk
f
595.512 147.008 mo
590.177 146.249 585.021 145.461 579.921 144.665 cv
580.988 143.728 582.061 142.79 583.133 141.859 cv
588.029 142.615 592.988 143.358 598.143 144.073 cv
597.257 145.048 596.387 146.02 595.512 147.008 cv
.0827039 .0118105 .0663462 0 cmyk
f
596.223 147.109 mo
595.985 147.075 595.749 147.042 595.512 147.008 cv
596.387 146.02 597.257 145.048 598.143 144.073 cv
598.387 144.107 598.635 144.141 598.88 144.175 cv
597.99 145.145 597.102 146.126 596.223 147.109 cv
.48127 .12842 .425422 0 cmyk
f
596.881 147.202 mo
596.659 147.171 596.445 147.14 596.223 147.109 cv
597.102 146.126 597.99 145.145 598.88 144.175 cv
599.105 144.206 599.331 144.237 599.556 144.268 cv
598.659 145.238 597.766 146.218 596.881 147.202 cv
f
598.01 147.359 mo
597.633 147.307 597.255 147.254 596.881 147.202 cv
597.766 146.218 598.659 145.238 599.556 144.268 cv
599.939 144.32 600.321 144.372 600.706 144.424 cv
599.802 145.395 598.902 146.374 598.01 147.359 cv
.449073 .761257 .0835584 .000976577 cmyk
f
599.349 147.544 mo
598.903 147.483 598.452 147.421 598.01 147.359 cv
598.902 146.374 599.802 145.395 600.706 144.424 cv
601.163 144.486 601.625 144.548 602.085 144.609 cv
601.165 145.581 600.255 146.557 599.349 147.544 cv
.48127 .12842 .425422 0 cmyk
f
601.474 147.832 mo
600.759 147.737 600.056 147.641 599.349 147.544 cv
600.255 146.557 601.165 145.581 602.085 144.609 cv
602.814 144.706 603.549 144.803 604.288 144.899 cv
603.343 145.867 602.405 146.846 601.474 147.832 cv
f
578.326 144.415 mo
544.802 139.161 513.006 133.636 446.12 133.636 cv
446.12 130.331 li
515.13 130.331 546.782 136.212 581.523 141.609 cv
580.453 142.544 579.391 143.477 578.326 144.415 cv
.0827039 .0118105 .0663462 0 cmyk
f
602.782 148.006 mo
602.346 147.949 601.907 147.89 601.474 147.832 cv
602.405 146.846 603.343 145.867 604.288 144.899 cv
604.736 144.957 605.177 145.014 605.628 145.071 cv
604.67 146.043 603.726 147.017 602.782 148.006 cv
.48127 .12842 .425422 0 cmyk
f
579.921 144.665 mo
579.39 144.582 578.857 144.498 578.326 144.415 cv
579.391 143.477 580.453 142.544 581.523 141.609 cv
582.055 141.692 582.599 141.776 583.133 141.859 cv
582.061 142.79 580.988 143.728 579.921 144.665 cv
f
603.72 148.13 mo
603.405 148.089 603.095 148.048 602.782 148.006 cv
603.726 147.017 604.67 146.043 605.628 145.071 cv
605.951 145.112 606.276 145.154 606.6 145.194 cv
605.632 146.164 604.673 147.141 603.72 148.13 cv
f
181.12 133.986 mo
308.62 133.986 308.62 108.986 436.12 108.986 cv
436.12 112.291 li
308.62 112.291 308.62 137.291 181.12 137.291 cv
181.12 133.986 li
cp
f
446.12 160.215 mo
573.62 160.215 573.62 257.808 701.12 257.808 cv
701.12 258.634 li
573.62 258.634 573.62 161.041 446.12 161.041 cv
446.12 160.215 li
f
446.12 160.215 mo
446.12 160.714 li
477.931 160.716 501.754 166.798 521.614 175.918 cv
551.403 189.594 572.295 210.15 597.744 227.343 cv
623.189 244.535 653.212 258.314 701.12 258.308 cv
701.12 257.808 li
700.62 257.808 li
700.62 258.634 li
701.12 258.634 li
701.12 258.134 li
669.307 258.133 645.485 252.05 625.625 242.931 cv
595.836 229.254 574.944 208.699 549.495 191.506 cv
524.05 174.313 494.027 160.534 446.12 160.541 cv
446.12 161.041 li
446.619 161.041 li
446.619 160.215 li
446.12 160.215 li
446.12 160.714 li
446.12 160.215 li
445.62 160.215 li
445.62 161.041 li
445.62 161.541 li
446.12 161.541 li
477.931 161.542 501.754 167.624 521.614 176.744 cv
551.403 190.421 572.295 210.976 597.744 228.169 cv
623.189 245.361 653.212 259.14 701.12 259.134 cv
701.62 259.134 li
701.62 257.808 li
701.62 257.308 li
701.12 257.308 li
669.307 257.306 645.485 251.224 625.625 242.104 cv
595.836 228.428 574.944 207.873 549.495 190.679 cv
524.05 173.487 494.027 159.708 446.12 159.714 cv
445.62 159.714 li
445.62 160.215 li
446.12 160.215 li
f
446.12 152.916 mo
573.62 152.916 573.62 214.52 701.12 214.52 cv
701.12 215.346 li
573.62 215.346 573.62 153.742 446.12 153.742 cv
446.12 152.916 li
f
446.12 152.916 mo
446.12 153.416 li
509.792 153.423 541.523 168.77 573.402 184.168 cv
605.273 199.572 637.292 215.027 701.12 215.019 cv
701.12 214.52 li
700.62 214.52 li
700.62 215.346 li
701.12 215.346 li
701.12 214.846 li
637.447 214.838 605.716 199.491 573.837 184.094 cv
541.966 168.689 509.947 153.234 446.12 153.242 cv
446.12 153.742 li
446.619 153.742 li
446.619 152.916 li
446.12 152.916 li
446.12 153.416 li
446.12 152.916 li
445.62 152.916 li
445.62 153.742 li
445.62 154.242 li
446.12 154.242 li
509.792 154.25 541.523 169.597 573.402 184.994 cv
605.273 200.399 637.292 215.853 701.12 215.846 cv
701.62 215.846 li
701.62 214.52 li
701.62 214.02 li
701.12 214.02 li
637.447 214.012 605.716 198.665 573.837 183.267 cv
541.966 167.863 509.947 152.408 446.12 152.416 cv
445.62 152.416 li
445.62 152.916 li
446.12 152.916 li
f
446.12 172.195 mo
573.62 172.195 573.62 342.456 701.12 342.456 cv
701.12 343.282 li
573.62 343.282 573.62 173.022 446.12 173.022 cv
446.12 172.195 li
f
446.12 172.195 mo
446.12 172.695 li
477.882 172.699 501.652 183.283 521.51 199.189 cv
551.296 223.046 572.208 258.93 597.642 288.908 cv
610.362 303.895 624.222 317.407 640.914 327.175 cv
657.606 336.944 677.13 342.957 701.12 342.956 cv
701.12 342.456 li
700.62 342.456 li
700.62 343.282 li
701.12 343.282 li
701.12 342.782 li
669.357 342.778 645.587 332.194 625.729 316.289 cv
595.943 292.432 575.031 256.548 549.596 226.57 cv
536.876 211.583 523.017 198.071 506.324 188.303 cv
489.633 178.534 470.109 172.52 446.12 172.522 cv
446.12 173.022 li
446.619 173.022 li
446.619 172.195 li
446.12 172.195 li
446.12 172.695 li
446.12 172.195 li
445.62 172.195 li
445.62 173.022 li
445.62 173.522 li
446.12 173.522 li
477.882 173.526 501.652 184.11 521.51 200.015 cv
551.296 223.872 572.208 259.756 597.642 289.734 cv
610.362 304.721 624.222 318.233 640.914 328.001 cv
657.606 337.77 677.13 343.784 701.12 343.782 cv
701.619 343.782 li
701.62 342.456 li
701.62 341.956 li
701.12 341.956 li
669.357 341.952 645.587 331.368 625.729 315.462 cv
595.943 291.606 575.031 255.722 549.596 225.743 cv
536.876 210.756 523.017 197.245 506.324 187.476 cv
489.633 177.708 470.109 171.694 446.12 171.695 cv
445.62 171.695 li
445.62 172.195 li
446.12 172.195 li
f
446.12 166.412 mo
573.62 166.412 573.62 303.024 701.12 303.024 cv
701.12 303.85 li
573.62 303.85 573.62 167.238 446.12 167.238 cv
446.12 166.412 li
f
446.12 166.412 mo
446.12 166.911 li
477.905 166.914 501.697 175.416 521.552 188.178 cv
551.334 207.318 572.238 236.101 597.68 260.162 cv
623.116 284.221 653.166 303.533 701.12 303.524 cv
701.12 303.024 li
700.62 303.024 li
700.62 303.85 li
701.12 303.85 li
701.12 303.35 li
669.334 303.347 645.542 294.845 625.687 282.084 cv
595.905 262.944 575.001 234.161 549.559 210.099 cv
524.123 186.041 494.072 166.729 446.12 166.738 cv
446.12 167.238 li
446.619 167.238 li
446.619 166.412 li
446.12 166.412 li
446.12 166.911 li
446.12 166.412 li
445.62 166.412 li
445.62 167.238 li
445.62 167.738 li
446.12 167.738 li
477.905 167.74 501.697 176.243 521.552 189.004 cv
551.334 208.144 572.238 236.927 597.68 260.988 cv
623.116 285.047 653.166 304.359 701.12 304.35 cv
701.619 304.35 li
701.62 303.024 li
701.62 302.524 li
701.12 302.524 li
669.334 302.521 645.542 294.019 625.687 281.257 cv
595.905 262.118 575.001 233.335 549.559 209.273 cv
524.123 185.214 494.072 165.903 446.12 165.911 cv
445.62 165.911 li
445.62 166.412 li
446.12 166.412 li
f
181.12 219.918 mo
308.62 219.918 308.62 273.011 436.12 273.011 cv
436.12 276.316 li
308.62 276.316 308.62 223.223 181.12 223.223 cv
181.12 219.918 li
cp
f
446.12 263.206 mo
573.62 263.206 573.62 103.789 701.12 103.789 cv
701.12 105.441 li
573.62 105.441 573.62 264.858 446.12 264.858 cv
446.12 263.206 li
f
446.12 269.789 mo
573.62 269.789 573.62 224.958 701.12 224.958 cv
701.12 226.611 li
573.62 226.611 573.62 271.441 446.12 271.441 cv
446.12 269.789 li
f
181.12 137.291 mo
308.62 137.291 308.62 112.291 436.12 112.291 cv
436.12 115.596 li
308.62 115.596 308.62 140.596 181.12 140.596 cv
181.12 137.291 li
cp
f
446.12 83.6467 mo
573.62 83.6467 573.62 58.6467 701.12 58.6467 cv
701.12 60.2992 li
573.62 60.2992 573.62 85.2992 446.12 85.2992 cv
446.12 83.6467 li
cp
f
446.12 153.742 mo
573.62 153.742 573.62 215.346 701.12 215.346 cv
701.12 216.998 li
573.62 216.998 573.62 155.395 446.12 155.395 cv
446.12 153.742 li
f
181.12 271.359 mo
308.62 271.359 308.62 161.867 436.12 161.867 cv
436.12 165.172 li
308.62 165.172 308.62 274.664 181.12 274.664 cv
181.12 271.359 li
cp
.793973 1 .278019 .337499 cmyk
f
446.12 85.2992 mo
573.62 85.2992 573.62 60.2992 701.12 60.2992 cv
701.12 63.6043 li
573.62 63.6043 573.62 88.6043 446.12 88.6043 cv
446.12 85.2992 li
cp
f
181.12 140.596 mo
308.62 140.596 308.62 115.596 436.12 115.596 cv
436.12 118.901 li
308.62 118.901 308.62 143.901 181.12 143.901 cv
181.12 140.596 li
cp
.48127 .12842 .425422 0 cmyk
f
446.12 88.6043 mo
573.62 88.6043 573.62 63.6043 701.12 63.6043 cv
701.12 66.9094 li
573.62 66.9094 573.62 91.9094 446.12 91.9094 cv
446.12 88.6043 li
cp
f
181.12 356.062 mo
308.62 356.062 308.62 279.621 436.12 279.621 cv
436.12 282.926 li
308.62 282.926 308.62 359.367 181.12 359.367 cv
181.12 356.062 li
cp
.432929 .877256 .010956 9.15541e-05 cmyk
f
446.12 264.858 mo
573.62 264.858 573.62 105.441 701.12 105.441 cv
701.12 106.543 li
573.62 106.543 573.62 265.96 446.12 265.96 cv
446.12 264.858 li
f
446.12 271.441 mo
573.62 271.441 573.62 226.611 701.12 226.611 cv
701.12 227.712 li
573.62 227.712 573.62 272.543 446.12 272.543 cv
446.12 271.441 li
f
446.12 283.064 mo
573.62 283.064 573.62 354.272 701.12 354.272 cv
701.12 355.373 li
573.62 355.373 573.62 284.166 446.12 284.166 cv
446.12 283.064 li
f
181.12 143.901 mo
308.62 143.901 308.62 118.901 436.12 118.901 cv
436.12 122.206 li
308.62 122.206 308.62 147.206 181.12 147.206 cv
181.12 143.901 li
cp
.48127 .12842 .425422 0 cmyk
f
446.12 91.9094 mo
573.62 91.9094 573.62 66.9094 701.12 66.9094 cv
701.12 68.5619 li
573.62 68.5619 573.62 93.5619 446.12 93.5619 cv
446.12 91.9094 li
cp
f
446.12 167.238 mo
573.62 167.238 573.62 303.85 701.12 303.85 cv
701.12 305.503 li
573.62 305.503 573.62 168.89 446.12 168.89 cv
446.12 167.238 li
f
181.12 147.206 mo
308.62 147.206 308.62 122.206 436.12 122.206 cv
436.12 125.511 li
308.62 125.511 308.62 150.511 181.12 150.511 cv
181.12 147.206 li
cp
f
446.12 93.5619 mo
573.62 93.5619 573.62 68.5619 701.12 68.5619 cv
701.12 71.867 li
573.62 71.867 573.62 96.867 446.12 96.867 cv
446.12 93.5619 li
cp
f
181.12 150.511 mo
308.62 150.511 308.62 125.511 436.12 125.511 cv
436.12 128.816 li
308.62 128.816 308.62 153.816 181.12 153.816 cv
181.12 150.511 li
cp
f
446.12 161.041 mo
573.62 161.041 573.62 258.634 701.12 258.634 cv
701.12 260.287 li
573.62 260.287 573.62 162.693 446.12 162.693 cv
446.12 161.041 li
f
446.12 173.022 mo
573.62 173.022 573.62 343.282 701.12 343.282 cv
701.12 344.935 li
573.62 344.935 573.62 174.674 446.12 174.674 cv
446.12 173.022 li
f
181.12 153.816 mo
308.62 153.816 308.62 128.816 436.12 128.816 cv
436.12 132.121 li
308.62 132.121 308.62 157.121 181.12 157.121 cv
181.12 153.816 li
cp
f
700.87 157.019 mo
667.84 157.012 643.37 155.656 623.025 153.651 cv
623.877 152.618 624.736 151.6 625.602 150.595 cv
645.433 152.462 669.224 153.708 700.87 153.714 cv
700.87 157.019 li
621.779 153.527 mo
618.982 153.246 616.272 152.953 613.619 152.649 cv
614.492 151.635 615.372 150.632 616.259 149.641 cv
618.87 149.928 621.548 150.205 624.299 150.47 cv
623.454 151.473 622.609 152.498 621.779 153.527 cv
611.782 152.436 mo
609.202 152.133 606.689 151.82 604.219 151.5 cv
605.174 150.511 606.135 149.532 607.106 148.563 cv
609.476 148.86 611.9 149.15 614.376 149.43 cv
613.505 150.421 612.639 151.424 611.782 152.436 cv
.0827039 .0118105 .0663462 0 cmyk
f
613.619 152.649 mo
613.006 152.579 612.388 152.507 611.782 152.436 cv
612.639 151.424 613.505 150.421 614.376 149.43 cv
615.001 149.501 615.627 149.571 616.259 149.641 cv
615.372 150.632 614.492 151.635 613.619 152.649 cv
.48127 .12842 .425422 0 cmyk
f
592.943 149.944 mo
587.412 149.139 582.062 148.308 576.737 147.471 cv
577.797 146.534 578.858 145.598 579.921 144.665 cv
585.021 145.461 590.177 146.249 595.512 147.008 cv
594.654 147.978 593.792 148.963 592.943 149.944 cv
.0827039 .0118105 .0663462 0 cmyk
f
593.63 150.043 mo
593.403 150.01 593.169 149.977 592.943 149.944 cv
593.792 148.963 594.654 147.978 595.512 147.008 cv
595.749 147.042 595.985 147.075 596.223 147.109 cv
595.353 148.082 594.491 149.058 593.63 150.043 cv
.48127 .12842 .425422 0 cmyk
f
594.273 150.136 mo
594.057 150.105 593.845 150.074 593.63 150.043 cv
594.491 149.058 595.353 148.082 596.223 147.109 cv
596.445 147.14 596.659 147.171 596.881 147.202 cv
596.005 148.175 595.139 149.15 594.273 150.136 cv
f
595.382 150.295 mo
595.011 150.242 594.643 150.189 594.273 150.136 cv
595.139 149.15 596.005 148.175 596.881 147.202 cv
597.255 147.254 597.633 147.307 598.01 147.359 cv
597.129 148.331 596.253 149.311 595.382 150.295 cv
.449073 .761257 .0835584 .000976577 cmyk
f
596.688 150.48 mo
596.252 150.418 595.816 150.357 595.382 150.295 cv
596.253 149.311 597.129 148.331 598.01 147.359 cv
598.452 147.421 598.903 147.483 599.349 147.544 cv
598.458 148.513 597.567 149.497 596.688 150.48 cv
.48127 .12842 .425422 0 cmyk
f
598.746 150.767 mo
598.057 150.672 597.37 150.576 596.688 150.48 cv
597.567 149.497 598.458 148.513 599.349 147.544 cv
600.056 147.641 600.759 147.737 601.474 147.832 cv
600.559 148.802 599.648 149.782 598.746 150.767 cv
f
575.151 147.221 mo
542.758 142.123 510.889 136.941 446.12 136.941 cv
446.12 133.636 li
513.006 133.636 544.802 139.161 578.326 144.415 cv
577.266 145.35 576.21 146.284 575.151 147.221 cv
.0827039 .0118105 .0663462 0 cmyk
f
600.025 150.942 mo
599.595 150.883 599.173 150.826 598.746 150.767 cv
599.648 149.782 600.559 148.802 601.474 147.832 cv
601.907 147.89 602.346 147.949 602.782 148.006 cv
601.859 148.974 600.935 149.958 600.025 150.942 cv
.48127 .12842 .425422 0 cmyk
f
576.737 147.471 mo
576.207 147.388 575.68 147.305 575.151 147.221 cv
576.21 146.284 577.266 145.35 578.326 144.415 cv
578.857 144.498 579.39 144.582 579.921 144.665 cv
578.858 145.598 577.797 146.534 576.737 147.471 cv
f
600.935 151.065 mo
600.633 151.024 600.326 150.983 600.025 150.942 cv
600.935 149.958 601.859 148.974 602.782 148.006 cv
603.095 148.048 603.405 148.089 603.72 148.13 cv
602.784 149.1 601.857 150.078 600.935 151.065 cv
f
602.316 151.25 mo
601.852 151.188 601.396 151.127 600.935 151.065 cv
601.857 150.078 602.784 149.1 603.72 148.13 cv
604.192 148.191 604.672 148.253 605.147 148.315 cv
604.2 149.28 603.25 150.266 602.316 151.25 cv
f
602.635 151.292 mo
602.529 151.278 602.422 151.264 602.316 151.25 cv
603.25 150.266 604.2 149.28 605.147 148.315 cv
605.263 148.329 605.372 148.343 605.488 148.358 cv
604.529 149.327 603.579 150.305 602.635 151.292 cv
.449073 .761257 .0835584 .000976577 cmyk
f
181.12 157.121 mo
308.62 157.121 308.62 132.121 436.12 132.121 cv
436.12 135.426 li
308.62 135.426 308.62 160.426 181.12 160.426 cv
181.12 157.121 li
cp
.48127 .12842 .425422 0 cmyk
f
446.12 96.867 mo
573.62 96.867 573.62 71.867 701.12 71.867 cv
701.12 75.1721 li
573.62 75.1721 573.62 100.172 446.12 100.172 cv
446.12 96.867 li
cp
f
181.12 322.799 mo
308.62 322.799 308.62 357.714 436.12 357.714 cv
436.12 361.02 li
308.62 361.02 308.62 326.104 181.12 326.104 cv
181.12 322.799 li
cp
.60058 .0573434 .119661 0 cmyk
f
446.12 357.714 mo
573.62 357.714 573.62 110.536 701.12 110.536 cv
701.12 112.189 li
573.62 112.189 573.62 359.367 446.12 359.367 cv
446.12 357.714 li
f
446.12 359.367 mo
573.62 359.367 573.62 359.367 701.12 359.367 cv
701.12 361.02 li
573.62 361.02 573.62 361.02 446.12 361.02 cv
446.12 359.367 li
cp
f
181.12 312.884 mo
308.62 312.884 308.62 175.087 436.12 175.087 cv
436.12 178.392 li
308.62 178.392 308.62 316.189 181.12 316.189 cv
181.12 312.884 li
cp
f
446.12 100.172 mo
573.62 100.172 573.62 75.1721 701.12 75.1721 cv
701.12 76.8246 li
573.62 76.8246 573.62 101.825 446.12 101.825 cv
446.12 100.172 li
cp
f
446.12 155.395 mo
573.62 155.395 573.62 216.998 701.12 216.998 cv
701.12 218.651 li
573.62 218.651 573.62 157.047 446.12 157.047 cv
446.12 155.395 li
f
181.12 160.426 mo
308.62 160.426 308.62 135.426 436.12 135.426 cv
436.12 138.731 li
308.62 138.731 308.62 163.731 181.12 163.731 cv
181.12 160.426 li
cp
.48127 .12842 .425422 0 cmyk
f
446.12 101.825 mo
573.62 101.825 573.62 76.8246 701.12 76.8246 cv
701.12 80.1297 li
573.62 80.1297 573.62 105.13 446.12 105.13 cv
446.12 101.825 li
cp
f
181.12 163.731 mo
308.62 163.731 308.62 138.731 436.12 138.731 cv
436.12 142.036 li
308.62 142.036 308.62 167.036 181.12 167.036 cv
181.12 163.731 li
cp
f
446.12 105.13 mo
573.62 105.13 573.62 80.1297 701.12 80.1297 cv
701.12 83.4348 li
573.62 83.4348 573.62 108.435 446.12 108.435 cv
446.12 105.13 li
cp
f
181.12 167.036 mo
308.62 167.036 308.62 142.036 436.12 142.036 cv
436.12 145.342 li
308.62 145.342 308.62 170.342 181.12 170.342 cv
181.12 167.036 li
cp
f
446.12 108.435 mo
573.62 108.435 573.62 83.4348 701.12 83.4348 cv
701.12 85.0873 li
573.62 85.0873 573.62 110.087 446.12 110.087 cv
446.12 108.435 li
cp
f
446.12 174.674 mo
573.62 174.674 573.62 344.935 701.12 344.935 cv
701.12 346.587 li
573.62 346.587 573.62 176.327 446.12 176.327 cv
446.12 174.674 li
f
181.12 274.664 mo
308.62 274.664 308.62 165.172 436.12 165.172 cv
436.12 168.477 li
308.62 168.477 308.62 277.969 181.12 277.969 cv
181.12 274.664 li
cp
.793973 1 .278019 .337499 cmyk
f
446.12 176.327 mo
573.62 176.327 573.62 346.587 701.12 346.587 cv
701.12 349.892 li
573.62 349.892 573.62 179.632 446.12 179.632 cv
446.12 176.327 li
f
181.12 170.342 mo
308.62 170.342 308.62 145.342 436.12 145.342 cv
436.12 148.647 li
308.62 148.647 308.62 173.647 181.12 173.647 cv
181.12 170.342 li
cp
.48127 .12842 .425422 0 cmyk
f
446.12 110.087 mo
573.62 110.087 573.62 85.0873 701.12 85.0873 cv
701.12 88.3924 li
573.62 88.3924 573.62 113.392 446.12 113.392 cv
446.12 110.087 li
cp
f
181.12 351.104 mo
308.62 351.104 308.62 178.392 436.12 178.392 cv
436.12 180.045 li
308.62 180.045 308.62 352.757 181.12 352.757 cv
181.12 351.104 li
cp
.432929 .877256 .010956 9.15541e-05 cmyk
f
181.12 359.367 mo
308.62 359.367 308.62 282.926 436.12 282.926 cv
436.12 284.579 li
308.62 284.579 308.62 361.02 181.12 361.02 cv
181.12 359.367 li
cp
f
446.12 113.392 mo
573.62 113.392 573.62 88.3924 701.12 88.3924 cv
701.12 88.8055 li
573.62 88.8055 573.62 113.806 446.12 113.806 cv
446.12 113.392 li
cp
f
446.12 113.392 mo
446.12 113.892 li
509.899 113.894 541.84 107.634 573.716 101.383 cv
605.59 95.1342 637.398 88.894 701.12 88.8924 cv
701.12 88.3924 li
700.62 88.3924 li
700.62 88.8055 li
701.12 88.8055 li
701.12 88.3055 li
637.34 88.3039 605.399 94.5638 573.523 100.815 cv
541.649 107.064 509.841 113.304 446.12 113.306 cv
446.12 113.806 li
446.62 113.806 li
446.62 113.392 li
446.12 113.392 li
446.12 113.892 li
446.12 113.392 li
445.62 113.392 li
445.62 113.806 li
445.62 114.306 li
446.12 114.306 li
509.899 114.307 541.84 108.047 573.716 101.796 cv
605.59 95.5473 637.398 89.3071 701.12 89.3055 cv
701.62 89.3055 li
701.62 88.3924 li
701.62 87.8924 li
701.12 87.8924 li
637.34 87.8908 605.399 94.1506 573.523 100.402 cv
541.649 106.651 509.841 112.891 446.12 112.892 cv
445.62 112.892 li
445.62 113.392 li
446.12 113.392 li
cp
f
446.12 162.693 mo
573.62 162.693 573.62 260.287 701.12 260.287 cv
701.12 260.7 li
573.62 260.7 573.62 163.106 446.12 163.106 cv
446.12 162.693 li
f
446.12 162.693 mo
446.12 163.193 li
477.931 163.194 501.754 169.277 521.614 178.397 cv
551.403 192.073 572.295 212.628 597.744 229.822 cv
623.189 247.014 653.212 260.792 701.12 260.786 cv
701.12 260.287 li
700.62 260.287 li
700.62 260.7 li
701.12 260.7 li
701.12 260.2 li
669.307 260.198 645.485 254.116 625.625 244.996 cv
595.836 231.319 574.944 210.765 549.495 193.571 cv
524.05 176.379 494.027 162.6 446.12 162.606 cv
446.12 163.106 li
446.619 163.106 li
446.619 162.693 li
446.12 162.693 li
446.12 163.193 li
446.12 162.693 li
445.62 162.693 li
445.62 163.106 li
445.62 163.606 li
446.12 163.606 li
477.931 163.608 501.754 169.69 521.614 178.81 cv
551.403 192.486 572.295 213.041 597.744 230.235 cv
623.189 247.427 653.212 261.206 701.12 261.2 cv
701.62 261.2 li
701.62 260.287 li
701.62 259.786 li
701.12 259.786 li
669.307 259.785 645.485 253.703 625.625 244.583 cv
595.836 230.906 574.944 210.351 549.495 193.158 cv
524.05 175.966 494.027 162.187 446.12 162.193 cv
445.62 162.193 li
445.62 162.693 li
446.12 162.693 li
f
446.12 157.047 mo
573.62 157.047 573.62 218.651 701.12 218.651 cv
701.12 219.064 li
573.62 219.064 573.62 157.46 446.12 157.46 cv
446.12 157.047 li
f
446.12 157.047 mo
446.12 157.547 li
509.792 157.555 541.523 172.902 573.402 188.299 cv
605.273 203.704 637.292 219.159 701.12 219.151 cv
701.12 218.651 li
700.62 218.651 li
700.62 219.064 li
701.12 219.064 li
701.12 218.564 li
637.447 218.556 605.716 203.209 573.837 187.812 cv
541.966 172.407 509.947 156.952 446.12 156.96 cv
446.12 157.46 li
446.619 157.46 li
446.619 157.047 li
446.12 157.047 li
446.12 157.547 li
446.12 157.047 li
445.62 157.047 li
445.62 157.46 li
445.62 157.96 li
446.12 157.96 li
509.792 157.968 541.523 173.315 573.402 188.712 cv
605.273 204.117 637.292 219.572 701.12 219.564 cv
701.62 219.564 li
701.62 218.651 li
701.62 218.151 li
701.12 218.151 li
637.447 218.143 605.716 202.796 573.837 187.399 cv
541.966 171.994 509.947 156.539 446.12 156.547 cv
445.62 156.547 li
445.62 157.047 li
446.12 157.047 li
f
446.12 179.632 mo
573.62 179.632 573.62 349.892 701.12 349.892 cv
701.12 350.306 li
573.62 350.306 573.62 180.045 446.12 180.045 cv
446.12 179.632 li
f
446.12 179.632 mo
446.12 180.132 li
477.882 180.136 501.652 190.72 521.51 206.625 cv
551.296 230.482 572.208 266.366 597.642 296.344 cv
610.362 311.331 624.222 324.843 640.914 334.611 cv
657.606 344.38 677.13 350.394 701.12 350.392 cv
701.12 349.892 li
700.62 349.892 li
700.62 350.306 li
701.12 350.306 li
701.12 349.805 li
669.357 349.801 645.587 339.217 625.729 323.312 cv
595.943 299.455 575.031 263.571 549.596 233.593 cv
536.876 218.606 523.017 205.094 506.324 195.326 cv
489.633 185.557 470.109 179.543 446.12 179.545 cv
446.12 180.045 li
446.619 180.045 li
446.619 179.632 li
446.12 179.632 li
446.12 180.132 li
446.12 179.632 li
445.62 179.632 li
445.62 180.045 li
445.62 180.545 li
446.12 180.545 li
477.882 180.549 501.652 191.133 521.51 207.038 cv
551.296 230.895 572.208 266.779 597.642 296.758 cv
610.362 311.745 624.222 325.256 640.914 335.025 cv
657.606 344.793 677.13 350.807 701.12 350.806 cv
701.62 350.806 li
701.62 349.892 li
701.62 349.392 li
701.12 349.392 li
669.357 349.388 645.587 338.804 625.729 322.899 cv
595.943 299.042 575.031 263.158 549.596 233.18 cv
536.876 218.193 523.017 204.681 506.324 194.913 cv
489.633 185.144 470.109 179.13 446.12 179.132 cv
445.62 179.132 li
445.62 179.632 li
446.12 179.632 li
f
446.12 265.96 mo
573.62 265.96 573.62 106.543 701.12 106.543 cv
701.12 106.956 li
573.62 106.956 573.62 266.373 446.12 266.373 cv
446.12 265.96 li
f
446.12 265.96 mo
446.12 266.46 li
478.1 266.464 502.135 256.45 522.123 241.451 cv
552.104 218.951 573.031 185.293 598.394 157.319 cv
611.074 143.33 624.854 130.762 641.407 121.693 cv
657.962 112.624 677.291 107.044 701.12 107.043 cv
701.12 106.543 li
700.62 106.543 li
700.62 106.956 li
701.12 106.956 li
701.12 106.456 li
669.139 106.452 645.104 116.466 625.116 131.465 cv
595.134 153.965 574.208 187.624 548.845 215.597 cv
536.165 229.586 522.385 242.154 505.832 251.223 cv
489.277 260.292 469.948 265.872 446.12 265.873 cv
446.12 266.373 li
446.619 266.373 li
446.619 265.96 li
446.12 265.96 li
446.12 266.46 li
446.12 265.96 li
445.62 265.96 li
445.62 266.373 li
445.62 266.873 li
446.12 266.873 li
478.1 266.877 502.135 256.863 522.123 241.864 cv
552.104 219.364 573.031 185.706 598.394 157.732 cv
611.074 143.744 624.854 131.176 641.407 122.106 cv
657.962 113.037 677.291 107.457 701.12 107.456 cv
701.619 107.456 li
701.62 106.543 li
701.62 106.043 li
701.12 106.043 li
669.139 106.039 645.104 116.053 625.116 131.052 cv
595.134 153.552 574.208 187.21 548.845 215.184 cv
536.165 229.172 522.385 241.74 505.832 250.81 cv
489.277 259.878 469.948 265.459 446.12 265.46 cv
445.62 265.46 li
445.62 265.96 li
446.12 265.96 li
f
446.12 275.545 mo
573.62 275.545 573.62 269.073 701.12 269.073 cv
701.12 269.486 li
573.62 269.486 573.62 275.958 446.12 275.958 cv
446.12 275.545 li
f
446.12 275.545 mo
446.12 276.045 li
573.65 276.044 573.65 269.572 701.12 269.573 cv
701.12 269.073 li
700.62 269.073 li
700.62 269.486 li
701.12 269.486 li
701.12 268.986 li
573.589 268.986 573.589 275.459 446.12 275.458 cv
446.12 275.958 li
446.619 275.958 li
446.619 275.545 li
446.12 275.545 li
446.12 276.045 li
446.12 275.545 li
445.62 275.545 li
445.62 275.958 li
445.62 276.458 li
446.12 276.458 li
573.65 276.457 573.65 269.985 701.12 269.986 cv
701.62 269.986 li
701.62 269.073 li
701.62 268.572 li
701.12 268.572 li
573.589 268.573 573.589 275.046 446.12 275.045 cv
445.62 275.045 li
445.62 275.545 li
446.12 275.545 li
f
446.12 272.543 mo
573.62 272.543 573.62 227.712 701.12 227.712 cv
701.12 228.125 li
573.62 228.125 573.62 272.956 446.12 272.956 cv
446.12 272.543 li
f
446.12 272.543 mo
446.12 273.043 li
509.924 273.047 541.911 261.81 573.785 250.599 cv
605.661 239.394 637.423 228.217 701.12 228.212 cv
701.12 227.712 li
700.62 227.712 li
700.62 228.125 li
701.12 228.125 li
701.12 227.625 li
637.315 227.621 605.328 238.859 573.454 250.069 cv
541.578 261.274 509.815 272.451 446.12 272.456 cv
446.12 272.956 li
446.619 272.956 li
446.619 272.543 li
446.12 272.543 li
446.12 273.043 li
446.12 272.543 li
445.62 272.543 li
445.62 272.956 li
445.62 273.456 li
446.12 273.456 li
509.924 273.461 541.911 262.223 573.785 251.012 cv
605.661 239.808 637.423 228.63 701.12 228.625 cv
701.62 228.625 li
701.62 227.712 li
701.62 227.212 li
701.12 227.212 li
637.315 227.208 605.328 238.446 573.454 249.656 cv
541.578 260.861 509.815 272.038 446.12 272.043 cv
445.62 272.043 li
445.62 272.543 li
446.12 272.543 li
f
446.12 284.166 mo
573.62 284.166 573.62 355.373 701.12 355.373 cv
701.12 355.786 li
573.62 355.786 573.62 284.579 446.12 284.579 cv
446.12 284.166 li
f
446.12 284.166 mo
446.12 284.666 li
509.778 284.675 541.495 302.408 573.376 320.206 cv
605.245 338.011 637.278 355.883 701.12 355.873 cv
701.12 355.373 li
700.62 355.373 li
700.62 355.786 li
701.12 355.786 li
701.12 355.287 li
637.461 355.277 605.744 337.544 573.863 319.746 cv
541.994 301.941 509.961 284.069 446.12 284.079 cv
446.12 284.579 li
446.619 284.579 li
446.619 284.166 li
446.12 284.166 li
446.12 284.666 li
446.12 284.166 li
445.62 284.166 li
445.62 284.579 li
445.62 285.079 li
446.12 285.079 li
509.778 285.088 541.495 302.821 573.376 320.619 cv
605.245 338.424 637.278 356.296 701.12 356.286 cv
701.62 356.286 li
701.62 355.373 li
701.62 354.873 li
701.12 354.873 li
637.461 354.864 605.744 337.131 573.863 319.333 cv
541.994 301.528 509.961 283.656 446.12 283.666 cv
445.62 283.666 li
445.62 284.166 li
446.12 284.166 li
f
181.12 173.647 mo
308.62 173.647 308.62 148.647 436.12 148.647 cv
436.12 151.952 li
308.62 151.952 308.62 176.952 181.12 176.952 cv
181.12 173.647 li
cp
.48127 .12842 .425422 0 cmyk
f
446.12 113.806 mo
573.62 113.806 573.62 88.8055 701.12 88.8055 cv
701.12 92.1106 li
573.62 92.1106 573.62 117.111 446.12 117.111 cv
446.12 113.806 li
cp
f
181.12 229.833 mo
308.62 229.833 308.62 316.189 436.12 316.189 cv
436.12 319.494 li
308.62 319.494 308.62 233.138 181.12 233.138 cv
181.12 229.833 li
cp
f
gsave
446.12 319.27 mo
446.12 316.464 li
476.874 316.464 500.206 308.152 519.702 295.532 cv
520.816 295.892 521.918 296.26 523.007 296.633 cv
507.463 307.307 489.506 315.278 467.195 318.365 cv
460.573 318.954 453.564 319.268 446.12 319.27 cv
clp
446.12 295.532 mo
523.007 295.532 li
523.007 319.27 li
446.12 319.27 li
cp
.0827039 .0118105 .0663462 0 cmyk
f
grestore
446.12 319.769 mo
446.12 319.27 li
453.564 319.268 460.573 318.954 467.195 318.365 cv
460.573 319.282 453.559 319.769 446.12 319.769 cv
f
526.824 293.924 mo
525.804 293.552 524.773 293.186 523.733 292.827 cv
525.917 291.307 528.061 289.729 530.156 288.109 cv
531.312 288.299 532.456 288.493 533.588 288.689 cv
531.384 290.484 529.125 292.237 526.824 293.924 cv
.0827039 .0118105 .0663462 0 cmyk
f
526.066 294.476 mo
525.032 294.104 523.99 293.739 522.933 293.379 cv
523.204 293.193 523.464 293.014 523.733 292.827 cv
524.773 293.186 525.804 293.552 526.824 293.924 cv
526.57 294.11 526.322 294.291 526.066 294.476 cv
.48127 .12842 .425422 0 cmyk
f
524.958 295.27 mo
523.905 294.898 522.841 294.531 521.766 294.171 cv
522.155 293.91 522.547 293.644 522.933 293.379 cv
523.99 293.739 525.032 294.104 526.066 294.476 cv
525.697 294.743 525.33 295.006 524.958 295.27 cv
.449073 .761257 .0835584 .000976577 cmyk
f
539.531 283.637 mo
538.492 283.441 537.444 283.248 536.386 283.057 cv
539.611 280.322 542.742 277.481 545.802 274.561 cv
547.001 274.509 548.184 274.457 549.362 274.404 cv
546.164 277.571 542.897 280.658 539.531 283.637 cv
.0827039 .0118105 .0663462 0 cmyk
f
538.457 284.58 mo
537.403 284.385 536.338 284.192 535.264 284.001 cv
535.638 283.689 536.013 283.373 536.386 283.057 cv
537.444 283.248 538.492 283.441 539.531 283.637 cv
539.174 283.952 538.816 284.267 538.457 284.58 cv
.48127 .12842 .425422 0 cmyk
f
537.672 285.262 mo
536.606 285.066 535.529 284.873 534.442 284.683 cv
534.716 284.457 534.991 284.229 535.264 284.001 cv
536.338 284.192 537.403 284.385 538.457 284.58 cv
538.195 284.809 537.936 285.034 537.672 285.262 cv
f
536.546 286.226 mo
535.462 286.03 534.371 285.837 533.264 285.647 cv
533.662 285.325 534.048 285.008 534.442 284.683 cv
535.529 284.873 536.606 285.066 537.672 285.262 cv
537.298 285.584 536.922 285.906 536.546 286.226 cv
.449073 .761257 .0835584 .000976577 cmyk
f
535.427 287.17 mo
534.326 286.975 533.212 286.781 532.089 286.592 cv
532.48 286.28 532.876 285.962 533.264 285.647 cv
534.371 285.837 535.462 286.03 536.546 286.226 cv
536.174 286.542 535.801 286.857 535.427 287.17 cv
.48127 .12842 .425422 0 cmyk
f
533.588 288.689 mo
532.456 288.493 531.312 288.299 530.156 288.109 cv
530.805 287.607 531.447 287.103 532.089 286.592 cv
533.212 286.781 534.326 286.975 535.427 287.17 cv
534.816 287.681 534.205 288.186 533.588 288.689 cv
f
524.416 295.653 mo
523.354 295.282 522.276 294.915 521.19 294.556 cv
521.38 294.43 521.576 294.299 521.766 294.171 cv
522.841 294.531 523.905 294.898 524.958 295.27 cv
524.777 295.399 524.598 295.526 524.416 295.653 cv
.449073 .761257 .0835584 .000976577 cmyk
f
550.097 270.368 mo
550.336 270.13 550.57 269.895 550.808 269.656 cv
551.052 269.87 551.299 270.087 551.542 270.302 cv
551.059 270.324 550.583 270.346 550.097 270.368 cv
554.188 269.515 mo
553.617 269.001 553.043 268.487 552.468 267.976 cv
555.064 265.33 557.613 262.642 560.14 259.918 cv
558.728 262.551 557.311 265.159 555.88 267.754 cv
555.317 268.344 554.754 268.929 554.188 269.515 cv
.0827039 .0118105 .0663462 0 cmyk
f
549.401 271.06 mo
549.632 270.831 549.866 270.598 550.097 270.368 cv
550.583 270.346 551.059 270.324 551.542 270.302 cv
551.779 270.512 552.014 270.72 552.25 270.931 cv
551.308 270.974 550.355 271.017 549.401 271.06 cv
.449073 .761257 .0835584 .000976577 cmyk
f
553.679 270.04 mo
553.106 269.526 552.528 269.012 551.95 268.503 cv
552.122 268.329 552.297 268.151 552.468 267.976 cv
553.043 268.487 553.617 269.001 554.188 269.515 cv
554.022 269.687 553.846 269.869 553.679 270.04 cv
.782193 .986114 .289006 .181125 cmyk
f
552.25 270.931 mo
552.014 270.72 551.779 270.512 551.542 270.302 cv
551.299 270.087 551.052 269.87 550.808 269.656 cv
551.19 269.272 551.571 268.888 551.95 268.503 cv
552.528 269.012 553.106 269.526 553.679 270.04 cv
553.396 270.332 553.123 270.612 552.838 270.903 cv
552.643 270.912 552.446 270.921 552.25 270.931 cv
.48127 .12842 .425422 0 cmyk
f
547.988 272.45 mo
548.462 271.987 548.93 271.527 549.401 271.06 cv
550.355 271.017 551.308 270.974 552.25 270.931 cv
552.446 270.921 552.643 270.912 552.838 270.903 cv
552.387 271.365 551.925 271.834 551.471 272.293 cv
550.317 272.346 549.161 272.398 547.988 272.45 cv
f
547.341 273.08 mo
547.554 272.873 547.776 272.657 547.988 272.45 cv
549.161 272.398 550.317 272.346 551.471 272.293 cv
551.262 272.504 551.056 272.713 550.846 272.923 cv
549.685 272.976 548.522 273.028 547.341 273.08 cv
f
558.025 265.488 mo
559.187 263.351 560.352 261.182 561.502 259.022 cv
562.037 259.35 562.568 259.677 563.101 260.006 cv
561.42 261.846 559.73 263.675 558.025 265.488 cv
564.27 258.724 mo
563.629 258.327 562.984 257.929 562.34 257.533 cv
563.239 256.552 564.131 255.573 565.025 254.587 cv
565.481 255.186 565.934 255.784 566.388 256.385 cv
565.684 257.165 564.977 257.946 564.27 258.724 cv
.0827039 .0118105 .0663462 0 cmyk
f
563.101 260.006 mo
562.568 259.677 562.037 259.35 561.502 259.022 cv
561.747 258.561 561.985 258.114 562.23 257.653 cv
562.265 257.614 562.304 257.572 562.34 257.533 cv
562.984 257.929 563.629 258.327 564.27 258.724 cv
563.881 259.152 563.491 259.579 563.101 260.006 cv
.48127 .12842 .425422 0 cmyk
f
569.608 252.801 mo
569.542 252.713 569.483 252.635 569.417 252.547 cv
569.619 252.476 569.825 252.404 570.027 252.333 cv
569.891 252.485 569.744 252.649 569.608 252.801 cv
f
568.932 253.555 mo
568.765 253.332 568.6 253.114 568.432 252.891 cv
568.76 252.776 569.089 252.661 569.417 252.547 cv
569.483 252.635 569.542 252.713 569.608 252.801 cv
569.382 253.054 569.159 253.303 568.932 253.555 cv
f
555.88 267.754 mo
557.311 265.159 558.728 262.551 560.14 259.918 cv
560.838 259.166 561.535 258.41 562.23 257.653 cv
561.985 258.114 561.747 258.561 561.502 259.022 cv
560.352 261.182 559.187 263.351 558.025 265.488 cv
557.31 266.249 556.599 266.999 555.88 267.754 cv
.584131 .0692454 .181369 0 cmyk
f
568.256 254.309 mo
567.987 253.952 567.715 253.592 567.446 253.235 cv
567.774 253.121 568.104 253.006 568.432 252.891 cv
568.6 253.114 568.765 253.332 568.932 253.555 cv
568.706 253.808 568.482 254.057 568.256 254.309 cv
.48127 .12842 .425422 0 cmyk
f
567.24 255.44 mo
566.813 254.875 566.388 254.315 565.961 253.752 cv
566.456 253.58 566.951 253.408 567.446 253.235 cv
567.715 253.592 567.987 253.952 568.256 254.309 cv
567.916 254.688 567.58 255.062 567.24 255.44 cv
.782193 .986114 .289006 .181125 cmyk
f
566.388 256.385 mo
565.934 255.784 565.481 255.186 565.025 254.587 cv
565.249 254.34 565.476 254.09 565.699 253.843 cv
565.787 253.812 565.872 253.783 565.961 253.752 cv
566.388 254.315 566.813 254.875 567.24 255.44 cv
566.958 255.752 566.67 256.073 566.388 256.385 cv
.449073 .761257 .0835584 .000976577 cmyk
f
577.245 241.078 mo
577.218 241.069 577.18 241.056 577.153 241.048 cv
577.161 241.039 577.177 241.021 577.184 241.012 cv
577.204 241.033 577.226 241.057 577.245 241.078 cv
.0827039 .0118105 .0663462 0 cmyk
f
575.67 242.707 mo
576.164 242.154 576.658 241.601 577.153 241.048 cv
577.18 241.056 577.218 241.069 577.245 241.078 cv
577.499 241.348 577.751 241.618 578.005 241.888 cv
577.226 242.161 576.446 242.434 575.67 242.707 cv
.48127 .12842 .425422 0 cmyk
f
575.174 243.708 mo
575.073 243.675 574.967 243.64 574.866 243.607 cv
575.135 243.307 575.401 243.008 575.67 242.707 cv
576.446 242.434 577.226 242.161 578.005 241.888 cv
578.2 242.096 578.393 242.303 578.588 242.51 cv
577.448 242.909 576.311 243.308 575.174 243.708 cv
f
576.15 244.026 mo
575.823 243.919 575.501 243.814 575.174 243.708 cv
576.311 243.308 577.448 242.909 578.588 242.51 cv
578.627 242.552 578.659 242.586 578.698 242.628 cv
578.476 242.876 578.26 243.116 578.038 243.364 cv
577.408 243.584 576.779 243.805 576.15 244.026 cv
.449073 .761257 .0835584 .000976577 cmyk
f
574.487 244.61 mo
574.354 244.567 574.22 244.523 574.088 244.48 cv
574.348 244.188 574.605 243.9 574.866 243.607 cv
574.967 243.64 575.073 243.675 575.174 243.708 cv
575.501 243.814 575.823 243.919 576.15 244.026 cv
575.595 244.221 575.041 244.415 574.487 244.61 cv
.782193 .986114 .289006 .181125 cmyk
f
573.736 244.874 mo
573.852 244.744 573.971 244.611 574.088 244.48 cv
574.22 244.523 574.354 244.567 574.487 244.61 cv
574.236 244.699 573.987 244.786 573.736 244.874 cv
.48127 .12842 .425422 0 cmyk
f
571.972 246.851 mo
572.56 246.192 573.148 245.533 573.736 244.874 cv
573.987 244.786 574.236 244.699 574.487 244.61 cv
575.041 244.415 575.595 244.221 576.15 244.026 cv
576.779 243.805 577.408 243.584 578.038 243.364 cv
577.449 244.021 576.858 244.682 576.27 245.34 cv
574.837 245.843 573.405 246.347 571.972 246.851 cv
f
570.539 248.456 mo
571.018 247.92 571.494 247.387 571.972 246.851 cv
573.405 246.347 574.837 245.843 576.27 245.34 cv
575.791 245.876 575.315 246.409 574.837 246.945 cv
573.405 247.449 571.972 247.953 570.539 248.456 cv
f
568.382 250.864 mo
569.1 250.064 569.822 249.258 570.539 248.456 cv
571.972 247.953 573.405 247.449 574.837 246.945 cv
574.121 247.748 573.405 248.551 572.689 249.353 cv
571.257 249.857 569.818 250.362 568.382 250.864 cv
f
581.36 239.67 mo
580.851 239.132 580.345 238.595 579.837 238.055 cv
583.588 233.886 587.368 229.748 591.227 225.7 cv
591.854 226.148 592.483 226.594 593.114 227.039 cv
589.122 231.165 585.222 235.398 581.36 239.67 cv
.0827039 .0118105 .0663462 0 cmyk
f
580.598 240.515 mo
580.089 239.976 579.585 239.44 579.077 238.9 cv
579.331 238.618 579.583 238.338 579.837 238.055 cv
580.345 238.595 580.851 239.132 581.36 239.67 cv
581.106 239.952 580.852 240.233 580.598 240.515 cv
.584131 .0692454 .181369 0 cmyk
f
580.173 240.987 mo
579.666 240.449 579.16 239.911 578.655 239.371 cv
578.795 239.215 578.937 239.057 579.077 238.9 cv
579.585 239.44 580.089 239.976 580.598 240.515 cv
580.457 240.672 580.313 240.831 580.173 240.987 cv
f
579.457 241.783 mo
578.953 241.247 578.444 240.704 577.941 240.168 cv
578.178 239.902 578.417 239.636 578.655 239.371 cv
579.16 239.911 579.666 240.449 580.173 240.987 cv
579.93 241.256 579.699 241.513 579.457 241.783 cv
.48127 .12842 .425422 0 cmyk
f
596.768 223.321 mo
596.118 222.877 595.468 222.428 594.823 221.98 cv
595.231 221.564 595.643 221.146 596.053 220.734 cv
597.139 220.752 598.226 220.771 599.328 220.789 cv
598.467 221.63 597.619 222.469 596.768 223.321 cv
.0827039 .0118105 .0663462 0 cmyk
f
596.116 223.975 mo
595.472 223.533 594.821 223.081 594.183 222.634 cv
594.394 222.418 594.612 222.196 594.823 221.98 cv
595.468 222.428 596.118 222.877 596.768 223.321 cv
596.55 223.539 596.333 223.757 596.116 223.975 cv
.48127 .12842 .425422 0 cmyk
f
602.377 217.861 mo
601.241 217.842 600.117 217.824 599 217.805 cv
603.286 213.607 607.704 209.555 612.317 205.724 cv
613.254 206.058 614.203 206.39 615.157 206.717 cv
610.726 210.247 606.491 213.975 602.377 217.861 cv
.0827039 .0118105 .0663462 0 cmyk
f
601.007 219.165 mo
599.887 219.146 598.779 219.128 597.677 219.109 cv
598.119 218.67 598.556 218.24 599 217.805 cv
600.117 217.824 601.241 217.842 602.377 217.861 cv
601.921 218.291 601.46 218.73 601.007 219.165 cv
.48127 .12842 .425422 0 cmyk
f
599.328 220.789 mo
598.226 220.771 597.139 220.752 596.053 220.734 cv
596.594 220.188 597.133 219.65 597.677 219.109 cv
598.779 219.128 599.887 219.146 601.007 219.165 cv
600.445 219.703 599.885 220.245 599.328 220.789 cv
f
595.501 224.596 mo
594.859 224.151 594.218 223.702 593.581 223.253 cv
593.784 223.044 593.979 222.843 594.183 222.634 cv
594.821 223.081 595.472 223.533 596.116 223.975 cv
595.911 224.182 595.706 224.389 595.501 224.596 cv
.584131 .0692454 .181369 0 cmyk
f
594.663 225.448 mo
594.023 225.003 593.388 224.557 592.754 224.107 cv
593.029 223.822 593.305 223.537 593.581 223.253 cv
594.218 223.702 594.859 224.151 595.501 224.596 cv
595.224 224.877 594.94 225.166 594.663 225.448 cv
.48127 .12842 .425422 0 cmyk
f
633.176 194.32 mo
631.885 193.996 630.607 193.664 629.348 193.324 cv
648.421 181.39 671.19 173.59 700.87 173.545 cv
700.87 176.85 li
673.148 176.892 651.458 183.697 633.176 194.32 cv
.0827039 .0118105 .0663462 0 cmyk
f
631.226 195.475 mo
629.977 195.15 628.752 194.819 627.534 194.479 cv
628.135 194.09 628.739 193.706 629.348 193.324 cv
630.607 193.664 631.885 193.996 633.176 194.32 cv
632.525 194.698 631.869 195.087 631.226 195.475 cv
.48127 .12842 .425422 0 cmyk
f
627.533 197.784 mo
626.369 197.459 625.213 197.126 624.076 196.789 cv
625.213 196.005 626.369 195.233 627.534 194.479 cv
628.752 194.819 629.977 195.15 631.226 195.475 cv
629.977 196.229 628.752 196.995 627.533 197.784 cv
f
624.076 200.094 mo
622.976 199.768 621.891 199.436 620.815 199.098 cv
621.891 198.315 622.977 197.546 624.076 196.789 cv
625.213 197.126 626.369 197.459 627.533 197.784 cv
626.369 198.538 625.213 199.31 624.076 200.094 cv
f
622.969 200.864 mo
621.887 200.536 620.826 200.206 619.767 199.868 cv
620.119 199.608 620.461 199.356 620.815 199.098 cv
621.891 199.436 622.976 199.768 624.076 200.094 cv
623.704 200.349 623.337 200.605 622.969 200.864 cv
f
621.346 202.018 mo
620.295 201.691 619.258 201.36 618.228 201.023 cv
618.738 200.635 619.252 200.25 619.767 199.868 cv
620.826 200.206 621.887 200.536 622.969 200.864 cv
622.423 201.247 621.886 201.629 621.346 202.018 cv
.584131 .0692454 .181369 0 cmyk
f
620.263 202.807 mo
619.232 202.48 618.211 202.147 617.2 201.81 cv
617.541 201.547 617.885 201.284 618.228 201.023 cv
619.258 201.36 620.295 201.691 621.346 202.018 cv
620.987 202.278 620.62 202.545 620.263 202.807 cv
.48127 .12842 .425422 0 cmyk
f
618.993 203.751 mo
617.981 203.423 616.98 203.092 615.987 202.755 cv
616.39 202.439 616.794 202.123 617.2 201.81 cv
618.211 202.147 619.232 202.48 620.263 202.807 cv
619.835 203.122 619.417 203.432 618.993 203.751 cv
f
617.472 204.905 mo
616.484 204.578 615.505 204.246 614.535 203.91 cv
615.016 203.524 615.503 203.136 615.987 202.755 cv
616.98 203.092 617.981 203.423 618.993 203.751 cv
618.484 204.132 617.975 204.519 617.472 204.905 cv
f
568.539 251.38 mo
568.445 251.256 568.35 251.129 568.256 251.004 cv
568.299 250.957 568.339 250.912 568.382 250.864 cv
569.818 250.362 571.257 249.857 572.689 249.353 cv
572.443 249.628 572.191 249.911 571.945 250.186 cv
570.811 250.585 569.676 250.983 568.539 251.38 cv
.449073 .761257 .0835584 .000976577 cmyk
f
578.698 242.628 mo
578.659 242.586 578.627 242.552 578.588 242.51 cv
578.393 242.303 578.2 242.096 578.005 241.888 cv
577.751 241.618 577.499 241.348 577.245 241.078 cv
577.226 241.057 577.204 241.033 577.184 241.012 cv
577.438 240.729 577.687 240.451 577.941 240.168 cv
578.444 240.704 578.953 241.247 579.457 241.783 cv
579.207 242.061 578.948 242.349 578.698 242.628 cv
.48127 .12842 .425422 0 cmyk
f
594.058 226.067 mo
593.423 225.621 592.791 225.174 592.16 224.724 cv
592.358 224.518 592.556 224.313 592.754 224.107 cv
593.388 224.557 594.023 225.003 594.663 225.448 cv
594.459 225.656 594.261 225.859 594.058 226.067 cv
f
567.634 251.697 mo
567.841 251.466 568.049 251.235 568.256 251.004 cv
568.35 251.129 568.445 251.256 568.539 251.38 cv
568.237 251.486 567.937 251.591 567.634 251.697 cv
f
616.457 205.692 mo
615.483 205.363 614.523 205.032 613.567 204.695 cv
613.891 204.43 614.209 204.172 614.535 203.91 cv
615.505 204.246 616.484 204.578 617.472 204.905 cv
617.13 205.168 616.796 205.427 616.457 205.692 cv
.584131 .0692454 .181369 0 cmyk
f
593.114 227.039 mo
592.483 226.594 591.854 226.148 591.227 225.7 cv
591.536 225.375 591.849 225.048 592.16 224.724 cv
592.791 225.174 593.423 225.621 594.058 226.067 cv
593.745 226.388 593.426 226.717 593.114 227.039 cv
.449073 .761257 .0835584 .000976577 cmyk
f
615.157 206.717 mo
614.203 206.39 613.254 206.058 612.317 205.724 cv
612.728 205.382 613.152 205.033 613.567 204.695 cv
614.523 205.032 615.483 205.363 616.457 205.692 cv
616.026 206.029 615.585 206.377 615.157 206.717 cv
f
545.802 274.561 mo
546.319 274.067 546.828 273.577 547.341 273.08 cv
548.522 273.028 549.685 272.976 550.846 272.923 cv
550.354 273.418 549.857 273.913 549.362 274.404 cv
548.184 274.457 547.001 274.509 545.802 274.561 cv
f
565.699 253.843 mo
566.345 253.128 566.989 252.414 567.634 251.697 cv
567.937 251.591 568.237 251.486 568.539 251.38 cv
569.676 250.983 570.811 250.585 571.945 250.186 cv
571.303 250.905 570.67 251.614 570.027 252.333 cv
569.825 252.404 569.619 252.476 569.417 252.547 cv
569.089 252.661 568.76 252.776 568.432 252.891 cv
568.432 252.891 li
568.104 253.006 567.774 253.121 567.446 253.235 cv
567.446 253.235 li
566.951 253.408 566.456 253.58 565.961 253.752 cv
565.872 253.783 565.787 253.812 565.699 253.843 cv
f
523.007 296.633 mo
521.918 296.26 520.816 295.892 519.702 295.532 cv
520.201 295.21 520.696 294.884 521.19 294.556 cv
522.276 294.915 523.354 295.282 524.416 295.653 cv
523.948 295.983 523.48 296.309 523.007 296.633 cv
f
181.12 176.952 mo
308.62 176.952 308.62 151.952 436.12 151.952 cv
436.12 155.257 li
308.62 155.257 308.62 180.257 181.12 180.257 cv
181.12 176.952 li
cp
.48127 .12842 .425422 0 cmyk
f
700.87 160.325 mo
666.496 160.317 641.389 158.848 620.558 156.708 cv
621.373 155.678 622.197 154.656 623.025 153.651 cv
643.37 155.656 667.84 157.012 700.87 157.019 cv
700.87 160.325 li
619.361 156.584 mo
616.524 156.287 613.77 155.978 611.077 155.658 cv
611.918 154.645 612.765 153.641 613.619 152.649 cv
616.272 152.953 618.982 153.246 621.779 153.527 cv
620.967 154.533 620.16 155.554 619.361 156.584 cv
609.28 155.442 mo
606.603 155.116 603.992 154.78 601.428 154.437 cv
602.352 153.45 603.282 152.47 604.219 151.5 cv
606.689 151.82 609.202 152.133 611.782 152.436 cv
610.941 153.429 610.108 154.43 609.28 155.442 cv
.0827039 .0118105 .0663462 0 cmyk
f
611.077 155.658 mo
610.474 155.586 609.877 155.514 609.28 155.442 cv
610.108 154.43 610.941 153.429 611.782 152.436 cv
612.388 152.507 613.006 152.579 613.619 152.649 cv
612.765 153.641 611.918 154.645 611.077 155.658 cv
.48127 .12842 .425422 0 cmyk
f
590.425 152.879 mo
584.693 152.029 579.131 151.153 573.567 150.277 cv
574.625 149.34 575.678 148.407 576.737 147.471 cv
582.062 148.308 587.412 149.139 592.943 149.944 cv
592.097 150.92 591.263 151.893 590.425 152.879 cv
.0827039 .0118105 .0663462 0 cmyk
f
591.093 152.978 mo
590.867 152.945 590.65 152.912 590.425 152.879 cv
591.263 151.893 592.097 150.92 592.943 149.944 cv
593.169 149.977 593.403 150.01 593.63 150.043 cv
592.78 151.016 591.934 151.995 591.093 152.978 cv
.48127 .12842 .425422 0 cmyk
f
591.722 153.07 mo
591.513 153.04 591.301 153.009 591.093 152.978 cv
591.934 151.995 592.78 151.016 593.63 150.043 cv
593.845 150.074 594.057 150.105 594.273 150.136 cv
593.419 151.108 592.567 152.088 591.722 153.07 cv
f
592.816 153.23 mo
592.452 153.177 592.085 153.124 591.722 153.07 cv
592.567 152.088 593.419 151.108 594.273 150.136 cv
594.643 150.189 595.011 150.242 595.382 150.295 cv
594.52 151.27 593.669 152.244 592.816 153.23 cv
.449073 .761257 .0835584 .000976577 cmyk
f
594.092 153.415 mo
593.665 153.354 593.24 153.292 592.816 153.23 cv
593.669 152.244 594.52 151.27 595.382 150.295 cv
595.816 150.357 596.252 150.418 596.688 150.48 cv
595.817 151.453 594.954 152.43 594.092 153.415 cv
.48127 .12842 .425422 0 cmyk
f
596.092 153.701 mo
595.42 153.606 594.759 153.511 594.092 153.415 cv
594.954 152.43 595.817 151.453 596.688 150.48 cv
597.37 150.576 598.057 150.672 598.746 150.767 cv
597.854 151.739 596.972 152.715 596.092 153.701 cv
f
571.982 150.028 mo
540.643 145.095 508.78 140.246 446.12 140.246 cv
446.12 140.246 li
446.12 136.941 li
510.889 136.941 542.758 142.123 575.151 147.221 cv
574.096 148.155 573.037 149.094 571.982 150.028 cv
.0827039 .0118105 .0663462 0 cmyk
f
597.347 153.877 mo
596.93 153.819 596.506 153.759 596.092 153.701 cv
596.972 152.715 597.854 151.739 598.746 150.767 cv
599.173 150.826 599.595 150.883 600.025 150.942 cv
599.124 151.916 598.237 152.889 597.347 153.877 cv
.48127 .12842 .425422 0 cmyk
f
573.567 150.277 mo
573.042 150.194 572.508 150.11 571.982 150.028 cv
573.037 149.094 574.096 148.155 575.151 147.221 cv
575.68 147.305 576.207 147.388 576.737 147.471 cv
575.678 148.407 574.625 149.34 573.567 150.277 cv
f
598.232 154 mo
597.934 153.959 597.643 153.919 597.347 153.877 cv
598.237 152.889 599.124 151.916 600.025 150.942 cv
600.326 150.983 600.633 151.024 600.935 151.065 cv
600.029 152.034 599.125 153.016 598.232 154 cv
f
599.574 154.185 mo
599.124 154.124 598.678 154.062 598.232 154 cv
599.125 153.016 600.029 152.034 600.935 151.065 cv
601.396 151.127 601.852 151.188 602.316 151.25 cv
601.396 152.22 600.482 153.199 599.574 154.185 cv
f
599.873 154.226 mo
599.777 154.213 599.669 154.198 599.574 154.185 cv
600.482 153.199 601.396 152.22 602.316 151.25 cv
602.422 151.264 602.529 151.278 602.635 151.292 cv
601.708 152.261 600.787 153.241 599.873 154.226 cv
.449073 .761257 .0835584 .000976577 cmyk
f
620.558 156.708 mo
620.157 156.667 619.758 156.626 619.361 156.584 cv
620.16 155.554 620.967 154.533 621.779 153.527 cv
622.192 153.569 622.609 153.61 623.025 153.651 cv
622.197 154.656 621.373 155.678 620.558 156.708 cv
.584131 .0692454 .181369 0 cmyk
f
601.428 154.437 mo
600.907 154.367 600.39 154.297 599.873 154.226 cv
600.787 153.241 601.708 152.261 602.635 151.292 cv
603.16 151.362 603.69 151.431 604.219 151.5 cv
603.282 152.47 602.352 153.45 601.428 154.437 cv
.449073 .761257 .0835584 .000976577 cmyk
f
181.12 319.494 mo
308.62 319.494 308.62 329.409 436.12 329.409 cv
436.12 332.714 li
308.62 332.714 308.62 322.799 181.12 322.799 cv
181.12 319.494 li
cp
.60058 .0573434 .119661 0 cmyk
f
446.12 324.176 mo
573.62 324.176 573.62 271.964 701.12 271.964 cv
701.12 273.066 li
573.62 273.066 573.62 325.278 446.12 325.278 cv
446.12 324.176 li
cp
f
446.12 331.613 mo
573.62 331.613 573.62 358.265 701.12 358.265 cv
701.12 359.367 li
573.62 359.367 573.62 332.714 446.12 332.714 cv
446.12 331.613 li
cp
f
446.12 326.931 mo
573.62 326.931 573.62 311.948 701.12 311.948 cv
701.12 313.049 li
573.62 313.049 573.62 328.032 446.12 328.032 cv
446.12 326.931 li
cp
f
181.12 233.138 mo
308.62 233.138 308.62 319.494 436.12 319.494 cv
436.12 322.799 li
308.62 322.799 308.62 236.443 181.12 236.443 cv
181.12 233.138 li
cp
.48127 .12842 .425422 0 cmyk
f
446.12 310.405 mo
573.62 310.405 573.62 107.782 701.12 107.782 cv
701.12 108.884 li
573.62 108.884 573.62 311.507 446.12 311.507 cv
446.12 310.405 li
cp
f
446.12 320.596 mo
573.62 320.596 573.62 228.952 701.12 228.952 cv
701.12 230.053 li
573.62 230.053 573.62 321.698 446.12 321.698 cv
446.12 320.596 li
cp
f
446.12 328.032 mo
573.62 328.032 573.62 313.049 701.12 313.049 cv
701.12 314.151 li
573.62 314.151 573.62 329.134 446.12 329.134 cv
446.12 328.032 li
cp
f
181.12 236.443 mo
308.62 236.443 308.62 322.799 436.12 322.799 cv
436.12 326.104 li
308.62 326.104 308.62 239.748 181.12 239.748 cv
181.12 236.443 li
cp
f
446.12 311.507 mo
573.62 311.507 573.62 108.884 701.12 108.884 cv
701.12 110.536 li
573.62 110.536 573.62 313.159 446.12 313.159 cv
446.12 311.507 li
cp
f
446.12 325.278 mo
573.62 325.278 573.62 273.066 701.12 273.066 cv
701.12 274.719 li
573.62 274.719 573.62 326.931 446.12 326.931 cv
446.12 325.278 li
cp
f
436.12 357.715 mo
446.12 357.715 li
446.12 361.02 li
436.12 361.02 li
436.12 357.715 li
cp
.694331 .632349 .621027 .583551 cmyk
f
436.12 357.715 mo
436.12 357.965 li
445.87 357.965 li
445.87 360.77 li
436.37 360.77 li
436.37 357.715 li
436.12 357.715 li
436.12 357.965 li
436.12 357.715 li
435.87 357.715 li
435.87 361.27 li
446.37 361.27 li
446.37 357.465 li
435.87 357.465 li
435.87 357.715 li
436.12 357.715 li
cp
.669856 .599298 .586175 .435218 cmyk
f
.694331 .632349 .621027 .583551 cmyk
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.12 dict dup begin/FontType 1 def/FontName /ArialMT def/FontInfo 5 dict dup begin/ItalicAngle 0 def/FSType 8 defend def/PaintType 0 def/FontMatrix [0.001 0 0 0.001 0 0] def/Encoding 256 array0 1 255 {1 index exch /.notdef put} fordup 83 /S putdup 97 /a putdup 105 /i putdup 108 /l putdup 109 /m putdup 114 /r putdup 116 /t putdup 121 /y putdef/FontBBox {-665 -325 2000 1006} defendsystemdict begindup /Private7 dict dup begin/|- {def} def/| {put} def/BlueValues [0 0] def/password 5839 def/MinFeature {16 16} def/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def/Subrs 5 arraydup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |dup 1 <1C60D8A8C9C3D06D9E> |dup 2 <1C60D8A8C9C202D79A> |dup 3 <1C60D8A849> |dup 4 <1C60D8A8CC3674F41144B13B77> |defputdup /CharStrings9 dict dup begin/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7C8A936AA182F5809A9> |-/S <1C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E558E3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051BE47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE626CDC6D4C322BB391537921D673F5AEE3EC19E36E7EFEC0F06A0EA4EAAB6BBA94DDCD11A6A564B13B510F8C915848233B82F046D854DCD4F1639F149305DC73D3C68DF8AEB47A96A30E55CF8BAD07FA2825BCE0D675F1CC2EBE61B07B772130E23119250F1EBF8FE12A2098D9F09F3F21BDC41666CA4A0BB70D5F0A750B44BB93A5FBFDD2BF8DE450B277265536F77D5BD6F44FB72FF2E708C60107653AE44BFFB26AFF8> |-/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7DC8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD710F7ADB95B4F576668A6DB104942C88ED8D01E4E58188F5E32A24B5B964D5CEC10C08F76C0F472E84A0FB6EB5E37AAEE233DE54C212B0A012D3E20F864B2D53463E221F81B784B6F7BE81FBFCAE6785C2430454DD81C436E0A516BF8C8307B2879FF86378629C5EA7E586D83C83550D2E732930F7FE3BAD07B86C81E024D177B5D88A> |-/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B171C8A80AB> |-/l <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-/m <1C60D8A8C9B6B41CBB5F87BE20C872DF59FABCB36542419CBFA3D5519AD5BA8076F32ECFD724B055F72CAC37BC47239ACC8B0FB48B8ACFF099B97085BD99C333951D0338D27FF6AB9B3F3C69320476BA0CD4F9573B79AD358A91B0176AFB9AEF169308783E9C6287F18E6E658AF5AA6C9688B500806DA169A1B21069D55C54A2FF607A6A38976171B08665C3ACCAA84DFB970D01180645CE5CBC48DFE37B> |-/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE112857894FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619ADD420F549AB7C795751D32E8EE6> |-/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D065152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CFAD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F5C42C88FB43C> |-/y <1C60D8A8C9B7A73DB92EFAEC912AA9CB61EA2C87B96577B4D13A11140AAA18C6E226D96ACA3DE3B427B0A298EF106E8BC0FCA1DC8D81AF2F08A42A0F5836B6230FDF576E37CE129EFF9730F23EC10CF5ACA4D4CA70309E71B89A944CA7348AEBF55FF5ADA9F61B4BA14C9A2301A8C53EBFBE665E1DC22E> |-end putenddup /FontName get exch definefont popend%ADOEndSubsetFont
/SEJDTZ+ArialMT /ArialMT findfont ct_VMDictPut/SEJDTZ+ArialMT*1 [83{/.notdef}rp /S 13{/.notdef}rp /a 7{/.notdef}rp /i 2{/.notdef}rp /l /m 4{/.notdef}rp /r /.notdef /t 4{/.notdef}rp /y 134{/.notdef}rp]SEJDTZ+ArialMT nfSEJDTZ+ArialMT*1 [10 0 0 -10 0 0 ]msf437.37 352.917 mo(Similarity)sh436.12 66.0195 mo
446.12 66.0195 li
446.12 180.045 li
436.12 180.045 li
436.12 66.0195 li
cp
f
436.12 66.0195 mo
436.12 66.2695 li
445.87 66.2695 li
445.87 179.795 li
436.37 179.795 li
436.37 66.0195 li
436.12 66.0195 li
436.12 66.2695 li
436.12 66.0195 li
435.87 66.0195 li
435.87 180.295 li
446.37 180.295 li
446.37 65.7695 li
435.87 65.7695 li
435.87 66.0195 li
436.12 66.0195 li
cp
.669856 .599298 .586175 .435218 cmyk
f
.694331 .632349 .621027 .583551 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDTZ+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/space <1C60D8A8C9B854D00D> |-/parenleft <1C60D8A8C9B81F2C3A069EC278D0AA8AE7E32C29FB8AFD2B6368260D302C905A973F0B3449ED9E18E81E16B7B273530E9BC14ED76D4376A01C0A577DC235F833AFCC30669C812FBF097879E1> |-/parenright <1C60D8A8C9B81F2C3A30D3A3F0A8D738E712823A2480470C32A2885DCE4A77E926C520C7B7E1016BB28443D8E7B8AC0F7C4F3BD721C19F19D4714AF52ABD0227B6CDD854C568D5A6F3817645C5> |-/A <1C60D8A8C9B64EDFED26B9E21A4F64848088903AC9891CF791BDBC4AB29ACC8B3E8D13924A7DDE35F09AC5F4A8229C87124C732743268600EF8D4582208BD16D82> |-/C <1C60D8A8C9B6079F6D1C46AC2732DFBDC9143C94793529C1940296210AAD6EE09C39CFC4DAB7C5F3BA33C9E10838E0BC6FC9318A4E57F309EE20438B434C69AE73A499211EBA75E22A57C1581D93869428818DC700A28C027571D7047CDFA8B017AACDE96DE4B2579EFD2C826A30F6EBDDC52701A22CDD669ADC60B66F32261A1F55EDEF9802FD4511E0EF130772EDFD708A4113A1EDB1E717E0FA7D314851DE59> |-/G <1C60D8A8C9B6FF86FBC793890B55178BE49EEC5102DE4765B31919F6E98C7D78C667A3BB4B4E624B689DA4C385DFD1B29DE65FB8AA7AB2EF69B5E095C4AF9914BE00567D04850B7313AA11B0D0EAADB46E151A37395ABF4FDE5690DD208A8203F33BC5AE42ABB3FA5CE6CC7C2FF1141A09489DA9290F5991FC3FADB6E8008CAB5CAA6CE68D612C9A2AD14F1DB3B2ED2760EC1A22B5BECD6F37DA404DC4340669554C25AFCF53AD025C5AA750C1F3F80E3A98BEF6E511E50C5B0BE2D927EF> |-/L <1C60D8A8C9B7EF3224EC6E192BD0FEC2445DA87B99CF0E03A72A> |-/M <1C60D8A8C9B6B41CBB4B6664BFFC865F56E6FEAFA79E7B90883C1C68AFB379AC174B0F8DCC9294E2C26BD06BBA9FD3867F8768651EF4BA798B4F538FCE8F80AF5A83421F8F> |-/N <1C60D8A8C9B6079F629170873C67115641D0B6890161EC48F71E8D2106F3AC927984C1E464F121F968> |-/O <1C60D8A8C9B6FF86E621E1FAD9CC02A23AF5AAF7451327A9277DAE8170AAC8E603A02E3EEFF561DDADE9FD6F6F16B77EE709DD797791A73F1C532C58482F9C51E1EAE7EA6E4D820E6AA1026E7BE345B1C97C5D9EBBEF4840C4188F96B5380E7625249BBAD172254404F6F1CB17CABA1F131B17AAAB56C5D3B94E3AC2C2E9F0A0D079C435D0249DF6C47E18FCF00E7FFE3C519BB35DF797EF47286BDCA762289BE1> |-/T <1C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A595D3927> |-/c <1C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDCE9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F7BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148C344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D36548FE63FC8465B1B685766E782F0> |-/d <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D9621458876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6DD52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB612941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF13CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-/e <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C37295284C077711C162623860AACA404F650F8D516970257> |-/f <1C60D8A8C9B854D0F47057B2F13303E258FCAEE9E8BBA6E28AE872907C5663BFD2A0F535ED0EB011F2C2A875E053FAF73E8AA16B1F99510A6812F90D61CF3F1DA5EF558899A9AE12AAF6AF4568E0F6003B0A2FF6F33293> |-/g <1C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817A065D42CB79E2F25620DE08D5E215259551032CAAB8B674940F5B4BAAF40766D559B26E9A0C2464D0F504C4718579670D62707FEBC08A2CD71BF2528BA3A24A0C247BA70F9E817A1709BB6F7008D6C121249525DEE3A93F6DA16170F68BD3667DC9FF533284D078DAE144C0DB42F376056761CFA5A80B4ED7D37E57EA658F3FBD88F779C828BF992A89F02F1397EF90BADA44FB7F676FF0295FF6F9748D66EBF575C72F67F4BEBB98F8AFA57505EC9> |-/h <1C60D8A8C9B7EF322B3BE19FB964E037672C8A279BC86F7B9BF0C8203E131450D56E388301CEAE43162551FBE05CABF94DC3B5DDFBB4DA55D11470EBD41AC970CEE2D2EFA88D51157B4EF5536CB673423CDDB06FA774D27105AD2B1AC2DFA8> |-/n <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDADE9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A5203A8015DD09B7CE> |-/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A987875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F518C54BB58C51D6FB6D0C8> |-/p <1C60D8A8C9B7EF322B3B0CFC8FED720BC90E20B208D27DC4B8F11F10B96470F8B4F5FABEC7F7010781F5077B417FE44279776F2304ACD6E0EA12F436330DC4B79C907B9D28468D10FF9256A7D2CA504E4498D719ACD86FCA89B33C61F556CF1168C3F262A781155D5EBF0C47D71C584AB93037B47B18D39FE408A49672C1E63F9E8368D19E113FC95C59A9FA4650E46F6399F2FF256844E27568BA34B9> |-/s <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD96538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB3287CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B8435558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F4172D53C8FCAF4D28F2B78D3A4BF03> |-/u <1C60D8A8C9B7EF32240889FE90FF09F794E92023A18223CCBE3629AB7F517D090BF7D55C0A5A8EADD9BE381137FE8504E8B2DB3D16839889E327241ACA8F992A2BB9AD2BCE57ADB306CE2789439E67A64C32BE8669C197F5851EE38793990906DA8D7F8ACFF6D70790F06B02> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDTZ+ArialMT /Encoding getdup 32 /space putdup 40 /parenleft putdup 41 /parenright putdup 65 /A putdup 67 /C putdup 71 /G putdup 76 /L putdup 77 /M putdup 78 /N putdup 79 /O putdup 84 /T putdup 99 /c putdup 100 /d putdup 101 /e putdup 102 /f putdup 103 /g putdup 104 /h putdup 110 /n putdup 111 /o putdup 112 /p putdup 115 /s putdup 117 /u putpop%ADOEndSubsetFont
/SEJDTZ+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 23{/.notdef}rp /A /.notdef /C 3{/.notdef}rp /G 4{/.notdef}rp /L /M /N /O 3{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]SEJDTZ+ArialMT nfSEJDTZ+ArialMT*1 [10 0 0 -10 0 0 ]msf437.37 61.9688 mo(Classification)sh146.37 20.582 mo(Type of Learning)[5.55664 5 5.56152 5.56152 2.77832 5.56152 2.77832 2.77832 5.56152 5.56152 5.56152 3.33008 5.56152 2.22168 5.56152 0 ]xsh395.702 8.58203 mo(Technical Application)[5 5.56152 5 5.56152 5.56152 2.22168 5 5.56152 2.22168 2.22656 6.66992 5.56152 5.56152 2.22168 2.22168 5 5.56152 2.77832 2.22168 5.56152 0 ]xsh408.773 20.582 mo(\(Model Output\))sh673.37 20.582 mo(NeSy Goals)sh436.12 309.579 mo
446.12 309.579 li
446.12 332.714 li
436.12 332.714 li
436.12 309.579 li
cp
f
436.12 309.579 mo
436.12 309.828 li
445.87 309.828 li
445.87 332.464 li
436.37 332.464 li
436.37 309.579 li
436.12 309.579 li
436.12 309.828 li
436.12 309.579 li
435.87 309.579 li
435.87 332.964 li
446.37 332.964 li
446.37 309.329 li
435.87 309.329 li
435.87 309.579 li
436.12 309.579 li
cp
.669856 .599298 .586175 .435218 cmyk
f
.694331 .632349 .621027 .583551 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDTZ+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/v <1C60D8A8C9B7A73DB99D94C9412F55B03E92C174A4755E69F97C27D9162B37724F74F272B140D258652D102C2EAC46833C73F9> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDTZ+ArialMT /Encoding getdup 118 /v putpop%ADOEndSubsetFont
/SEJDTZ+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 23{/.notdef}rp /A /.notdef /C 3{/.notdef}rp /G 4{/.notdef}rp /L /M /N /O 3{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]SEJDTZ+ArialMT nfSEJDTZ+ArialMT*1 [10 0 0 -10 0 0 ]msf437.37 305.696 mo(Generative)sh436.12 253.181 mo
446.12 253.181 li
446.12 284.579 li
436.12 284.579 li
436.12 253.181 li
cp
f
436.12 253.181 mo
436.12 253.431 li
445.87 253.431 li
445.87 284.329 li
436.37 284.329 li
436.37 253.181 li
436.12 253.181 li
436.12 253.431 li
436.12 253.181 li
435.87 253.181 li
435.87 284.829 li
446.37 284.829 li
446.37 252.931 li
435.87 252.931 li
435.87 253.181 li
436.12 253.181 li
cp
.669856 .599298 .586175 .435218 cmyk
f
.694331 .632349 .621027 .583551 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDTZ+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/I <1C60D8A8C9B854D0F463D3892D665712D6B7D6A81E> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDTZ+ArialMT /Encoding getdup 73 /I putpop%ADOEndSubsetFont
/SEJDTZ+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 23{/.notdef}rp /A /.notdef /C 3{/.notdef}rp /G /.notdef /I 2{/.notdef}rp /L /M /N /O 3{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]SEJDTZ+ArialMT nfSEJDTZ+ArialMT*1 [10 0 0 -10 0 0 ]msf437.37 248.43 mo(Inference)sh436.12 205.045 mo
446.12 205.045 li
446.12 228.18 li
436.12 228.18 li
436.12 205.045 li
cp
f
436.12 205.045 mo
436.12 205.295 li
445.87 205.295 li
445.87 227.93 li
436.37 227.93 li
436.37 205.045 li
436.12 205.045 li
436.12 205.295 li
436.12 205.045 li
435.87 205.045 li
435.87 228.43 li
446.37 228.43 li
446.37 204.795 li
435.87 204.795 li
435.87 205.045 li
436.12 205.045 li
cp
.669856 .599298 .586175 .435218 cmyk
f
.694331 .632349 .621027 .583551 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDTZ+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/E <1C60D8A8C9B64EDFFB83C6241DB110BEE5AB2FAD9D94B39ED5E81E7411B66E9361DDE78FC667AB91EF9824> |-/x <1C60D8A8C9B7A73DB920A1A3B81DE7234ACAA5546B4C65820CF3C50E1629C5A6423BAA34A2ECA8C7FE4B71726AC6704CC23AF1725AFB30D2892FC1BDDAFEAD7BE7BD65F1051699CCF4B0> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDTZ+ArialMT /Encoding getdup 69 /E putdup 120 /x putpop%ADOEndSubsetFont
/SEJDTZ+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 23{/.notdef}rp /A /.notdef /C /.notdef /E /.notdef /G /.notdef /I 2{/.notdef}rp /L /M /N /O 3{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /.notdef /x /y 134{/.notdef}rp]SEJDTZ+ArialMT nfSEJDTZ+ArialMT*1 [10 0 0 -10 0 0 ]msf437.37 192.162 mo(Information )sh437.37 202.162 mo(Extraction)sh171.12 264.749 mo
181.12 264.749 li
181.12 281.274 li
171.12 281.274 li
171.12 264.749 li
cp
f
171.12 264.749 mo
171.12 264.999 li
180.87 264.999 li
180.87 281.024 li
171.37 281.024 li
171.37 264.749 li
171.12 264.749 li
171.12 264.999 li
171.12 264.749 li
170.87 264.749 li
170.87 281.524 li
181.37 281.524 li
181.37 264.499 li
170.87 264.499 li
170.87 264.749 li
171.12 264.749 li
cp
.669856 .599298 .586175 .435218 cmyk
f
.694331 .632349 .621027 .583551 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDTZ+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/hyphen <1C60D8A8C9B81F2C3A78A5675B101A923F2D2A8AB56C> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDTZ+ArialMT /Encoding getdup 45 /hyphen putpop%ADOEndSubsetFont
/SEJDTZ+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 19{/.notdef}rp /A /.notdef /C /.notdef /E /.notdef /G /.notdef /I 2{/.notdef}rp /L /M /N /O 3{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /.notdef /x /y 134{/.notdef}rp]SEJDTZ+ArialMT nfSEJDTZ+ArialMT*1 [10 0 0 -10 0 0 ]msf87.897 277.562 mo(Semi-supervised)sh171.12 306.274 mo
181.12 306.274 li
181.12 326.104 li
171.12 326.104 li
171.12 306.274 li
cp
f
171.12 306.274 mo
171.12 306.523 li
180.87 306.523 li
180.87 325.854 li
171.37 325.854 li
171.37 306.274 li
171.12 306.274 li
171.12 306.523 li
171.12 306.274 li
170.87 306.274 li
170.87 326.354 li
181.37 326.354 li
181.37 306.024 li
170.87 306.024 li
170.87 306.274 li
171.12 306.274 li
cp
.669856 .599298 .586175 .435218 cmyk
f
.694331 .632349 .621027 .583551 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDTZ+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/U <1C60D8A8C9B6079F6D3F1E4545C3E1CC9D8EF54571065F01BE5A50957BD2D8AD04D30C23B37CA98B969ECB5CA0D9A7C563636CB33377BB3DEB53D45DD0F3E333CD69EA3B53D63C91B303CFDF29F59C20776D4DC576C9C080B76AB60A21673EFC1F645BF33D33929C60> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDTZ+ArialMT /Encoding getdup 85 /U putpop%ADOEndSubsetFont
/SEJDTZ+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 19{/.notdef}rp /A /.notdef /C /.notdef /E /.notdef /G /.notdef /I 2{/.notdef}rp /L /M /N /O 3{/.notdef}rp /S /T /U 11{/.notdef}rp /a /.notdef /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /.notdef /x /y 134{/.notdef}rp]SEJDTZ+ArialMT nfSEJDTZ+ArialMT*1 [10 0 0 -10 0 0 ]msf101.227 320.738 mo(Unsupervised)sh171.12 91.0195 mo
181.12 91.0195 li
181.12 239.748 li
171.12 239.748 li
171.12 91.0195 li
cp
f
171.12 91.0195 mo
171.12 91.2695 li
180.87 91.2695 li
180.87 239.498 li
171.37 239.498 li
171.37 91.0195 li
171.12 91.0195 li
171.12 91.2695 li
171.12 91.0195 li
170.87 91.0195 li
170.87 239.998 li
181.37 239.998 li
181.37 90.7695 li
170.87 90.7695 li
170.87 91.0195 li
171.12 91.0195 li
cp
.669856 .599298 .586175 .435218 cmyk
f
.694331 .632349 .621027 .583551 cmyk
SEJDTZ+ArialMT*1 [10 0 0 -10 0 0 ]msf112.34 169.934 mo(Supervised)sh171.12 351.105 mo
181.12 351.105 li
181.12 361.02 li
171.12 361.02 li
171.12 351.105 li
cp
f
171.12 351.105 mo
171.12 351.354 li
180.87 351.354 li
180.87 360.77 li
171.37 360.77 li
171.37 351.105 li
171.12 351.105 li
171.12 351.354 li
171.12 351.105 li
170.87 351.105 li
170.87 361.27 li
181.37 361.27 li
181.37 350.855 li
170.87 350.855 li
170.87 351.105 li
171.12 351.105 li
cp
.669856 .599298 .586175 .435218 cmyk
f
.694331 .632349 .621027 .583551 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDTZ+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/R <1C60D8A8C9B6079F62E89B521DCDBE3DC5497B8DD99916239C0DFA5ED4F632B33575F4260343AF5DB7D477D12055F49C5E99C0AC176EAD42723223937F2BA15ECAD7751CB6A136B700EE485E38E7CDB87D9465C90BB8E29B04FDDA42609FBC3833B9FB5105619F4CC434003085F449D9FD5022725306B331FB97B31D295257B180DE1FD5465D256CCA19301DA97326882845130A5257BF61307ABA64C3F0B222> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDTZ+ArialMT /Encoding getdup 82 /R putpop%ADOEndSubsetFont
/SEJDTZ+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 19{/.notdef}rp /A /.notdef /C /.notdef /E /.notdef /G /.notdef /I 2{/.notdef}rp /L /M /N /O 2{/.notdef}rp /R /S /T /U 11{/.notdef}rp /a /.notdef /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /.notdef /x /y 134{/.notdef}rp]SEJDTZ+ArialMT nfSEJDTZ+ArialMT*1 [10 0 0 -10 0 0 ]msf97.3403 360.612 mo(Reinforcement)sh701.12 41.0195 mo
711.12 41.0195 li
711.12 112.189 li
701.12 112.189 li
701.12 41.0195 li
cp
f
701.12 41.0195 mo
701.12 41.2695 li
710.87 41.2695 li
710.87 111.939 li
701.37 111.939 li
701.37 41.0195 li
701.12 41.0195 li
701.12 41.2695 li
701.12 41.0195 li
700.87 41.0195 li
700.87 112.439 li
711.37 112.439 li
711.37 40.7695 li
700.87 40.7695 li
700.87 41.0195 li
701.12 41.0195 li
cp
.669856 .599298 .586175 .435218 cmyk
f
.694331 .632349 .621027 .583551 cmyk
SEJDTZ+ArialMT*1 [10 0 0 -10 0 0 ]msf717.219 81.1543 mo(Reasoning)sh701.12 255.054 mo
711.12 255.054 li
711.12 274.719 li
701.12 274.719 li
701.12 255.054 li
cp
f
701.12 255.054 mo
701.12 255.304 li
710.87 255.304 li
710.87 274.469 li
701.369 274.469 li
701.37 255.054 li
701.12 255.054 li
701.12 255.304 li
701.12 255.054 li
700.87 255.054 li
700.87 274.969 li
711.37 274.969 li
711.37 254.804 li
700.87 254.804 li
700.87 255.054 li
701.12 255.054 li
cp
.669856 .599298 .586175 .435218 cmyk
f
.694331 .632349 .621027 .583551 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDTZ+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/D <1C60D8A8C9B6079F6249419CF69509002AC79A016C34D114AD8C7A9DD2474EBE314027FB7E1F48C795DC0A22C11652551956D26D402DBF3954D5C55EEDC4D2E02D32263ABBF714C52111C5848A3EB8C8B527B0FF3362F75E292ACAF79767633E5CF98F1E087651E36E4721AF4CBDAC7E4D68359E9108BDBBEA294A0489068CBF65F37E7CD4C7284AEAF641D010DF> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDTZ+ArialMT /Encoding getdup 68 /D putpop%ADOEndSubsetFont
/SEJDTZ+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 19{/.notdef}rp /A /.notdef /C /D /E /.notdef /G /.notdef /I 2{/.notdef}rp /L /M /N /O 2{/.notdef}rp /R /S /T /U 11{/.notdef}rp /a /.notdef /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /.notdef /x /y 134{/.notdef}rp]SEJDTZ+ArialMT nfSEJDTZ+ArialMT*1 [10 0 0 -10 0 0 ]msf717.219 269.437 mo(OOD)sh701.12 201.851 mo
711.12 201.851 li
711.12 230.054 li
701.12 230.054 li
701.12 201.851 li
cp
f
701.12 201.851 mo
701.12 202.101 li
710.869 202.101 li
710.87 229.804 li
701.369 229.804 li
701.37 201.851 li
701.12 201.851 li
701.12 202.101 li
701.12 201.851 li
700.87 201.851 li
700.87 230.304 li
711.37 230.304 li
711.37 201.601 li
700.87 201.601 li
700.87 201.851 li
701.12 201.851 li
cp
.669856 .599298 .586175 .435218 cmyk
f
.694331 .632349 .621027 .583551 cmyk
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.24)%%Copyright: Copyright 2022 Adobe System Incorporated. All rights reserved.systemdict beginSEJDTZ+ArialMT dup/Private get dup rcheck{begin true}{pop false}ifelse exch/CharStrings get beginsystemdict /gcheck known {currentglobal currentdict gcheck setglobal} if/b <1C60D8A8C9B7EF322B32790B4C40581173F160A628925C2B3464303D1D06742E51EAF8B24CA2240525B9E37D08039C077561F794D203DE8C21652F0F5A81A2CE84BC5F560E6CA22CB86602E80E4BBDAC611F34E85189D165B97A2D648CF626A92F4026AFF0CA38E8E165B7E956CB11B132485900857B09AC55401998CADA1EAAF79B76AA2B52CCF0307B360E6D> |-systemdict /gcheck known {setglobal} if end {end} ifendSEJDTZ+ArialMT /Encoding getdup 98 /b putpop%ADOEndSubsetFont
/SEJDTZ+ArialMT*1 [32{/.notdef}rp /space 7{/.notdef}rp /parenleft /parenright 3{/.notdef}rp /hyphen 19{/.notdef}rp /A /.notdef /C /D /E /.notdef /G /.notdef /I 2{/.notdef}rp /L /M /N /O 2{/.notdef}rp /R /S /T /U 11{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v /.notdef /x /y 134{/.notdef}rp]SEJDTZ+ArialMT nfSEJDTZ+ArialMT*1 [10 0 0 -10 0 0 ]msf717.22 220.502 mo(Interpretability)sh701.12 339.151 mo
711.12 339.151 li
711.12 361.019 li
701.12 361.019 li
701.12 339.151 li
cp
f
701.12 339.151 mo
701.12 339.401 li
710.87 339.401 li
710.87 360.769 li
701.37 360.769 li
701.37 339.151 li
701.12 339.151 li
701.12 339.401 li
701.12 339.151 li
700.87 339.151 li
700.87 361.269 li
711.37 361.269 li
711.37 338.901 li
700.87 338.901 li
700.87 339.151 li
701.12 339.151 li
cp
.669856 .599298 .586175 .435218 cmyk
f
.694331 .632349 .621027 .583551 cmyk
SEJDTZ+ArialMT*1 [10 0 0 -10 0 0 ]msf717.219 354.635 mo(Reduced Data)sh701.12 299.719 mo
711.12 299.719 li
711.12 314.151 li
701.12 314.151 li
701.12 299.719 li
cp
f
701.12 299.719 mo
701.12 299.969 li
710.87 299.969 li
710.87 313.901 li
701.37 313.901 li
701.37 299.719 li
701.12 299.719 li
701.12 299.969 li
701.12 299.719 li
700.87 299.719 li
700.87 314.401 li
711.37 314.401 li
711.37 299.469 li
700.87 299.469 li
700.87 299.719 li
701.12 299.719 li
cp
.669856 .599298 .586175 .435218 cmyk
f
.694331 .632349 .621027 .583551 cmyk
SEJDTZ+ArialMT*1 [10 0 0 -10 0 0 ]msf717.219 311.484 mo(Transferability)[5.7373 3.33008 5.56152 5.56152 5 2.77832 5.56152 3.33008 5.56152 5.56152 2.22168 2.22168 2.22168 2.77832 0 ]xsh710.869 176.599 mo
701.369 176.599 li
701.369 137.438 li
710.869 137.438 li
710.869 176.599 li
.148226 .112093 .11783 0 cmyk
f
711.37 177.1 mo
700.87 177.1 li
700.87 176.85 li
700.955 176.85 701.034 176.85 701.12 176.85 cv
701.12 173.545 li
701.034 173.545 700.955 173.545 700.87 173.545 cv
700.87 173.545 li
700.955 173.545 701.034 173.545 701.12 173.545 cv
701.12 170.24 li
701.12 170.24 li
701.12 166.935 li
701.034 166.935 700.955 166.935 700.87 166.935 cv
700.87 166.935 li
700.955 166.935 701.034 166.935 701.12 166.935 cv
701.12 163.63 li
701.034 163.63 700.955 163.63 700.87 163.63 cv
700.87 163.63 li
700.955 163.63 701.034 163.63 701.12 163.63 cv
701.12 160.325 li
701.12 160.325 li
701.12 157.019 li
701.034 157.019 700.955 157.019 700.87 157.019 cv
700.87 157.019 li
700.955 157.019 701.034 157.019 701.12 157.019 cv
701.12 153.714 li
701.034 153.714 700.955 153.714 700.87 153.714 cv
700.87 153.714 li
700.955 153.714 701.034 153.714 701.12 153.714 cv
701.12 150.409 li
701.034 150.409 700.955 150.409 700.87 150.409 cv
700.87 150.409 li
700.955 150.409 701.034 150.409 701.12 150.409 cv
701.12 147.104 li
701.034 147.104 700.955 147.104 700.87 147.104 cv
700.87 147.104 li
700.955 147.104 701.034 147.104 701.12 147.104 cv
701.12 143.799 li
701.034 143.799 700.955 143.799 700.87 143.799 cv
700.87 143.799 li
700.955 143.799 701.034 143.799 701.12 143.799 cv
701.12 140.494 li
701.034 140.494 700.955 140.494 700.87 140.494 cv
700.87 140.494 li
700.955 140.494 701.034 140.494 701.12 140.494 cv
701.12 137.189 li
701.034 137.189 700.955 137.189 700.87 137.189 cv
700.87 137.189 li
700.87 136.939 li
711.37 136.939 li
711.37 177.1 li
701.369 137.438 mo
701.369 176.599 li
710.869 176.599 li
710.869 137.438 li
701.369 137.438 li
700.87 170.24 mo
700.87 170.24 li
700.955 170.24 701.034 170.24 701.12 170.24 cv
701.034 170.24 700.955 170.24 700.87 170.24 cv
700.87 160.325 mo
700.87 160.325 li
700.955 160.325 701.034 160.325 701.12 160.325 cv
701.034 160.325 700.955 160.325 700.87 160.325 cv
.132479 .102602 .106935 0 cmyk
f
700.87 163.63 mo
700.87 160.325 li
700.955 160.325 701.034 160.325 701.12 160.325 cv
701.12 160.325 li
701.12 163.63 li
701.034 163.63 700.955 163.63 700.87 163.63 cv
.220462 .126772 .178836 0 cmyk
f
700.87 166.935 mo
700.87 163.63 li
700.955 163.63 701.034 163.63 701.12 163.63 cv
701.12 166.935 li
701.034 166.935 700.955 166.935 700.87 166.935 cv
f
700.87 173.545 mo
700.87 170.24 li
700.955 170.24 701.034 170.24 701.12 170.24 cv
701.12 170.24 li
701.12 173.545 li
701.034 173.545 700.955 173.545 700.87 173.545 cv
.251286 .109773 .133883 0 cmyk
f
700.87 170.24 mo
700.87 166.935 li
700.955 166.935 701.034 166.935 701.12 166.935 cv
701.12 170.24 li
701.12 170.24 li
701.12 170.24 li
701.034 170.24 700.955 170.24 700.87 170.24 cv
.220462 .126772 .178836 0 cmyk
f
701.12 140.494 mo
701.034 140.494 700.955 140.494 700.87 140.494 cv
700.87 137.189 li
700.955 137.189 701.034 137.189 701.12 137.189 cv
701.12 140.494 li
.265202 .277226 .152193 0 cmyk
f
701.12 143.799 mo
701.034 143.799 700.955 143.799 700.87 143.799 cv
700.87 140.494 li
700.955 140.494 701.034 140.494 701.12 140.494 cv
701.12 143.799 li
.220462 .126772 .178836 0 cmyk
f
701.12 147.104 mo
701.034 147.104 700.955 147.104 700.87 147.104 cv
700.87 143.799 li
700.955 143.799 701.034 143.799 701.12 143.799 cv
701.12 147.104 li
f
701.12 150.409 mo
701.034 150.409 700.955 150.409 700.87 150.409 cv
700.87 147.104 li
700.955 147.104 701.034 147.104 701.12 147.104 cv
701.12 150.409 li
.265202 .277226 .152193 0 cmyk
f
701.12 153.714 mo
701.034 153.714 700.955 153.714 700.87 153.714 cv
700.87 150.409 li
700.955 150.409 701.034 150.409 701.12 150.409 cv
701.12 153.714 li
.220462 .126772 .178836 0 cmyk
f
701.12 157.019 mo
701.034 157.019 700.955 157.019 700.87 157.019 cv
700.87 153.714 li
700.955 153.714 701.034 153.714 701.12 153.714 cv
701.12 157.019 li
f
700.87 176.85 mo
700.87 173.545 li
700.955 173.545 701.034 173.545 701.12 173.545 cv
701.12 176.85 li
701.034 176.85 700.955 176.85 700.87 176.85 cv
f
701.12 160.325 mo
701.12 160.325 li
701.12 160.325 li
701.034 160.325 700.955 160.325 700.87 160.325 cv
700.87 157.019 li
700.955 157.019 701.034 157.019 701.12 157.019 cv
701.12 160.325 li
f
.694331 .632349 .621027 .583551 cmyk
SEJDTZ+ArialMT*1 [10 0 0 -10 0 0 ]msf717.219 161.569 mo(None)sh.00509468 372.02 mo
883.234 363.02 li
0 0 0 0 cmyk
f
.0101894 372.52 mo
883.239 363.52 li
883.229 362.52 li
-9.31323e-10 371.52 li
f
177.27 26.0195 mo
177.27 27.0195 li
178.27 27.0195 li
178.27 26.0195 li
cp
177.27 29.0195 mo
177.27 30.0195 li
178.27 30.0195 li
178.27 29.0195 li
cp
177.27 32.0195 mo
177.27 33.0195 li
178.27 33.0195 li
178.27 32.0195 li
cp
177.27 35.0195 mo
177.27 36.0195 li
178.27 36.0195 li
178.27 35.0195 li
cp
177.27 38.0195 mo
177.27 39.0195 li
178.27 39.0195 li
178.27 38.0195 li
cp
177.27 41.0195 mo
177.27 42.0195 li
178.27 42.0195 li
178.27 41.0195 li
cp
177.27 44.0195 mo
177.27 45.0195 li
178.27 45.0195 li
178.27 44.0195 li
cp
177.27 47.0195 mo
177.27 48.0195 li
178.27 48.0195 li
178.27 47.0195 li
cp
177.27 50.0195 mo
177.27 51.0195 li
178.27 51.0195 li
178.27 50.0195 li
cp
177.27 53.0195 mo
177.27 54.0195 li
178.27 54.0195 li
178.27 53.0195 li
cp
177.27 56.0195 mo
177.27 57.0195 li
178.27 57.0195 li
178.27 56.0195 li
cp
177.27 59.0195 mo
177.27 60.0195 li
178.27 60.0195 li
178.27 59.0195 li
cp
177.27 62.0195 mo
177.27 63.0195 li
178.27 63.0195 li
178.27 62.0195 li
cp
177.27 65.0195 mo
177.27 66.0195 li
178.27 66.0195 li
178.27 65.0195 li
cp
177.27 68.0195 mo
177.27 69.0195 li
178.27 69.0195 li
178.27 68.0195 li
cp
177.27 71.0195 mo
177.27 72.0195 li
178.27 72.0195 li
178.27 71.0195 li
cp
177.27 74.0195 mo
177.27 75.0195 li
178.27 75.0195 li
178.27 74.0195 li
cp
177.27 77.0195 mo
177.27 78.0195 li
178.27 78.0195 li
178.27 77.0195 li
cp
177.27 80.0195 mo
177.27 81.0195 li
178.27 81.0195 li
178.27 80.0195 li
cp
177.27 83.0195 mo
177.27 84.0195 li
178.27 84.0195 li
178.27 83.0195 li
cp
.694331 .632349 .621027 .583551 cmyk
f
443.37 26.0195 mo
443.37 27.0195 li
444.37 27.0195 li
444.37 26.0195 li
cp
443.37 29.0195 mo
443.37 30.0195 li
444.37 30.0195 li
444.37 29.0195 li
cp
443.37 32.0195 mo
443.37 33.0195 li
444.37 33.0195 li
444.37 32.0195 li
cp
443.37 35.0195 mo
443.37 36.0195 li
444.37 36.0195 li
444.37 35.0195 li
cp
443.37 38.0195 mo
443.37 39.0195 li
444.37 39.0195 li
444.37 38.0195 li
cp
443.37 41.0195 mo
443.37 42.0195 li
444.37 42.0195 li
444.37 41.0195 li
cp
443.37 44.0195 mo
443.37 45.0195 li
444.37 45.0195 li
444.37 44.0195 li
cp
f
706.97 35.3663 mo
706.97 34.3663 li
705.97 34.3663 li
705.97 35.3663 li
cp
706.97 32.3663 mo
706.97 31.3663 li
705.97 31.3663 li
705.97 32.3663 li
cp
706.97 29.3663 mo
706.97 28.3663 li
705.97 28.3663 li
705.97 29.3663 li
cp
706.97 26.3663 mo
706.97 25.3663 li
705.97 25.3663 li
705.97 26.3663 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/SEJDTZ+ArialMT*1 uf/SEJDTZ+ArialMT uf/ArialMT ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 24.0%%AI8_CreatorVersion: 26.2.1%%For: (kyle Hamilton) ()%%Title: (learning_type-tech_app-goals.eps)%%CreationDate: 6/4/22 2:26 PM%%Canvassize: 16383%AI5_FileFormat 14.0%AI24_DataStream%.((`,!*B@A"MP.q'G)^T6q!IS!+;D7X,`WO*s7C(lPK[,SOd.@el!t41;j4o!!!Q9!!!!#C_(7l/eI]Z>okTUY296M9Z-DCUBS0s%/\CW>[:_%:p1OL!r8-oN!4MjW1d/0.>(B*NLfLVUY2l!fbHgHe261?60t9*mF@-bc/uEDq0PN[nik8pUMlg@f`)a'gp0t)=gla1f%feS@n[shKQr7^f_i2u$a?GU/2<m`VFG0+Y#\m3rfbluu0gTq;!ApI5H4rJ`Xs)?Q8LU.IOBOeYnN"4cM7L'[X1D'&q1`WD.FPqKL%]knR,c^JdfH<KpRH9L0D&LIV`bS,<*;a)O!,6@D3'n$:C;'bNIB"p"@YahrYH1cUh]I^U6[pI9$"Ndq@GTTG%#.7d]/]0GO^B%q-%No*h&T,`q;n,7lLm&C6j)E$t>m!@uKJ2a?8o4gP.nVXqhpgq@K.s_<5[i<)AgV#hU%>t:40D>@u2YtECpTA.4_"uk;=A92FoZS2c%/pHH@?-LK@1P;ubp3T9dZcsTIlp*E;@PaDEAdB$?/BNttcNE*OVM'CVVfDX3*B)NY?/M86T!9"Ek'9bp#oAWX!IW(npke#ir;ti&%nB,]tcfROl[K_-@d[O)RrGTB:a[h/Z91Ig(bMK?;o@g=tVOlt<?,>eFX'F!jF#C57RPD6SWS^p_XCh-K.Im:,$m+flH8466IO2V8%%BD*!#/CV)3!m=.JG"B%?r%V_mr:+9j\Y<H#2O@0?;)2n+SYl.=E*)JjIhj1F:IZk$sUt3XR>$X6a;)Yg[u!;H\N"[BS,?ohf`N(%9\UU^Zc75rJT0tqZP[KhlBc\Y62AO#_0`faCr6?m%p3f<)?d:-hqFoDfra^/=[Dph]2SksW98D3\V$(;TFV:C(%d\slo,p%.ea_J%Jd-.DqR,4L1[)N(U@)6\oN\;qpKkQ'qlqXmPgfThQYIf\C5&^oo`$M^pMH"#0,psS"<6c9M%(N+^'Y9O*A#53&'#8_]9rZSR'pFg%CL5T)K&t?<;"OdhG%]?2UPUVLn.",.-S[l+RV)iDYNM51RDX;0k[fBH.,EWh\b@$F5g/TaWh.J-]CfWBo6nrbH(KD9*^B],"MA"/%qsn=n9-<`/m%NU_s12>e!+P]qI"O)0^(`T\bO<,?Ot/N#3riHm^YdB9Ib`[XhjBG7[Ng;IJ0Qu0p2#Ggjhi%<>e"qZF9_&bXl``W%AVT>r5IDH'_^[b1b-i;1"O(=6J4kX_qst72&%cueTPXFcGj,4rQSlsq>knS1IVVsm^K,5XUE>BB(^#KjhD5mOhm_?b=gK*g"=+24%QSiP4R8Esl$`bA,di<uN<O1[#"a\PQ2N4&CZkZ*[#)lNO!?Z:J^$dn'3@oICkXb;ediHcieuKFbX=]U;=qbo\FM<g3G5-rKeWij[%lk50YUn%]kU&k>rSZ?pCV"_Vb19r^H]QbC24DI(9eQj!97)O0s731U5TF+h^'NcVa",QD!TOXDG:T#/:AtqSj@2tjSXCS]WV]Yu^%5'm<tQ,>1(f*aL:?icZbB3+suTT%RnOcs;k;7oj)'0ZW&=8`?Wj3q*TcY1*Oeps4q#+5M\!rrc+TO>P?Q3#S=(_+";NkEC;A`ueT%HT:RMr+,$]JJU\:%0&kUSp)i6I*bA],fr:A')_`e*Zocls$)\'p]&'-oXM=In2I4SnE87;K/_q-^4@J;J*]kgU[XRt"*p3[K]X,m%!1;lkVqGu._#:fZZtqS9cTq$KmcuZ:ag7Cqc09SmZd5:n=YecYh(E>^^Tnf"DAdUP[4AlZ)Z[n1/GY8QK9r]l0sB-p!oR#'2p>G1%!T8=tdWYSl?oX2&oWHTR7UNXJOZ,$CSnCk^c_/+tT%0#jrSG#qH>blqcPs(G]661h)lDfn%3VjZH>^E2@\=RN[2ZFZ)Krg45iImb%Q!8kFYKMo*&d-+dH4*]A!UCa+fCQ\%7>"Z!Zd=@`\)[lZS*O+0?*foN+tG(>d2L7U_m^'+*-p,._@IC-W`T6Ce>Ku79tMJPrSVh?%msmFt_!VHq*P^l0Q@0l`Y%cVg`j-+aG6P>.q?tKL%:%L(gO(=##I.LFhHP_!R/ZO(N&B5Z(Q6Q)YLS5-Ym]Hs97O;#f?(2Gn*Ris%la,t;%cE(Q\0]%b3;,Z)c=HB,bMOE=TSo@+Hg(Mqn#Q^&=RnKQqE=u1^u:Gbf"@0t=.V8O`uCN$+I"0W6(0pfmcoG<o'Dg[Hfi>Q%=m`f]g$@*fmQInj2o&Xu5'a;4DX@7.gOA10Aq`RFc"9nRHs3APY3:al)G>8@g&/GIQ[WdQ-,1t]%+d02`@=pDqV]r&c1PmqlP:q"%QN[VE=g<i!HbYp7ZK1c/hYCA7./LV-QaT*t[V7^]hn/R$pDeP?(nS9%9nqsoDV_W=].;Mka"]MZ$$\ZP!&I9>iS/foZMAk'=,,bg%b'%9rHN%4gQJpKN@b('$p;q4Q1Du5+Z^B<M[N!tjDahFlbIV?>qd?fNHWb67J+q+if)a7il=7O#>CW(^X&uYHX'aKQU>=Pbeh6pW%D]I)&T01$clErjC%*/$fgYXTtX7(IPf?=$UfB%$UZVR(8B&>_soDE;X%)_T3^7Y,%>k\p$`i[m0<Pp?]F58MABq+R&`UL#*hKu\O%f?]FdR.[W1cR$IdqUr+Oeh>665LT;B)o/R]T3)T[fHnH/Hd=M$=+6,oUM'>uER"#YF6m+[A$J%:Dc^Ml.lWbD>I%q!Q<aqk(*q"b%m:-Ls0a0j<U**OjE?*/B9ZoV_UIW!Ir\+MrnV?BhHBtUJaD$&B;fEaKFHVfg>5lmD.6.0DocP'g&k,H8o$rlO8/=Tr((JBj$pucY%8&'54A_0+;f9&KfZ:%!A%FG_45H";gA6B]H?m!G:UKlk((IO@DlSs2c$cd6-a,nce$2DV6$DJ]AJL$/>s/TrqNo0T6L+F7+BGcmY%b-E'f=csaPkp0h'MM@eHZD]h\OC_QK/]Y6bj1(hIPg^s1)fg)o.-XTir_OWUnV8Dl=g7e1HP-dub)Y>*e>)?.Y(%EiOOLj<_9nIF%BA!prTfSq58H/.CA]STbLT<IrUZt^;U4,MFb-L57L?K.t=JGhJ,`@C@oHC0=/'>/]e;*A"Nh]4@>ZA`XoNiP&acbP:SAom)Hga=`%X6_gG,J/s]>-9!IH5%A_WfAAd8P:lc6.5WA,ghdUm/LT6qG9UZ''5kV4p=/RL7G-$+GmBP8tqsU+UO;WRXuueN\%f:,l58/_b!Ip%S5uL0M6a3)4W17E(X#W,6P:\JO0[f5Jf\K+<[C+V/ON8@8WXq4m_/X/R"@N_.dKqEj^Lc4j:Aju6$<)i<Q?j7a"\i:1bI*t$qW(+%j>d-X9u.M`8+0;M>=WhsZk?YA&lhF7?,L[S+W>A5%7:a;dI;o@fY.#.3([6gjXRm:ChG-[%nRJrZnblVesG@\In9DMm(WAbJ#JC'%b)R^'Xs8e+U\ET&T_Bo!rA]gIM6\Z<P+9Ot+Nor3qT0@$_f[NJFWEt:q@rR1$NBOu-oc6B;d#8p7BWqgr-slmkZESt:J7#&33>Tr%++bbrP%]]8-qU-Z3r76R&gZ"I%CsVV;O3lLU^ouABdu3),g*DB]8f$Z8'YhA+$HNU./<i+8$@rG3jL=:SAp.EjL!<es/W4^L0S:M%D=jh]6V^QMOfL$kISq1LVl;5FNM@"S&!EFeP+V[5='9YK57*X*oUIi91AkZ#Z<Uu>+2%nPFo5glBqP=!%nGOSk;8GM;:5:1L[+Y%%OOHIX6qL>ub>93JY-K=aU+FK9\;m315Z/Ue$'OQZOt4[T2H39!LS%Pd:TEG&b7Gp`q*UDndF"0:MK0VlIZd)bE^a-^O"-'nD"fD@%WglPQC0+OR7CgQe:/f3\Vd3k^(j_:EX?'+fb*"0rOsm5j.#G7r$EC0gWhVVTUCVcDU+BMtPmtPDoHC,PcE`tD.p#_Gj-'d>;3E1r%5)q`63K8Y6pV(_*4/[':Vm.erC&`6X=`PG(Z><[@.Ee#'bGJuVVJ2K>gAbm0Z=R1)C!*_ma_>=SVOU\Q/Bb=MbH`ZLMP;MVU*tmM%.uL'gVP5JrA]\X;.uKkj5NaT@ZN$7;bPj/P/GhZTVWn+pR\p++>$7`es.YmX/6eG?VeK<5?^>:!^F5BoVm3<Orh$'^pjZG(ir>`$%MCeZ)s(V?0s(2$+s.];gs.&f_s")@!S<kPFEmABnaKh?9ca'(ICmoC9VJ41u=f*Y2U6qgJs.?0YZYWcbSu-)@3N&-R=`Q-PA]acJ%A]_6PaEa53,3NMdMO]U!.!#=%-up6Lrm,jmrm/,'rm1E?s/.=/S<kPbS;STSSH$nqkF?/!G6!hXJ<r#&q(Ds_pNBPse&[(W%S5I^%NYlqN<G_@1I52l,R2"cEpV,INojB/b/rjN-9CC![3U-2;ai2[!+q(PXe/82A)#4+M%N0H+p#^D-*,Ynp$]@@&.mgN%'`d^ib4U,%%-u/)l3$?!"#G$Wu5a%c^J>F&NE#cJ,H=Y[M_)V-AJg;4sht,`h"$R8d?N)Ve4o%8(?6=i0q8H_?cGe0Ea`8Mar0J]7bOT_X,fRd=%n\V"<,ersU`HqdM1iNG@a6c481MkZ]!)s=qh=>p9F,H,hf/l9Xh6,W8>YJt2+U8L&L@88-gTTdh?*t(*"$YWF2eM*:2.t&qE4iHf%qUfZcfhGgTm:&nbYFqC4%NP0ObG"clB-,>aYR_`B!;LWe-n;<kSAqiL:s'Y8!:[i+?Lil(OcKV82[6$q`,Oq*THAh.&-%!g0cbU,%S;2L=bJq>+_eM,"caCV8cg^>Q[gfrU%ma[O]D-`ob<CYgkG?3(V&5M/kWr&s5n9&#.#*0B@+i_#o_9OC9<\Oh&aXrt_9q9Fa+]aL%3DST:L[C8`qgLc5bDfLu@g1u$J`Cm`FpRak.&W&9+#rOe'q8o>0g(quI'93E(QN3Up&S`6(Tu/:_nP6#Krs-T1'#*0a"M/bhX]uQ%1BZ;>+<<H.HB.1<[boV?F)Lf5buV0nEE_T'&'N83%Y=diNWX:^TGWugkF@;K.1X#j?N`SH_m4KigTLjZE1H&VE:D%j5`,YN2?jWl%o>Drm/9s-L3%c,2B"Z"#V+WdB,Z#Q<SMhrK_=fcCAClbL;X(!6K"rsT"gO9HOi)"eOTUMo:mQQl'qf.r"*H.m*)iRW9SDT9Ko6gF%:e8Q,TgmP5Q8oF+^,A[J7VHI+9+5-PLr="3pYfkt;*fW9gr/CX%Au'mgVh2Hb6gfE("gN:13H?je]\S@ocb"+S"%d!6j*nBBbAG.%L:E:qckd:440O]<7Yj%%,npFaR[8%<-r;#B+Q3:k?9%<s*ZpH?/iXlW8nhI>\9_UeYd#>)T>t[6!!.i'j8;dj+7S=(0k*+QJC@+&%:a;ZqM$?Pg.,6[o9Y:Xq[ffp"@^Oo:JT]4OBh!hs"d([1=MF;[O(!.8":["e:*P8V4$b9$+j!.)%*WJiSjj3(F.1oFlrpY[&>.N4%C-[d-k@0-3Pf'7/R;13N65Me&7hCJAE(ko%<--b%*`sD%LYN[g[%tRu=/@sB!AP?X60'lH>\H8<Gf)OTQ=+n`+I8?b@+fjf##6\)%&.)upa^\-n$sm[Le$B'`*s`EQK:uNV;RujBqhFDK<GCZ_R;,JieZdp;<AA$Iqgl^&%Sm'0\sB_P(WC*F&,>[RW\DsJqbbs'7[51B%HqS'fDhEhI27j`_q&W)bQKjh#M.l7$1;ZL&k;69Ele9@#+5[>D$Z?`lT%C%kV9?"Bma%u6q$<8'X'`r,j32W1_rk,=dsDH9l,;)i%j&.iG;:$Yf+]qi\m0*\dBuY"'G-iIL6BuY#ToDjJSCNV@_=IIb59b894Yq<7/n"M5fW7IJR[I_bPM%:^lh!VC32`1DN<Gd#R7BK6%5s47'U;^!46%<;qAC0t=1Z*a?="h<RS?p[jZLa0_:#6(U#TEi92X"1V>A6gkSWa6]pPo^dgaLT&jKt/8U@=Nr1qUc-PGeo3Go8hQ%PF<&q3f2!>64-<kf`>*]WoC7h$>e"MC@OSO-:E*Y?n:hs[RC!K(/K*;,598@m:'"#hH,s%>Y33mO6E=M?&E#ij,,;a*+Fe^7s<#7%,uFos1;bh,3"=lQ^XMdL"P-*O8sKTYRIIO"VT$(UdQ>FeAA0WqL*nQ[_R&U/Qa\*;UBp@1pnXBj:,@8:lmU:6S/pgfVm;A9E*b8q%BIB"4/8/$';F:9P?ts@u&ke,!'8b$14W)ACa#43^ZYVr!&_QdG'.H:<3K6?;8GR=;=SRRRZZ$4bRiA)mi7oUJQKgq%"U_=_>O(8R%8cGLV*?>FL1Yp+OrK;80VYg.d&kTYh'q/Fs(%fsm!ACDG$>QVR+.)[Z]R"?g/,K1oN+'E"f\23Hom<+q)*/E"Jm-PRcYP-.Zs9,%%oMInh/,I=?b]<$8-+bpkO^5/mqHcH$K*R:_bQ*kZ:1:Wl!`b.PhH@VMheIaI&Wh]YMNi+LAa<qhL&,cP_M3CU@]Eb@^o(;sgD_#O%KRYM_e.Ja?-kcm>_YR1^p48_g1H$GqhEE1'A7pV7/mVl&7T:,==Ri)<74Kq$+P)fA"dKfm/Dr>f7O,eRN_ft0-qYUef<G#rMLD#H%6gjm(2VTo%lL<K:.c5a-5?kACCa?6!X^m[RniY@qSI@nGDoaNgWuqtm=>aH.=9U=3aDretGt$*Ic\g1>[t\.5</Xr!&[=_R%`e0;%FZ>YSqr+%IY(5`#\0Y.oi3$sL;[V+;1c;=aMH'<gX\`M'<)@?YjInnu&O*T,[`tco]&7:]6*gmhl%D_[LZW%)["E#F9I?kkPm1VK%/T%PEU1C9!/:s)O?O.EjWtSkTCM[C%0L,^Qbf_`fK&(9ooE6M(.V)FKUES0M<Z.9?oLO(n;1XQJN`NJd$P5:<5TnQsT`U_gIO5DQ%K([J'A^"4Fe0Ckf"FG[a;!7`bKH(e[8Z3b8/OHJgm/h,;%Lrag!Kj%X7+ac3@WVCE4C@sl*T$6p$#*iia[_4NA&4LV39NqZ'Oo\Z%E#P&k2]]cZP+>b!ZutfcNT//SOp\,F^,uW$>@ebnN'OW;r1n3OCrY5.,tL_).>.a@JlP2r0A"ij[`>0dj5COtP>5LA,MK^Q;a;IO%@2:9NKAj1o7n#,-RS7+,f^QJ:md%E>:'6W:9s@2obZFGBQsQGHV(93U7H8"f9APm;Q#oG+WY?iqBZ7W7(_p,bLf)Ch257m$N_2kr%-)]7M:=a#XS>kVW:8=bp-aF>m&VX_1m<bU;6a0Y0QETbng'%N`Q5!Q=/%V!4X("@i<nKN^lR.mj<V.SF;E\r.;/OQi<*?Pi5o$f-%<bf26:MO?$Rf8#\90'+Yeb#Za:/7"Ae!EXBegVsM0F2.YEY/Ig9>Dj(\k&n;KaHOq_G$j:V-u+0\T*JPM>/<AIdQ8Z9:)e-.YDji%*"9NCQthU0JYe?\j?UVia_>6s!+f1H(QE-,W=cJNZjcP](-6IjLes5abLJupXG%N`8WlOg2:.LP'ID1]<)tX^">35@86AE%L]DYf%#Jq\#H=0Drk[>]8ote'cpmC*"iPB5C"9^gMf1U.k&q\*-&Qjg`6\6*a#)&dFPMo6$OOr28C!g?eE\=OKrOFAA"m6%92%ObY"=NGf%UaZu`.BpoN86!R6a2M;i7[Q,'j61Mu7o!PsMK0EIdUG>#8spMD@[2cGGX19OS$4(_eO`Un=Y.L2_2sB+eQ@N_bng_t1i5Us-r>Zm%!nN(6iS1#B+MH]M=H#L38$[Z#&J>,Vo_q*Niu8"#8@gJYs"ot;DjcQS+%h7O:FSR!b9'aS&I"-;O.Vd#>Al7eUf2U0nN*/R6U\RW%@2\5s*/`P7[&^b[k>9KD\'eW@:S`II:%+U,8Q<20CLgrsrf2jDW%JZ8E,H%rh,(ssL!\uo1m-^r'1_bM#Xdo>=[E5J^E&g47%'lY%=C@8`b2[2`ODc:iZ##7[9'G8\"pd]Z#p_nTO4-SpFaC=X+F4oW8a#UEf<"N5Gd'Y,TTj3h;CH;(Xn^<UOD3&Gg2N"1cK#lQ(e>u1%"CS5HA,WAAj)[m>7_rDJ(bfa/%"c"j@;%-lB1rZ2"G>/m&)lq=1/lP>2SneG;+@4:<JIAdnW_b,#a@i7RRuD)>REniJ=>p1JI.&_%8oC_6SDK[@E9BT$nJXT&!<Xd6KhO@\MZU`2>BDWc>D-N<;fJ0.AAX5I2Q%5jWF_l5_*!ap<b8DMZVM3fM8>,X:7$EeeN6&F#a`Z(%&G[SH?t]ouZ#WL6`8Mqn&uOAo&u,]D->p+3P&Q5RQl))?0<mr>7"Wl5-gX<q.[V'I,De!?ju#4DkQEGeOI.=(K([er&E%r(+A.^?%"6#Y9+CauV%7ES!4s0tBNS2,]:uqdFpppqXbh[oOm0jsYN!&8d_a^'373o;H:.q8LGp);ja5K<$_#k]>G_Zb:L,a]9CHKI8/Xk^q%:^*?p(U,k:/3\'KRm>t.Du=R3a<ea;3j4kH[.o;1%iP`*Tsr+bY,67d`2quQRaH]H[)hU=EF+"@L7+Ta).&Y'b<SmC\-@uW.iDNG%-X_b_%$)PGkV@ksqC)V:=&["+?VH(\<@SH_ck[N,/e;iE[AV=.8f7n%9<o]X>j0!V]Maeqi3\)o0.=b&Y.%6>*4J2+92bkb.$+dq%8-,XhG"S8k"=AXJYl$j;Cb-L40Mp[f$`uo+;R"so=m5i./<H[b$P`-[-jZbZ7H#Nn%g>?!+V_j+i[/VJL#gS`'4$D+A>Bc1n<HM%%5k-QD!O[>P"@A'5#S38c#U%M8,06>-6NApD%:MUQ@0gkl<$?dY'2/+F?7A00W_W]77@8akm!''S#RsA03!qtRVo:Fi'-;%G'2k@V%+E0p+&ON6oJoE,3%YW&Z/eDW4AKt#6j5+;J/(rL"RsC3[*3kL?&$YGEkLYGC=foq6O'(/W,>rB;&<tm@ETa]gTi#OaZr[AfYcWk0%Zk3XWU+J4]Taf4F4r]H\3a5$8E&L-4d;15V`GFb>ES1]kVQuJ#Nj>32%_EVD_n)NK"R2d9*0[Mjo!u:T,0@9uR-$:6*$Q?"h5f(9%4)H.]7KM1_qjEZ'C/c:a;h6*0(<@ZS`6djhL:craGI77uiPbL,JR.01BW/SG?nF5od7M:/-A5.'H&p-XRm3r_,D[Y&XlU&2`bFBY%EnIhPaDIs&)`E\u-u9CBJZp0'D;2S?[VZ+;Qbkqu\02t)i8gD9$er+,VSkBCY\f<HZ.NS3NFF-"((.peD;/oiCg1)HgBJ"`gK$RJ%&[p?W.r:3J-u8tiR$l/drM;tV-$Tk3<?]esCXaAA>CN,bYANu!B+3gQ=uq=R)_f',_Ra&Ve`^r)h`.XG0V84;N$k-MW3@a$6)SNm%\cN`TD&#SXFN37=F[NDaO%cJc`($tH>s;AA`c4c+f"a==lrWl(;JbF$S)o6#q.+kLLIE9Mg[)A,"niBBYaQHDW*qDr2m+F3ZXYb+%kFb6$<4'5mihjRZfU6N8Teb8O`G(eB!sVG,P3c_`*3`",/5=j;BKiL0R&P6VREJ6Bg4033iEIZ7$-RsI#"XrdH^`A1-(iInoMcCV%L>$Iup2CRNfX>Xp$Y%k*Mdb?EE#Pb2[V\A[Ctl-&"0b3EUtE*V!sT/N^hK>WH[V*t[e^#&"!kHcM^Y1)JNaJZi9?sMG7YTjTD95P%^U=3tES<YUfgY!NLmCZk0W8#N@cKHH@^<;0/H_]:`]*]$$0HTu9SK\R%T9D^=r\(Y6qj_INJ/S?%*MiInrp<5[`qOfbgb>Pam(fr%fA>/gc#.bg269$(%B&O#D4?9bD;3[X\CO%"[Z+U0gVuKA7*B;;Lgo,I<WRtD+bX^e#`3EQkhdQ2Q")ZO3]E3,q'Q\GAX-F2Li(l\%16^o1[r'l+L\<kY/P4U'Xi##1(;!6b$JMq*Wt!gloh),GrO-RtJB`rX8PUL4'&,l@/@J8I.CO*/J,qL(4g;+-BgW@YAQZITc]-uW%:r'ug"mTsR4?fX(Bmh=jRWI.P8_JLV2bh_TRTMQ2Cu)OZdhm_(26U=D,V,/PK73pC@.FcBra3--UKfPo@*ZD>r">Z.q#aOq0Y]ei%9Z)':bIdl2ceGI,:AbHL3J.A,W2H'lq"r'peZ?LYXOWd"G[AL2*P\[9`hI0#^?t^(Bf`uqR\j4o:"*AfaUXW1pU],sm+$2;ehg[I%!T7-%"J?[;?5[Xo.KI,MVWX:Ie$N3*[-WD3QfY4/!gRt>2ls=@>D?prRL?bh?LaGdj42;3<F-^'ndF%OlM3ldEQ_kB/!!]6>kRH`%hq7;sXC>@>X_a%uY@@;#=S:qo^n]_qIKRe8X'PsKg\ceEeQhUdE85bBhQ'^0)1GjD?$ifCX*.Ja/EYr^otI]2ou=ICH`blc_.'RX%<RW\G]B,>nAp_#BMVeDP>e;bmEa>jgPNQ/A=.W-uFDP:VfX'i=A[sJKZg%@p4e&;N^;QNS^<f1]IRI[dK-8ZeLDO-="!e2O6A*_Y%Cr6Qc%-9"5aDht</.^HL-En.N?u!DNs"M`4MN%i=.9A\19?;e$dq`M;hou"[+sDPml8e5DH:_b\l%P`:g<s6:'JQ,XPWYQe(Q;,"%^kWHHX0,MRF69g)+u#$S3S?DR'N0BfFYa)f_b^)!l!4fS\coHCI?.0a;tMq.V_$8"\D/8f-`>@]PNTP$LK>jjS<T@1ZN<n:>+Dp7%>f<#p/WphE'o)mLD]7np?WJlW<Rt^.3s(kgpU18%s/1tRg>t:5QZGP$M,WA/9WIA6J]mY5db<5901Gb:%u/IlREC?Vf&/"T`#rhW%=5$cd8TU?`^d3IDA"c"\c.G7]/.+TJ)&1pKSJ%M=COEioahh`U&[&:;=M7mH^gEK`ANikI%iu,9XN4C+YX[HP&<%[D2[t^eR[ok^%:-psU5*&2JT):@(.*DT450B>`GCl^:A8OEl1CmhEE*W/hY[P9l:#"O9#1]@&SGB\J*1ihK[d^*I[dZioU[!`E@!8%X3Vej\;g=?*%gQeW)%J>-tR.@.AYj=\DT2Bc,gf)t^PH"@KU`''qe;!p`$E!3*_#X3W&X%j+U<OK^(qiUigCoa%fr=\&qj[kR!um3t)T^LhKEiee%=\;BHf9_*,@hD_mla2rQ3/n:NiY,:1ER#6PT_(*P_I"S9b'^s/dEfg5g^hf"APtim*]-e0Sf0SBYLrH"e2AjanH`3G:IrgX,*L6n%Y1a:VJ[jXKM&;\B,D]O9OKOAr7N@/tk_*RB4VEW!1qV$k.%QV0nYC[lRWq8trA^](dT3X"KP%]5FWd>*S$`,,R[rN6$9?.o//4CB%.AG5V^.StkqPB+;-H0YQ=:*]oBLJ#%=ZZijrXSZ.rYStqihl*2Gf392]2")oE<RXF]C%7q&X46r-16gA5gIPg;J:4_R7i#F#u]hG%(dJ];A)fD'A(GK4`7NWS!uaT5?=]sH!*-^j@=6E@AF]Ta'uoFJ8Q@oNq*&.4"lc&=eY[Ocqbj2;J%V#^<pP<h%mSHUbq:i,Almoc%$OVn>O:u/G/N'ED#/mno:&K4kSY`]:%n.;j/#4Tk,Ift`Bb64fF@L+](*I.SirF'`[4rem*LR8ZNl$Mr?PO'(Ak-J2b(;6;BOKh"%hM"BrKA.&QC$c?B?1ctdh!Tl(+-3rHKf;>bMUO&:RE:Xp$/23QJVd`]+pd';&_tZ.95A/S;AAPE<$.0H#8VM$(fcIB4t&8"HG_j?%GdLA=('G:X@_<-Wa=%=j0B4QW4UrVlF[SP?%t,MIa2nB#:H34/MQaC`35#jnPEYHP8<9>pH<28<>i?P7Sd^e[&a/14b;T1!Z;$p;%3$2dd*es:V=eik03$Ug-]h:BIm8E_ROJ6\9C-R0f9#L*aFOBo]rB<pPnN%@Mp_0P_f_3gcXeLoOE.t(KR.E-jH&jgIc=nUpK(+^4%i]+&giG^%T/8e(1k/[A^_Wc^h8Ua5ri.=irU:'kHU$6i/b+OE"`ut$*JeFO.!bT1R"=<sQ.13OWU"Lii.%Gi,9tVVp71fGbTKocY%R)/0T$73O63/6.X"9^?UNL=9)H/9k0H_n4:[SfV5Ch=)+[aX2NCn-PE[Kk%C2@Iaq2GPL,NPm^fa=t'q,[tSb)/EDl:lbk+8:J_-%0LgH8Uq5sZlX;n23[Hm.3I*g-@9,P-CE]I:_cC[]DZ<CLc$#qk(E>,=@kGA."K/q"0lnbZ8EH%%W%uEQR$^0O-8Jl[M,ouE`T(Of%>^+R$C`6/7CRH@<qLC_X&X\Ufj3Us$0f[)bM83htLIF._Ck>Kb,%uYKT^72TgRHRZqADSn`?"\#o+B"0n71b;G*lHf-Z*k>o<VR:%V`XM4[$_Sr*U>S%%Kp7g:!Utk"[j@GW&BDDXDk5MOO/A$J\]*.#>=sQE0L&_)E<^4iXUmk2..&fX\qO>:fqZ=EVm>]4lF?o,\gA<%j?BUdF31T"[BAgj,*V#Bd80<0HVh@43h?&#TJCLULbZ[YU4rZ?78>$Jhd")[XnAte>Qe+n]_n0.J%bB,]36ot7qjFihC(H;a1sLS%dE[I-N^gk-^OgUi1COJ1,gQS@PqqsYT`l$HHVmOo%:+(oG3DQR<kB>JpCSN0C4Y0t$%#>T"6DKI3fjT#fotT'(eEJ\F<H?gG9X5g%9a'WYGY*:_Z?=`Sn)iZ:QcRMcF2Y`Fct;2\'hFs`2S<#M,oj$*eW*+omanBqi>@PbV04+OZt(J6Oc&)j'Lctf.PP<[;GKkLO!`7"%P/qt\FO:u4W9n!dX+8mli[oDcQQB7bY<]YeBCm'i7^JGUn2/.AE@r%[,l*u(0=2rLq1t%uEhNkH8FeG3#"cNTAcZJ>iW#=b'!kgo%gqe%KrhW7=S0i7p==O#O[`MT#C-pA%Nq7]K'UN[n'T1*2eB+V95PZ"P24Ad4?Vc,7E(kc>W181l7+;nOOs93T4$&u40=$tq$r-ra%%A"$2.i2JJUk_8H'KW@0BMg3Y"*+R-"1bYkF'4(rN!Ua9`@J##,Jo3U`<L=-WX>ICL'@u:s"m@sO\?,.BIJ\)"_W+)Uh99j5pAi?%-ACNB6j;<id?#io7!KJO)KFJ+U5E5kNds<a7/^6EJgt1(->A77TElikCo?PI"_imAQO`m?,KGKS>,I>6m%!l(TFSt#,t7\uXOEqN%`]!XJN@CuX@]S5Oo?nD`<G>'UN@(HQAo_(7W_p'"gE?+mTsk.o![@^V_<ks9'cf\r;JAQB=u&L(PL:$$K.^R*b@1+f@J7lW;9LC&%M?[Ra85Zkujh;"bqsk,sKj7/hTeD:`6ZV/*OQ:U*P08RYAsR=k=_+AfcR`@2M'YEBiEKb,H_)K&L2Vo#3:2a%.(f[l>.da`)GN?5%odMM3S"kh<a@6j#7i_:K88baiDmSI\#&&O0')%,mh6*'pY*RX61J$hGm2DenZnBSNg9po;<.]h(&gV(*/:j,67A%60c"K8^$DJN0%SJ3g05cUK=0*m,;$/TGk]SM.Fg8:'pGmjk=QY[p)X%<YMQpG=^aS/]=58+K?ZW8JI5C>;i?8+Y8*LDP'%50T>%g5F/F'@ht"HYt$%>ds$OTu;=3or*hoiiTfZ/9im-:r/'pO\3f#=rQ/[UQ'+RM&723,<%NIm7Ws9K6@GsN.,`9Wt&Q:<S*%%T'm>fX3PFgRgP_\<`sPJ%m;SSN`FZu4)sjAmQeEq;M"E^0H`8s(;=/&HV#grn/)b13KO]1_+FH3gGnuCHF%/[`/P_LC&ks!u#c,n;DG$rW6aRUbPc+u7U=K`m%1CUkY.>og)g47j0%kSLd8,flff)0W^d:Y9t;\Yh701WQ+8%J)LEEZ,dre9LAfdSE\?aI[a;JXEI_k1)CjO,@3'!i-%I7BQXDd,9#%.=S,OKif"O6fQZ0P"NQZOAn?-D=SCq]KLu.ZH_.j\9g(&#0C_*&B!iqaAZ?4D;Oq6Ip00o>M2iib`:/"bHaZVhm-F4T%G<iAT]Qi%ZEk.Z?+8DO=IMOM)5Qr$QI\7i\28iF2FqH3iIodN6))iVg1:K1j;qec6P0m"74gUK75&U`m(b>=Rfn@rTk<s5fb!#WL,IF:HAKrT%oqB58(a6.\g'Zgm=Bp%:i2s$mI5%fHH71,+Eu.IlO[+49E%YIjrHU,U-58[,B8<ig)hn3c\o#?e4cr!).u5-a_Xb^'/L`q%s#?OG%:dm:0$C`8PLq5FO'P;M-LP92R1Bg'R"0k[]m;imp2GOqTW/RiC/rL1h+<)7(Ap2q,i5O><K.!q[,j'F]7XOog:U</Q>dS`A<?6NN%$8K,f@p"!<6@M*p.!FJX=Vgu[%[0]C.T1I5O=";fo$S<R?Fmg>';(FW%FSqL&Y]QJV^%=+UOJ3&;/O1t\d9PdT6^eK,N7Q;h]VPl%k8AkEE4l[r-$3;S17=P&XXPr-a=mb+CC+lKG_QXSndOp7,gf.>&rj7jC$d?:L1p+2%+4&Tb^Oi5RpVf>GbBu/GbBuo@5b%.U<Y:s%.7/.(&cTT*.;/i&JOU!#f?b9>7>er\:?s>&jY9MG`].goe!cn+/<Q[re=J$.U6)*g`94M0j,dO0$cr:Kj,dO0K-Cqk>j)Qn'm`FA%3UK.O>Y+F(Nh]O,IqIpX95GBOAnU).ddT%8OlT_Uh-p(a@Yk[&%`=np$qng.Q!1Mpf^n08S%Q`V9G[S-'9Yt=!n#gNO$IY6"dQrA%RlmTK$=qoP<u8^4Q%HG$)n($i'N\M-*]9C2%n3bd$0Le4I#:R:=VHsY6@b%BT(5ln8'sH<FW*uebe-XO05V.D*3G>3d1Uu_U:9(B%/LuKp?X>G%?tp"SPQMSk:ds<'e$]lY5oAD6Z4a9&MBI:@_IR%ee!;>3QaV.*QnZ`;o.#i+c$u/*9V-A?SArW<&0<Pn<D&Y3YqiMW%]<,i&S)AahqrMIMqUEEZrNlRKIee;)9=&\qEE]\Q%j'oqS5s<2/mZo-U=+?D8-_S`5r-';ArpVcEuLs=#ee2k;JUHGp?3QI?Hc4[%T'83[SSHK7Nmg*0#@6s>@qAWL"Q9aRqt`;FI=7;?72LC3ET[a_>>;Hi['j]9.R@:-,F?8-NB<paS.fX1'>ZCbFX*Q:^`UUN(4L_p%"39ahSh<Ij"H4C2oFo/8cmGYb4Dm8k]nl2:kZK`?NWR.`^k[Qk$m5!!$qC?t$CS&LH@4Dm&nk<0l=e8*om/?JJd;G&/E\i3@gP$o%#qX=h=eQsYRO@fZFC%bfC;U9M&0PtNH&Y'aUQE6033^OpRj*ERk%<N\<tIS39,Nf,H%U'o=.%[B*aOC36$P`@EHF`u-(p1!:ds<'%dg?s`$hHN5%8tfa;<6aCREU$]0c_`?8Ghui^L7$Opi6-DRU(.5-7Pjh.rUSsOEEelOk9]"1eL#LMR^EblZZF1nAA`YK9A,0qsAjS%HlgH2q^o'T#2NOnqhCO768oX;k@^sC*MV2R9*l.\Sh:q\LB2;<!=>Yq%#Yq5BN$$G#k:fLh#VY_n<%[[(6Ol')C9JR%":Q*6/jJO%=-Z)'_kL*jC^80S-*Oh@$$lsq5!!;rSP0e7lV+qs7\Mhd!N-gT':4S9e<7W@WAoH((!.PU.c_`E<l"n+6DY+<igaV9+Hut^Uo7=I%c(h[D@D#"r0V#Qi3-Z-WEaNA"Zg_MI;;mHY_FkXP+pkSAW(r3REI8.#c=pP;*O^QE:sh_(E@D6EM.4.ci\\]'3eSoTLiQj!lCA4q%YN(^<*!N%\Bq+5"iq&)Z2?/1KQW7p/)`C5m?W)[<VZQD>kr/670K(plE7cM=B5A+pMQnHo1uck*]l3jSoum'OHl[b<qJAPBj_'tG%Kpi`Vf0:UHd?1c&23=3j4)2[m6(sA&3R.+[3R3lie)HNKF7O^<:.9?/U\j-Xa!YajTdDY5e="h)iS*22Bo*Og,eGjtdn$K6U)&D-%/;9u=.]^j/)Ze4BWso,2Ji5X;9=i1]P'fcD(qtjWQ6sFmMA72\kL\liU-Z`]O3W#r#fC@=_.f@b68:`u5d:Col(ZL1ATgNV+/ut-%UtVb2mXd&?eNon^E=QblKak@!l67I?Nl"RWSIqSi]>KA@LW5'g\VG&!BObg7aMnF)7u(qhKjo"iC\t[q^d\L-!E8k63-R?-S.^NW%OJ().K/OK(qa7QU5#4WqAq'h2d.VbT]t-h^c9M1J``E4uK/I56Za66f^;YjsLP-'C+8])=Ir%SZk<*$agGobno7mkB)&p^q5V,fn%iuUq-VK&WmN&<4PVXUI7[PVpP>+gJ^c")t-SmA&fN)N7_p#/OPnDV]2:3):%$88[IM>Z<h`du)DS/.9]\/"39--L!*:"a5d-II]e%s8ALO8;JB*5l$BEJajU`)?&"9d#TVObu]bLWkOcDV8G]onFRX@lTGnnK"qr!\n?ZTS-/l6L#8XN4td6HN62`4f41D9kMroQ4mG5/%JR\9+2J"0lD;h[PE10/P0_snoXa8SPS3kTW/fl'?,$&=2kHt8H+FG'tLG.MZM'"H,b24u,agGHI=DELE;.t[nY0kQa9U1kQS0fb+%)I`gm5JF&ul?4U<X_BT\&MlpX/eSYZ;qjelLl=)YL5`F5;o6Er-dThaSlI]gMo3jPN4Mf!GZ6=]g/q,'l+KiQ$A^b!^Ul2]0cRRu%F%"ROQ"0T:XDOX&KLH),2q<jt/Kg1-<]VE.jYTZ2Z^PPCl@hm`7#QtrX6jV9_I!JP#g4g]cOiXs6cMhs830U+RNt]_ksQ#mkU"(*%n.DOaFH:c*nKGtfT`N-rC'^U"UB=H7:gRui;I3h53)*hIeuhP\'rT0D@DNi@3hV3oF6+Y]?1=@b8gGN0c%."F"Ztg7mHPLSog6.2%61m%*npCKIe#HL!b)!o.*hEY'V>:c2K@k'FeRJrIKb)OCI!-Q07OsQ7qI,cum$(oqRZDII7&OH/HBcl^LDU+.JHI]43[Gn,ISD4t%L3sBoLLLH/oR[]*_!pBh8W%QG*hnQVF$LI$D=R7>>.Ie8I`7]Da'$%/j>kHf6^%IW4];:A]VHcL"Lkl#A6Z_M$nXT-i&&TFC3fh9%1JkKb-mJeP6l?$!&26dc*#Hn7%D/rkmh)_ZZ8l9*6$i*L)UYnVZe(%0bbh^k`]/=l7H;5rM8HUZEnT?]>a_c\JiM%LD![[o"L<@+%O_B)#RQP9"9>JH-)]OV+N6T4c`g1$rA$\[49N:eoA:5>i`D=e@YpgBMc64-$HmC%"Hqr`"bj6UH_sg_s"nqMKdpR6Mdj?@dFhb&h%OuP2>rO+&NM4bOs@GQr8k9R.uR*i1,7hm/\\01#$K[W*g?K\t4Ad7A(\mVr)(@S9uoqhB-XpE=POi>Z09uPX>$6h1lOYfN"*QnH[%1B[3&D[MZQW@eIdn*"iT,;f`Fe<ZA!%gc[u:')"gh8Y%d[s]0*j5;g.S,ZH2f.&0PZRmHu,)C8H%d=J@^DKFoT6u4kYH(,.^5c1^%\"W_a2d6>4O4"`,GM&a4$q\1nN?J-Mi?b&@YbNiu;18=Eg]n]SUS)">]M"&5H:K4N9HIb5ibD0)gCZAQ9T$o`f'G`L"8uIqni\T:%R\)iYG$is;X@<N;6_od`.`3fF@)@MJ'IbHicJZPAeN^/liG)'7djg[>JRoD_a!hi$rGmoji'BR<=m4YbjpS:&R$s)b#dBMm>:c?X%h6=*G0<3QW-hrDE$67gf$_)ii&,Tp!9JC$A'(*")@QA"tC]\dpFbF:qZ^"[<Za&dR&aL;R#%kG1S-BVQ*.DB"Zgc*!;7%-jPUBHD%KLauq`*r467gOSb&1MU?$;'uk#8S[A1!1G%0Bp3L[.\L73;cumHjFW9J0:oUZpdX+\FbPTc="sY/b,Yc>[\ech#_"Q_N-K,#t@u-%HAePbKdT:ufZ8]1L6(g@Sj_N3%k5@cN"G%JAu5?1),NJId-SCN7HH@\!/rd6GRs'ad`5K*(%`]q'#PJY@[1pna:8R!%Bi.qlWR-m%bZFn%Q`(fW#"$R6<Q(tS8gK#XT<3-2$.9=+[Ue&7/W.YS=q@/-Bs)n(Yc+/R<QBB1TL(#35Vr7)mOjo'&u2D><g?Kf_2u2L5IFcD%NXTgdoq7[Wp"H7s/utq^:="%Ej1laj^HkW;GFDHRQ3_.rfHc,F[op@D[rL,UKjnl&m7k$uI5-Huk;3=cIQ>N6@.=d1)RYNJ6P(0_%*.E]g0tJ9-EM%%nCC7oj4fV![,ROm4`G'gsG]:.6Mrt)_F+._EO2Po+j[_g)X\tRX#WCsR8FeElF4D59$I\EcRa`\@JsXq5S[P5t%)l3hWZ]^]m0009ClR8:c<Q,?^kT<GppbZNuTD,%;?:n$X0>TZc$U:fB(e1uJ=:-_T&>Q!'%Fpf;6IK]dR20GS`EH^sBJ\]P.'Fg1%k^S7lihEC._;-H!Tj=\T:'_[^Zh#/Yd35S]ar_[2dY24h_BH)+iGT..*a!fK1fh:q8._bUADo"2<;=aZ[($:Ui]b2S+:?-,,rAo[%aF];;dR@`t(BUC)\N"uYBkkAb?he0m#tKn(?ET!_+VXi78oT,<,>lUBa>8+KF36]Y'`ja"ELA2+n0H*UbM`s_5-[(bP@&RnJ]5B&%JsVDln/3)Fde4PTp]SbsU)G^rMB&G]kb<,<!rR=C)8mjn2%lBNk]GR8Q8(;?-?@a:K$@^;8_%bcd>2WD<sZu`ocqsPm)%@;:hY"r%W-UK&8\LTHn`aF+!Ku]pMLB5Z:=C'0(5Hu?$ZA21k3EraeRc\=iIs$&6XpjuKn!c/U_?\e>N!;AL8K%f.A)^PTbG-lR8;m8kcZAA%X0^fon;pAEl3paBpi(0?PbVUm']*>k,?j%W$b$gf9IJ$fnQZYFqBOjeGc8u-:inflG8a;VF]pO6JT^(#FBZ<LEGg;lOJnY$-8iV5%mdCk3-3>]q@8`X2l3T^(A>sR'+"o4C'[sWLFbK$*._+1N,UH.VnDdk*XuO[a1ffU`Yj.aukd7@6SP-qm<#qi&6J`/LqIeC9,GB4<%8E"B;nsouB_fO1A"*Cr@`pcaZd3V+2!Rl4Zg'_#7XcQ7\frk\t'1tp%Hc=@i1nN-&`5UrsGTqK.n21cd__='Pj&/?Rgni44rL\o_%K$cT<T;U9'#dq/I@N&S,igdGJ]EKtWNeS?"+F#6U75:c3#6Gk"3,P/\4&S[.\:k?483S`86+DEm,]#^Heof$p:C=>(-nRu/4/]at%8<\Auk&$p8FG+l0n]YV<kVEb(N'AYN,\Beb\dO(1i?O%s6a7`jb1i,35RbDk2t0n4A0TL=J3Qe%O<V@YYs%\Ql8j>(/&R%p$DRKE%T2[.b"#@=nOCK[+m6[rc%GTLBN<rC]@=*j&L^Zsg@Yo_"RWqRH0r\=#BqTD$7P[^P]ooM5NDXj2_b_o\3IhA<@\NaGE^obk``IK$%Los:X:dB[Wh+RB.'EfAF-4o3r:pM<B!b,qKk-W;)HLs[0<8Z0XK;,:9_RGf0UM;i&^<Wb=E&JG^E<a6dI:C#bcmGZ1)Q.QnVmQm=%_M`0URkROflp3(&9I\.p-s8>WPUmVR"kB<l#;6chd#6ua:<[>pY^ZF"D#K;t92<qM1o\S",#Zcd'Ii80i]nXEH0A'V5)Wk'IYVU_%k?6@!2sF8!dgN\[KSo&nk:r!1m"KDHqf*,Kj>9W<$_16YV'$JKVVb76XcCk<i3^ujF+7Ide9/b\W2-@b*ZLBD?6;#&FUGe:RE@me%7XOO]b6S,BkEoXHQX*JIjhmh[Bf]ljcg%;%G#DK977P3U'6QTa\36Y,BaHga/N-?[d&t>'P7>'R\36a0)Q.]t&l/>*V8hXF$Ul^n%4D4pBCO9ZE@e;OBWd:A:4J)XaH$)lo46Q+t>EqJjO%t'DC^[/7<[i5mWTeU@kX/#19GfS-K+OTQ:F;^(#$Y$o.bUn&:T>l8.2sEu%B741HoTZVW[4=e1O*;1r]%-#21SMp).QPpLl]fFg;6SF.>bG,(22FRGL#\9E25bFt@3AIK#h*C4lqU22J/F)XK,,jD'`6U?WHA=!%.(0c!LsB($bM;EI^s$]V%C35n-4@e9SdNL2).aXhh,ngS"_Mos#4XQ/$nYt*O9/mb@6J+iGcP^4#;h<4]R=(,ROHYES0/L#p<\l9%W9e2)?5]0"c__Y^hEb.PVi6qCqQ%(@hY8j'BQeK#!^ENha&!-,+`:%Z(T<EEo2l=[j>924p-C8S5t+K^4@!R0$rtl#E]+S6[<Wub%(L></]^8lBb_O+=ZTQNN\l#O/`:Hq]i+i?*#^m/th.d`oZQiD=k'`'s`I;(c<=m;eYXmNK-.Qs[CknG3&PC:A1cDF1HE=EBB#Cm2%MLMMjlnF4#FqP,6"FaFml+o>We')Ybng/T+h2B&e=?V?'Xr%[<2T"bMIFsA';bJkI2G$iY+JRMLa"4>aIpTM\SX^guTV[c!DG;!)%n2NF'ou^C!CRGN?;A2bsUnETdAtYHoPGkR[ZU.G_1JeNp,-ZC]9i=T.Q7&MM1'??&S;WWp1cqu5BV@RrBV`tBO2JWU=a*IQcUhhK%hMXA+f'>-4Jd1ej*3=VJ\*1[h$!dneALnXmDbL<+c[F)dS;2K7:7F[#nL;7e%j-A\<a?G'$K"0>b-sEc:.&=NS9=(kHAd?)q^R@a%?QnE3FkZ/+</.e%"Y5NB\nG>NEO#?E8oT.1>75'sJ+Y1Ng\oM$e=`<IqG]qK!^Ud#_O0nAS)a#'1<PsJ1P2EDhB.:a#@W9Ul07>-%Gg@!gGR11U\@7lgY2?OQF/k>pn1!uYo4_#sFD`"MO2aRDlsr8YW[#*6d8`uR)k9r,ro(0f(AC$b_<`F`DgUY/Qm[N49EYjg>lO$=%P!J\VX?l(ffR0A'E6`j'K;!@4qSqKq8'4KQZ^\Umb,dt(Z[U"ET;W;Lr*1A]F::\]kKGk.\1P?/(EEEO$l7a!d#JL#\5"Npl(mU7%(?mER#c5n_DXNjX"GVVG`)H8u/m?dc7/M;J$!D\Q4=P^:KrM<QKhFOg(@NddKQfg`(9ZT&`C#?.O(e&L/!KGn'l$Qib#Y;*UNVS'%Rr>7TP9me:Q'+`_KZqNYaNQV7ZP!7'+<VR9N+UOQQb*84J-8_W-t5Y</1_<&KTS52(<1nJ$:,BF;34Y80u_KS`<*ucC>:@o]lZeM%\W*(Ze'(Y6.<1G^SD/?s%rj<`YOlP:cs3KVlJg)rerd(.gu[*IirTr\<([Qk8/&RTAm6<:/46n'C?NidCUKQ$_N*@rc14Q:).aFV%:q/slQDrek@'>Y1B""jLYs*3TSG*Ar_:^U(IsC)G#bZ"<lYEU\E-&MI;]\Vdi@_9t!s]p&\"at;+151jcQ'4E%.D46*PB/?\H;p'%.`TL.8/=1u4-W;6/"oVc7l_:HQPS4bqsLF>%p]G)#c=n]iN4\kJ1Z-Y[EljV!q$[@^0VGaZ3F-EaQ,h@/&p<b;nO3d-@7,>O=4IE%+DGH)YD#OL^^_+MR2:Z]ehh_qS[Xa(ejBTh.b!FT32lfp_geK:m,.Gs.ISZa0`p"G(D`#Yk/4M:o88biq;Zol=Gm!siIVc!6bUe&%$\D=ekh'G*0o0-#`)#ALFm%F7F9nFW-58K0IheZ/n#osdW%'36KD"Qg4');3%2hYp>Zht5o1"r-`Y'W`=1+4Rb:o\2QM'GGFtD7G%_Vh39/KFK`E/.IWGZ-TLkLatXE8E!<PZ\r@3eM=#MpnK2?jG>+_Jgf%aNfP)8SdtWZJ`1>(;d;R#`sf3503NGj6Q(QY4+UsoOs98%CP%5!/"c?2j487>7Q<^GQU`4V81bc8Lh</q/W\iaJN&dEa:q"4-:;1WntT0)2C-E&$PnN5eXANhDfA.U7mSM2?QI6GbQ;'Fp'iL)%?>VRHkdUi[Y$O)-Ie^RYRBrP?=Mle#P&j)$iX@.E:!VFSq<]EN]B5ll(!KfBgFG2)lWeBV][rODEuIa`V*Z5[[_4HR%,G_<rb(5u%39\ogFMMs?esQg4FDkhHj&X2fK(Z9\hEF`UD'ER,]53?R,\[.p.__uuhdrI8ahbp?>65]uZIlE0??1dU1b-E@pSKq6*Qpr"%j+9M%+h!SR(PTOfT9:4(s+e"Y#H])Bae`0"2%73(E-]Q)<<l3+lfUfn/5!5&@LDX3HSQ#8>eib>03K6KG-J1)AWUP=PZ!&HCdX;Fk0D_.%NM(4r<YWoHSZ`!/9pucUj/"39pl/RB/:porRJTZMT'/i5<nB+77PlHb,\YkHPeg9lUif[+7#_B)6^%]`lRV,sBXI>t%XeYmEq.Am%:iaRp@^m?:A1lFgI!,7l4=nM-f_)eBP]hi=f9KC\o,#9_o&GNu'-!GriPh%>o(-)IIBdlDp+7,o=B43N<2!b9J$GqXAaHRi(MG"N%Q?f.fQh"_\.eZ'@=Io,-Lq41o`,Eug<O%93f#4[/iH3.[Wn=@5(MbbhI1VmA4$>T>A3WiL+,ds3X<O(/4rQf1`TS:+<_/3Y(qJ:.%_[%/BDTt>G%q1V64k.h9H<,.C#:!DX/K$OeSOsC8Vu]8s#<\dL&$32RI5Am6JSd7bSjEkp56L'9^tNc$b(DlcKp:$$c<&,KGS[OD%_"uA6AH?"SH2@=^[Wr,gTHN&WqSi7l!QWZU]#fY@IKnd%(^gK"\GelVF\2\:N+&nd"&QT2r(.l\lP"K]8=*pZd*7U/D<c3VBbm:k%I5"#,heEY31`5F[-Z2(8RK5mI+in-WJQBN)-$PM^AqQ8bZtZlW%*Eh2.K33%>F?"ua7hqN(n&bAJca#s[!K".a>Bc'pddZGY\hRq%Aq7>rK;-N#l"LDIS>KfG[eE,on*t-h0,!LBLZsaK`I4]i(]>oV(Wck%mc&-?Z`s:&2I[R\f!q[[Q41ob3i72^clR4Y).M07CICop%dKp[/;(=H#6!.Qre'2T8/PZ+[qt#lI/(Wj)01Dl?51\Sd;tEs_*#5-Tm!XHoZq-cGAaR$s8LW)B9`M"hBCJsp/oh,`*5T;Qq8k1q%M0Mngb"Qp/4mXuVL0Kt#<_fC)'KgV`8"NbI;<h6Iq;V=hbgN1';N$I39Ah8P2/<.%7:_5WBcDg8'\?G6c;&dQXa"l51$).TUSo,.%S!?cW*\bFcAmoX4!e#4!*0og>Pr$Aec4N`83H4r[,PBc<f4b:lM'I%D6?#,ZKVclen\6$5UI_c!i4GeV[Y>Mc'u9PO\,tSOW".:A%<TZS\J\[PpHTiE%W!Kt!@R$u(!A>DHQj'J3,oQln209.Y-CM)Hp`b=O"clHS3&gu<T8P2%oagS1QQkt<e,*i^93-AH\=0q+!ASg5%!\'r?XEcY)U@c;Y3qkL13^9/elai@F]Uo\OALju?])1\T(Y?_444*BE!9:69g+;DXh0--rbnDr%b%R6[<8&X,$EfB]A8[Z8Ba(PH%j="`iU14ZQiAQO%C*iH40\C]`*$0kIac2YI#KbC]nAn4f1VGTd563+8R@jup.RcsgS,rdCK'E^%bVuk0GO7MCZ\5)24b>7&'7<K>%U-iU;SXUeZpn\+]S#SHDgl!j#'^ebTTdS+i"V*C_7[QH6nugapG_CK#H4;&-`StSRLs_[?RKBUhBN>hQf7d8JH\KcGWA\/q?kA:V%o8BT%FGXuH9DEfeK+j1B:pZtuoT'JgH@k\L]:o:fTo&XE-WUA0F@nPi%*pD$(XmFO5mMRX7Y_2OgBY^ZOM(?U0^X[2Tdqkl/U?8*%+pZ,!k>#WRkQM,bbLaV[NQKb\&WI)9gL(M3@"[)eN3JhH0LW:nbQM.)NiW]]RAQ'U_P6?>".jEX;oI-eMUDi>6n)n_\umCid^4sX%_]_?^*1ASn"-Zr_oh7..8%%C_3OAct(89c2LpNJuC;Ldg9?k;?%$]p8<HDIWf)QPI&;/mk*I7)pG(%_FWVp`sU1_r2mM%Y-;5]-=%+]'jjUF94T&<M9.AO7YjBj?SpRckO&!qf@s0*7q&PAsRp#uK_c0&/9CE`51g?Fd]Adt;?:(2SMTfEaniN"Z1*@I!Z7`L9D+90>"!%#$&BudSqNKWt>UZ.%>9Qfo@TriZ.At%n6Q@SDeu35ZM6Yj]E2@VWFp;rIc?c\^h?XE`#3^$/[HFWnPMX`mBs/&r1Y&+NNN`(()oS%"a,e)kpL$+R'%1JPXWO=XLHag2TKRIp&f@b_\8Xbi0\(`,aR-#-X+CGpW5HTUTJjkB3tgO.C"^+!'>]>)8.Y>^e>/=hg%1OFA[5C%U!c5FYc10q#'$<2W/)5UV!6MMbe)l;-[OH#/?ff'P31($cc`lF?mLm[j]2H:0&Yg,,%S5\=2hreG=dHr8KrH+&rr$%&[m824Z)OQ%"$r&sgN#&ZB)mf%!BEq/drGNnh"3".K-f@[)o*c$;_WSgLMm.#U/u(aVS/n>Re4EU>V)=g`+7)pD\bo/]S;X,Gsr?+HE\e[RITC"%QY"8.jsHjkY1L*L0+B>@G];jR,$\lL\+=`P*P'Z9\u4fti83T_&=8.s>5$:talOh_YPB<`78b'hO-WH?rsmu)jsfr>UNF`f/WqiO%a-`GYoQi2&.Z6!"l#Xb5>+8B6WIQ;/`dWa5!$3PY!bId2L]2pmkQW;h/u``_O'Yt;8t3Qk91`&,*=o>WX&BB"=5u[Gl`:6(5k?r.%WNkJ0-+&,6j5G5Q>%OS_;2:M1a1m-&jlD@<9]J$U't3#;J$0ib=YqQ$$3c-e7sU8>P!Y%<K7XA!a3soY\^=OQk:9V9*oq)oG/"9m%Y,e!R,YUf+cl*uO;rsFCMrb/dBY.r3?r@[K&e9!L9NRRJ!dds7+d_/q?aj_1O5SOJGhus29"FY`g6?%7X5J*9q/cMHH^`Jt]mNWF%#qO?OrpY!#2e:c.`q@ckopu2pgj#-+W5cV%^a<naB3>;d9/5+j[jHK`IMa)GB%j]D-0gmdF`s1[9LFYu1XaNM5Gga,!aH#SU4\-T%-PF=W_Y+o)3\Gh^Q3CY8rX;t%jdN/Z`mCS2nUGXXA"o#:@\k(K"4=(Q+<f6",jS$.K_uKSJ3=.B$>0D_=F^40Wk<e^)!.o0St(B`%=d6SN3!2"NNFBXYGM$$O??&GR'Qdle6LTeQe2ug-UjC?a+M+:X!n#pX4?uQ"8r]j->!!a'2U('&"tS!uWknc.CA\8#mYWbO#4Ldj%c`@A=<r_:**pD_CC:[ZFoZ_<I07-On2935Mb:^M^,clH],\B&Q\6K3+1Ab3cDc]M8_A2fjX\*Rh.C%9=0ljnF*6XHmR!+ciD5U6.%Ysa5d7.#N^=X@0G<V-iL0toiWmpi--5tD,r@9c/*RmsMUF.\eJ0E1]1VV(mLrcn!P6<UDRc9*n,"lWJWLP:lncs0IenB>02Sd#L=%QXI:BA>HgBfHf87GWV7ba8V67NOp/fUbbDL.4:Q^Z6t',)D@H-j'<6b/P7ABI$a+)g$itl@;$1[fE2,cZa0qq@pki]GXeECgng+J%X^g2%I.S$VO+qo[hq1al5"OQh2s_Pc&iO0]O+=rhPa,Y<O)n*ep-qADG(s\5^6:Ab*V&k@4%%&s[LNupKMOh>+4eKpO%J%(m5##/%7=>))&U%^$R-m'/`)1ChkO>D1UumVt$b8QF\Ak%)2u^=saG5ZieJK*;PG>fMY<B/YC'BWS#99W(lHl,6[(a-mEm4V'JlgPhK/KY3%I\i#_RYCqC/@'0.gRXg_$G6:\3ta[Hq=D'6?%52)J^*`SfA>DWs-sGefraD2M7\Z#52DinQ2rS%Nu;O]7d026+u8U8S.5hf=LS`>%2G2<N7/>$LI5FHG!kYUXnIXonr93UcIia0Oq9SccIdR'm!UZM,E=0)fKlk,F9L,NB>$EW2>5BS=g%u05!7AgHO26(5)[E%sakcpJ%l*@U&d@J2;#ha[>WPdE"p.428(:r]rZ)O-4O`gsgnAK6[BYbI)jLBA.$G%:?,6XK\cF34:LXEI,H1m71[XbYH8!XK1Dfj4&r\ZqN%QM?6`DDY"c&fOqaHB`^r?R@>+jhNu7V@pDJH8J:f(AE%@Js;9uOq0&bPl"/&;3I#/rbsG$RcGhBHYU9m:!`YE*,j6W4JeIS);.8p%b\pdl$/(GD0-6U7Nm0C*P7ob_.M-.E6;i56Xge-E;'II")0cEbQCjn_dR=r0W`ZKV2-f(:f+o[Tq6?C4YW,a#CuOF3B'eF5]fD4P%C/pfm;D`nc:,VdL$L#T>jJ81"bki.8MGnWXPg;K#Uur\jGMJFn:.8+_rr(TmRa*uF%,>Uon./nRQ)pW&<(q!lbu#*"<R\[Q2*&Xs%Tf4blPFh*[)'V**^FqRZ^ZKc_J0kU)!2oZ$?2!J^P#o[V?dM.725,*>\NbpY8G<P^\4LM:!oH.\5P&u)/^R7$)%e'6_cQ\>L?Qc4%q1b/p`PU*^gRK"G"fJOu5Q:KX8:n2s6e[PK=q6O$*M`g!L6E];7VYQ7+]'E!f<ZADlRO0fUP+B(jm,TrW>$6-"*6m"NL2=]:l2K)%ie"?Z.c6LBUD?;(UsloULY`nASd6E\M3(e#8DCCfd!rIqZKl&?SkX"gC*>m7O^5)l[:!k`1Xu-lX'/.:'sAnsTJ4[boFXH/FI6Cs%6Y0O<V4Q$?.L5rM2PUboT[K1D</2qQ_c'29T;Qr=]-1"g[4Bb,JUN=lbNnKDL:WaR9%3"".*L2<ca>kjSFj"jocjk.YbV&L/8>RU%$'%%8fkDu=gPZI@LIt`nX]OotpKb!O;ZqfW2<\m#eci5C(Y.%ns4DT,.=6):4BsDlla\;1@*Y](AVOu_MmVJJk&:G?du_(R?EQF9%QnX=&'uGl5BZQKdaU$DV=c]%JIeNIP;jqH(>f!970[CdrLJ&,3H20+N_>T@).3=c07p;b6qf;\&TLhNP>jo5TP^BXNUC>k]l*__N%R6<o7-o(Bs"$\=OHr%uCjiOJ31DA11e+HYqbSi\f&:_;jBNi>H67Qu;UX,nH!KOico=;IO.LA#r&e>lMA30R\Ydf!-@mFid9Sb\&%93T-P6#+"!LaQ.7)>HSCCLeaNa['cI]hNXrkVpV5i,5((U<3MD<&1<hNiR2YYES?=nT;\mE?;tHm?Nfbh,I!!LB8*PKEo5aP6IU/%cs*AtT8Yg@"\g9Tj4gVFQ;=O/!J/6<aXo<0n4`7=27l9Fbc0'>b5s(I`r!t;#GUX!`qrH%1lWB?!atl69NqV#cP6Y^d1n<_>D@rG%ga=\mU:gVfR"tg4OlB_%F$[84ZhnO/D;?F^\=+a.7`W_:qtPjXaV_*[;BlqD)48AA0daTCErF'apLk_t$OjcM=V"ElAkjl?JZ_$%%'@4Em-r&0)+Le`f\:4Zu5TM2o@V_MO(V)UXAo73RgCo-R"8ppc*1-plfN@_`YZ=T'\Lj3Om%B+021P[YgQ'(6Nm,UcKd9E/q!BS?%Q0]Vm?R5X!'0j>4e0'ULUmP!=s$[CCiaAiD4t4H-3r5$%.!,56NKaFH]t=Wk*R?\Z++9A.7!p]-`U\8ZnTfjj^h.sllugEj-8VI[%isE3SPZ>1?<9)*[6g6_ij!e_lB=TG<?[aQT*Qo/MG[eJXjOqT&g])1-&X26\=uB!al\[?dRE!]b_77e._e.8F,3`\WqnDAQM8X^&%H*g?$8#:Ul2XP4%!sB8(dgROVPEaUJBtrr^[tMt<c+788aqG%?9LP1*P;?:s-#A>Zb_-mt8GZCV"Q?25V@JW"i_5$`ZJ,aFYuR["%R-lQ@R7Pp&,>^2kji"eQnO:*4<>,=+mUBC'/[,83TmJSdFq-qDc%s][=hpc7:Ra..D;sXaGdl8-&Y/!,pT7!6X&=W@gk9*.1i-XG%e`"Ue$rc_-G1EsS[Llh=U1<]"NL3F#T\YUI5+jgl$Wh)QmfQ(N5qHB%d><'j^Gg+C@UMf>6o3>8SX9g'EKmJc/%e0^9Fh#GD:^QS%%7a_&nA7'#1Y3Y'.(?'o&X&_H)4[KQo7]S<2jYJob@K#Z8oCdsVU6jAR[]l4m7O;<`]M='q$:ELJmZqBRE:@PmOHEI$?Sjq]MJgU%*bnA(>`D'pl7roHO.s6/<l(q(KLPT8XV?ofbdt&Ar[QTRQXM9nK7!3e@q'\DId]Fh(SGu]Ml#EGPiZ1172.V7%C`?QQL]-Bd-]08%EbX<-cn0BN!X;OQ^'0+A#8SCk@$FBc$oCQl96Du[)QBAdrN``U71gnMSc/`ZU$%'#0+<R0)$?&qSVlQ30R:r]Pbiq[dY\_D\V'o$%:&3?FRbbDIf=S`/e_*YQ+BC]d8%e^AK)/q[h-6aL>R'u!RC*@?G;md,/nE>>SC#A$Jqoq\csPlPI@R#54J@tn+gaNJk$;FVIP^?p%!kccD*P<Mr>Xc-()>o;^GO\dKilNf1M/8-Z1(UIY`ZQ_eNi%B4*:6g'N\%Z2q3P>o-QGkLQa?_QoF3GE5G"6lb%]C1>ZPmbc\']"%%R;t3:r>Nh=,e"MVC(d6SVmpnj_ap4C&UNI-UdWm>3-@TXd_QcbE913b\""j'\4\Z^AqCJY$Cgl<1WQ7>G(#Xd<\:kW%E'@OWRZ6%D/M[UH6RA,>K!iLDi(Sc,lB1PLS7lNL0>d'Sg$*L$bcP9_MnHZpm7FN.0]#^95oCIn1X)m":XMOGtV05pc"XTDM!d)+b57jAHfJ%%!GM]<9lne'?gnB^h`/MqTu0Vl+jpCnY.;]qJ\f+gX@Z7.h9itfe$YbtL'@gVDB3ZXVQjGsq8^7-i7o>?eb\,tr&^NM/F40Os(\.`%L$/[YMhAF&>HE>'i8"-^[">n*N?!b#DNc:'hmnl>H[56:Y^):T"[O%+p8t4??XZAr1@_QJ5h*<"DH6^#Xla6Y+/U4L?*12VB_<.W%:]+ELrVIRgq)g8*5'9&1aV&<ERnBn*,V&D`G/<Za9A%3_;p&b.$1_:o$KJ2EJJlLC3Mj2]Z0Yg5aKXKGI&AL(.2K.TSd<o?b\>b4%PhJegU7Xi$2%@e9j]r9r`3r?R_4p#X_X:h"pV\aTMaDFf;]*(]:<k/M#qSr;gf%g_APIqgSdmRhpV,GR2+RlrHRk(3=>9.K^$5>G%<RNu`HeIPX=d+(6cb,>^(,JXe,mbTGl%iKIDgk2c+MS8Jo)jLg!_!sr.VB.NI"0W9l]KVTV-MN>CDOo=<\EsjIM?Pn4#m0'`*PE-%.8:=d?S0SsNFWlNh82n#'t:V+ia@>laSb[I`2'dd`t!t-cg/F0MCgGVh9[C4AY86GD,ti*EcG:&4(`11[u-*SL9q7Edg!m=ZeRe?%AS2>l^Vobk&5*b4Ane.k.aj1#IT*Kba(9sm>'jEG"j[Bf>V?@*:,161n1DJ!34,if%[;bk7"B\@I>Md4A%Zs.ZeK?,?^kiAc$\\b%$9NsGG(M_NjZmDhIh/LugjJU^hKmBZgX*<[L?E;RmNnR`q+G*k0HJLs+<8m8dG79_?fbr@cQ!\bPuVj#441ntp"$ZbG8A\t+!AS3%1dbk9"8,QfHQOW!EpQW0OsPb2pT@\-rHPDAn'3F$)FD--Ya9+E/V5ka[1AYF6bTO:b>8b)L/I/l$-*rE1qH,bSV:OCiK[3/(MpT#%:6A-gF:r#K^Y#/5H!HM4\J+cB5me4n9OJ*[A6d1XG,_R05#9?uCc;i=e5#!"=RDW;ERJ4s&`1Gs6>KR4a.pO'm`Mju6"P\)>m=_(%rmDRjcpPdKH`YC+4&@W'n-p(4L[8<e.ZVjC1,r)7M"ak'36%X=CZLl&)5:8jX*Se(Gu,2&/V0;D4oOo;7`@I^75-qn^[Qkgr"I^<%j.m<V]F7J>U"]4[ODB_47j9q%0.)0;!Nn%-a!oNOT-KAA9NTRs#joWVkb]$smdj$**n49\/pDJkW/f!)=V&"JH%nX[?uXD]*:9$'%-5brm-m!,+d.E2L'`=2n5AJ<>!8AgrXMXq%*\FmY=4I=Dp6+c`n[/ZIRlA<"R,gKTF<#PIHBXn7[l:KT<A0iB=.343:`aT`Dp5NP%V3TN0"P8SYTrOH_a'H?%-O:3j_aB#Un#;a?i7:P.^&C#B11TI%S*"]aJ-Mn&f%'(?1/ilmic[=]!XaNfM.ukh-:e\g&_Z+-4nI+M%7Y7\8K'XYleh0+F/V0N[<P<*Z]UiEBeSs#Y&W+n8^$rNKe]@[GWYa(q/&\K4FI5B,>5e>41Me[X6p;\9.;4GJ.&;$C[Mbc-<H_St%J'(;V/;H+FI^%1n>cfS.9^`\u4`[hG=.hY5D9B=?R;AF4=.G+$P02_?.r=g!T:R4l9l$!_L?nST<j<PLJ?l\Amd^!DZZlcV;=(On%FjGW3V7B"MJXQT'\E=#Z)<ip;qNu7%D,S`KWL3eZDknf]T9aT_rF&4sPQ$"8\P<Ta%,mp.#O_q.!PJ[-0@4:Mf!Ed^<*,*&_5"'9%9NpGrN&?MCGI_%i'A*h7[k)KZ`:6Kk`ZUt<Ur!THMqS%idCtM#/!A@:VFnPtYbc"X^3oAo0OVj;@Di^co^3sBDjF@q=pkRdkXA8@%]CnIgL$7k5-,RBNoltZcG"P1G\hCl>CB)CTK#nqm1RpVL$C4:odJ-9RUd?6S-n,nHc>TmoPsd2W?VEI+=qY;E#bftYHOWZ-%EfN7%+tj1SdLZAU,ABV?5Qb'XA74gr!7n6Ja<_l0eHT"3$d>%PP93:`%\OU^=*\Re]W2lnNt_$0CHrW'd]>1g6GkbtLW6EhnLj'!::al1%KP!\6^[dfmmRgd;#h4dIR11bKOBWcj^tQcoa#3kadRbQb1.tFud^A5:M>uGgT]fn@;iZ&BA6/\`_?gnJYBp!3Sdh[m>i:Tc*TD$N%ZhqtD[TE'0BLBF*%79`7(UaG,)^"1&NH\1B!q=[N)]r@_7^c&0\U/OW6?K[UH`12PGMcC$MeBZD<C^8RL61:i,'Jo'Mi==rl!!3&%jQ$80'[S\'a6GKG`Q++rOCbm(1;k-1&b+B$JWC%T'_[q&lianhJK'[70S=q1P_@^tQ@(RVo@@*IfFafNf1NkXDS]^oG.+D3eF4F&%:G0Iq<[.4=,EV=A2lu!GA]@RD0Wgf=+_ES(,E#hEho3ccr11G8Jc5n<n*G3+Rbq[r*,-l$bJ(-6&`if@dg5@rA_g;!.Tc_PAT6W\%at:&,WkpYY8jI0:AS#XNmf-]h_6i/7#HsB5'7Zu_ku30"VR\L;R._A`NW[siNU&=sCUm`j=>cin&q!uQ0@oI#A$gkoIA,!lHETuP%cN\PWC\b=t.c[*h)p,s!F*T3,ComMheMTULS0J=+J[)Q7"*-ltJ<@`rAt^r^`/GctCC`2Tj+_8gN8ssMlU?#FT?63b]53E8n(MbH%U*OC3*)FGZP[[P7@!8i:hrl_\3F#o/$GWVI!,q[q*%fVm<DY;kALRWu`%lE2:^YJsQuP*KVrc[.U>Lrf%`TIG%:P>,lLfOhnn4sY%`@\&<'C\Iag(62ak#,BLIe4Z@q<NZ0K/2)-bjEM`kE_ignfA;Y.rA3-(_[L06;tQ!0eGaI;\_?I5H@WuGo-a]^0i?)FDt'K;CA-e%R#!]"j(#S$l2e@[YDUD[2$$dJW8_rh[lbO;:.]LTon,d:iot]8_e\LmP!]5?3liJF")Z'eT?oF/8ZS'`e5nLADB+PE67gYFkW/t<%BXcd),!NUCO;Or%e@7(W;<WC:W%HTa$nh:c@._YbFh\603`==aLRZ>q^R0JMX4-IX!-gm=Ln)jqd&)+G/&5^nCmJK[@VL_e`1ou8%)\T=(.0X&E8,!r/>:>c^GgW]:$Gj#cII(K%Oee9/d<4akOuQ>$kVgh@%0L9-JAWB%'EE!Ti20WQo]X#Z+s)XpJ@CSWKh.]lP_p5H%r4;G@h+(.A*lZqAG-XP<M/h!`FD#TDR(>h2^hr0lToA)8dVYG:M\2@Dj&M1@>p$7MJWP@$aG*Nc08;)\87Nn[UEre#,l;m5EE0ZC%UpC9%ESa4dDC?R3LpK$S(k-,,<Pl*<`hU&=8#tW)&hslo`q?)dPVFoM&E^Ii7bi21/FA[)`4YjOV$^$-)r?SOMIn"_.k>3cCfE%S%`\g_L4JfJS`Q3itAtk7U@R@j&no)J,7W(S.TtIeT>`1m5A3aK;=nYES)1nLkbi,AcGUWVkl:t@2M:[4sd&srBrMSEr0I87O!aVWn%\P)lo.5'T.KSF6C!^qk23XDcmk0H!1qC^Sf^B\'P=NOpLQhXo5S=Fk'faKbti60mL/)LB?1Tt[#:#6bqS7,ZoWC!2f<DeOaS;'+>%#8r+YqW1('*>6fa/nHVAOH<aj#KVnA87tUTUI`05(_D.YK1k%C&5$IY;T.I5fm<fD(^2UhN[JfkfJ0Ouj.Dg]#Pc(c4jt#Z9#]X[%$jTS69JlpiO36O4TXu-*NW&-<J0u!4kc!>KLaq`T(?uB]5R:%B>i"a,>^A3t)H;MdpVWM1MtG$K)H!$hV@VcKd=QF7,`^!lF;;j^%P$#(slD/N97dppYQnG6j/%B-TEFQKjp[W?ioMrIU@g?U#h2I(7Rs6Qc[b'8,9U@#tol&^&>(q=h<D\fhX;\L.@<VE<h`"GXl$^.J%Z"FjCM)WRUhA)\=9Q6VIf-rG_MA@$$/_>,8_Z8b001i"@N!hlEPrC2qa7@q^U%$8jJL=9HJk!G,dYUbTBZ_H,Q-g0,69i000]L%:%$B.aaR)dgSE>a:ANn>(Z;9XI`,E8JZ]N27^:)8Xi`9oO3)!]eoo_W%LmKs;O>*f8VWRM!P?qmg!\1fdQi):PS]=F(B>l`i*`PQKs%5h;Q:^Rum>)RL3A1AN%#[QhaF%%!!j@$hc[1[?a4\*iU*_8DE9B5EAE[Nq.486\_:)tbh\5"GcTH)P>gGbKi#f:O0_=rTsm#p^!)%j8<Lh/HMQ&cf>%qV((su2$K+2LBk1Y,Lc$CSH=Gm;Ha7RK<>(WA_.Zkiu=aM(k5'<(V.n8a:nBS\4.nV#jhU1RfoU\9G4kUd*EBO%[PlGJK\pcaGN@)M+L4QoRCfCG(o3s<ca43p$Zgaa;%l9j4Hq_O3h0=[!,AhMWWb;@%sr>U!8S=@K9\f'Wu7e")up\+/@1,e6/^KF%%3"Zt(=UF8pIfe7mW*&s845fR`3h.YDmKO]537!\JD+!@@loZ)8QuK'I6WfZ#V)]>rDptOn9/,RSTd*QfrMhJG<2@&#hZ!QL`rtS%gFkZ6+<VCOKu(@?UMp2;Qo_TqC&Q]K(dutqOeS@X*$Pt_VJtefb+-4M]sXB:giDZW_!r4-41!#rBhoktnjiaW)9ZbA=%X,A?3!rL%)H0NBe@@2&(aHPJ7TA!5lW8IWoVRnKg<X@kcs!4deoXpr_c*TKL(V$>PAePr_,!=\m?:dQ8/AUF:Ru_6EN:e?E&>Sdc[TN3ih0jr%<A-(f`.l03=,Mnn)]i`YeNt5a+_Ps1cXW"?*G?T>\_Pc.PQ`;UU`hBAc<MUlFE_6tQRtqMjf\MZT(7b[3^HsF2IC=F]>H2TJ-o&B%lq^UEpLc8M^8B0c9K)('MXFbi%#&0:[+/t)U*sH?*ViS@f5d&m!Xam61Z)YF9:Gc;Y)9u0dPFH^8!]p)61Xf<[_%SN?fXgg&YQg^%7bZ!("r92_0qg*!/&$%m^Y3o/nm[>r6mu>h?^)b+pf5Ck-&QKD:=!ZU-=`4:(Q&sqpfmRoK)EAD/@WE]B.C)81'&A6M$8&gdo3bu%HWZ6WQ2F,h>qt<^^o^^eDX-L+?b!7CpbI_NL_j>ngrN`J&t([Q_6,::<Q^:#MO>!pI>;qgea!Q:n(l^ZA94OmXmE&AR6lT'.oaT$%nWQ:4?ZLE-;\na89\t:mCIJ4UITZYU*uV7"LhjpO8XM,abheuZr+5rmG$84D2K#K@Nd4BF"Y%'>/(QPU;^(fH#4(u_]nZ@).FH(>%W9H7A5G>)r8n0S*\?K>-0!.I<[?oeY^X(N1O0`+?d_1fABekBL;*<*/BrE(oX9#-!_2mn#)nn0a7@a/WP/l6n!ipqB<'0o>^1Zj(%!5*cSa!lCtAI)92@BLep;_^hM=Lub5=]<Cd5,$>s8cPl6`;58HqEI;a^`TiTV=ZML!bDrS_:1doM_63t?k8Ri:.usL9uH+-+FB'Y%F2Z2X70I:p%uWdf2Y`:c&lTr1GD;1-1g2Ld]pI"+!n/>Ciu>$PI_g:o7Ju[e'O($GnVh^$YL[<+2u_uO8IQY/0dO6nb<Zrpf^rAr%Aq-lA*_`^C?%bXOhA[4h2l1UCi*I;:bZX@N_GhCUfbNprP`ZWl4rnWgEpn?_Im#Rd6"HEpHN:*M&c_Y-XXU3MQJ-/o]9!7cl>*$P%#]Pa:oWAlBko&[?L[7H&h,r.A5ra04<f&4eq(GhXSO6OC$Y,"f6)S";3SV`1f3bjUd]c/OnbbTN(=Yg,j1.->!^_YS_"GHDceqNG%c!X^4E2NcCn4%ds^K@=92YG(c;U%=?+-BU*C4m'[90kjMBN.*Z7^2*'8Bha8p_i"U9mL<(IbF%>6*RO_ko9(RbHPV_)0Ci?,Qq6e%KEC6T;CadILW*BPf1j3W(p"%#iL6<G5T&jrM8(`7MjA4k)08^&l=#d$:&lj4q=1gd?huM\pT&Y0/u@a2-$!*Q]EEQa=T;XPkTKAQ%EbTF)]sEZ.q=-MY<9#lQmV^(5ZTP;c!Z)VgTfHGu-K&\$2:,qc?DZ#r=$u]90U^M/X0Rc(Cc]CQJ8b<7F!p-gh)Ahs2r,J%L)%rQ%nA66K&1<)GL'<fgeI1ETO(qoGe3l!#h#9S!%[Bl.<Z^S6S0Jf.&/V4Uh[hfJs1cc3)h$0pI,6jh,q[ebRVqu"e%/:.#1,WdR,@@4%=_^hIdJkAFV(V_;8Y!C*LXU-EkFb_&MXP,(VN#.C[mhd1KV>!!(TG3+/.8=;5BhHYmm4Ef?OS$KT_ug'(a_9U8OmF4oOX%ZbO4L\%2tKBC_3^ek`kp+c.=aE*N6*j$afe620]\`JDLM[(RPJ$b^;'h*E(d;kiBE;NQgIl"G7+`p9PlO+A++]tplg\Hro9CH'5KdG!b6G4%WO^69Xp:JYr3e`KFYq2VC`!ic*\.P-VL2pr:]u3b=G)uR4HIYmParj'TV$Hf+naU,/;NaiW'=^8GWBE[W7Kqf)dgTr&g2r!,FM1q%01Vu[E"(mil(nLfQTaL5<?4DOV;K8.N;lae@n3OM:RpJO")(Wq\h0"8C_e[0IV.oA(P"Km>(%f=R=4V[CRW<Y?*_A8f8OMKh[C87%M'[bS9XaOreZeY*=[6c7;_#tHQ;^Q!d-gZUeDu;pe+h!ri;i"T`H1>]$[$h-/*D@X.9Eqr<h,O2G>,>"r3Y=/6WoSX9!Ut[J'22]%_8'ZV:b_h);',gN:hYe\q]$fDKg</DrGd?lVkU;bld)1ZZ2h85d1\YU==$2#!EiM3/AojL3J];d-*2+KB&FNa+cN0B]pL"0C]_,V%&n/XrR?>rsZZ?+W3-I0W/WjNQCqkqm-Eo;"o]2=13r>ZhZ]d>9R$a8D#7mN!rB2eih1mi)CE5T(&'#<nVQE_L_K!+VU+60N]WEqY%"%.nha/`6ic7dfp4S.=L'$(GcO+R_X`2!VEC_C[8N,"q`*mKgN!63I?!GB,/G^&/,R*u:JjVm_;%3ckR\6O[?l-*8*'<`JNKgn$&%,bXbTfah8E>otE$4jNf.;YFPgB<o4KWa3'7q^;]@(.#h@*BVL:r0[^+bl(&>WnH2F#K;KQr5T/]?"c(H*,kIo(pf,:a+M;0kjnAu%=c5Jd9MQ]>^tH&((Rl-\'TD!f)07)E/])#M!n?9d&ob)El'lN5]'Yd+Z;f_-ZlbN4!:bugl);N^Qjr&[a&K=AMJW^Dgom);;e3i9%jcUK$=3a)fQ('MFB6ORnMe6j6i2e'F#I^BmW]o2XO3F;kh%*<?*BdSYRo_K=5Pfl,3tgd(HGda@]DiGRKc]bDE$J)c(JD^ZHhf:A%g&/IuCPr!b*%]KQf>[EH%4B0S-GuXrcXN#iLP_><`8o1#,:T=`aPcU#oq%2CJi4"/RT]ku#7to^DP#5&;PmWUq>&,Z\6F:"BggA[%G?h_M#H]VMbA3?A=+V(WCXQe;#$@J(5eJ(R=PaUASo@MXg#!N./hB:5<GgV=HXACa>1ejeX$LOE5Nn#"r6pNDLF8U,*[$]J@2UOh%iAqP%*$Z&!eppK"p+m/$87U>hTI\Q9,EskX>63"q4(!4VdE(/!On7#c2'+Mm%O_j#j<FaHVE@6h/)m:>D.\Q'2(es3#4XC4HR>4+%M0Agm3qUp3_uW^uV*?VJ]k)q+[I.>^;E:4n44&\93"F`CSMc$gkYe=sF#[=dJo2;7q!uVu\R:L],oG_>`i2TJ*6a*I)=]DV(le]r%@U_]kO8/@XUG/4u";m^W,WeA/<8-']*eMMY[2E-@Tn:s021F0:%/r4fFq>OMs-@-?kmhSb-br$\`TgCX,<3\qS94W-2-%o:P[2#9%\5H)Sm!3pc02s+.bQ`s,WP2?qNC#NkhcpC0eWAYoh'h=fndC$7!W3l/a6b;%Q5LXb+L5hH,7=m:JQ].4oF:a725+G"j7W5;1Y@es%V@,XpIp"LXP=>.BUdP1B8%n45k_D$UWm,C:eYtJO7Ho[/TDf+2-eCjpZ7$NAAk=HEhrmWN`.hab/d+B]1d[,WaWOB#('pIu0ni"q%Be+Br"u^M@(%aNND6WKAQGAO2FB-hrL2\/U#g,te2o2%o,6g6$2fjN*;UgA0ND_N[_(()eFRPK]1g<iml[hfPa<QieF-PUh=_sIA%^cb#VNURj-j:[/4'+L:!73MZ<Si3BLU$a-O)#9MU^iR#&F4QtkNKBKu??GMqg[FbSfE8j"4r/CoCgCe8q7dNZ%@/t+J?s**1Mj2L%d>lV5&52.QitI@\5?1Zi^n]BV_><6\!"i%\B%q^ua8FCnjlI+TEh%B@&.-!B<aql&`H"Y@TLU?bEc5@&LTt?\QeQjK(W^`uO#ZpQ%.]$&OEFAYf7h"KESWu;&%PkbtlI9I$q4#EM&Q8[b\_Id-8133Y8WOQEGu$4iDqr9OIQsY7Ve-C\kp*iqdpe-;KuKOm;l#,sb,+1`%.AePQDmBF[#T=B0eGa"5iM'&WqX2kolVaV<3o]qn38g;*+f0u$")mX.AS2Jc0+T*4J1k,om><@XkFS%)rWpOLS*X3".\:Gh,R!an%oOp];lO5iEP\eOC7*XqDHr1ImT-7"#1>#K!6KWhjI)5L;cti\]W-]CWBYs=4XCMqF.:Pe;:B9jR4fOtIhTf9-YdZZ'Yn(%FHm[ak%kO:<iJYGiAK[HR/71YAf5#aUj-2Fjt?`GljH^!*J@h^-Kd7MfjpXh][^"CNn;Pl/mF[4uVE_=03nsi#A]_JB;lDj6d7YUO`"BJJ.%BKhE[HGK?lQobN'q0/]V.]:_/fHO(6GJIo>6+#`?^dG#Lq\#bQ1n%*n$7S%Y>X>B/`Zpp-qF2`PIcFN_Zn$tQ$GHMr5XnV;"p#8^%kE'g$WB"ufB$H[)M#W\'DYl^u*S-LDR1Gi<HnSJb#e#;%UES\WDtn1JKgi,7X$C`;XBB)+XoSqSPg+[;Tk,V3QK0pn79[((ES&u[%^Wd'_o.E1Xl@P0$IY?JRGJ`"(!*2jZjg5A)U":Giknardl^%K!,ahmA;=pOeR8,#;^Tg*$H4QeH=G5&p(doN6j^u6kUr>F@IDHe5%R#"I@I!;F@F^RhMn6p*2+@-Z8YAB<ZCf;-V?b\XUKi2I&8m?A7BP+HYnHJTd++b^M=D!G@['+S,=2<BB`u?'u!Pue(Wg+-!9l1cQ%UfT2:^E;^'eW0KY#F$(OrSg5Kj_8[;h1Yap?jQaJE(NPT#j<)Z\u4K9"08X7J_mOM3//hX4O(C$[;b3ug)u6>GU,$9TPH\4Fl]Li%>%ne18F=sL7I,ChmH$itEVF$h^o)%&S`FuBnSR=G@:td^$ZU_iWm)Pg,\qn`L0?=S@`5R,&TW+=^!k*b#QV",$jQ7d/Ui=mB7UWK%q9%XnAcjH6]FiJX(FOie/%H:3X#$$%[E/'o:a&2;&-8^Z!8s1e8(.O"]9EAq4pXI85Z"$pI*6CiLD'Yf<s`(qVo[ZLc5bUE/&9^9%gs\ou'Xqr@=<]`?raN-L4^q,@V^^Mp]%^tc7s)7qND<M^qPQ$>1n[>)H5.o:J`tA6>K'$ZKb;Fo/J!']9Z2hI[iXEr'G0s[&DQI;%(pDFh*FNNJEdk:#4lU[-&REHY@tUnsWR3:uc\H]?RT?MR-Td&)g_-4]OTXVd8>?P*i0Y$7?tqFU[G8\#7+;?S=*$^!=eguG<bgNh%RYrefbSe+`<TC]PL5D1;e16?)Q90e17+/Gm8UT[\W[4qU3B:m9ZF6FV`B+4"?u'Hf!m:\A%Op`!!]JStkRsL'o`9F&oeP`S]$^+Q%(LEa(KIr\VR!j8/C=6gg`%>^C%po!#@;1D_Kj<ba&Au@sjuAk!1&i^CTfbnj4e<4(gI\PZ,1\iI;MJQ`Zb8YDD,)QC_X3X/73?-#%MSH\-Fe0^G*87\Q(F!N49GWa7n`:@q&c8=b`ZiJa4tF:Xl@18_QDSXVA&-4rfC9X32Xb$_*cYk/nnYmror&]FTpVP^a*e^rXUn5h%eerOt+]gMOP6>euLP3@^I<"N7iYJK4"d:(;Y)QV=k8*Zc07@4D1,+NT!3MlO#Va-l!f>8B$9K]#I,PUT"bh"M=JBK,Xal)=g;2&:%;NBhVjL''59(2o8L/=ldX3*+O38UMe%$Ck:0JGonkc`=ZX+g#XAfTPdG;n$G#SY"i_se9]Mo[U9E>OF[F[Q.5=q4m.p<q"M8XS%(%3B?(d^^-Cc"lS"Q#4TP#pm!8Zq;^S_WbQ!`N9K!qo<7`,>]Gq"V`df4N49p+HthPpFpsOuD?V%\d39pq`D4]T>pVUo_0_6B4qF1Y%XrQpMYRlfIgbOjfHNE>'U+q)7C+N8N!W\cm!j5s;LiBTUfM:4T2c*):p(m&8S0dD[VjVWs@)leo?Oi+rTQ74TZ*X@D(6t5Yrk0[W%'ZBr8NnHn/A+9W<^1I=]&nX^rH_%UZ=o]W]<&5Ot97/%=G(o*%/g&uB1aHnV+nuQc"\#A(<:ie]IDM6<RjjmknZ[\"NO#sVOesNE%cs7'4r`pWb:X_U!TOSl](]jaN0KT!87_0?Bhi\IYq'<-@K>,3g!"hO=r$*+eZ+T7/ggG)q=)C_=d,!Ua#/7g@Tj8AnU,8N<e*1&t%#MrH]VpIt#NFr:O,X=Ag+fq#QAFKE#?Ihuemmm,XNqL+2d;(eo.s#5SlWEWQ;8"<PHY&61ZB"-s5GlK<6F>U],$;^EBLNVaror=#%HNfoR>'g<>8:>tN1@Xg2;11WA,E55(C9#sD*Q,]u*c0&2<:7[<:!!:AaV9N_eNA4\n&S.)N"\!3CgrdeHn>cAZpm^]-N@>A,oC.1%C$6X$L>e)@MWq_(?DCu#hY:TlQX?+m&ZKr<.@=lM_&8aAJ1@X8hTrUZbQ'e0GVuQ5b@GTgB%@f"$^oRK_*%rY>R3kNqk].4+u"Sn%g\XCl5?cV>8kG9gfN*;)E1hVEfh'OaY&2.*cOrN"_A,G(6L<L1Dk,bPMlWLOZl)*TJUO`)=jQK0kSQd6UT$Vo/<+++)8,-!Bq]bs%RK4cK[P]+D#IUuBJ:CnMR*\+%8\3O!!8]j?&N*J6[Spj"D_!E?nYSd((CMo<KC,oNUWl4`S-<M9L1:9i'coiTV?NCm$<diIE`B*6%P+6U6[JLi'X9ecuOkFCBcr5tO#0l.X*@O!u*=s:q(U`gVk)K+DQZdi3NL*I+8ind[_NRF\;-gLkFiQe"Ymb3JcM/eGS):<h/7?u;%8t=p0H%.)0&n)dQHJg>%4[\,N13_i%mC5,idB8@c0KqYcL[)$e?.9l=^l[D2X.h!>Y$.-f>er<'NB8YIKrJq>Di)kdfm5]K=Z!;D%ZF3iQqIGmRJ,:99\am^`GtQh-:47S"Jo*:3&Mfc*CsqsuWLNKh22VBp4i'Q?-hK<):RM_FRi>V;lWosrBX<Qk=2h6\<($DKIPH+4%Z@BVrilF#lN7*#U<])"+2j,giQ:[L[+2;;XOqOAaQp\2/,66!gGEpkD+<]$Rhk%Q*`*DZCGoSrC22AY]CHuW`c:@a3/\9($8eeYD%S&*KZdjMidd#^KNDE^*CpaS=paO&hegk@,p/C<9g8R+I^_Sk*+g&Bl]L'-TnW/a1GP'q&l17K:qqNlcc(Mgm*SJgE/B$87OKrb2n%Z8CMBS:@2R^mNc62C!?=@'scG!9WA$L8+k2\Prmj)3=/.V'i%7ZL.H!'`D#Pa%rplZaCasR#*Zm$^J)0&d&Au<Stc:m1^ufl!;V.%WaB4Xe2VYq:Lg^`_S&PHaf:bQ$o$?c^6pFLk.?Tj(AI!AfbH"dYboIo1t(:JiT&U>>g0PS!ulJq.7KNC^EE]'+7c>\elJ>i(\lC+%Y<0TuI>b]HcUP!`1SLRfk8PXC%_FW]_5j+P7"=,;WPpb+f[YVsg,*Vgd8,_Z?YO5?:LPL8!/gu.;76,Uf$DsH6f%,\\kM7SSnrg(%V!8^kMPcECO7(RlRWQC4Tk=(tKJ!e(_;#pWYQV0"'AjX<gsXe]MW\=&L5_P>NA:3e!Ph@$NfDCZf?P-A@_u)L\u@#4_V]e9."Z*K%P:d!;R%Z-iifNB`H$YYDRIsnPj]Ks7RsrA)?j[e.^(U9oWCZ"\j2t.cfSdh?:!LUqi62_&j2h%pp1#Tr=:i::m([m[iB1+"\#X&o%2X^0"jEn\_n_.:&ML'eMD84+964G,aG\J!$C(8pN2"f_\`\!^>egY9+q_P+rK/%Tih?e&3)0m>2mRkN%Z\Ir^@:XDcp(@SE!,URp%hk]oWGVTM>+.U+=JBg>/gVs^_G`F;&j6)aopRU.IRP,!Yh.!Su?0@!iP/oh4P5.Dn/jShL(uI\*$3-8B?`MTg!EYa_oDp>+7$#^*%knb`2q#kC0P+U&9c(:q,9ecjeo&;#o2bM+OA\PpK\85c\:Br-#FU]++^K"Ut@j,4*VQEq,nFCC,MQV5Q;9O"L6/FT-rS"@A)t%VZ%LuA(!4'Z-jh;ET4SEd+&E.=>BTriE%q,s?Z>;cY?g0&Mj^!?li$3p1l^V#&>orN>G5NVf?dH[kt;#HM.1%RUd[IJUo-*0TqNW*+f%K)'8lH(6J=j@a2S(/gTBJ'5Z<P6BV-:8@h@\r4:9DTeeWN5Jf;ciP5HEl]j.TC75=i9-(`@iop%JG,6m-GJgT_,]=5R<)+gP]kL[%MX"'S&ZWC@]m)YY=7:,c^HBk8[sV),maKkq^b\<\?1aJ+&\n8(C(\&"1>X(1FRaGEfoN*0TU?mV5T5tlU0RF/k8[q`p4ju4b]PU@%>-B-Z*b65QY+9Rl2b!&o%tEHT6uITG/E`E'KHDf'Dhh?BO)9h@,AAGsk37:4W2[q660m>/_G0=D,W@X\n*ZE(ilLWH,X<CWKuAF:%*mKWqPaCR?+/JiE5p7)@Q9RB.lI/2ip?#S<M=JIAXO,&n-V0cic-?+AN!A4%%;\+15+3gLP\.\1I`.bKdYa46.;g[B0HfVj]HNh<%)SAW#Vp_,kGkiLGj)lf#<QlH5(1lb)1/Cnu3=lh@A)qJg#%F`mb-GhP7UiTCT-m3edMPTTn/q,$GpE$JqY'qZM3K1ao1)6O`6C5Q%m-[2-Ml?*OcX63Kn:f9!J]lC=W+NmE%pjr6D'sVDBIc0tLI`qa;+Pp^;(l)`^c@UL"*pj7g>'o91AT.Rh=Y;EQO,2uN"KP,DZ/@2%4^<@sl)ST(\)@%2RR)mgF8F>)BUt>$Ob.>.q7B@H%'\6&4[Gp,cM:+jIqME$jtU,(rjJ51``r^egE_VAFW(\RQ!O%"mA2[.GWm!k%0>4,,M!i<M`T;.HQQu)j"@g`see_4u;/Z@>#&5Sc[=B!6DUqJ7CXQ5ZXbIm3Q5W`Xjjbi2.`<$(iFQY9rh!%Ul>=1Vhu%%L\fpD;%'pbY!:cmH&k`/fWq2?>2)3k7Z-jDM3.@nk9L2[mW4W[KWl?i1Yf#hmL"()@%\L-n[;13YB+%s<#^TDF$>/6-\nu=,L37#c)T/B$p%qt(N9h2IQ+p[)H3(o:/ms#l3GRi<mo95:G:!Z#F.mW6A"HQ-Z/9;gApn3WRZ&!FS827Rj95kS=bXT#SZX]%A=)n&">Uu^?+Ii8ea%EkG>gbKlm'+"=<k9$Wc,#o&[k'Nb7Ng;&[l2RRr?L>.\@5EYZ2:jnlck-fYRDh,CpAA5e6r('E*\)$oY^;\2=:sSBi,U8Y0F!epd%?[!<&L$(F*q$%)0kilJmO?o4$C-Wk_BBp.R)[jhRg<Z%L^YO=7BW&@'"Hbc^"dS_Jmb%S4k/LjR72`/Zk,mWb*AR%GG.NE!80OC@%>[dcOr2ZIgTTkEE(=JL>80s+t>[dcUHr`_t;28fah&KPucE&\V6r1ZVBgUP+4h)k,)cKMA:i&9#J"Js\oY8J)7b>Jr:2iM>Q\Iq7%q-ME4G44srKq/\F-CJ3F.G#g:aK52%mg]OP?Zu_KAtIaR[5[:F[h7Z:1g;Bf(jM_qb7*RB2"m/_<\_1BoVIJUnR&n0_ndb^Z^X\t%WS`DKf"[cr(K(B=qaFrI=bE&2bWNBmDFft4<!/KlqmS7.!g0Q]rhN'RWn0A+e-MQE*^@&W\[?/`RTcrq:nAV(N*q*9BQWMQB_mtg%R9bVt"CHOS(6[<e#gWM/mI^H29GD@\:;Y/_^PegpKi`Q+?,3>@0Y`X=/BiEU'gq?qHbHUT\N6$=]d&>OFggr?MK1@H.5fY=]"[/<%@\%E4l]7kVkAuIilioMs4^'$sNLVc30DKh$_Wq5CF5GiLRbc0?"a'>L&lr:#P)QE<d1nFg'`F0iqL=o$R30/bb.;@,;euZ,ipugm%+URtTBILlh*]Ri%@h[[>f:+ZH"sM3$A0pFBeS?U>$!%RbAH.+<@`$qV+*R^hf)PA[V$9HHarSA#HF<uP/s&IjXW.<@`\R_c0ON8)%:@be-J-,<5[)pqUZ6CJjP&XT0&F;k3!WYIc!!!S]"^)#E"/AT"$@FhN#%Sr!)hisdUa/AgR35<PE3*aOF?lX=i.+?[ihOm'P=0"=%bdH]#/sB]b+-4Wt"j2FN-p`3V&&`_JQp)-'>l&9D$@n49/.*`'d"4]mgS&B'L=XLW4,H4kk/.JYB9pKKYn%]_(OiQQg5b?+UX.k+%Z*>2?"qHI=oKkkpM@=ut\o>T\A8FiX7qZmNZ.KV]+=S[LCXXe"#oo"#ZV]#bBEJ0CUR-obe0+:cYmf$S=kFiHST(Ye_a88c2#>iQ%I$BiEKt@JqYT8Y@`Y**gY^n4$Kf.g+BZr[R"RL\?UI$%DTaZ0^cP7Ni(\Vf]Tqt#2*6k_.>"2qrPt2jgNFfo@E7B;"5&;F*i7a2"%XW]Jo"GGjCSLat]m%k^p4JWO@bR,IQ&Fk<*d#ao:Kf0PT3,PRFd"*QTi;gcYE.cmVM*Yem7bN4t8i0?^'qGcf0I[PM@D"lG+e3r=%!&['b!-*b/7Z82Ccr`i?'ZU7UU*(n1BVj.qjHO*DiK412Ai"6'`W]""*fe;'i6XJ$^p0WYdfGRD/:t`N8KWp9?sK3YL<OrH:rlVC%0U^IBK>u?>(gS]'@?Ig*=N\b-`KIed^fWFb$n&pu8>qX`!*qWBV0'MT!#DH\VFb>3T$RLiHV+HEM$F*Hda.&6&"h2bN*natcmpP7%4se_nn=2Ze"tbWFW@D5RTJ?di7#+7:=]-)l*9ejOnRP`/lG>q'd\(CtXb?4jQO*g$Bg[111XaE"P#>s0?3gYnOJ%F;OrbTB..F1C%M9p]*Pbe0gatQPE@8>o]J.Q!+.0ugb8BMG3Lq$OqL1t.k?n5@g?ru>JD'XM)"A$@X7'b6iZI[-R'i5g9D4o7CfHQW6@5G!8eIYoC%:PYND$*"gTeVHl(L_#7t$s4E'_B;!X,o]<@DCbuMbcu0PP@5]<Nep>^Kg\1e5tM_&ggb,=-jd]13%D8>*kJ`L)b?s=E#,Z5bQ)Bd%2[Yo\,A8LHc\hlPU's-QpdePD!t,kgL_!(nIT@^ub-7'Fk`lVZ5-l:?%?d;.J=Je+3AL%Y.?L6q:^-)lZX@SfQ=(/L\>-q]*LQni%<-.gIO%&[<B-O2$nJN2f3GfH.TM"dVHSS:5nDR!!WKlIF*a1"Q`IJ.M97gYj/1)VG:`Bb<+[mcTe/kiIU`d^8[aPruX=*aIUfL85%NBWE?8-;7Xd`Fpk3@'gtbHM2p`PteR0tLI:0H_t`?-m+5%\V(cP$nNV`1WnDAruPB'a\`YoTQqmSdGlt7AH!o2IReKXTRaZ6T5l$%MN7pt!<X6o>7qJAE.n;rLe$O&2.T:2oWU=VQjttsS.7ZZOUd0P<1t;F0Vo-9W5M$?j$fb13$/;)'e`A$"psJQTIM@;8O8fC0bksV%d"q2D8.3(IPZ"''"+c5ebqK[G!Cp,r(_@KVAl<,i>LZbE15a:Rnp2.2CD>\@9O(?hBp#K],_b<dOYeUWGY/J^d0bCr&KjkCX,Ra"%ppg:82OBI:NRaCmA2_=`)TmjBgr@9U\Ssr]9K\_uO/[d%+%ti2>)JBlYb;U7'GK*9=9P9.AO[E8L/3DJC^psn2P>c.YlYIl#TPAK%!RW0T=d+@M7mA.0U$\'I#bX3)CU9[c$&g/V5R5=RE>jqD6nn8PdUMEuKq_tMPTBr?ViM"9#fB,NoV<]LaQYM/cl+\$;KCJT&=?NS%1peSn">VMdG(VO/3?V4t5]DPK88JKXjG<jDTfpdc-8s*O#"pa'j?U9]ZpIS8fq`_;;!B)7HK`S[2.V4Q1^=M^K`qe6-cMff@Zk.J%/qaQ<Q=a7;_\3L3fZkn^Pm8-5-`IImCdqisJ08#4n^/`da6CGD>J`ts6:HbP&rHiaKJisA^glC,$Q>st9u.SS?sl=(N\*8bjNW6&%5ls8CHD?]2D6a<4oGb5Vm]qbN/'OfO1HW!KT1`58LYEF/o/^L/kPWaco;U0jVt.CEb-&!Tlc+<,HA(^f%^)tOL&<U9S[(HCREtQ>%psD)DI/Z<2?&T0g[JG2slL&q)7_#X3a/:Q\Enj@`ao(T_6'^h]#h`2AjmVs#hs=b39'X;ZWNVK<DII#uc7)WlMAKk+AUJ?p1i3,7%N?+Wi$rlc[MDnW7/$Fkb<78=?EM)r/kCq:Sqn<!lMjgo!TA=')/("/VIHe?1gFb!PFVEoWW!ug6<o/82+a\U;YYRHJ`We\.')PW@%94\r,"cCDLQ'I<*.L24M6NrA2;b9[$<68eWK<7h4XJAq'ikFs5`$GDKW?ib219;cG8uZ9j!M"t9]]1.`>@qE56\]G;O:0FNT`UK#%?KlOi1e^:R#7:T'*YY(Xc_Zo;la5J!HcKY!3[Jm)[gZKs2G1MsDUZ&=(9rE18-C:DD`P?o.&]0d)l;V731Ps:7l.K6;/%RDDPP<a%0UXN1[Z>+;,:+H9"-#e9!gHim$&5<e"+cSTJDqh2+9Ot3P7`mb";rYe"9AZS.8HFE\,rU_h+ek6bqMnK5c'?hE+'47J4Mmo&jSu)%O&#lc[5idg7jEU!O=NatkR\;i>bka-g5%jNR0"`D1#a"-a7\A]c#u?=;Nm49TWrdh,`iX,_GTL3d(srf,T2E5%O0$BOq,XQjcWj4%_J,+]Psb`JS;]"0!S"t-kQkQmd`m>Ug9hTLa\)bfa,.gu"#U^R&O=..BVG&p2G]&rR"/]_0I%,H#9b/u/=k]IJ9WIn)imdN!!j\"%3T)aT7us1KJrtg[:C'e,Q$@-s[5`s\PKQ&W&/87),T;XtE"`9j.'PFhkR?orRcAKuc1'!_@pu%:aUIWS&gDC*Qf/sE9]V!b$BTJj%!Z6<<pd/ILp*).B=K0h']X)l,#bl0oOcto]%9n'i1Ld$nhUuEp<m;PU!M`P)(GaHt(%KC"%>P$gR*Z+`B;;kHOt(I*"A;b33uc86%^sYro3u^o@=INYGcG:I(,eUI')ig3S81UZja.T62eJojZ0[@QC;kYXC+=RPOA95Eg-c7dl`jAU:`/I'=!062"EYAl2_NHSaW)UPo%7P>6^,:.BY0T`O#b4=1p+c?%CLa.T(alXa[JKA-PTj4@N:^SUt*DD#t$$9'+4sAFU+\,!M%10=s<pB]PEnVYc_k\^p-]\c=$jYe>%U3[qE4p;K3,Wl^eo<<3q6jFc3_j>U9<i"2WA5R=B9Z.R(P&*qt1a4"XJT>0-$#7Ba/VD8ZR"Io,j"o[qC.0mA>V;5f85#`[!TR,t%51UUea5WN,9%W]-qQQAY\N7i7D+*+K9mb<d%1%[EGY!k17!e')0[N'KU&jGuJ;0/<G;e0p`)2JZL.F$(SIBQD:^_Wl,_L"[G9ES%%8?q2?^?*FmZZ/0(>_u%O>cA?=-uf#QUKY]0`k!9\:709dX&*3TbOEfs2l)15aA*\L'7j3B&NUfS.)QCbGRK&-/QJK\M=Duc;Zh`-%6J:p`Ht4P$ND6ZHK3KF%B%T^#0g8DU>A=fnh."oLbE6@lS^ggk`bN[*K5%.c.?FtMJ4'ZB)D<$V".Omo!<o%=L4FJ+r'>>V(aEM=%<((QEnW--uLklM/p8$Xs_.1rQ,.8KU9.NpZ:P;K)[S.:k,\&V8:^a>_>[$A/8/`HZ8L&e^Tb&:U"9[Kt3Z/j7PEF560F!boMH:^0%)WniN@F>a8Ct[e*i$\oN844pBqG5`#GBEZgh*8g=jI!UJR5NN/_h@Ni9RY7+Vt$*`FNj,SR@jJ:%^J.ZhQH2-k@9:Ns.$uELRCrK%2)DPeAp2ha$1k]fmZX>j9SNAD\]W))h,@#aT>#I:pUSB1a\H'*27ig3&]0NGpU;#h]"#>TO.X#8htQQq;qU=O^/j#4Z\-Cqqd"Sl%Fce]EM[f:R6%s=7l`U,pq;<a`D-uJn1dW"&)lc8ZnJu@Le`DMLam:)B[R90<f6?*5kjDi"/nZpeDoNXi,D6pT06;Skm$R61\%g:`%rjqk%\9""k6-'r$1<8S)?ZnZte@FUDQOg[;g?BG(e;!i77Xja5q7g'8pN`P2fBCS0T:H_.@pRoPFjK:>H_%^Bp9q`jh,JUqqVJR;%^Pje/H!=^'06H^N\gi*QcQ.tWrnrE(;dX(sk)HEZT:,G_e"O+[??Q:6UVl/Z&)FG'e(*V\[5GNr9nofP.iB4:L#$h<`a4'HWk,9V%_Ud4QDLRAD].e\]c[7A&j6-&Q#l".c7aCdRof)`*s%XZF4+-A[mlAttL/9nIAUTn"7+jT8ClOK95J!c)O.AK`A&!r)X0(gSVW4S>%N0jsk/h<Er^#;?/IL@%eDT:>T%/[l];%rr?XCu0..]<:#Nu[&R^UM)C$D#4ShJ@AkkYrSj2GA=mm-3rc]uU&"pL*9-NA.rqc$'-6%nLK:(rMfVF?,&;akPG/3IU7N(^<\[/p3Vk'+cJ*^1DrZ*qH>sMDTJ@:qIp4&?O0Z1$@JuqI3U+ul2CM1AVKf^ZF7Bbbfn,As3X!,%VTVSQjQHCN>ukA"NZL:!NQ^^0Tt>a/r1!%LFks>eI1EhPAES(HDRYN6*WN$UC0VV9Hf$I@lGfdmp%<D)b5'o`Bg-_>s/t<n_H[@j%SMJuZ%sOXu\uk5r2(H4kqA;D'Ido?Xh1[K[mD<\[n+k_!Y8)(=ArY+oX1i]TgmqZaqa#?8l9j-(<lk*,2g[cEld!i.IIkpK\bc3Y%F$jMmmi,\g%,F;DW0ut^bL'lWl[oQe<.4MahQ?_S%F[3,D0:""fYuZgb58p[\"@^@j6"SLmG=I>hMog+,@#XmrI+/*D'e6*o=B#B%5&[@jaRR5d=6=qV0.r3F*INg:.]EsOodr[0VlC(?_YEX!bB=>!]740CYB'uC;giTYrUKKfbOpNCI`MJTDKXq/K?^#/Tj->q])A3J%o_6uJ.fXGYg\:Lr?U&G`oSgupfEag.AQabu3)h.*N-(Rh>UC[D-S?'mMMjhji^-LB>Q@TkE*t"F&.b$4!DPAd>]5)7OknKJ9#k93%k<(hsSa1XSOl?2<-YN:f>meeTET`F@CKJ)U^Bcj>fZu^:[47SAfns6T8.(:J=]iJ,\3O4AW`"Yq6ks]\huWl[LPX.G\mbW[`9Zeb%p';CE!-E2<'(IXr*-eF;rF;5;Y_>^2H0eRS)R\+^^/WnQ#[^57AS\-=9%BA&=Xu(Qmn9M"2F2eGX-rgWb4XO)RC-L`p!TeD=K^4U%%mCH:U?AsE2kb#7ds(B#N\R\C^7Is9g@%\2\MRN;WHb7.s+_Xq,Q$pb2eT!\Qk799Dqj*?mRu;>XgAkE>3!Y,C$UX.Q&@llgO8qR%`%U^fh_/;I]qQ;@<SHcJ2:]9R/(_A(Pu#jF_LBtJptD5j'n7n&ouj$5?Romfg=?s-fCYmkaGO^fmDD9IHbFau.MhB;`nFF,*F#YJ%>V=X:e]M3tqXrTJO6ge*\OTHj>-:V;s$85@Z*i+sPo;0mF]H":STbfYH]-q5=Ri/pEj](t=$c5K\uPN/@B1`q2SHRAFYhq<$as1)%.L91Gau=)$XO`WtY'''Lp\O*N$8:I8IQ,6!n+A6!X&ii2=;m.2dX(S$9mcQ?fDCK6OYak`g6&!gVnPj^m;0Jd\)+Ib/Jtm^Y1D<6%X0H(1(KoW;mt9$[SpG%hQ`B&Zf[$sW)I+$,?I`e-eQP+Q[8O,3'milO[OG`MAnij!<isr^@LKcS=+$r,b?N.i\b:'WP2CW^F%oZH%&ph$qb(A@A\+Y.I1oOl'b>kX1Y8=s`Xl\a"^M9V@b$42^Q,Z_l9#WIYg9#QbPr`/%e@Jd[HPO$PY1:uX=3oFfA/"jH"fda%<$'UW%WDHQf!E9^\!H8XLoJ1erccUVOjO[mUb$%)j?esFN5AI9dZMsYS+-Zc8#],b@JB8'(`E$]3;[IuT-,SRI;/n'1/WgC,b@It[&j*%f%WT%kY5CUU2L&B[B].uXj?"+o*^\=<iIJt>gFe.8uV>W"C0)Osebh4^s_RQj4_J]?sL[dNofYi-:06PfNgh#nY(u=J\_K;meQW9Zh%p,c?:mN5-i(HGd]5#qsFk;r@laL[cm?X+G?l`9WtIE516Bmd)@^4a)QY%+WHGE*0QF_9hmj1ERYIWYM?Xh&uY2Cf(M[S+mO'0^%7%[J;+jT'8;(@=#8,DdSIH%fS5u9;i@]fBqUOl->b9.^MM:>TL]Uac:NBo4-9emc<PT?[kfo6f*j+b:t#ZNSKTd2-!q3<4C':*8sA*%pWr9ohXfXf*:B]ih1tm\mbGAb1?ZAER*"ddWOhhm)]?@OB3r+HrY<0-J(B\.rA-V(s1%Ls3WJ=&ZWg1Zq[P7U^2Jbm5+16E:Zcc"%aUS!8T6!]80HmcDk/Zb*"-KdcKX`fuab%_RA7fE^!&O`:'F8Xr(`\Bfj%r]s3u!2M3/V\!A7RMN%Lc6-7hA-E&7PV>KE(uP!JhSF%aK%AC>kDgb]&`BH2:L<GYpb,c,e_$jOWD_GJmeZbhn'a66Y^C4S$Pt*=[T$Olu_bEkfjIB95]"CpeYYlLuX[FQD$>?M<E1O'$.28%\L"?Eah!V@T7MZ'DTqss*S>M'qa?@X^ULe1]*S<E>/3LsmYrW=I3tJ,+1?!K$FRSj<"fpRPlJ>aejXADU94`Wa=]4&ehp3.dl#0j%]DlfC%D+p6f`FHO0f3d4qrpIsWo-ZEZUTbtNIma"6][a,ENO"6+&RigNkH/j<NTOojTZi1VF%gY)6A>6;bHQBY,hDC<(]PaYWm"G%&H8W2Woc"2oHJ"M91Y3OcdeqA=12YjH_dWo]JIN=;E'2<D7kU%FrKAAR?d^T&u`Df=,Pd5d3N7a(8GEm%s"1@*0b&tkIOs3PHnM\%IWP1KUpR;I'A:hSYZ7?nEMY-lZUW"1e#^!*@'&f97VEBNaLW:FG"sH;iUVR,5Cuc2?pZAs+fX`cVuoN1DobQj2@XAp+Y&\!PgWNd%:eG64HDIM`jHY18obbhrKC(ho8Li)fTr]:o=CqEXH>bj.]f-6WUOp5DZ6Nri)/%<m"%-5fXICW\N<MRLM-0N,eNor&Aj<(FliGke%.Q!p<=A1VU^mP3<'4bH@<S(6a7tOBiXqWWYrpBE?Y"35!flrQB6[[c@%Ej453f(0B2dIG([#79Ok^=[U'c+".6Cb:eigi(,Om"NU%M&XQe64*U02%2fkBMSaA)lWD.9n=c<Zn4j^%s[I7a&tVpnTEa\Ce(%o`Ti8NZaEodH;fGuW><+&(*1s.2>^'V)H2V,C*F#e`m`Wb%'];N*@_*Ak&gBJfK.%qq[EB0DHKf8jOi)DT.HJdT+/Vu*0-YBd/ZRh_gpFt"O[%[%XE3T4^h'47<[INNXWU!\.6Li:TrZA?eU=c=%@3A#SjZqppampY*oudKs]:'k?`'_kW:Yb3Z`bAToH*ZM5@pE[T75f_>B&e!T[Qu6h%34[B'SFn_+a")PpkrqiP(W]H`QE6Op4hOn%;9OGI2XD_"!?P'X\JJt.rgfRM]-dqELa99RM='MU'e6(_B&mH4?'L<iCK;;!7c$sqa*gc/W_?MW#tn=oqhHj;."]LtB.Lf'!XZM[%M8gC_XTem_)4.:YJkaW77_%,iKqO7V6()rnM;VO)9eu:/3l.\D!(!qdp9-V?']Z!La(ger=p+?[$[bQNn9'=+ST(6S)UsX5QlM0I%@83ZgO<jOVJ\Nn+=NU!16\(eOoX\!7(`/#@OoQ:EHB,b[DL<Lmq,37#Q"pnG^u8C;]l@Y86EX]1^c:R-`hCs@o6C>K7lJ\fY!)+/%5p/RXkYHfqUj1*tWU:e2@u"a-?jfge$e%H,#ghGu8[_B7jF@FhUG-E.*?-W#Uc?j^0Eaq?p`dng9LF:?>S@-Lk`cm!:iLs4\2#'9%bg-jYFK@*W2IfP&gcI,!)pl,r^/"s%YF^sVa>lHq`mdE)+;o3rgDC>2SiF:bs.K2%acTGA%q*hI][fmk=MmXtIR7bC8:\L8L=mQ,%M<9d"X:d&keh?C)B#6=[X4V^hU&Mpi1F"0#-%R(Zd9*S@?&hDmR.]j:6GX+>@n,d3)0J&BGc5q>7#=i6cF-5K!ch!gOo_Mj@\]u+%C1o7H#R`oNC7";1mSh=0;H05IY]h-=K1k3KM=Xh.OKIe[rfKB%bAa+'MG?9l"<*p>Kk8:6lK;';@W0^7>T[104GISO!s)4Ii4l.X%5b:gI3bcrr/u:Sb%+#=NGd?NGm%?d0#9R^8_NM`4R";QJQ5gZQAT2TS!25bc,iM/@P:&AOYrHT;FCl@^Wc;dR,";YEBHg]B[u$C"%pi5aR*u&'4p@LHDdr_1HG8P(6P3Hh+L(Z9<r_>iL!AJ16=nYl`4!'3s`X;^]!5V,dTFWWJ3>bVL52!Z6-Tn[nkOk#q>>%>`"BWhI%8mA4[-*7b&JWAW`0lKk>UjcPrC-XY]@rFo]<fTjK#G+L0#L^uoImZsk*me_5r%AlIOn;V)KFhneA;!OND5/kj=lNc7Dps&`4,_?\%S5hJMlg$O^6("*ZaT<^K'QIWp`R&hd_jiK_(PK]$.m@9*Yc@he8)K;a:-@mor[Q0#kD**RSO?(Of77qD&B^8V+/3Rh\f41rS[TE=%<tim40:5+`Dp:RhJA"A)K<;+CF@-]J(QP19d=iQ]Du,-i[;&"!?uN(UV_/jL*U'+3f#AL4,2uOI"pf/PBG^5l)lREd_Mgm*!lHT\%VpF3SMEB$oiP,_oi0R@TAp$L?R/)ru=b9G3AC)=q8h1=c(\_/1`X@+"_jHUi:0oo1/El0/i)s.$5T5b4?ef$X4":nG5\DHfrobWI%g.'VDZa^<EKgsr15S-Iu5o;dsD*%HC7!Af&=#X+mdNa+l"eQL5V&6&eR*bI+)]5!$JFFbFT%i$\_f=hLkg0*'U04@&AsNg8'b5N+%0mLa9]R2GCA-H2iE,+5R5_L,T^tE6h-dn#,UZMPKbJjNGU#P,F[[$X`4i29G9p5X6FnkV%$?mUHCL;_!Nn2An'M]]c`jh)"h9VZK%>=[nr&,:@nEF0j9g"bhj%2'[\>[-'f892eDI?HErDOP=Jmfg6N-FY:drLOaDrWJOU''6u1X6CMu%4@!F&CdA-HA68M`/I[@5gaDL%\*,E$I#<1$0B+tt%d7e+Z5%T]JAEsaNDc2D#"@L!<cQ).jqi<64Wb,JKAYCi^g_3dO*UmPo7cB2=L:'fU$gbf`[^uEajUZb)$H$:%T>:TU=jS)_#pX9#5.R4LCu?F,E/4!`MKlbR[_3BOJi3oF3h+f9oLjHNOd2Os[Qm!?3AV%8'PX&r#o%BSf!lkt6'<+;#ae\U9&e!1%.%62r*7buCW>fd)!ki?`Cm4gWc[cH/JRD&qo`j,d!WC`Ye/%O>"S,8)MDc&OR-8-m;B^qqcQfeENrC=]^cGu87:R>3pdGf5;\YMD%[$^r*j4-@VK3ru,PhH^A\nA`5:o3cjnb\+antBgC(;l0[IW">3MbWGn(l(U=nLVZ/BWM*)lR*kpU;uL7LUb6HK+nb*r5Y1cLX<7Z%Y7TbWb3rQm]A&jm\GdQW;_C9S-IpCaJt/r1ofnS6cU;gVZ7Kc=EgDI3Oq[N6a"iGt*D.WV]/8+*V#!q!JV?K.*u"O&O=RF!p1Yb7%;c_kO0?%:_(0buN`@,+IH38tH&_AKoEFPl]&AEj%-A*6d4T"6Eist+O<5_[ROUubn%Ik$k<3OB2+qP0%eL&!m^`58G"=PTmL%8nM%&">5,TO4T=#qe>N?R9V3+cGTI8Tr.Y#D+4cisF*\m<&4p2Y%;Z-S>>=!4UBiW%Q0`U)IIu6F3"oOp^XnUeS<+)!m2"Z_8Gt?6.K^%fKu<:=rE@8dRV6mSDb11>9FE@*`r#5k)d](m!lp)C%cHIMo,-]:U7m<]\rQNo6o()K"d>=b`0#3:Pa]*I,5&>C\]YY#4oW>HMh<p%ZOe8CYL9,W3SV4dX:?CY;18Lm@K)7;R^4Z,$A)*q]!J0RRT:lRmmK!EDi\ef/>FQ(jsppH#`=De\DHHAdRS=Ja;6QBe&j==7;XZk%k^_tS+SIO=).:[DLoCK-!?$-lK`F<c_2%AR^uCC'nRoeYjt(YAh;q]HM/]C/M$\``H)NGIG4X/>TlsCOoIY@G.jtMo`JV$;M^b-$%;]"dnJj#"WS)nb6?3L%FnH*n3(9R0p[&brH,!1`S]&6GOV:d5;#2X]2#NUkpZacA`6Xc)Y)!IVnGT/\&Snhn/R%o26\>KiQLL!df%<+^cHfs+EldKDAG):+AD%[LD.<Y7G2LLf6QF^@ZCMa:<##Me9dGeQOr:8$"Wfj-!XdWOWd@^UV*a!cQLqU+7XbE:m<rV34GB0kLm%K>^m9+E+g^(K=edN&#u$#21,<$:(.k9Vt!'6YY+PNGUe>4skNcrUnWaC;>0,>r`XqCq('L3%Q\=U)gW!V4"atA8.&+'l*'o%K$,^%'HZicd6H8R.LYi[k:j)1JZ/AI`REOCDS+!,F#jR9"T+DuJgGjOcSOAr`*oA&^*EHThsDLq7uDXCjDEk8IO*pN*WQpWJII__M%!=q%=F(S18MCf6]GnCt$t!8MF^Mk7//B`aM!P902+/jQ4N7BI.%EP3Lg+-Yj(jaq@LF.iLd"2T!:;$c-WR>RCP.i:-kD2/?X"frRhaA!%#?FQIO!/Qai4=0o2Aj!h;c?Ug0)r]-L(GTIhF?[E%\c4HAQIu;&%W_fs#d"U9Z\A;k;JX`RCb/LGe%YW)A=e*(dTCAQ?VB^"Gr.9%'-+JWL'*KY!FoJI2N>RC+'4l74js"-"B]3)fFWiQfd[qAb9I*"!^O.N"P?B1VpPGGEocc[a$T,N$,sE*K1B<gNDL0uZc9L+64=7d%HAu`O#0Gku1B'>-&'0XRI>(cGEg&",$Zr="M^_B6i^1QX`!KVWIZj(#FbX_-gd3Ojm/7Ym4N@D++OCGcn9"7LAc=On`GX#,L?:12%6D?eEqUj,!Oob#h7B]ciNfFeFAkL1a``0HrIV%JX&?q_VQoDgY9ILV2$)BY(ZF@g*UtDlnJ\349(Dir\$8*Y"K7*<b%G"]:J;^Yt%9]cR-BPd!dQ$<'-Vm>@NjJ!?`Z3,%0I:f3P&JN[MO0A^m&7W.tLC4.HW>7M'aJ:4dXqCuPi8I+uEM+pQDk1AENP.]+8kaSWVk9*5%(\dBbphq0\4IH;LY/Q32B)7ZSZaBRNR?\fGP>5jG&irP/_6[ghi$>o];94%qf[)Mm+>W4c<%?u_i8BQH_ofDg:UTL_&5gs0pmgB^%XhqtZ0ES"4H8EmnnpJ2gLsk4q(*>B<(UIm9.Q/5MGdCdgQ8k$N*A][YW,K"146/938@<FHj6^14B="J?)iqYL2D:,Q6o/19j?/[q%fdD'4%fcW$:b3#])6D$984HH;4(nhgZh=76+9sM^Q4(Fe(I^;A?/R#"4Tt5_8?e0miNN"%m+>)MTic-I-#.1rRUJiE!!ct1(V$eC%lG+#P/-SlH=7ber@4e\k;#E:G%WQ`P="bij97U=W%*oim.TDeZp7L%-_7K0(]U_ua@FJM"AS]9A7jZ+\:-s\VL'IDn)6b^b7H-e2%ZOG@S?j%.YM#%^W-4Ds1)ce4)Jum;epLT/tC<H,`^6*r_]V^n;%2,<Bi(4k:TMYjr3<oL`&7"bC*^UtqK)?3:>64@+A!Q&8JbdHK%C)e+\'%:REC<.@jVAoZM(ll/mq7fKW9;M)+G%^@gkjV@B\d&4m)9JT.`mE3M<R!(>@tU.NW4_"YHN$a7RFeT_B.ZQD/4`.#n(#M.%AKc%LT#O>IP)p))C_G)tF2.I91b`Zhi$XV3q%V1:A3h[8!9uI(""e]?:p30HQ6CIj;cnSQ=h%[m>rBU#G"L1+A[tJ^T>2?P(dQb@%*9uVJQm(8(0Za$LV)enkmj'H2Sm**5@<R;`U(rpS.--.C_[DTnj!$f7qA;brim7+A@o:-/$3Q`+Q'$?ddBl>*D:$EIo5+]%/;6Zk%47KR,`fgVhJ:4)9i"DNDa@T6JKF1pS(GV9$12CMl'h+f"lCai,cgjkq4&>DZis-TIl9Qm;9[LC]n8Z$r.JD%@Nj9,=</l%Cka(7i%a#U5XBEif3A?Ii>8#Bo6E$->["N#l<_VjPGdIi,Q6O#J_Zqd3-=W>=l+!car48d(bi<$h-e=-cKL1GQ6JCPET,T,R@fh!mgA94]^%ZIqA`G&[i?j/LE&@1@0PMZs;O@lT>Qfj$6-"!Nl/PuSM;]RaAc>0]'gkRKNbX1jWDCQmI?#h.caKLeo\C^1-`:S\GW$8VGrR$RuW%SfP'k%"mcJW(o-4R3-qc-5&^)!k#Eui#efr]3Ia'82;%NYhKr%ciaSG;+_gI:kGK[JK9c:_l=mk5_<h<r=7n$"rlOaZ[%gU4n7O@%NjN?:,^MmWQU-NgWf>,6p8un8L')t#*=lm_JtYc(BGci)$0f`0%,%.diS6gRFP>GR.]dmA"MRHP1g?UqPflu[qM7i<1R]#gIj\So%2V%DrdhZ,eF@&Kfr+6<U6(emCmUYtTN\hI.^NK!#niR:UJ.MQJS=TNs@R_=K&9H-L1&-=NKB$0s"59jO.%T^aEd+8cji]5tD8%>L%oO8!J5JlHOfh^@N%Z)KZ>DRY?8ST8/4Soh86Q[2#Rk[IKeJ.\i&4cN]AZMb.Ft=G<17hF$SW;%;@`FQS%&+^.K,e.9@0rm51,BK(%VguTHo^EuuL;M2J@V];CIRVi/6&Wa;ZiiB<*-WcPP0>B]E[7D&`qa;@I6Xt.'TJL9EOmIJ,a?)%9=3,Q=0/$M$1L$f#^o84ouE"8%,9di;]>^qJRoouE^YJZ(%Wl]Fg..8k]&r];+*QY'Lg]BAWFFeHI25m13XV\k(4?JC;3;\)d@epT8cXGKNj&f"3#]soV/pgonm^Q;%5XH9F"ag`_oE]Kn\T(Rl)/4I&Rr9k#$,tFm4>so-7BVo&'ZE861q&aA>f87W^E-](L7Mm6*JD(ee*Y!KkhJtlnl/,"mI46En30f3%W&"VU18e??p/NdeY)`(#3;(2$!%F#j#=)7Nqt@e#WGLrNrG>@7`#'.2fUp;:H>l^Q83Y.A,Uqc%plE?[%$p"@)>'\F#Spu^Pa5LY%X$R<J\)-A*/+R"/4BEB-%(&_6&Jjk&Hl6"?%^S>TM_=%L_Pc]:gd"E8(S6gJe.B"9.fb?>,$.6':Rof!=2p+36B4IuieIZolrE@Q%IZ-;[/JR83i#$QFJC0#$W5@Rgh)GTrOqgYc'uM#F&q9?t:0D[2Tb\rt?^qn?GV+M,+Wup=s*YOX>9BukgS',">e8:\!+PdDfas;M%WK2m7Yo25L6YXZoYsDt3hAg+2`0rJ8O[0FDJ_]ckHml=chGN>R&;mFW?9kk%=p^,1O"XH9K]Mj_YJS*1NAV1S80BOpDd,h-\\d;-%Ab``[CA?s#9@\7pa_)"b*W3^fW"j:.V2`f53#Heje[Qblbs?0;.q@oj3%&MmBeA`hSTsL4[[7qbJL_3HR8Ec;<Y/h^rucjG0%',!%n306Z(Igsj*+ifdlY@_%P)bu(kZsYHHR/74K%(L5pE-ufgp1VtUhLSV!hW_`OKt1<H9EZ)V"U7P.q"R6>P;)hD/*W=)\]5-O5]gf%]<3hG>"$dESak#r<&oet-W4eu.,;(Dh1>8KdQZD#8Idc9*S;tn,Gl'uj->C]/bVY([Nn"N(h@u7`h6N?YbItV0+J0Ai/fjIksbW5%97j?g[lAuthlXR>o8YqR.@:6`M`X!<1utfLMEfjl&nE08Bsi:p<s`E]X/+f_;-[X9,Z5O$p([3,4^/@,Fd3RApj\:2*%GAPLd;be%P*^O/9Cd+@"PcM*CVb$)$Tn'/=':EU*hTW4OO-IC356p;<)7cZ1J0@cDk@,7<*J(=$safFaYUqq6n!S0(3W5c)A('Lr;h/Rag=3!%INSMB&=(Vj^D/p[L.G-#G6;I'rUOLO7u-PF%\"Y5M`9QQRiA)X(po;p$G_.;Yuh\c%r`jhMkX"^L`D91*J,R59[>/"NWb&e5X[D;%1EubL]W=+182&MDMMu/4`S5WF#t>5siKuoiMTJ-=U>d@NEmCrqOr)\ee:J3*9UcDIKZn-I/m/7D-PJ(%"+rug`acr1>(EA6`]A;V%a0s+4"Ws!bLV3sg^]GZ$('.V?##\%?W?j^I$IT,!Ra12K_gr[69ss#\\Be0k3TBKlrSR)dDeXg3'=YldB%k52&\?oOO/L"D0+0S$%_h+oJ_IGS(0Z5a?l//&`<gJ9PXIp_3k%lbrE[5ZUd]HbA5Jn%<s23g[FtgPmCM>tm&\;c^ZdX%,7F7=Jj$G.b\KJ=Zl/%Rsd&e&i%=%4Vj=ui:96MIQTM[0HY'M/-N3[,-F'keIBE#oUI1+CTARa<2Z*ERegaOGm#5dIX4#3Lsq(Fl;cq^IR?;lu$)a/=Cl7?/gg/#GbU%KR4ss4JR$6;s-t'$_*O?`MELrLl8@0\k3/c=%nXpeE_CpWr:;,@e*E%-\%Nh8(EVK*kYrk-n&\-MeW404U7,"-8.q\dD<Z'2N>:!%U*u&OR4X2=WRaRqUW_CAK+#.rT`s[I%Ek<l5q*/@$!?;uU4`$Q68N@QG>/QRhm)bG^b@0(Y:sUHCLsD9F^iOgqO'Bs15Y(S%-KiY%5r*<hP[m9H*Z0#nJ6aT)]"Bg+q:F8EVDpDU!YSJjh-p>EZSUp$@\pO9HK\nD,ADJ>8]4a1#o+Un&`Hs:U(FjNcH"?gC&E,/-E'ZT%*l*p=&W0(($,FEEP']qFBrh:Ba]gS)ndJAoW\I4RO;2rt\+/'ZJIBZr584?cRPSo>=L.e@38Y_iO5Y?rRP:$9NJ]o/b8CBoDD@=m%Q94+-&=51GM@=A;+u=H?De'+$Pf"&j[dc[Y$Ct.k7d2.dLQkU1>!q.*jVS`gre+bRg3p,%;T$N3*H"4=i@?62f`\s<$DRs+&bp$#%"e%m@'Q+*N+-:bp!NM:kHlTuW`ig*oEl^+i%AAbNE5kaB377%4/r)gOT-1N,j;egjDh*Va6ElumbRo#2APDA6B]mPn$D*=JlsSS'%,?A7lbD',u+a2DD+&-'^+6p/s0@S#EWT9tK_%VUAgR`-bV=;j?=_;AaHu'bSV/SlSa0ePteKOIbG$7B%h5:\IEm>QF#Zu7rpmp#l%WR3#%$#?f<.+ZmgLS2ZK1BEu.ftBm/5RdV?!:Xh^dbM0BHmh)B'l&6+cu[g-K#OEoLS*`i+qp'A)97At;NdIB/@%[a<P_!n9ptEq%4>[QOnBl>.'@aD"i]pW=FP$.cqh9),6q=Ce%(Eh/2]F:]An%A9g4%(IE<YL?"b\oPGaXVQM,n_uE2Y8>F"&e%-rs`9'[]u='FWD0%eTSgF3#WBkLcM;Z05SRQ1tq?J'(^;Np?ZNcQ$gO(4$^AYf:!Bg3G]AQ%,6fKM<%AOB$:F&KX=]9LM$L<5LY8L2K'i+KKc95eE45X%g)t[(5u%b>X\crIhSF-?_-t&^KlIHZF^r-*T)[4iM-]]ojfY7AX6h5!&#p1DD,B;G:acUa;BV'pGd8iA&SQ__Q-oN:TR%;odADrX%N%O1*Wj5qjYepNM-SB"M]#fhZ[1/hqL*rq-C.hrM&;ZmJO5NCB]!@0D+o5?2T)g2]XZ>2Kk9mi5O=i)4P8GAUTNSTG8>6F<#[2*O%?=,Gt;HFioodpLAnE6ZrAOVY2MT,kmXm/@26c3gU8/tm'-&8@YjRTeo(A(C<UKcJ@CgcM@+GkSZLI&']A,>sN&pHV6G>-Hl:DAG$%V\OEmGMKeGV_/.H^eL^dk<%I#kT<q<5,W'#^BI[:klG@pU;omoB[WQG?r.8Kh(N5AaWK(:9+m+R4B=Mp@jS%W!2U6id2a,%'t[&4%+q/e,JdAJUf)VpMlD]eQ%u]]i0+cT&%+F_[BW"RZNi=$h`s7&*k#?O$=9uf-N7rApEY:IB3H"gJm#d#s]A5pgCM.Ns;f,IgKlec]%rJG0Wa9d!nEZr^aTdLr`D.4ndB9m&OBli\iTmqBXL#FBpnCTXm:'LD,EfR&SM0rpi&@FlpH<6$$:B(r*M2o'tMp\b=L<StT]/nV7%,F/#-rWlrW1`'9L'^[j.hui,AeK?%&b7pUMrrS=EGT/\*1I#q^(S*FTc$[sH&b9DfN<3@ODg))VLM3i6SKLLQ>QL(S^r!1#Xe2_>%Qk'>`IN%3<GA(els22kLI6blM7pEb<K<M0Q(>hC/`]J,GUkC>DWBeP0DLU_i!hVCn'Utc;a[kOR^!`"s9W?<qSPp%N_k?C:\7T']%6Y3t6^t6,jj3#t`>[CR=k9f-"57Xb5G'bhQK>+EbG`:Z63p.s89HH35[:;pS?o&5le3@jo%BWcV3&5+;T6W_+S40X$D!J]Dk+sd,%$p,@*Qq6H6@-@-n=e/s;D[=.fk!U]edZrDk'<>2#JRTjcmdu]BF;heBN:S&^3$A5Y%FcZY8H]Tk)]J[Efg#8%;d`'LVbBZH%#U=U%Sd+olL_`ZKBNp/0Kr/Z87S_Y/dp&C4%X`5,Dbg(I<[/Hn<=u8(;kd\O*GD!mW*tmqY12J/KVc(H&XDG\r)-Ps>BP^5.5<1.!H]c7%$$!5PnL)\[Fk9%r(k;$#P,]`TqQH#e=9B:BW3l?Z-\>6-A!mA?.?9bq"lIIVR=L:RJ#PAu/'E$?[#f'T]X%6SnBd(dcCD'Dc[LP!%0C^Q6*"Mr;PJl=`j^6K^"ojLSDNDK18LEj;dZkKZ]P*f,n)tLqZmT^9`EhY8`Lk34d4VHp2U,=&37]&0hS+1rLq>i_C!XNZ&EndT%:iVr=3L..8M+9\+m"JR&WIbR>koj!^:]MM&CVm2I/"_IhANC'A%()*gE%m@5'LX0i[*g2\^n^JY$>1HSP>KrS5tYCJb&050c'E9_%/1X7O-Rqmr?n+.+`R#nr1YP[J?,AuU;VLa[](I)aL<#.3bTI4KJjmHl%X:SL"N5'L+Il980GUBmg5pn13"3o8,I]SF!6F[FE7-#F%T0O&[E1[On$PalqC>;p4o*bYLWrO#6KDBZ7Q2)0[p:5delT5ZIRXY4U9erdA9t]g(d85!\S+Fj=\ZW"U>/FBRKl[TOdfc::4[BiT%6UjTa/_&=\h@.-0W4mNcBsN7.,h4gh^K/5[dc>$VO4puDBm+/GE/i3%8GFEK7rZ5/:;dn]?Dh!oI<9-f8["3*j:'JNXPA)WoNBHP%+U*N^>9TW0D\W0`PQ^\@JjNVWA%FHd>>8Dqh)n71_k.l.^?SVj4,:QlMgG==#2e($Ka%VRV?HYsJ>H<)i^koTUh#@hm(GXs+V'"[%emE&67"u7XTZ'f_6FE[iQW^`i\lk_\F/mc[c`d!aC>0$?LXtL(o$`UePTs[DrBd4t^RjGn*A)2^mMho;WHl1k6aqTPTP6bHbTrYm%e)g7P+]?nZg2d_@.QAVf\3%[T@,2o7+Kn6HYo(DfI24a'!jM0=fIj+.YA3F@lF5mcs!c51"*?m7+B]*ZB9rcl%#c1G!8n;&6nY^?%1IF'Y6'U>EN+!^rBgU<Yi&e(O?juVkJPKX9`LrD/G(DiOYV:f'%TP]'B(NPfL::e6fjZ?eY&u%07qN,KMmdE*1%:Gn#5[P:iQT91%Z5;SH7nHQf%.&Ef)(C5V/YC9bDOn/8UIr*s$k)1X*;<\=4:;YT3Bt,d4]I$Hl44^o_P_X7m8Y_n3^R%@CV<dW96YZ?(,DV`E,LYe%f5Wee2&1cp,D]EoEUdk2.smUrijcA:o;+_5OL.9&i!)a\5G4i.P8<6#\<rU59+\JS:OHEln6ifb\HuIgpMi&l""@GCI&,3#_@hpi%XUs/7F'!:tpi6I<pRT,7NM"mZSPhcUlGe\DnE^"`?G8Io?V8n@.JhWuO[XV7%uDn"2kk9,@dq-GES?N9&in=FLN)tD41CSS11X*.%3TPonK-(1+[j5M>aT9p"n=!&*MV-pMEE+a!_u]KiC]&OZ@f_rr)FjgUHCP4Pl8^A"!.G79VrmCWb<o6ECrp956cpDl(2ADn5'MCM%oSFTNJR?QiG>7]86j1ouGomqmb5a9aq)N:Q#Q7\s%@,tV7Jk#25[8,VcdSP*drUG`g=GoLbL]EFqeb'$\qZ>$RB+Gpl>lb5+qgij%'sS5r[&<P!I_-ag$>[.(Z&\af-)Ih@%:UoL-iRr#%oAbhd5;boFf6P9Ui-pWRT:"P9X]ViD[j)R[#8944P*8H\aTTmLT9o=>YLaT%+E2bu$[s+I:s1Vg/>no!GQII)qLc02U.dpH]]i5B&XnK:pb,(SSgjYd10-kURT.!+B=mhIGUTV,S[9a,#A)[+.%cS3M[0d'#e'OI%dg==DAp'p):ME,E8rZH4=@WhH(/AL\IH=pIlRT2?jnXTOfKEDLS?Z2H3(^3j?5[;f$\l^A#RT,&E2P590:;!:bc!j!Yj,%b'1/2L%r^L5+gPjU9+cGlL0[1+~>%AI9_PrivateDataEnd