%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (Adobe Illustrator Artwork)
%%Creator: (Adobe Illustrator\(R\) 26.2)
%%For: (kyle Hamilton)
%%CreationDate: 6/5/22
%%BoundingBox: 0 0 402 277
%%HiResBoundingBox: 0 0 401.6666 276.3518
%%CropBox: 0 0 401.6666 276.3518
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 26.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 26.2.1 x197 R agm 5.5 ct 6.4%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 11258 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD28FFA8277DA8FF7D7D7DFFA8FFFFA8A852A8A8527DA8FFA8527D%FFFFFF7D7DA8A8FFFF527DA8A8FFA8A8FFA8A8A8FFFF7DA8FFA8A8A8FF52%7DFFA87DA8A8FFA8A8FFA8FFA8FD3DFF7D5252A827527D7D527DA8A8527D%7DFF7D525252277D7D7D5252A87D527D52A87D7DFF7DFD05527D52527DA8%527D275227A8FF7D7D527DA8522752527D52A87D277DFD3CFFA87D7D5252%FD047D52FFA87D7DA8FFA87D527D7DA87D7D7D52FFA87D7D7DA8FF527D7D%7D52A8A8A852527D7D52FD057DFFFFFD067D527D7DA852A87D7DA8FD3EFF%A8FFA8FFA8FFA8FFFFFFA8FFA8FFFFFFA8FFA8FFA8FF7DA8FFFFA8FFA8FF%FFFFA8FFA8FFA8FFFFA87DFFA8FFFFFFA8FD04FFA8A8FFA8FFFFFFA8FFA8%FFA8FFA8FD4CFFA87D7DFFFFA8A8FF7DA8FD04FFA8A8A8FFFFFFA8FFA8FF%FF7DFD04FFA8A8A8FD05FFA8FD59FFA827527DFF52527D7D527DA87D5252%527D7D7D52527D52A8FF277D527D7DFF2752277D527D527DFD59FFA87DA8%7D7D7D52FD047DFF52527D7D52FD057D52A8A8527D7D27FFFFA852527D52%527DFD5BFFA8FFFD0AA87DFFA8FFA8A8A8FFA8A8A8FF7DFF7D7DFFFFA8FF%7DFD04A8FDFCFFFDFCFFFD9EFFCB7D537D7777537DA8FD0CFF7D7DFFFD04%7DA87D7D7DFD60FFCB21212122212100A8FD0BFFA87D7DFF527D527D7D52%7D7DFFA8A8FD5DFFA84C2128214C2122A2FD0CFF7D7DA8FD047DA87DA87D%FD60FFA821222122212221A8FD77FFA84C224C214C2228A8FD77FFA92122%2122212221A8FD77FFA84C214C22282128A8FD77FFCB21222122212221A8%FD6FFF7EA27EA87EA27DFFA84C214C224C214CA8FD6EFFA8222121212221%21A2FF21222128212221A8FD0CFFA87DFF7DA8A8A87DA87DA8FD57FFCB21%282228214C21A8A84C2128214C2122A2FD0CFF527DA87D525252A8277D52%FF7DFD55FFA822212221222122A8FF21222122212221A8FD0CFF7D7DFFFD%087DFD58FF214C224C214C21A9A94C224C214C2228A8FD6EFFA822212821%222122A8FF21222122212221A8FD6FFF2222214C222221CBCB4C214C2228%2128A8FD6EFFA822212221222122A2FF21222122212221A8FD66FF7D7777%777D7777A8FF2228214C224C21CBCB4C214C224C214CA8FD04FFA8FFFFFF%7D7DA8FD5BFFFD05212221A8A828212221282122A2FF21222128212221A8%FD04FF7D7DA8FF7D52FD5CFF4C214C22282128A8FF214C2228214C21A8A8%4C2128214C2122A2FD05FFA8A8FF7DA8A8FF7DA8FFA87DA87DA87DA87DFD%4FFF21222122212221A8A822212221222122A8FF21222122212221A8FD04%FFA8A8A8FFA852FFFF7D7DFF7D7D52FD057DFFA8A8FD4CFF4C214C224C21%4CA8FF214C224C214C21A9A94C224C214C2228A8FD04FF7D527DFF527DFF%FF527DA87D527D7D527DA852FFA8FD4DFF22222128212221A8A822212821%222122A8FF21222122212221A8FD04FF7D52A8FF7D7DFFFFFFA8FD07FFA8%FD50FF4C2128214C2122A8FF2222214C222221CBCB4C214C22282128A8FD%04FF7D7DA8FF5252A8FD5BFF21222122212221A8A822212221222122A2FF%21222122212221A8FD04FFA852A8FF7D52FD5CFF4C214C214C2228A8FF22%28214C224C21CBCB4C214C224C214CA8FD04FFA852A8FF7DA8A8FD5BFF21%222122212221A8A828212221282122A2FF21222128212221A8FD04FFA852%A8FFA87DFD5CFF4C214C22282128A8FF214C2228214C21A8A84C2128214C%2122A2FD04FF52527DFF7D52FD5CFF21222122212221A8A8222122212221%22A8FF21222122212221A8FD04FFA852FF7D7D52FFFFA8A8FFA8FFA8A8A8%FFA8A8FD4FFF4C214C224C214CA8FF214C224C214C21A9A94C224C214C22%28A8FD04FF7D7DA8FFA8FFFFFF527DA87D527D7DA8527D52FF7DFD4DFF22%222128212221A8A822212821222122A8FF21222122212221A8FD04FFA852%FFFFA8FFFFFF7D52FF7D7D527D527D7D7DFD46FF4C774C774C774CCBFF4C%2128214C2122A8FF2222214C222221CBCB4C214C22282128A8FD04FFA852%7DFF527DA8FFA8FFA8FFA8FFA8A8A8FFA8FD45FFA822002221210021A2FF%21222122212221A8A822212221222122A2FF21222122212221A8FD05FF52%A8FF7D52FD53FF224C224C214C21A9FF4C214C214C2228A8FF2228214C22%4C21CBCB4C214C224C214CA8FD04FF52527DFF7D52A8FD51FFCB28212821%222122A8FF21222122212221A8A828212221282122A2FF21222128212221%A8FD04FF7DA8FFA87D7DFD53FF2222214C222221A9FF4C214C22282128A8%FF214C2228214C21A8A84C2128214C2122A2FD08FF7D7DA8FD51FFA84C21%2221222122A2FF21222122212221A8A822212221222122A8FF2122212221%2221A8FD04FFA852A8FFA852FD53FF2228214C224C21CBFF4C214C224C21%4CA8FF214C224C214C21A9A94C224C214C2228A8FD04FF7D7DA8FF527DA8%FFA8FFFFA8A8FFA8A8A8FFA8FD45FFA84C212221282122A2FF2222212821%2221A8A822212821222122A8FF21222122212221A8FD04FFA852FFFF7D27%7DFF7D7DFF7D7D527D7DA87D7DFFA8A8FD43FF22282228214C21A8FF4C21%28214C2122A8FF2222214C222221CBCB4C214C22282128A8FD04FFA87D7D%FF527DA8FF527DA87D527D7DA87DA852FFA8FD3BFF53775277537752CBFF%28212221222122A2FF21222122212221A8A822212221222122A2FF212221%22212221A8FD05FF7DA8FF7D7DFFFFFFA8FFA8FFA8FFA8A8A8FD3EFF2221%2221222122A8FF224C224C214C21A9FF4C214C214C2228A8FF2228214C22%4C21CBCB4C214C224C214CA8FD04FF7D527DFF527DFD4AFF222221282122%21A8FF28212821222122A8FF21222122212221A8A828212221282122A2FF%21222128212221A8FD04FFA852A8FF7D52FD4AFF4C2128214C2122A8FF22%22214C222221A9FF4C214C22282128A8FF214C2228214C21A8A84C212821%4C2122A2FD04FF7D527DFF5252A8FD49FF21222122212221A8FF4C212221%222122A2FF21222122212221A8A822212221222122A8FF21222122212221%A8FD04FF5227FFA8FF7DFD4AFF4C214C214C2228A8FF2228214C224C21CB%FF4C214C224C214CA8FF214C224C214C21A9A94C224C214C2228A8FD04FF%FD04A87D7DA8FD3FFFCB4C214C2228214CA8FF21222122212221A8FF4C21%2221282122A2FF22222128212221A8A822212821222122A8FF2122212221%2221A8FD08FFA8A8FD07FFA8FD30FF774C774C774C53A8FF222221282122%21A9FF4C214C22282128A8FF22282228214C21A8FF4C2128214C2122A8FF%2222214C222221CBCB4C214C22282128A8FD0CFF527DFF7D527D527D7D7D%52FFA8FD29FFFD05212200A2FF4C212221222122A2FF21222122212221A8%FF28212221222122A2FF21222122212221A8A822212221222122A2FF2122%2122212221A8FD0CFF7D7DFF7D7D527DA87D7D7DFFA8A8FD28FF4C214C21%4C22227EFF2228214C224C21CBFF4C214C224C214CA8FF224C224C214C21%A9FF4C214C214C2228A8FF2228214C224C21CBCB4C214C224C214CA8FD0C%FF7DFD05A87DA87DA87DFD22FFA27DA27DA27DA2A8FF21222122212221A2%FF4C212221282122A2FF22222128212221A8FF28212821222122A8FF2122%2122212221A8A828212221282122A2FF21222128212221A8FD39FF212221%22212200A8FF4C214C22282122A2FF22282228214C21A8FF4C2128214C21%22A8FF2222214C222221A9FF4C214C22282128A8FF214C2228214C21A8A8%4C2128214C2122A2FD38FFA84C2122212221217DFF21222122212221A2FF%28212221222122A2FF21222122212221A8FF4C212221222122A2FF212221%22212221A8A822212221222122A8FF21222122212221A8FD1EFFA277A27D%7E777EA8FD13FF2228214C224C21A8FF4C214C224C2122A2FF224C224C21%4C21A9FF4C214C214C2228A8FF2228214C224C21CBFF4C214C224C214CA8%FF214C224C214C21A9A94C224C214C2228A8FD1EFF22210021212100A2FD%0AFF4C534C534C534CA8FF4C2122212821217DFF22222128212221A8FF28%212821222122A8FF21222122212221A8FF4C212221282122A2FF22222128%212221A8A822212821222122A8FF21222122212221A8FD1EFF4D2128214C%22227DFF7D7D777E7D7E77FFFF282122212221227EFF22282228214C21A8%FF4C2128214C22227EFF2222214C222221A9FF4C214C22282128A8FF2228%2228214C21A8FF4C2128214C2122A8FF2222214C222221CBCB4C214C2228%2128A8FD0CFFA8FD05FFA8FFA8FFA8FD07FF28222122212221A2FF4C0021%002100217DFF21222122212221A2FF282122212221227DFF212221222122%21A2FF4C212221222122A2FF21222122212221A8FF28212221222122A2FF%21222122212221A8A822212221222122A2FF21222122212221A8FD0CFF7D%7DFFFD067D52A8FD07FF4D214C214C22227EFF4C22214C224C21A8FF4C21%4C224C2122A2FF224C224C214C21A8FF4C214C214C22227EFF2228214C22%4C21CBFF4C214C224C214CA8FF224C224C214C21A9FF4C214C214C2228A8%FF2228214C224C21CBCB4C214C224C214CA8FD0CFF527DA87D5252527D52%7D52FF7DA8FD04FF28222122212221A2FF4C2122212821217DFF22222128%212221A8FF282128212221227DFF21222122212221A2FF4C212221282122%A2FF22222128212221A8FF28212821222122A8FF21222122212221A8A828%212221282122A2FF21222128212221A8FD0CFFA87DFF7DFD07A8FD07FF4C%214C22282122A2FF4C222228214C21A8FF4C2128214C22227EFF2222214C%222821A8FF4C214C22282122A2FF22282228214C21A8FF4C2128214C2122%A8FF2222214C222221A9FF4C214C22282128A8FF214C2228214C21A8A84C%2128214C2122A2FD1EFF28212122212221A2FF4C2122212221227DFF2122%2122212221A2FF4C2122212221217DFF21222122212221A2FF2821222122%2122A2FF21222122212221A8FF4C212221222122A2FF21222122212221A8%A822212221222122A8FF21222122212221A8FD1EFF4D214C224C2122A2FF%4C28224C214C21A8FF4C214C214C22227EFF2228214C224C21A8FF4C214C%224C2122A2FF224C224C214C21A9FF4C214C214C2228A8FF2228214C224C%21CBFF4C214C224C214CA8FF214C224C214C21A9A94C224C214C2228A8FD%1EFF4C222128212221A2FF4C2128212221227DFF21222122212221A2FF4C%2122212821217DFF22222128212221A8FF28212821222122A8FF21222122%212221A8FF4C212221282122A2FF22222128212221A8A822212821222122%A8FF21222122212221A8FD1EFF4D2128214C22227DFF4C22214C222821A8%FF4C214C22282122A2FF22282228214C21A8FF4C2128214C22227EFF2222%214C222221A9FF4C214C22282128A8FF22282228214C21A8FF4C2128214C%2122A8FF2222214C222221CBCB4C214C22282128A8FD1EFF282221222122%21A2FF4C2122212221217DFF21222122212221A2FF282122212221227DFF%21222122212221A2FF4C212221222122A2FF21222122212221A8FF282122%21222122A2FF21222122212221A8A822212221222122A2FF212221222122%21A8FD1EFF4D214C214C22227EFF4C22214C224C21A8FF4C214C224C2122%A2FF224C224C214C21A8FF4C214C214C22227EFF2228214C224C21CBFF4C%214C224C214CA8FF224C224C214C21A9FF4C214C214C2228A8FF2228214C%224C21CBCB4C214C224C214CA8FD0CFF7D7DFFFD087DFFA8FD05FFFD0421%002100A2FF4C0021002121217DFF21210022212100A2FF22002121210021%7DFFFD0421002100A2FF22002100210021A2FF21210022212100A8FF2200%2121210021A2FFFD0421002100A8A822002100210021A2FF212100222121%00A8FD0BFFA87D7DFF527D527D527D527DA8A8A8FD04FFA277A2527D777E%A8FF7D7E7D7E777E77CBFFA277A2527D7D7DA8FF7D7E777E7D7E77FFFF7E%77A2527D777EA8FF7D7E7D7E777E77FFFFA277A2527D7D7EA8FF7D7E777E%7D7E77FFFF7E77A2527D777EA9FF777E7D7E777E77FFFFA27D7E4C7E7D7E%A8FD0CFF7DA8A8FD067DA87DFD1CFFCFFD04FFA8FD1EFFCFFD04FFA8FD1E%FFAEFD04FFA8FD1DFFFD05A8FFA8FD0BFFFD05A8FFA8A8FD09FFFD09A8FD%09FFA8A8FFA8A8A8FFA8A8FD0AFFFD07A8FD0AFFA8A8FFFD05A8FD1FFF7D%7D52A87DFF7DFD0BFF7D7D527D52FF527DFD0AFF7D7D52A852A852A8FD0A%FF7D7D527D7DFF7D7DFD0AFF7D7D52A87DA8277DFD0AFF527D527D7DA852%FD1EFFA852FD047DA87D7DFD0AFF52FD077DFD09FFA8527D52FD057DFD09%FFA8527D7DA87DA87DA8FD09FFA852FD047DA8527DFD09FFA8527D7D7D52%A87DA8FD1EFFA8FFA8FFA8FFA8A8FD0AFFA8FFA8FFA8A8A8FD0BFFA8FFA8%FFA8A8A8FD0BFFA8FFA8FFA8FFA8FD0BFFA8FFA8FFA8FFA8FD0BFFA8FFA8%FFA8FFA8FD52FFA8FD70FFA87D527DFD05A87DA8FFA8527D7D7DA87D7DA8%A8A852A8FD68FF7D52527D2752A8FF277D527D277D7D7D527D5252527D52%FD69FFA87DA87D7D7DFFA852A8FD047DA8A87D7DA8FD047DA8FD28FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.b0f8be9, 2021/12/08-19:11:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreatorTool>Adobe Illustrator 26.2 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2022-06-05T09:36:45+01:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>176</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXjNz5D886X5n1vzLo9iss+pPqkKQ27wW1wRcLE9tczT+rGZ1HoMiRsylGYHYVZVULZeU/z&#xA;SnaG61qzuru+lW3twzT2YijitNYkuUe6gNzMhY2brw4NKwZd25fEVWZeULP8yo4tc/S0siXMlqq2&#xA;D3clvNE2o8rgyT26wEmO1KtAFSSjfCfhG5ZVKvLXk/zdf61pF/5qjupbbSZ5biyjvp7aaWKY2tup&#xA;kf6uzRuGuBOYv2lU78RRQqkmq+QvzPtvNF1qPl9FWG81TVdViaeWEpa3Y0i7s7G4VGY1W4e6RXWh&#xA;4+mpK0JxVdd+TPPl5BpN5qFhda1rVjcS/U01WHS3soIZGt3P1hGvrmVXDRuY57dzIBVStOOKsl8r&#xA;W3m3W9N81W+oX0klmq3OjaJOeUZmQNM31wmitz4zxwlvGIsPtYqg/Kml/mVbaroMc0V/a6XbRQx3&#xA;cV3c2c8KRRwTpcJMElmlklkuPSeF0NFjoG4kMhVX6v5Z8yx6z5jvLPQlvvMd4083lrzU8lqUsVNi&#xA;sUMBE0nrxUmQgrHE0bV5tvUYqgJ9A/N67idobzU7GKFbh9NikubE3IJuLT0ku2QyRSN6YuSNyvEg&#xA;E8qYqvW2/MuLzhZaXFcalNFaenKbl5rY2v1Q61cAm75EPM76YiqgjBYNQtxPxBVZp2lfmndSaLNr&#xA;Nlf+po7abFLS7tP388djeW95ehY7heUTXEsLsrsrslaLy+HFVfyh5f8Azbe+0oeZNTvhaxTNNqgH&#xA;1SENItvTijw3N08kEk/xAcIyP5FU0Cq/zR5W84Dzxqes+WNMBv7q1mSLWdRWwaOCQae0UP1CcO17&#xA;FWdYw8UkJiPxv1O6qhrGg/mTI4utBhv7IPb2cN217JY3GpOkdzdPNEskd1Gn+7InH79RxqAQ1Riq&#xA;rHoX5wrbXl5Hqd0+qSAW1tFcNaRwCP8AQMf+kGBHnjjm/SysCAzAHcAx7lVEJp35mN5m0aa1k1Oz&#xA;8vRrD9Ytbw2N3OJBcyG7F26XqjhJAY/TaMSlf5VI+JV6firsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVUNQWVrC5WGvqmJxHx2PIqaU+nFXj2k6b+anlLQLeaOW81STU9JnVtPhQztZaqbe&#xA;0W0kc3ck70DJcPLxIj5N9jpiqK0S0/MVdQ1CxmS/fSv05Nd8blIUSKM+ZIp4PqkqUmliksmleX1C&#xA;eICqtBtiqzRLr807LyusV7Fqianb6XpsVhZWkNiIN7O1W6nllkguHFxFcNP+6pQqoCoa1xVS02P8&#xA;1ro213q51B7i4TQgbRo4Ftg1pr8n12SRFT91IbAxSErx5At14KEVX2tx+d15bQRyz31g/FZL2f6t&#xA;p5kF0thcPPbQAxSp9V+tpAscjKXbkw5d8VZT5H1Hz5c+Y9RTzBFcfo9oI5bVmjigghlogeFU9L1X&#xA;PLkwf13FOqqaYq8+0TW/zZ8t+TNKS4luXuki03TLTTtVjtY55r65gmtpIouCiSSG1lNrN6jVcqJe&#xA;RNNlWd/mH5a813dppB0XULt70/6Dq5jcQpc24iablLw4rCXnhRDJGAQsjAdRRViM+tfnpDoFs8Ud&#xA;7can67SSVtrVSAqW5+qzR/VwHQs0vGSMpRQQXduJKr1Dynb+YUj1G41u+muZbi/vPqdrJHBHHb2k&#xA;d1KlqsfpRo7c4AjFpGYn2xVPsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirzHTPPfnGXy1q9zdwcdSiMJt&#xA;h9TmT0OZT67H6bEmb6kHJ5D7VKeOKoKx8/eebi6SO8K2Vu9q7+sbKWMeiI2aLUOcpdYxLIqx+kwP&#xA;HlU4qmHknzl5u1PW9Ih1VaQ3tiXuLWKMo8M8fImWdWj+GKUcfSZZNz+wOyr0LT5r6aFmvbZbWUMQ&#xA;sayCUFR0bkFXr4YqicVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqH1Fm&#xA;XT7plJDCKQgjYghThHNIfn//AI587f8AUwal/wBJk/8AzXm68OPcHZcA7mZfk75u82Xf5neXba71&#xA;q/uLeW7VZYZbqZ0YcTsysxByrPCIgdmvLEcJ2fa2alwHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUNqf/HNu/8AjDJ/xE4RzSH5y5vXaM2/JP8A8mt5&#xA;Z/5jF/4i2VZ/oLXl+kvu3NM652KuxVh9n+ZmlXWh3+rrY3ccdp9XMFvIIRJcpelVtHhpKUAmZwB6&#xA;jKR+1TFUNa/mzpF5N6Nrp120gWRWLm2RVuoY2mktWJm+2kcbMzCqUGzE4qr+W/zR0fX7zT7e1sru&#xA;OLUY1Md1IIfSWdopJxbtwldufpQs9VUr/lVxVlVjqWnahCZrC6hu4VYo0kEiyqHXqpKEior0xVEY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXnX5/wCtato35YajqGk3ctjexy2w&#xA;juYGKSKGnRWAYb7g0y/TRBmAW3CAZbvk7/lbn5n/APU0al/0kyf1zZeDDuDm+HHuex/844+dPNnm&#xA;C88zQ63q91qUUGn84UuZWkCsWIJUMdtsxdVjjGqHVozxAqnzfme5TNvyT/8AJreWf+Yxf+ItlWf6&#xA;C15fpL7tzTOudirsVSCHyF5Sgtbm0h08R214Wa4iWSUBi3GlPj+EJwHphacP2aYq1H5A8pROskFi&#xA;YJUgFsksM08Tqg/aV0dWElNvVrzptypiqppvkjyrpt9BfWOnpDd20RhhlDOaKeVWIZiGc82/eH4t&#xA;zvucVTzFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXlv/OS/wD5KHVP+M1p&#xA;/wBRCZkaX6w3YPqfF2bZz3u3/OKf/HS81/8AbNH/ABI5h6zkPe42o6PCczHJZt+Sf/k1vLP/ADGL&#xA;/wARbKs/0Fry/SX3bmmdck+l61q092LPUtFuLCXiWF0kkVxaMV7LKjCQf89IkrirHvy58x+bdWut&#xA;QTzALVYhHFc6W1uUPr287y8Z4+DufRIQBC4DnqVGKsqi8waDNa3V3DqVrJaWLOl7cJPG0cLx7usr&#xA;huKFe4bpiqjJ5s8rRLyk1mxRfq4veTXMIH1U7Cfdv7r/AC+mKrrbzT5Zur+DTrbV7KfULmAXdtZx&#xA;3ETzSW7biZI1Ys0Z/mApiqZ4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+e/wDn&#xA;LTXNb0r/AAr+jNQubD1vr/rfVppIefH6tx5cCtacjSuZ2jiDduVpgDdvnv8Axz52/wCpg1L/AKTJ&#xA;/wDmvM3w49wcngHc9kk1LUdR/wCcU7251C6mvLg6iqma4kaV6C6joOTknbMWgM23c0VWR4Bma5L3&#xA;b/nFP/jpea/+2aP+JHMPWch73G1HR4TmY5LNvyT/APJreWf+Yxf+ItlWf6C15fpL7tzTOuec+Rb3&#xA;W7zzhdtdfXo9Oihu5bS3uba8gCte3MUzrJJcQQJJwKlYe6pUbjoqhvyWuLCWbWyskUmoytFLeNAi&#xA;JA1ZJwGgpa2rekW5FQXkG9Qfi5Oqj9O/K++s9EvdK/S8TpcfVhDKLMoUWwKNa+oFnHqtyj/fNUeo&#xA;NhwpiqhaflNqmnytcab5gW2vOMs0dw1mZeF/NE0LTKrT8fRVZCyQEbNQ8j0KqZeXPy8uNF1TTLuL&#xA;UY1t7C1+qzW9vFcRG6opAa4aW6uEfi7M4+DlyP2+tVWW2NhBYwmKFpnVmLkzzTXDVPg8zyMBt0rT&#xA;FURirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVfNv8AzmN/0yP/AG8f+xXM/Q9fg5el&#xA;6vm7M9ynu1p/6yXe/wDbSH/UVHmGf7/4OMf714TmY5L3b/nFP/jpea/+2aP+JHMPWch73G1HR4Tm&#xA;Y5LNvyT/APJreWf+Yxf+ItlWf6C15fpL7tzTOueReSoI5fzB1/UEsdS0qK7t9RZNVurSS19INcwn&#xA;m8l1p8CStJ/ewK80vpIrKVAJAVTX8p4LKDVNfS2tmhuj9WfWPUSyQpfMZS8SfVILdpIwhVlkeoPL&#xA;4aHnir0jFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+bf+cxv+mR/wC3&#xA;j/2K5n6Hr8HL0vV83ZnuU92tP/WS73/tpD/qKjzDP9/8HGP968JzMcl7t/zin/x0vNf/AGzR/wAS&#xA;OYes5D3uNqOjwnMxyWbfkn/5Nbyz/wAxi/8AEWyrP9Ba8v0l925pnXPJPK+maHL5181aLq5gjvNX&#xA;/SMbWsnoQXM9pdz1rFztIL2RCgPxi5kjBHw0AUIqyL8tIfKrm7vdGGorfPFHHqY1SCWGcyNPcXJe&#xA;RnjjSSRpLiTkUZlA4haDqqlOkw/mZH5a1e3uor79JzPCYpHmt3fkhj+vfVn9SkccqlhbhiKH+UUx&#xA;VAwW35pQkyX9vql7bpaSH6tBdW8LyQek3o25kSUMt4ZuPqTLtxrRsVTPypZfmNF5g0c6o95NZpaR&#xA;rfXEskYtiv1eUSI0PNpDcfWvTpIRvH3rUYq9CsY9RSEi/nhuJuRKvBC0ChOwKvJOSffl9GKojFXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8g8+/wDOR+ieTvNl95cudHubqex9LnPHJGqN60KT&#xA;CgbfYSUzKx6Uyjdt8MBkLtj/AP0N/wCW/wDqX7z/AJGxZP8AJHvZflj3pJ/zlteLe6f5HvUUotzF&#xA;ezKh6gSLaMAfvyeiFGX472WmHN87ZnOU92tP/WS73/tpD/qKjzDP9/8ABxj/AHrwnMxyXu3/ADin&#xA;/wAdLzX/ANs0f8SOYes5D3uNqOjwnMxyWbfkn/5Nbyz/AMxi/wDEWyrP9Ba8v0l925pnXPOfJvk3&#xA;zTp+ty6prw0+6nlhZ7uK1jt+T3sMcEcF36n1eGX1Zj9bZqsFRXRFHw1xVLfyOsILa91x2iuLe+kh&#xA;s5Lu0uniZoZJWuHkVRFHHyX1OVJHZmc171LKvWMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdir4l/5yM/8nL5h/wCjP/qBgzb6X+7DsMH0B5tl7a9//wCcoP8AlG/y7/5g7n/k1Z5h&#xA;aTnL8d7jafmXgGZrkvdrT/1ku9/7aQ/6io8wz/f/AAcY/wB68JzMcl7t/wA4p/8AHS81/wDbNH/E&#xA;jmHrOQ97jajo8JzMclm35J/+TW8s/wDMYv8AxFsqz/QWvL9JfduaZ1zzDyNZWFt+ZuuGaKWHVpf0&#xA;hJE37kRS273kTM9RFHPIy1jA9SR1j3CUVqYqln5KXmpyeYda9SwMsMscP1nUvrMdysUqyTn0YpGn&#xA;mka3IoY6Vo3Ll1GKp7pn5rzXflzU9VksreO4tmtjaQC4JX070oEFw3CqPB6lZwAeIxVCad+buq6h&#xA;cfV4dOskf0ZBya6cgzQwvO0y0h3tWWPikndj0xVPdK8/XN75k0rTZLWKKy1awS7tbpJRIzT+l6ss&#xA;PBfiX01oeTgA9t9sVZVp9615C0rW01qQxT07hVVjT9oBWbY4qicVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirEv+Vuflh/1NGm/9JMf9ct8GfcWfhy7kRp35l/l/qV7DY6f5hsLq8uG4QW8U6M7t4KoO&#xA;+A4pDchTjkOj5K/5yM/8nL5h/wCjP/qBgzZ6X+7Dm4PoDzbL217/AP8AOUH/ACjf5d/8wdz/AMmr&#xA;PMLSc5fjvcbT8y8AzNcl7taf+sl3v/bSH/UVHmGf7/4OMf714TmY5L3b/nFP/jpea/8Atmj/AIkc&#xA;w9ZyHvcbUdHhOZjks2/JP/ya3ln/AJjF/wCItlWf6C15fpL7tzTOueVeRNSF7+amshriGR1t7qeK&#xA;NvUE/wBXuLiD0eEcqK8SKIz6m9GdhSoUcVVn5EzKsmu2AuhdfVjbsHCSIyh3uPhnRr/UI4ZqrVoV&#xA;jhKihZTUBVXp/wCjNN4SJ9Uh4SlzKvppRjLtIWFN+dPi8cVc+maa6lXtIWUxfVyDGhHo/wC+un2P&#xA;8npiq210fSbOQS2llb28gT0w8USIwSteNVA2r2xVF4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq/NzN87Vm35J/8Ak1vLP/MYv/EWyrP9Ba8v0lM/+cjP/Jy+Yf8Aoz/6gYMjpf7sIwfQHm2Xtr3/&#xA;AP5yg/5Rv8u/+YO5/wCTVnmFpOcvx3uNp+ZeAZmuS92tP/WS73/tpD/qKjzDP9/8HGP968JzMcl7&#xA;t/zin/x0vNf/AGzR/wASOYes5D3uNqOjwnMxyWbfkn/5Nbyz/wAxi/8AEWyrP9Ba8v0l925pnXMN&#xA;0r8q/L+jWOrWukXWoWz6vbzw3M0l5cXB9S4FGuKSu1Zgejn4vfFUw8taFr1nqF1qOs3tvPPNbW1n&#xA;Fb2UMkFuqWrTMJOMkkx5yevvToABv1xVdbeffK11pd7qkF2z2dgypcP6E4YmQgRmKMoHlEvIem0Y&#xA;YP8As1xVDJ+Zvk6RwkdzcSN6BuCsdleOQACzRkLCT6yqCzRfbAFStMVR9t5y8uXOq2+lQXRe9u4U&#xA;uIF9KUIUkQyoPUKCMO0alxGW5cRWlMVTrFXYq7FXYq7FXYq7FXYq7FXYq8//ADX/ADf038uv0X9d&#xA;0+a//Snr+n6LqnD6v6da8vH1hl+HAZ35NuPFxMA/6G/8t/8AUv3n/I2LLvyR72z8se9Pde/OW91j&#xA;8kdb86+Wkk0i+sriG2gaURTsp+swI7cXV4zySYjcZCOCsgid2IxVMAvB/wDoYz85f+ph/wCnOx/6&#xA;oZm/lcfc5PgQ7nr/APzjh+Z/nnzjresW3mPUvr0FrbRyQJ6FvDxdpOJNYY4ydvHMXVYoxAoNGfGI&#xA;gU+V82LmM2/JP/ya3ln/AJjF/wCItlWf6C15fpKZ/wDORn/k5fMP/Rn/ANQMGR0v92EYPoDzbL21&#xA;7/8A85Qf8o3+Xf8AzB3P/JqzzC0nOX473G0/MvAMzXJe7Wn/AKyXe/8AbSH/AFFR5hn+/wDg4x/v&#xA;XhOZjkvdv+cU/wDjpea/+2aP+JHMPWch73G1HR4TmY5LNvyT/wDJreWf+Yxf+ItlWf6C15fpL7tz&#xA;TOudirsVYjb/AJZ6Jb6Zc6bHd3n1e59MAs8bNEtsVNqkdY6AWxQGOoP+VyxVTtfys8v2k/r2lzdw&#xA;y+lIvINE1bmaNoZLw84m/ftG7Kf2N/s4qi9J/L/S9O1Ky1AXl3czWMSRxpM0Xps8cTW8czrHHH+8&#xA;WCQxVFBx6gtviqf2Om6dp8JhsLWG0hZi7RwRrEpdurEIAKmnXFURirsVdirsVdirsVdir59/NP8A&#xA;5yM80eT/AD5qflyx0yxuLWx9D05p/W9RvWt45jy4uo2MhHTM3DpRKIJLk48AlG2Kf9Dd+dv+rNpv&#xA;3T/9VMt/JR7yz/LDvRf/ADlJqUup+X/y91KZVSW+tLq5kRK8Q00dm5C1qaAtg0goyH46rpxRL5+z&#xA;Ncl7t5f/APWS/M3/AG0o/wDqKs8w5f349363Gl/eh4TmY5L3/wD5xA/5STzB/wAwcX/J3MLW8g42&#xA;p5B4Bma5LNvyT/8AJreWf+Yxf+ItlWf6C15fpKZ/85Gf+Tl8w/8ARn/1AwZHS/3YRg+gPNsvbXv/&#xA;APzlB/yjf5d/8wdz/wAmrPMLSc5fjvcbT8y8AzNcl7taf+sl3v8A20h/1FR5hn+/+DjH+9eE5mOS&#xA;92/5xT/46Xmv/tmj/iRzD1nIe9xtR0eE5mOSzb8k/wDya3ln/mMX/iLZVn+gteX6S+7c0zrnYq7F&#xA;XYq7FXYq7FXhH/OVXmTzFomn+XW0bVLvTGnluhM1nPLblwqxcQ3psvKlTSuZmjiCTYcnTxBu3zv/&#xA;AMrM/Mf/AKmvWP8AuIXX/VTM7wodw+Tk+HHuD6Q/Jf8AMK5038l9S81eZ7u+1ZdPvpRLI8hubkxn&#xA;0UVUM7jYNJWnIZgZ8V5BEbOLlhc6C7/obf8ALj/q26x/yJtf+ynH8lPvC/lpeTLPy5/O3yr5/wBU&#xA;udN0e0vree1g+syNeRwohTmqUUxyymtW8Mry4JQFlhPEYjd88f8AQ0X5rf8ALRZ/9Iy/1zO/KQcn&#xA;8vFP/IH/ADkR+ZOt+dtD0i+mtWs7+9ht7gJbqrFJHAajV2yvJpoCJIYzwRAJYd/zkZ/5OXzD/wBG&#xA;f/UDBl2l/uw2YPoDzbL217t/zkb/AMoT+WH/AGzZf+TFlmHpfql7/wBbjYOcnhOZjkvdvL//AKyX&#xA;5m/7aUf/AFFWeYcv78e79bjS/vQ8JzMcl7//AM4gf8pJ5g/5g4v+TuYWt5BxtTyDwDM1yWbfkn/5&#xA;Nbyz/wAxi/8AEWyrP9Ba8v0lM/8AnIz/AMnL5h/6M/8AqBgyOl/uwjB9AebZe2vf/wDnKD/lG/y7&#xA;/wCYO5/5NWeYWk5y/He42n5l4Bma5L3a0/8AWS73/tpD/qKjzDP9/wDBxj/evCczHJe7f84p/wDH&#xA;S81/9s0f8SOYes5D3uNqOjwnMxyWbfkn/wCTW8s/8xi/8RbKs/0Fry/SX3bmmdc7FXYq8x0/8vPN&#xA;Vr5X1bSG+pM9+0JfjcTBLhrcoZJJ+UDcWvgrLNQHiP56nFUpj/KHzcpp9YtFH1bhz9eWoi40Okf3&#xA;Ffqdf92V5f5GKp75S/L/AF7SPMun6lMlnHDb2ssF0UkE54SSSSQ21sHto5Ilt/UCcxKAyjdP5VWf&#xA;2NrPbQmOa8mvWLFhLOIVYA/sj0Y4VoPlX3xV8/8A/OYX/HN8sf8AGa7/AOIxZnaLmXK03V8yZsHL&#xA;e/8Ak/8A9ZS80/8AMY//ACctswp/3wcaX94HgGZrkvdv+cRP+U21n/tmn/k/HmHrfpHvcbU8g8Jz&#xA;Mcllv5R/+TP8r/8AbStv+TgyrN9B9zDJ9JTz/nIz/wAnL5h/6M/+oGDI6X+7DHB9AebZe2vdv+cj&#xA;f+UJ/LD/ALZsv/JiyzD0v1S9/wCtxsHOTwnMxyXu3l//ANZL8zf9tKP/AKirPMOX9+Pd+txpf3oe&#xA;E5mOS9//AOcQP+Uk8wf8wcX/ACdzC1vIONqeQeAZmuSzb8k//JreWf8AmMX/AIi2VZ/oLXl+kpn/&#xA;AM5Gf+Tl8w/9Gf8A1AwZHS/3YRg+gPNsvbXv/wDzlB/yjf5d/wDMHc/8mrPMLSc5fjvcbT8y8AzN&#xA;cl7taf8ArJd7/wBtIf8AUVHmGf7/AODjH+9eE5mOS92/5xT/AOOl5r/7Zo/4kcw9ZyHvcbUdHhOZ&#xA;jks2/JP/AMmt5Z/5jF/4i2VZ/oLXl+kvu3NM652KuxV2KuxV2KuxV87/APOYX/HN8sf8Zrv/AIjF&#xA;mdouZcrTdXzJmwct7/5P/wDWUvNP/MY//Jy2zCn/AHwcaX94HgGZrkvdv+cRP+U21n/tmn/k/HmH&#xA;rfpHvcbU8g8JzMcllv5R/wDkz/K//bStv+TgyrN9B9zDJ9JTz/nIz/ycvmH/AKM/+oGDI6X+7DHB&#xA;9AebZe2vdv8AnI3/AJQn8sP+2bL/AMmLLMPS/VL3/rcbBzk8JzMcl7t5f/8AWS/M3/bSj/6irPMO&#xA;X9+Pd+txpf3oeE5mOS9//wCcQP8AlJPMH/MHF/ydzC1vIONqeQeAZmuSzb8k/wDya3ln/mMX/iLZ&#xA;Vn+gteX6Smf/ADkZ/wCTl8w/9Gf/AFAwZHS/3YRg+gPNsvbXv/8AzlB/yjf5d/8AMHc/8mrPMLSc&#xA;5fjvcbT8y8AzNcl7taf+sl3v/bSH/UVHmGf7/wCDjH+9eE5mOS92/wCcU/8Ajpea/wDtmj/iRzD1&#xA;nIe9xtR0eE5mOSzb8k//ACa3ln/mMX/iLZVn+gteX6S+7c0zrnYq7FXmOnedPOz+V9WuLu3lXU42&#xA;h+rn6jMpgLFBeosdD6wtA5Kt+3SnxUOKpSPzA/MokH6rJtbcuJ06cA2wUn9JdP7yv/HtWvtiqdeU&#xA;vNvnu+8xadaalbSLZTRv6jNZyRLJbqs5S9aU/DG7vHEvo9udadMVehWMmovCTfwQ283IhUgmadSn&#xA;YlnjgIPtx+nFXmX59flT5i/MG00aHRri0t20+Sd5jePKgIlVAvH045f5DWtMydPmELtuw5BG7eLJ&#xA;/wA4qfmM9/NZ/XdKDQxRTGYy3XpsJmkUKrfVt2X0qsOwI8cyvzsO4t/5mPm9Y0H8mPNGn/knrPkW&#xA;a6sW1fUbhpoJ0kmNsFLwt8bGIPX90eiHMeWcHIJdGk5QZiTy/wD6FI/Mf/q5aP8A8jrr/smzI/Ow&#xA;7i3fmY+b0r8ivyS81eQPMWoalrF3Y3EF1afVo1s5JncP6qPVhJFEKUXxzH1GeMxQas2USGzy3UP+&#xA;cVPzGsrC5vGvdKmW2ieYwwy3TSOI1LcUX6sKsaUA8cyPzsO4tv5mPmyTyN/zjJ580Dzjo2tXl/pU&#xA;lrp13FczpDLcGQpGwYhA1ui1+ZGQyauMokbsZ54kEJl+bH/OO3nbzf5/1XzFpt7psNlfeh6UdzLO&#xA;so9G2jhbkEgkX7UZpRumRw6mMYgG0Y84jGmI/wDQpH5j/wDVy0f/AJHXX/ZNlv52HcWf5mPm9K/N&#xA;j8kvNXm/y75O03Tbuxhn8vWj2161zJMqO7RW6AxFIpCRWBvtAdsx8OeMSSerVjyiJPm8tT/nFT8x&#xA;nv5rP67pQaGKKYzGW69NhM0ihVb6tuy+lVh2BHjmR+dh3Ft/Mx83qWl/kl5qtPyP1jyHJd2J1jUL&#xA;tLmGdZJjbBFmt5CGYxB60gboh7ZjnPE5BLo1HKOMSea/9CkfmP8A9XLR/wDkddf9k2ZH52HcW38z&#xA;HzeofkR+THmj8v8AVtUvNZurG4ivbdIYhZyTOwZX5Hl6kUQpTwzH1GcTAppzZRIbPJ9Q/wCcVPzG&#xA;srC5vGvdKmW2ieYwwy3TSOI1LcUX6sKsaUA8cyPzsO4t35mPmyr8vP8AnGrz15b87aPrt9faXJaa&#xA;fcCaZIJbhpCoBHwhoEWu/dhleXVRlEgWxnniRSM/Nj/nHbzt5v8AP+q+YtNvdNhsr70PSjuZZ1lH&#xA;o20cLcgkEi/ajNKN0wYdTGMQDaMecRjTEf8AoUj8x/8Aq5aP/wAjrr/smy387DuLP8zHzeofnJ+T&#xA;HmjztpPlWz0q6sYZdDt5obs3UkyKzSJAo9P04pCRWButO2Y+DOIE31acWURJvq8nT/nFT8xnv5rP&#xA;67pQaGKKYzGW69NhM0ihVb6tuy+lVh2BHjmR+dh3Fu/Mx83qUH5Jeao/yPuPIZu7H9MS3YuVnEk3&#xA;1bgJkkoW9LnWi/yZj/mI+JxdGrxRx8TzX/oUj8x/+rlo/wDyOuv+ybMj87DuLb+Zj5vSvyU/JLzV&#xA;5Fu9bm1a7sZ11K0FtALSSZyHDE1f1IoqDftXMfPqIzqmrLlEqp5bqP8Azir+Y1jZTXbXulziFeRi&#xA;hlumkbelFX6sK5kfnYdxbfzMfNlX5ef841eevLfnbR9dvr7S5LTT7gTTJBLcNIVAI+ENAi137sMr&#xA;y6qMokC2M88SKfSmYDiOxV2KuxV2KuxV2KsQ85x+YZNe8vppEV6qevzvb6GX/RYokdCY5rfmnq+t&#xA;9mpB4JyYfHxqqx3yrbfmFbHQZNaj1SR49SIvEknhkpBJpYiuHn9OUo0X6SJeIblV3AC8RirMPIza&#xA;oNGlh1KG8inivb30mvmDyvbvdyyW55h5KgQOi7nalO2KshxVbNX0npyJ4n7H2un7Ne+KvJtMsfzO&#xA;kk0edY9StrZr95ZLK4uo5GtYDd2hMd3JJI73KGyS5pQtSRqDojBVVtbbz9JpmhRQw6tDqFpr1w80&#xA;l1MGD6S2qeqq3D/WeLf6AyqOcch2ZVAejBV6tirsVYZ5zh8yS+YtDXRUvY1DM93fxyVs40TpDNbe&#xA;ogkMzNu7KeCglfipirHNAh/MW1l8uTalb6s6x6rIb6GS4hlYWL6QIpTc8JfTcfpUmSICvFOgUbYq&#xA;yr8s7XzFaeX5LbXRO08U/G3urt5GuLiH0Y/30qSXN96TGXmvBZeO3IKvLiFWWYqpXlfqk/ESMfTa&#xA;iwkCQnidkLEDl4VPXFXlWk2X5mSSaNI0ep20BuS72s1ykgtYnu4DLFdSySmW5H1L1RG/xUl6Uopx&#xA;VNtN0vzNeweX0lXVLSS01e8kvLi4u5Ff9HRTTT2yTJHMyTmUehF8Yai8+ndV6JirsVYX52h80za/&#xA;o6aCl5FxWaS5v0l/0NQI2EcEtvzUO0kjKS7KeCrtucVSLRbbz9Cmjm8j1dZPrk6yerNDcNFayacY&#xA;2a6Cy+nKw1H95F1olOg2xVkX5X2/nCDy/Mnmn1PrX1pvqazyerN9WEUa8pG5SGskyySBS3whgvam&#xA;KsvxVRvWK2c7KkkhEbkRwECViFO0ZYqOR7VPXFXlGnWf5ncdJlki1RIDLJLJaG5jZrWJrkvJBcSS&#xA;ymS5b6ofThep/eVOwocVR/lxPOsdz5Ymu7bVo4ze3p1K0mnE6W9pNCwt455HlZrgxyFDzNTXlT4a&#xA;Yq9OxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpX5o/Sw8v38mjymHU4YjNaFYxNzki/eCI&#xA;xkHksvHg3H4qH4SGocVeYL5+/Nyx0m7+s6O91qEAWSL/AHF30pJkIl4/6PwR4+L+mvCskfEcw55s&#xA;FWSX3nHzjaeUL3Xrizjtp2vrK0sLF7K6klhiubyG1klliST1bhgsxdUiVSeNN64qkWt/mB+ZEmlR&#xA;Q2+h3en6n62nTy3Eem3lzGtq8unNOSiA86ie6V4Vb1VRD9k/EVW7nzn+aNvbSaiukzmV+bi0NjdT&#xA;oE9DTDSKGIJIXZpbkoskq0bkrN8Oyq6fzr+a+nQ3KfoY3fqXk72t09jeP6Fsbq/WOOWO3Z3lPG2t&#xA;wGjHwrKGIcCrKsm8k695r1XzJ5gXWLWSzsLZII9Pga1ngQMLm9Rys8wC3LPDHBIzx0UcgtKgkqsz&#xA;xV2KuxV2KuxV2KuxV2KuxV2Kv//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2022-06-05T09:36:45+01:00</xmp:MetadataDate>
         <xmp:ModifyDate>2022-06-05T09:36:45+01:00</xmp:ModifyDate>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>416.066559</stDim:w>
            <stDim:h>290.751740</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:449d8163-89ab-4b27-92ff-ff2dc1a28024</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:449d8163-89ab-4b27-92ff-ff2dc1a28024</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:449d8163-89ab-4b27-92ff-ff2dc1a28024</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:449d8163-89ab-4b27-92ff-ff2dc1a28024</stEvt:instanceID>
                  <stEvt:when>2022-06-05T09:36:45+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 26.2 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -276.352 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 276.352 li
401.667 276.352 li
401.667 0 li
cp
clp
gsave
66.8666 28.5555 mo
401.667 28.5555 li
401.667 245.995 li
66.8666 245.995 li
66.8666 28.5555 li
cp
clp
363.903 245.995 mo
386.448 245.995 li
386.448 38.9098 li
363.903 38.9098 li
363.903 245.995 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
66.8666 28.5555 mo
401.667 28.5555 li
401.667 245.995 li
66.8666 245.995 li
66.8666 28.5555 li
cp
clp
335.721 245.995 mo
358.267 245.995 li
358.267 64.7807 li
335.721 64.7807 li
335.721 245.995 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
66.8666 28.5555 mo
401.667 28.5555 li
401.667 245.995 li
66.8666 245.995 li
66.8666 28.5555 li
cp
clp
307.539 245.995 mo
330.085 245.995 li
330.085 89.3185 li
307.539 89.3185 li
307.539 245.995 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
66.8666 28.5555 mo
401.667 28.5555 li
401.667 245.995 li
66.8666 245.995 li
66.8666 28.5555 li
cp
clp
279.357 245.995 mo
301.903 245.995 li
301.903 132.925 li
279.357 132.925 li
279.357 245.995 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
66.8666 28.5555 mo
401.667 28.5555 li
401.667 245.995 li
66.8666 245.995 li
66.8666 28.5555 li
cp
clp
251.176 245.995 mo
273.721 245.995 li
273.721 161.369 li
251.176 161.369 li
251.176 245.995 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
66.8666 28.5555 mo
401.667 28.5555 li
401.667 245.995 li
66.8666 245.995 li
66.8666 28.5555 li
cp
clp
222.994 245.995 mo
245.539 245.995 li
245.539 179.095 li
222.994 179.095 li
222.994 245.995 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
66.8666 28.5555 mo
401.667 28.5555 li
401.667 245.995 li
66.8666 245.995 li
66.8666 28.5555 li
cp
clp
194.812 245.995 mo
217.357 245.995 li
217.357 182.799 li
194.812 182.799 li
194.812 245.995 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
66.8666 28.5555 mo
401.667 28.5555 li
401.667 245.995 li
66.8666 245.995 li
66.8666 28.5555 li
cp
clp
166.63 245.995 mo
189.176 245.995 li
189.176 193.569 li
166.63 193.569 li
166.63 245.995 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
66.8666 28.5555 mo
401.667 28.5555 li
401.667 245.995 li
66.8666 245.995 li
66.8666 28.5555 li
cp
clp
138.448 245.995 mo
160.994 245.995 li
160.994 204.976 li
138.448 204.976 li
138.448 245.995 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
66.8666 28.5555 mo
401.667 28.5555 li
401.667 245.995 li
66.8666 245.995 li
66.8666 28.5555 li
cp
clp
110.267 245.995 mo
132.812 245.995 li
132.812 209.002 li
110.267 209.002 li
110.267 245.995 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
gsave
66.8666 28.5555 mo
401.667 28.5555 li
401.667 245.995 li
66.8666 245.995 li
66.8666 28.5555 li
cp
clp
82.0847 245.995 mo
104.63 245.995 li
104.63 202.482 li
82.0847 202.482 li
82.0847 245.995 li
cp
false sop
.793973 1 .278019 .337499 cmyk
f
grestore
375.176 245.995 mo
375.176 249.495 li
false sop
.749721 .679194 .670497 .901457 cmyk
f
.8 lw
0 lc
1 lj
4 ml
[] 0 dsh
true sadj
375.176 245.995 mo
375.176 249.495 li
@
364.369 259.764 mo
367.812 259.764 li
367.812 260.594 li
363.183 260.594 li
363.183 259.764 li
363.557 259.377 364.067 258.857 364.713 258.205 cv
365.36 257.552 365.766 257.13 365.932 256.941 cv
366.248 256.587 366.468 256.287 366.593 256.041 cv
366.719 255.795 366.782 255.553 366.782 255.316 cv
366.782 254.928 366.646 254.613 366.374 254.369 cv
366.102 254.124 365.748 254.002 365.312 254.002 cv
365.002 254.002 364.676 254.055 364.332 254.163 cv
363.989 254.27 363.623 254.433 363.232 254.652 cv
363.232 253.655 li
363.629 253.496 364 253.375 364.344 253.294 cv
364.69 253.213 365.006 253.172 365.293 253.172 cv
366.048 253.172 366.65 253.361 367.099 253.739 cv
367.548 254.116 367.773 254.621 367.773 255.252 cv
367.773 255.552 367.716 255.836 367.604 256.105 cv
367.492 256.373 367.288 256.689 366.991 257.053 cv
366.91 257.148 366.651 257.421 366.215 257.872 cv
365.779 258.323 365.164 258.954 364.369 259.764 cv
cp
f
371.991 253.172 mo
372.809 253.172 373.433 253.496 373.865 254.142 cv
374.296 254.788 374.511 255.726 374.511 256.956 cv
374.511 258.184 374.296 259.121 373.865 259.767 cv
373.433 260.413 372.809 260.736 371.991 260.736 cv
371.174 260.736 370.55 260.413 370.119 259.767 cv
369.688 259.121 369.472 258.184 369.472 256.956 cv
369.472 255.726 369.688 254.788 370.119 254.142 cv
370.55 253.496 371.174 253.172 371.991 253.172 cv
cp
371.991 253.953 mo
371.484 253.953 371.102 254.203 370.846 254.703 cv
370.591 255.202 370.463 255.953 370.463 256.956 cv
370.463 257.955 370.591 258.705 370.846 259.205 cv
371.102 259.705 371.484 259.955 371.991 259.955 cv
372.503 259.955 372.886 259.705 373.141 259.205 cv
373.397 258.705 373.525 257.955 373.525 256.956 cv
373.525 255.953 373.397 255.202 373.141 254.703 cv
372.886 254.203 372.503 253.953 371.991 253.953 cv
cp
f
377.094 259.764 mo
380.536 259.764 li
380.536 260.594 li
375.908 260.594 li
375.908 259.764 li
376.282 259.377 376.792 258.857 377.438 258.205 cv
378.085 257.552 378.491 257.13 378.657 256.941 cv
378.972 256.587 379.192 256.287 379.317 256.041 cv
379.444 255.795 379.507 255.553 379.507 255.316 cv
379.507 254.928 379.371 254.613 379.099 254.369 cv
378.827 254.124 378.473 254.002 378.036 254.002 cv
377.727 254.002 377.4 254.055 377.057 254.163 cv
376.714 254.27 376.347 254.433 375.957 254.652 cv
375.957 253.655 li
376.353 253.496 376.724 253.375 377.069 253.294 cv
377.415 253.213 377.731 253.172 378.017 253.172 cv
378.773 253.172 379.375 253.361 379.824 253.739 cv
380.273 254.116 380.497 254.621 380.497 255.252 cv
380.497 255.552 380.441 255.836 380.328 256.105 cv
380.217 256.373 380.013 256.689 379.716 257.053 cv
379.635 257.148 379.376 257.421 378.939 257.872 cv
378.504 258.323 377.889 258.954 377.094 259.764 cv
cp
f
382.778 259.764 mo
384.389 259.764 li
384.389 254.202 li
382.636 254.553 li
382.636 253.655 li
384.38 253.303 li
385.366 253.303 li
385.366 259.764 li
386.977 259.764 li
386.977 260.594 li
382.778 260.594 li
382.778 259.764 li
cp
f
318.812 245.995 mo
318.812 249.495 li
f
318.812 245.995 mo
318.812 249.495 li
@
308.006 259.764 mo
311.448 259.764 li
311.448 260.594 li
306.82 260.594 li
306.82 259.764 li
307.194 259.377 307.704 258.857 308.35 258.205 cv
308.996 257.552 309.403 257.13 309.568 256.941 cv
309.884 256.587 310.104 256.287 310.229 256.041 cv
310.355 255.795 310.418 255.553 310.418 255.316 cv
310.418 254.928 310.282 254.613 310.01 254.369 cv
309.739 254.124 309.384 254.002 308.948 254.002 cv
308.639 254.002 308.312 254.055 307.968 254.163 cv
307.626 254.27 307.259 254.433 306.868 254.652 cv
306.868 253.655 li
307.265 253.496 307.636 253.375 307.981 253.294 cv
308.327 253.213 308.643 253.172 308.929 253.172 cv
309.684 253.172 310.286 253.361 310.735 253.739 cv
311.184 254.116 311.409 254.621 311.409 255.252 cv
311.409 255.552 311.353 255.836 311.24 256.105 cv
311.129 256.373 310.925 256.689 310.628 257.053 cv
310.546 257.148 310.288 257.421 309.851 257.872 cv
309.416 258.323 308.801 258.954 308.006 259.764 cv
cp
f
315.627 253.172 mo
316.445 253.172 317.07 253.496 317.501 254.142 cv
317.932 254.788 318.148 255.726 318.148 256.956 cv
318.148 258.184 317.932 259.121 317.501 259.767 cv
317.07 260.413 316.445 260.736 315.627 260.736 cv
314.811 260.736 314.187 260.413 313.756 259.767 cv
313.324 259.121 313.109 258.184 313.109 256.956 cv
313.109 255.726 313.324 254.788 313.756 254.142 cv
314.187 253.496 314.811 253.172 315.627 253.172 cv
cp
315.627 253.953 mo
315.12 253.953 314.738 254.203 314.482 254.703 cv
314.227 255.202 314.099 255.953 314.099 256.956 cv
314.099 257.955 314.227 258.705 314.482 259.205 cv
314.738 259.705 315.12 259.955 315.627 259.955 cv
316.139 259.955 316.522 259.705 316.777 259.205 cv
317.034 258.705 317.162 257.955 317.162 256.956 cv
317.162 255.953 317.034 255.202 316.777 254.703 cv
316.522 254.203 316.139 253.953 315.627 253.953 cv
cp
f
320.052 259.764 mo
321.663 259.764 li
321.663 254.202 li
319.91 254.553 li
319.91 253.655 li
321.654 253.303 li
322.64 253.303 li
322.64 259.764 li
324.251 259.764 li
324.251 260.594 li
320.052 260.594 li
320.052 259.764 li
cp
f
328.235 257.352 mo
328.678 257.352 329.028 257.201 329.286 256.899 cv
329.546 256.596 329.676 256.18 329.676 255.652 cv
329.676 255.128 329.546 254.714 329.286 254.41 cv
329.028 254.105 328.678 253.953 328.235 253.953 cv
327.792 253.953 327.442 254.105 327.183 254.41 cv
326.925 254.714 326.796 255.128 326.796 255.652 cv
326.796 256.18 326.925 256.596 327.183 256.899 cv
327.442 257.201 327.792 257.352 328.235 257.352 cv
cp
326.272 260.442 mo
326.272 259.544 li
326.52 259.662 326.771 259.751 327.024 259.813 cv
327.278 259.874 327.528 259.905 327.772 259.905 cv
328.423 259.905 328.92 259.686 329.263 259.249 cv
329.607 258.811 329.803 258.146 329.852 257.253 cv
329.664 257.534 329.424 257.749 329.133 257.899 cv
328.844 258.049 328.523 258.124 328.172 258.124 cv
327.443 258.124 326.866 257.903 326.441 257.463 cv
326.016 257.021 325.804 256.417 325.804 255.652 cv
325.804 254.904 326.025 254.304 326.468 253.852 cv
326.91 253.399 327.499 253.172 328.235 253.172 cv
329.079 253.172 329.722 253.496 330.166 254.142 cv
330.611 254.788 330.833 255.726 330.833 256.956 cv
330.833 258.105 330.56 259.023 330.015 259.708 cv
329.47 260.393 328.737 260.736 327.816 260.736 cv
327.568 260.736 327.317 260.712 327.063 260.663 cv
326.81 260.614 326.546 260.54 326.272 260.442 cv
cp
f
262.448 245.995 mo
262.448 249.495 li
f
262.448 245.995 mo
262.448 249.495 li
@
251.642 259.764 mo
255.084 259.764 li
255.084 260.594 li
250.456 260.594 li
250.456 259.764 li
250.83 259.377 251.34 258.857 251.986 258.205 cv
252.633 257.552 253.039 257.13 253.205 256.941 cv
253.52 256.587 253.741 256.287 253.866 256.041 cv
253.992 255.795 254.055 255.553 254.055 255.316 cv
254.055 254.928 253.919 254.613 253.647 254.369 cv
253.375 254.124 253.021 254.002 252.584 254.002 cv
252.275 254.002 251.948 254.055 251.605 254.163 cv
251.262 254.27 250.895 254.433 250.505 254.652 cv
250.505 253.655 li
250.901 253.496 251.272 253.375 251.617 253.294 cv
251.963 253.213 252.279 253.172 252.566 253.172 cv
253.321 253.172 253.923 253.361 254.372 253.739 cv
254.821 254.116 255.045 254.621 255.045 255.252 cv
255.045 255.552 254.989 255.836 254.876 256.105 cv
254.765 256.373 254.561 256.689 254.264 257.053 cv
254.183 257.148 253.924 257.421 253.487 257.872 cv
253.052 258.323 252.437 258.954 251.642 259.764 cv
cp
f
259.264 253.172 mo
260.082 253.172 260.706 253.496 261.137 254.142 cv
261.568 254.788 261.784 255.726 261.784 256.956 cv
261.784 258.184 261.568 259.121 261.137 259.767 cv
260.706 260.413 260.082 260.736 259.264 260.736 cv
258.447 260.736 257.823 260.413 257.392 259.767 cv
256.961 259.121 256.745 258.184 256.745 256.956 cv
256.745 255.726 256.961 254.788 257.392 254.142 cv
257.823 253.496 258.447 253.172 259.264 253.172 cv
cp
259.264 253.953 mo
258.757 253.953 258.375 254.203 258.118 254.703 cv
257.863 255.202 257.736 255.953 257.736 256.956 cv
257.736 257.955 257.863 258.705 258.118 259.205 cv
258.375 259.705 258.757 259.955 259.264 259.955 cv
259.775 259.955 260.159 259.705 260.414 259.205 cv
260.67 258.705 260.798 257.955 260.798 256.956 cv
260.798 255.953 260.67 255.202 260.414 254.703 cv
260.159 254.203 259.775 253.953 259.264 253.953 cv
cp
f
263.689 259.764 mo
265.3 259.764 li
265.3 254.202 li
263.546 254.553 li
263.546 253.655 li
265.29 253.303 li
266.276 253.303 li
266.276 259.764 li
267.887 259.764 li
267.887 260.594 li
263.689 260.594 li
263.689 259.764 li
cp
f
269.631 253.303 mo
274.318 253.303 li
274.318 253.724 li
271.671 260.594 li
270.642 260.594 li
273.132 254.135 li
269.631 254.135 li
269.631 253.303 li
cp
f
206.085 245.995 mo
206.085 249.495 li
f
206.085 245.995 mo
206.085 249.495 li
@
195.278 259.764 mo
198.721 259.764 li
198.721 260.594 li
194.093 260.594 li
194.093 259.764 li
194.467 259.377 194.976 258.857 195.622 258.205 cv
196.269 257.552 196.675 257.13 196.841 256.941 cv
197.157 256.587 197.377 256.287 197.502 256.041 cv
197.628 255.795 197.691 255.553 197.691 255.316 cv
197.691 254.928 197.555 254.613 197.283 254.369 cv
197.011 254.124 196.657 254.002 196.221 254.002 cv
195.911 254.002 195.585 254.055 195.241 254.163 cv
194.898 254.27 194.532 254.433 194.141 254.652 cv
194.141 253.655 li
194.538 253.496 194.909 253.375 195.253 253.294 cv
195.599 253.213 195.915 253.172 196.202 253.172 cv
196.957 253.172 197.559 253.361 198.008 253.739 cv
198.457 254.116 198.682 254.621 198.682 255.252 cv
198.682 255.552 198.625 255.836 198.513 256.105 cv
198.401 256.373 198.197 256.689 197.9 257.053 cv
197.819 257.148 197.56 257.421 197.124 257.872 cv
196.688 258.323 196.073 258.954 195.278 259.764 cv
cp
f
202.9 253.172 mo
203.718 253.172 204.342 253.496 204.774 254.142 cv
205.205 254.788 205.42 255.726 205.42 256.956 cv
205.42 258.184 205.205 259.121 204.774 259.767 cv
204.342 260.413 203.718 260.736 202.9 260.736 cv
202.083 260.736 201.46 260.413 201.028 259.767 cv
200.597 259.121 200.381 258.184 200.381 256.956 cv
200.381 255.726 200.597 254.788 201.028 254.142 cv
201.46 253.496 202.083 253.172 202.9 253.172 cv
cp
202.9 253.953 mo
202.393 253.953 202.011 254.203 201.755 254.703 cv
201.5 255.202 201.372 255.953 201.372 256.956 cv
201.372 257.955 201.5 258.705 201.755 259.205 cv
202.011 259.705 202.393 259.955 202.9 259.955 cv
203.412 259.955 203.795 259.705 204.05 259.205 cv
204.306 258.705 204.435 257.955 204.435 256.956 cv
204.435 255.953 204.306 255.202 204.05 254.703 cv
203.795 254.203 203.412 253.953 202.9 253.953 cv
cp
f
207.325 259.764 mo
208.936 259.764 li
208.936 254.202 li
207.183 254.553 li
207.183 253.655 li
208.927 253.303 li
209.912 253.303 li
209.912 259.764 li
211.523 259.764 li
211.523 260.594 li
207.325 260.594 li
207.325 259.764 li
cp
f
213.526 253.303 mo
217.398 253.303 li
217.398 254.135 li
214.429 254.135 li
214.429 255.921 li
214.572 255.872 214.715 255.835 214.858 255.811 cv
215.001 255.787 215.145 255.775 215.289 255.775 cv
216.102 255.775 216.747 255.998 217.222 256.444 cv
217.698 256.89 217.936 257.493 217.936 258.255 cv
217.936 259.039 217.691 259.649 217.203 260.085 cv
216.714 260.519 216.026 260.736 215.137 260.736 cv
214.831 260.736 214.519 260.71 214.201 260.658 cv
213.885 260.606 213.557 260.528 213.219 260.424 cv
213.219 259.431 li
213.511 259.591 213.814 259.71 214.126 259.788 cv
214.439 259.866 214.769 259.905 215.117 259.905 cv
215.681 259.905 216.126 259.757 216.454 259.461 cv
216.784 259.165 216.948 258.763 216.948 258.255 cv
216.948 257.748 216.784 257.346 216.454 257.05 cv
216.126 256.753 215.681 256.605 215.117 256.605 cv
214.853 256.605 214.59 256.634 214.328 256.692 cv
214.066 256.751 213.799 256.842 213.526 256.966 cv
213.526 253.303 li
cp
f
149.721 245.995 mo
149.721 249.495 li
f
149.721 245.995 mo
149.721 249.495 li
@
138.915 259.764 mo
142.357 259.764 li
142.357 260.594 li
137.729 260.594 li
137.729 259.764 li
138.103 259.377 138.613 258.857 139.259 258.205 cv
139.905 257.552 140.312 257.13 140.477 256.941 cv
140.793 256.587 141.013 256.287 141.138 256.041 cv
141.264 255.795 141.327 255.553 141.327 255.316 cv
141.327 254.928 141.191 254.613 140.92 254.369 cv
140.648 254.124 140.294 254.002 139.857 254.002 cv
139.548 254.002 139.221 254.055 138.877 254.163 cv
138.535 254.27 138.168 254.433 137.777 254.652 cv
137.777 253.655 li
138.174 253.496 138.545 253.375 138.89 253.294 cv
139.236 253.213 139.552 253.172 139.838 253.172 cv
140.594 253.172 141.196 253.361 141.645 253.739 cv
142.094 254.116 142.318 254.621 142.318 255.252 cv
142.318 255.552 142.262 255.836 142.149 256.105 cv
142.038 256.373 141.834 256.689 141.537 257.053 cv
141.455 257.148 141.197 257.421 140.76 257.872 cv
140.325 258.323 139.71 258.954 138.915 259.764 cv
cp
f
146.537 253.172 mo
147.354 253.172 147.979 253.496 148.41 254.142 cv
148.841 254.788 149.057 255.726 149.057 256.956 cv
149.057 258.184 148.841 259.121 148.41 259.767 cv
147.979 260.413 147.354 260.736 146.537 260.736 cv
145.72 260.736 145.096 260.413 144.665 259.767 cv
144.233 259.121 144.018 258.184 144.018 256.956 cv
144.018 255.726 144.233 254.788 144.665 254.142 cv
145.096 253.496 145.72 253.172 146.537 253.172 cv
cp
146.537 253.953 mo
146.029 253.953 145.647 254.203 145.391 254.703 cv
145.136 255.202 145.008 255.953 145.008 256.956 cv
145.008 257.955 145.136 258.705 145.391 259.205 cv
145.647 259.705 146.029 259.955 146.537 259.955 cv
147.048 259.955 147.431 259.705 147.687 259.205 cv
147.943 258.705 148.071 257.955 148.071 256.956 cv
148.071 255.953 147.943 255.202 147.687 254.703 cv
147.431 254.203 147.048 253.953 146.537 253.953 cv
cp
f
150.961 259.764 mo
152.572 259.764 li
152.572 254.202 li
150.819 254.553 li
150.819 253.655 li
152.563 253.303 li
153.549 253.303 li
153.549 259.764 li
155.16 259.764 li
155.16 260.594 li
150.961 260.594 li
150.961 259.764 li
cp
f
160.141 256.663 mo
160.613 256.764 160.981 256.974 161.246 257.294 cv
161.511 257.613 161.644 258.006 161.644 258.475 cv
161.644 259.194 161.397 259.751 160.902 260.146 cv
160.407 260.539 159.704 260.736 158.792 260.736 cv
158.487 260.736 158.173 260.706 157.849 260.646 cv
157.525 260.585 157.19 260.494 156.846 260.374 cv
156.846 259.422 li
157.118 259.581 157.417 259.702 157.742 259.783 cv
158.068 259.864 158.409 259.905 158.764 259.905 cv
159.382 259.905 159.853 259.783 160.177 259.539 cv
160.501 259.296 160.663 258.941 160.663 258.475 cv
160.663 258.045 160.512 257.709 160.211 257.467 cv
159.91 257.225 159.491 257.103 158.955 257.103 cv
158.105 257.103 li
158.105 256.292 li
158.994 256.292 li
159.478 256.292 159.849 256.195 160.106 256.002 cv
160.364 255.808 160.492 255.529 160.492 255.164 cv
160.492 254.79 160.36 254.503 160.094 254.303 cv
159.829 254.102 159.45 254.002 158.955 254.002 cv
158.684 254.002 158.394 254.031 158.085 254.091 cv
157.775 254.149 157.435 254.24 157.064 254.363 cv
157.064 253.485 li
157.439 253.38 157.79 253.302 158.117 253.25 cv
158.444 253.198 158.753 253.172 159.042 253.172 cv
159.791 253.172 160.384 253.342 160.819 253.683 cv
161.255 254.023 161.474 254.482 161.474 255.061 cv
161.474 255.465 161.358 255.806 161.127 256.085 cv
160.896 256.363 160.567 256.555 160.141 256.663 cv
cp
f
93.3575 245.995 mo
93.3575 249.495 li
f
93.3575 245.995 mo
93.3575 249.495 li
@
82.5512 259.764 mo
85.9934 259.764 li
85.9934 260.594 li
81.3653 260.594 li
81.3653 259.764 li
81.7392 259.377 82.2491 258.857 82.895 258.205 cv
83.5418 257.552 83.9481 257.13 84.1137 256.941 cv
84.4294 256.587 84.6497 256.287 84.7747 256.041 cv
84.9007 255.795 84.9637 255.553 84.9637 255.316 cv
84.9637 254.928 84.8278 254.613 84.5559 254.369 cv
84.284 254.124 83.9299 254.002 83.4934 254.002 cv
83.184 254.002 82.8575 254.055 82.5137 254.163 cv
82.171 254.27 81.8044 254.433 81.4137 254.652 cv
81.4137 253.655 li
81.8106 253.496 82.1814 253.375 82.5262 253.294 cv
82.8721 253.213 83.1882 253.172 83.4747 253.172 cv
84.2299 253.172 84.832 253.361 85.2809 253.739 cv
85.7299 254.116 85.9543 254.621 85.9543 255.252 cv
85.9543 255.552 85.8981 255.836 85.7856 256.105 cv
85.6741 256.373 85.47 256.689 85.1731 257.053 cv
85.0919 257.148 84.833 257.421 84.3965 257.872 cv
83.9611 258.323 83.346 258.954 82.5512 259.764 cv
cp
f
90.1729 253.172 mo
90.9906 253.172 91.6151 253.496 92.0463 254.142 cv
92.4776 254.788 92.6932 255.726 92.6932 256.956 cv
92.6932 258.184 92.4776 259.121 92.0463 259.767 cv
91.6151 260.413 90.9906 260.736 90.1729 260.736 cv
89.3562 260.736 88.7323 260.413 88.301 259.767 cv
87.8698 259.121 87.6542 258.184 87.6542 256.956 cv
87.6542 255.726 87.8698 254.788 88.301 254.142 cv
88.7323 253.496 89.3562 253.172 90.1729 253.172 cv
cp
90.1729 253.953 mo
89.6656 253.953 89.2838 254.203 89.0276 254.703 cv
88.7724 255.202 88.6448 255.953 88.6448 256.956 cv
88.6448 257.955 88.7724 258.705 89.0276 259.205 cv
89.2838 259.705 89.6656 259.955 90.1729 259.955 cv
90.6844 259.955 91.0677 259.705 91.3229 259.205 cv
91.5792 258.705 91.7073 257.955 91.7073 256.956 cv
91.7073 255.953 91.5792 255.202 91.3229 254.703 cv
91.0677 254.203 90.6844 253.953 90.1729 253.953 cv
cp
f
94.5977 259.764 mo
96.2086 259.764 li
96.2086 254.202 li
94.4555 254.553 li
94.4555 253.655 li
96.1993 253.303 li
97.1852 253.303 li
97.1852 259.764 li
98.7961 259.764 li
98.7961 260.594 li
94.5977 260.594 li
94.5977 259.764 li
cp
f
100.96 259.764 mo
102.571 259.764 li
102.571 254.202 li
100.818 254.553 li
100.818 253.655 li
102.562 253.303 li
103.548 253.303 li
103.548 259.764 li
105.158 259.764 li
105.158 260.594 li
100.96 260.594 li
100.96 259.764 li
cp
f
197.75 266.981 mo
198.811 266.981 li
200.831 269.98 li
202.839 266.981 li
203.899 266.981 li
201.32 270.8 li
201.32 274.272 li
200.33 274.272 li
200.33 270.8 li
197.75 266.981 li
cp
f
207.276 271.049 mo
207.27 270.558 207.132 270.166 206.863 269.874 cv
206.594 269.58 206.239 269.433 205.796 269.433 cv
205.295 269.433 204.894 269.575 204.593 269.858 cv
204.292 270.141 204.118 270.54 204.073 271.055 cv
207.276 271.049 li
cp
208.174 271.313 mo
208.174 271.752 li
204.043 271.752 li
204.083 272.371 204.269 272.842 204.602 273.166 cv
204.936 273.49 205.4 273.652 205.996 273.652 cv
206.341 273.652 206.675 273.61 206.999 273.525 cv
207.323 273.441 207.645 273.314 207.965 273.144 cv
207.965 273.994 li
207.642 274.13 207.311 274.235 206.973 274.306 cv
206.634 274.378 206.291 274.414 205.943 274.414 cv
205.07 274.414 204.379 274.161 203.869 273.653 cv
203.36 273.145 203.105 272.457 203.105 271.591 cv
203.105 270.696 203.347 269.986 203.83 269.461 cv
204.314 268.935 204.966 268.672 205.787 268.672 cv
206.522 268.672 207.104 268.909 207.532 269.383 cv
207.96 269.856 208.174 270.499 208.174 271.313 cv
cp
f
213.927 271.152 mo
213.927 274.272 li
213.028 274.272 li
213.028 273.442 li
212.823 273.774 212.567 274.018 212.261 274.177 cv
211.955 274.335 211.58 274.414 211.137 274.414 cv
210.578 274.414 210.133 274.257 209.802 273.942 cv
209.471 273.628 209.306 273.207 209.306 272.68 cv
209.306 272.065 209.512 271.602 209.923 271.289 cv
210.336 270.977 210.95 270.821 211.767 270.821 cv
213.028 270.821 li
213.028 270.731 li
213.028 270.318 212.892 269.998 212.62 269.772 cv
212.348 269.546 211.967 269.433 211.475 269.433 cv
211.162 269.433 210.858 269.471 210.561 269.546 cv
210.265 269.621 209.981 269.733 209.708 269.883 cv
209.708 269.052 li
210.036 268.925 210.355 268.83 210.664 268.767 cv
210.973 268.704 211.274 268.672 211.567 268.672 cv
212.359 268.672 212.95 268.877 213.341 269.288 cv
213.731 269.697 213.927 270.318 213.927 271.152 cv
cp
212.134 271.524 mo
211.408 271.524 210.905 271.606 210.625 271.772 cv
210.345 271.938 210.205 272.221 210.205 272.622 cv
210.205 272.941 210.31 273.194 210.52 273.381 cv
210.731 273.568 211.016 273.661 211.377 273.661 cv
211.875 273.661 212.275 273.485 212.577 273.131 cv
212.878 272.778 213.028 272.309 213.028 271.724 cv
213.028 271.524 li
212.134 271.524 li
cp
f
218.945 269.642 mo
218.844 269.584 218.734 269.541 218.615 269.514 cv
218.497 269.486 218.366 269.472 218.223 269.472 cv
217.715 269.472 217.325 269.637 217.053 269.967 cv
216.781 270.298 216.645 270.772 216.645 271.391 cv
216.645 274.272 li
215.742 274.272 li
215.742 268.803 li
216.645 268.803 li
216.645 269.653 li
216.835 269.321 217.081 269.075 217.383 268.914 cv
217.686 268.753 218.054 268.672 218.487 268.672 cv
218.549 268.672 218.617 268.676 218.692 268.685 cv
218.767 268.692 218.85 268.704 218.94 268.721 cv
218.945 269.642 li
cp
f
226.993 271.542 mo
226.993 270.882 226.857 270.364 226.585 269.988 cv
226.313 269.612 225.94 269.424 225.465 269.424 cv
224.989 269.424 224.615 269.612 224.343 269.988 cv
224.071 270.364 223.935 270.882 223.935 271.542 cv
223.935 272.203 224.071 272.721 224.343 273.097 cv
224.615 273.473 224.989 273.661 225.465 273.661 cv
225.94 273.661 226.313 273.473 226.585 273.097 cv
226.857 272.721 226.993 272.203 226.993 271.542 cv
cp
223.935 273.452 mo
223.935 276.352 li
223.032 276.352 li
223.032 268.803 li
223.935 268.803 li
223.935 269.633 li
224.125 269.308 224.363 269.067 224.651 268.91 cv
224.939 268.751 225.284 268.672 225.684 268.672 cv
226.348 268.672 226.888 268.936 227.302 269.463 cv
227.718 269.99 227.926 270.683 227.926 271.542 cv
227.926 272.402 227.718 273.096 227.302 273.624 cv
226.888 274.151 226.348 274.414 225.684 274.414 cv
225.284 274.414 224.939 274.335 224.651 274.177 cv
224.363 274.018 224.125 273.777 223.935 273.452 cv
cp
f
229.322 272.114 mo
229.322 268.803 li
230.22 268.803 li
230.22 272.08 li
230.22 272.598 230.321 272.986 230.522 273.246 cv
230.724 273.504 231.027 273.633 231.431 273.633 cv
231.916 273.633 232.298 273.478 232.58 273.169 cv
232.862 272.86 233.003 272.438 233.003 271.903 cv
233.003 268.803 li
233.902 268.803 li
233.902 274.272 li
233.003 274.272 li
233.003 273.431 li
232.785 273.764 232.532 274.011 232.244 274.172 cv
231.956 274.334 231.622 274.414 231.241 274.414 cv
230.612 274.414 230.135 274.219 229.809 273.828 cv
229.484 273.438 229.322 272.866 229.322 272.114 cv
cp
f
236.621 269.633 mo
236.81 269.308 237.049 269.067 237.336 268.91 cv
237.625 268.751 237.969 268.672 238.369 268.672 cv
239.034 268.672 239.573 268.936 239.988 269.463 cv
240.403 269.99 240.611 270.683 240.611 271.542 cv
240.611 272.402 240.403 273.096 239.988 273.624 cv
239.573 274.151 239.034 274.414 238.369 274.414 cv
237.969 274.414 237.625 274.335 237.336 274.177 cv
237.049 274.018 236.81 273.777 236.621 273.452 cv
236.621 274.272 li
235.718 274.272 li
235.718 266.674 li
236.621 266.674 li
236.621 269.633 li
cp
239.678 271.542 mo
239.678 270.882 239.543 270.364 239.271 269.988 cv
238.999 269.612 238.625 269.424 238.15 269.424 cv
237.674 269.424 237.3 269.612 237.028 269.988 cv
236.757 270.364 236.621 270.882 236.621 271.542 cv
236.621 272.203 236.757 272.721 237.028 273.097 cv
237.3 273.473 237.674 273.661 238.15 273.661 cv
238.625 273.661 238.999 273.473 239.271 273.097 cv
239.543 272.721 239.678 272.203 239.678 271.542 cv
cp
f
242.1 266.674 mo
242.998 266.674 li
242.998 274.272 li
242.1 274.272 li
242.1 266.674 li
cp
f
244.878 266.674 mo
245.776 266.674 li
245.776 267.813 li
244.878 267.813 li
244.878 266.674 li
cp
244.878 268.803 mo
245.776 268.803 li
245.776 274.272 li
244.878 274.272 li
244.878 268.803 li
cp
f
251.142 268.964 mo
251.142 269.814 li
250.889 269.684 250.625 269.587 250.352 269.522 cv
250.079 269.456 249.795 269.424 249.502 269.424 cv
249.056 269.424 248.721 269.492 248.498 269.628 cv
248.275 269.765 248.164 269.97 248.164 270.244 cv
248.164 270.452 248.244 270.616 248.403 270.735 cv
248.562 270.853 248.883 270.966 249.366 271.074 cv
249.673 271.142 li
250.311 271.279 250.764 271.472 251.033 271.721 cv
251.302 271.969 251.436 272.317 251.436 272.763 cv
251.436 273.271 251.235 273.674 250.833 273.971 cv
250.431 274.266 249.878 274.414 249.175 274.414 cv
248.882 274.414 248.577 274.386 248.259 274.328 cv
247.942 274.271 247.607 274.186 247.256 274.072 cv
247.256 273.144 li
247.589 273.317 247.916 273.447 248.237 273.533 cv
248.559 273.618 248.879 273.661 249.195 273.661 cv
249.618 273.661 249.943 273.589 250.17 273.444 cv
250.398 273.299 250.512 273.095 250.512 272.831 cv
250.512 272.588 250.43 272.401 250.266 272.271 cv
250.102 272.14 249.742 272.015 249.184 271.894 cv
248.872 271.821 li
248.316 271.704 247.914 271.524 247.666 271.281 cv
247.419 271.039 247.295 270.706 247.295 270.283 cv
247.295 269.768 247.478 269.372 247.842 269.092 cv
248.207 268.812 248.724 268.672 249.395 268.672 cv
249.727 268.672 250.039 268.697 250.331 268.746 cv
250.625 268.793 250.895 268.866 251.142 268.964 cv
cp
f
257.413 270.971 mo
257.413 274.272 li
256.515 274.272 li
256.515 271 li
256.515 270.482 256.414 270.096 256.211 269.839 cv
256.009 269.582 255.707 269.453 255.304 269.453 cv
254.818 269.453 254.435 269.608 254.155 269.917 cv
253.875 270.226 253.735 270.647 253.735 271.181 cv
253.735 274.272 li
252.832 274.272 li
252.832 266.674 li
253.735 266.674 li
253.735 269.653 li
253.951 269.324 254.204 269.078 254.494 268.916 cv
254.786 268.753 255.122 268.672 255.504 268.672 cv
256.132 268.672 256.607 268.866 256.929 269.255 cv
257.252 269.643 257.413 270.215 257.413 270.971 cv
cp
f
262.984 271.049 mo
262.978 270.558 262.84 270.166 262.571 269.874 cv
262.303 269.58 261.947 269.433 261.504 269.433 cv
261.003 269.433 260.602 269.575 260.301 269.858 cv
260 270.141 259.826 270.54 259.781 271.055 cv
262.984 271.049 li
cp
263.882 271.313 mo
263.882 271.752 li
259.751 271.752 li
259.791 272.371 259.977 272.842 260.31 273.166 cv
260.644 273.49 261.108 273.652 261.704 273.652 cv
262.049 273.652 262.383 273.61 262.707 273.525 cv
263.031 273.441 263.353 273.314 263.673 273.144 cv
263.673 273.994 li
263.35 274.13 263.019 274.235 262.681 274.306 cv
262.342 274.378 261.999 274.414 261.651 274.414 cv
260.778 274.414 260.087 274.161 259.578 273.653 cv
259.068 273.145 258.813 272.457 258.813 271.591 cv
258.813 270.696 259.055 269.986 259.538 269.461 cv
260.022 268.935 260.674 268.672 261.495 268.672 cv
262.23 268.672 262.812 268.909 263.24 269.383 cv
263.668 269.856 263.882 270.499 263.882 271.313 cv
cp
f
265.894 271.542 mo
265.894 272.203 266.03 272.721 266.302 273.097 cv
266.574 273.473 266.947 273.661 267.422 273.661 cv
267.897 273.661 268.271 273.473 268.544 273.097 cv
268.818 272.721 268.955 272.203 268.955 271.542 cv
268.955 270.882 268.818 270.364 268.544 269.988 cv
268.271 269.612 267.897 269.424 267.422 269.424 cv
266.947 269.424 266.574 269.612 266.302 269.988 cv
266.03 270.364 265.894 270.882 265.894 271.542 cv
cp
268.955 269.633 mo
268.955 266.674 li
269.853 266.674 li
269.853 274.272 li
268.955 274.272 li
268.955 273.452 li
268.766 273.777 268.528 274.018 268.239 274.177 cv
267.952 274.335 267.606 274.414 267.202 274.414 cv
266.541 274.414 266.003 274.151 265.588 273.624 cv
265.173 273.096 264.966 272.402 264.966 271.542 cv
264.966 270.683 265.173 269.99 265.588 269.463 cv
266.003 268.936 266.541 268.672 267.202 268.672 cv
267.606 268.672 267.952 268.751 268.239 268.91 cv
268.528 269.067 268.766 269.308 268.955 269.633 cv
cp
f
66.8666 245.995 mo
63.3666 245.995 li
f
66.8666 245.995 mo
63.3666 245.995 li
@
28.0541 242.373 mo
28.8718 242.373 29.4963 242.696 29.9275 243.343 cv
30.3588 243.989 30.5744 244.927 30.5744 246.157 cv
30.5744 247.384 30.3588 248.321 29.9275 248.968 cv
29.4963 249.614 28.8718 249.937 28.0541 249.937 cv
27.2374 249.937 26.6134 249.614 26.1822 248.968 cv
25.7509 248.321 25.5353 247.384 25.5353 246.157 cv
25.5353 244.927 25.7509 243.989 26.1822 243.343 cv
26.6134 242.696 27.2374 242.373 28.0541 242.373 cv
cp
28.0541 243.154 mo
27.5468 243.154 27.165 243.404 26.9088 243.904 cv
26.6535 244.403 26.5259 245.154 26.5259 246.157 cv
26.5259 247.156 26.6535 247.906 26.9088 248.406 cv
27.165 248.906 27.5468 249.156 28.0541 249.156 cv
28.5655 249.156 28.9489 248.906 29.2041 248.406 cv
29.4603 247.906 29.5884 247.156 29.5884 246.157 cv
29.5884 245.154 29.4603 244.403 29.2041 243.904 cv
28.9489 243.404 28.5655 243.154 28.0541 243.154 cv
cp
f
32.307 248.554 mo
33.3382 248.554 li
33.3382 249.795 li
32.307 249.795 li
32.307 248.554 li
cp
f
37.5951 242.373 mo
38.4128 242.373 39.0373 242.696 39.4685 243.343 cv
39.8998 243.989 40.1154 244.927 40.1154 246.157 cv
40.1154 247.384 39.8998 248.321 39.4685 248.968 cv
39.0373 249.614 38.4128 249.937 37.5951 249.937 cv
36.7784 249.937 36.1545 249.614 35.7232 248.968 cv
35.292 248.321 35.0763 247.384 35.0763 246.157 cv
35.0763 244.927 35.292 243.989 35.7232 243.343 cv
36.1545 242.696 36.7784 242.373 37.5951 242.373 cv
cp
37.5951 243.154 mo
37.0878 243.154 36.706 243.404 36.4498 243.904 cv
36.1946 244.403 36.067 245.154 36.067 246.157 cv
36.067 247.156 36.1946 247.906 36.4498 248.406 cv
36.706 248.906 37.0878 249.156 37.5951 249.156 cv
38.1065 249.156 38.4899 248.906 38.7451 248.406 cv
39.0013 247.906 39.1295 247.156 39.1295 246.157 cv
39.1295 245.154 39.0013 244.403 38.7451 243.904 cv
38.4899 243.404 38.1065 243.154 37.5951 243.154 cv
cp
f
43.9574 242.373 mo
44.7751 242.373 45.3996 242.696 45.8308 243.343 cv
46.2621 243.989 46.4777 244.927 46.4777 246.157 cv
46.4777 247.384 46.2621 248.321 45.8308 248.968 cv
45.3996 249.614 44.7751 249.937 43.9574 249.937 cv
43.1407 249.937 42.5168 249.614 42.0855 248.968 cv
41.6543 248.321 41.4386 247.384 41.4386 246.157 cv
41.4386 244.927 41.6543 243.989 42.0855 243.343 cv
42.5168 242.696 43.1407 242.373 43.9574 242.373 cv
cp
43.9574 243.154 mo
43.4501 243.154 43.0683 243.404 42.8121 243.904 cv
42.5569 244.403 42.4293 245.154 42.4293 246.157 cv
42.4293 247.156 42.5569 247.906 42.8121 248.406 cv
43.0683 248.906 43.4501 249.156 43.9574 249.156 cv
44.4688 249.156 44.8522 248.906 45.1074 248.406 cv
45.3636 247.906 45.4918 247.156 45.4918 246.157 cv
45.4918 245.154 45.3636 244.403 45.1074 243.904 cv
44.8522 243.404 44.4688 243.154 43.9574 243.154 cv
cp
f
50.3197 242.373 mo
51.1374 242.373 51.7619 242.696 52.1931 243.343 cv
52.6244 243.989 52.84 244.927 52.84 246.157 cv
52.84 247.384 52.6244 248.321 52.1931 248.968 cv
51.7619 249.614 51.1374 249.937 50.3197 249.937 cv
49.503 249.937 48.8791 249.614 48.4478 248.968 cv
48.0166 248.321 47.8009 247.384 47.8009 246.157 cv
47.8009 244.927 48.0166 243.989 48.4478 243.343 cv
48.8791 242.696 49.503 242.373 50.3197 242.373 cv
cp
50.3197 243.154 mo
49.8124 243.154 49.4306 243.404 49.1744 243.904 cv
48.9192 244.403 48.7916 245.154 48.7916 246.157 cv
48.7916 247.156 48.9192 247.906 49.1744 248.406 cv
49.4306 248.906 49.8124 249.156 50.3197 249.156 cv
50.8311 249.156 51.2145 248.906 51.4697 248.406 cv
51.7259 247.906 51.8541 247.156 51.8541 246.157 cv
51.8541 245.154 51.7259 244.403 51.4697 243.904 cv
51.2145 243.404 50.8311 243.154 50.3197 243.154 cv
cp
f
56.682 242.373 mo
57.4997 242.373 58.1242 242.696 58.5554 243.343 cv
58.9867 243.989 59.2023 244.927 59.2023 246.157 cv
59.2023 247.384 58.9867 248.321 58.5554 248.968 cv
58.1242 249.614 57.4997 249.937 56.682 249.937 cv
55.8653 249.937 55.2414 249.614 54.8101 248.968 cv
54.3789 248.321 54.1632 247.384 54.1632 246.157 cv
54.1632 244.927 54.3789 243.989 54.8101 243.343 cv
55.2414 242.696 55.8653 242.373 56.682 242.373 cv
cp
56.682 243.154 mo
56.1747 243.154 55.7929 243.404 55.5367 243.904 cv
55.2815 244.403 55.1539 245.154 55.1539 246.157 cv
55.1539 247.156 55.2815 247.906 55.5367 248.406 cv
55.7929 248.906 56.1747 249.156 56.682 249.156 cv
57.1935 249.156 57.5768 248.906 57.832 248.406 cv
58.0882 247.906 58.2164 247.156 58.2164 246.157 cv
58.2164 245.154 58.0882 244.403 57.832 243.904 cv
57.5768 243.404 57.1935 243.154 56.682 243.154 cv
cp
f
66.8666 217.336 mo
63.3666 217.336 li
f
66.8666 217.336 mo
63.3666 217.336 li
@
28.0541 213.713 mo
28.8718 213.713 29.4963 214.036 29.9275 214.683 cv
30.3588 215.329 30.5744 216.267 30.5744 217.497 cv
30.5744 218.724 30.3588 219.661 29.9275 220.308 cv
29.4963 220.954 28.8718 221.277 28.0541 221.277 cv
27.2374 221.277 26.6134 220.954 26.1822 220.308 cv
25.7509 219.661 25.5353 218.724 25.5353 217.497 cv
25.5353 216.267 25.7509 215.329 26.1822 214.683 cv
26.6134 214.036 27.2374 213.713 28.0541 213.713 cv
cp
28.0541 214.494 mo
27.5468 214.494 27.165 214.744 26.9088 215.244 cv
26.6535 215.743 26.5259 216.494 26.5259 217.497 cv
26.5259 218.496 26.6535 219.246 26.9088 219.746 cv
27.165 220.246 27.5468 220.496 28.0541 220.496 cv
28.5655 220.496 28.9489 220.246 29.2041 219.746 cv
29.4603 219.246 29.5884 218.496 29.5884 217.497 cv
29.5884 216.494 29.4603 215.743 29.2041 215.244 cv
28.9489 214.744 28.5655 214.494 28.0541 214.494 cv
cp
f
32.307 219.894 mo
33.3382 219.894 li
33.3382 221.135 li
32.307 221.135 li
32.307 219.894 li
cp
f
37.5951 213.713 mo
38.4128 213.713 39.0373 214.036 39.4685 214.683 cv
39.8998 215.329 40.1154 216.267 40.1154 217.497 cv
40.1154 218.724 39.8998 219.661 39.4685 220.308 cv
39.0373 220.954 38.4128 221.277 37.5951 221.277 cv
36.7784 221.277 36.1545 220.954 35.7232 220.308 cv
35.292 219.661 35.0763 218.724 35.0763 217.497 cv
35.0763 216.267 35.292 215.329 35.7232 214.683 cv
36.1545 214.036 36.7784 213.713 37.5951 213.713 cv
cp
37.5951 214.494 mo
37.0878 214.494 36.706 214.744 36.4498 215.244 cv
36.1946 215.743 36.067 216.494 36.067 217.497 cv
36.067 218.496 36.1946 219.246 36.4498 219.746 cv
36.706 220.246 37.0878 220.496 37.5951 220.496 cv
38.1065 220.496 38.4899 220.246 38.7451 219.746 cv
39.0013 219.246 39.1295 218.496 39.1295 217.497 cv
39.1295 216.494 39.0013 215.743 38.7451 215.244 cv
38.4899 214.744 38.1065 214.494 37.5951 214.494 cv
cp
f
43.9574 213.713 mo
44.7751 213.713 45.3996 214.036 45.8308 214.683 cv
46.2621 215.329 46.4777 216.267 46.4777 217.497 cv
46.4777 218.724 46.2621 219.661 45.8308 220.308 cv
45.3996 220.954 44.7751 221.277 43.9574 221.277 cv
43.1407 221.277 42.5168 220.954 42.0855 220.308 cv
41.6543 219.661 41.4386 218.724 41.4386 217.497 cv
41.4386 216.267 41.6543 215.329 42.0855 214.683 cv
42.5168 214.036 43.1407 213.713 43.9574 213.713 cv
cp
43.9574 214.494 mo
43.4501 214.494 43.0683 214.744 42.8121 215.244 cv
42.5569 215.743 42.4293 216.494 42.4293 217.497 cv
42.4293 218.496 42.5569 219.246 42.8121 219.746 cv
43.0683 220.246 43.4501 220.496 43.9574 220.496 cv
44.4688 220.496 44.8522 220.246 45.1074 219.746 cv
45.3636 219.246 45.4918 218.496 45.4918 217.497 cv
45.4918 216.494 45.3636 215.743 45.1074 215.244 cv
44.8522 214.744 44.4688 214.494 43.9574 214.494 cv
cp
f
50.3197 213.713 mo
51.1374 213.713 51.7619 214.036 52.1931 214.683 cv
52.6244 215.329 52.84 216.267 52.84 217.497 cv
52.84 218.724 52.6244 219.661 52.1931 220.308 cv
51.7619 220.954 51.1374 221.277 50.3197 221.277 cv
49.503 221.277 48.8791 220.954 48.4478 220.308 cv
48.0166 219.661 47.8009 218.724 47.8009 217.497 cv
47.8009 216.267 48.0166 215.329 48.4478 214.683 cv
48.8791 214.036 49.503 213.713 50.3197 213.713 cv
cp
50.3197 214.494 mo
49.8124 214.494 49.4306 214.744 49.1744 215.244 cv
48.9192 215.743 48.7916 216.494 48.7916 217.497 cv
48.7916 218.496 48.9192 219.246 49.1744 219.746 cv
49.4306 220.246 49.8124 220.496 50.3197 220.496 cv
50.8311 220.496 51.2145 220.246 51.4697 219.746 cv
51.7259 219.246 51.8541 218.496 51.8541 217.497 cv
51.8541 216.494 51.7259 215.743 51.4697 215.244 cv
51.2145 214.744 50.8311 214.494 50.3197 214.494 cv
cp
f
54.5836 213.844 mo
58.4554 213.844 li
58.4554 214.676 li
55.4867 214.676 li
55.4867 216.461 li
55.6294 216.412 55.7721 216.376 55.9148 216.352 cv
56.0586 216.328 56.2023 216.316 56.3461 216.316 cv
57.1596 216.316 57.8039 216.539 58.2789 216.985 cv
58.7549 217.431 58.9929 218.034 58.9929 218.796 cv
58.9929 219.58 58.7487 220.19 58.2601 220.626 cv
57.7716 221.06 57.083 221.277 56.1945 221.277 cv
55.8882 221.277 55.5763 221.251 55.2586 221.199 cv
54.9419 221.147 54.6143 221.069 54.2757 220.965 cv
54.2757 219.972 li
54.5685 220.132 54.8711 220.251 55.1836 220.329 cv
55.4961 220.407 55.8263 220.446 56.1742 220.446 cv
56.7377 220.446 57.1836 220.298 57.5117 220.002 cv
57.8408 219.706 58.0054 219.304 58.0054 218.796 cv
58.0054 218.289 57.8408 217.887 57.5117 217.591 cv
57.1836 217.294 56.7377 217.146 56.1742 217.146 cv
55.9106 217.146 55.6476 217.175 55.3851 217.233 cv
55.1237 217.292 54.8565 217.383 54.5836 217.507 cv
54.5836 213.844 li
cp
f
66.8666 188.676 mo
63.3666 188.676 li
f
66.8666 188.676 mo
63.3666 188.676 li
@
28.0541 185.053 mo
28.8718 185.053 29.4963 185.377 29.9275 186.023 cv
30.3588 186.669 30.5744 187.607 30.5744 188.838 cv
30.5744 190.065 30.3588 191.002 29.9275 191.648 cv
29.4963 192.294 28.8718 192.617 28.0541 192.617 cv
27.2374 192.617 26.6134 192.294 26.1822 191.648 cv
25.7509 191.002 25.5353 190.065 25.5353 188.838 cv
25.5353 187.607 25.7509 186.669 26.1822 186.023 cv
26.6134 185.377 27.2374 185.053 28.0541 185.053 cv
cp
28.0541 185.834 mo
27.5468 185.834 27.165 186.084 26.9088 186.584 cv
26.6535 187.083 26.5259 187.834 26.5259 188.838 cv
26.5259 189.837 26.6535 190.586 26.9088 191.086 cv
27.165 191.586 27.5468 191.836 28.0541 191.836 cv
28.5655 191.836 28.9489 191.586 29.2041 191.086 cv
29.4603 190.586 29.5884 189.837 29.5884 188.838 cv
29.5884 187.834 29.4603 187.083 29.2041 186.584 cv
28.9489 186.084 28.5655 185.834 28.0541 185.834 cv
cp
f
32.307 191.234 mo
33.3382 191.234 li
33.3382 192.475 li
32.307 192.475 li
32.307 191.234 li
cp
f
37.5951 185.053 mo
38.4128 185.053 39.0373 185.377 39.4685 186.023 cv
39.8998 186.669 40.1154 187.607 40.1154 188.838 cv
40.1154 190.065 39.8998 191.002 39.4685 191.648 cv
39.0373 192.294 38.4128 192.617 37.5951 192.617 cv
36.7784 192.617 36.1545 192.294 35.7232 191.648 cv
35.292 191.002 35.0763 190.065 35.0763 188.838 cv
35.0763 187.607 35.292 186.669 35.7232 186.023 cv
36.1545 185.377 36.7784 185.053 37.5951 185.053 cv
cp
37.5951 185.834 mo
37.0878 185.834 36.706 186.084 36.4498 186.584 cv
36.1946 187.083 36.067 187.834 36.067 188.838 cv
36.067 189.837 36.1946 190.586 36.4498 191.086 cv
36.706 191.586 37.0878 191.836 37.5951 191.836 cv
38.1065 191.836 38.4899 191.586 38.7451 191.086 cv
39.0013 190.586 39.1295 189.837 39.1295 188.838 cv
39.1295 187.834 39.0013 187.083 38.7451 186.584 cv
38.4899 186.084 38.1065 185.834 37.5951 185.834 cv
cp
f
43.9574 185.053 mo
44.7751 185.053 45.3996 185.377 45.8308 186.023 cv
46.2621 186.669 46.4777 187.607 46.4777 188.838 cv
46.4777 190.065 46.2621 191.002 45.8308 191.648 cv
45.3996 192.294 44.7751 192.617 43.9574 192.617 cv
43.1407 192.617 42.5168 192.294 42.0855 191.648 cv
41.6543 191.002 41.4386 190.065 41.4386 188.838 cv
41.4386 187.607 41.6543 186.669 42.0855 186.023 cv
42.5168 185.377 43.1407 185.053 43.9574 185.053 cv
cp
43.9574 185.834 mo
43.4501 185.834 43.0683 186.084 42.8121 186.584 cv
42.5569 187.083 42.4293 187.834 42.4293 188.838 cv
42.4293 189.837 42.5569 190.586 42.8121 191.086 cv
43.0683 191.586 43.4501 191.836 43.9574 191.836 cv
44.4688 191.836 44.8522 191.586 45.1074 191.086 cv
45.3636 190.586 45.4918 189.837 45.4918 188.838 cv
45.4918 187.834 45.3636 187.083 45.1074 186.584 cv
44.8522 186.084 44.4688 185.834 43.9574 185.834 cv
cp
f
48.3822 191.645 mo
49.9931 191.645 li
49.9931 186.083 li
48.24 186.434 li
48.24 185.536 li
49.9838 185.184 li
50.9697 185.184 li
50.9697 191.645 li
52.5806 191.645 li
52.5806 192.475 li
48.3822 192.475 li
48.3822 191.645 li
cp
f
56.682 185.053 mo
57.4997 185.053 58.1242 185.377 58.5554 186.023 cv
58.9867 186.669 59.2023 187.607 59.2023 188.838 cv
59.2023 190.065 58.9867 191.002 58.5554 191.648 cv
58.1242 192.294 57.4997 192.617 56.682 192.617 cv
55.8653 192.617 55.2414 192.294 54.8101 191.648 cv
54.3789 191.002 54.1632 190.065 54.1632 188.838 cv
54.1632 187.607 54.3789 186.669 54.8101 186.023 cv
55.2414 185.377 55.8653 185.053 56.682 185.053 cv
cp
56.682 185.834 mo
56.1747 185.834 55.7929 186.084 55.5367 186.584 cv
55.2815 187.083 55.1539 187.834 55.1539 188.838 cv
55.1539 189.837 55.2815 190.586 55.5367 191.086 cv
55.7929 191.586 56.1747 191.836 56.682 191.836 cv
57.1935 191.836 57.5768 191.586 57.832 191.086 cv
58.0882 190.586 58.2164 189.837 58.2164 188.838 cv
58.2164 187.834 58.0882 187.083 57.832 186.584 cv
57.5768 186.084 57.1935 185.834 56.682 185.834 cv
cp
f
66.8666 160.016 mo
63.3666 160.016 li
f
66.8666 160.016 mo
63.3666 160.016 li
@
28.0541 156.393 mo
28.8718 156.393 29.4963 156.717 29.9275 157.364 cv
30.3588 158.01 30.5744 158.948 30.5744 160.178 cv
30.5744 161.405 30.3588 162.342 29.9275 162.989 cv
29.4963 163.635 28.8718 163.957 28.0541 163.957 cv
27.2374 163.957 26.6134 163.635 26.1822 162.989 cv
25.7509 162.342 25.5353 161.405 25.5353 160.178 cv
25.5353 158.948 25.7509 158.01 26.1822 157.364 cv
26.6134 156.717 27.2374 156.393 28.0541 156.393 cv
cp
28.0541 157.175 mo
27.5468 157.175 27.165 157.425 26.9088 157.925 cv
26.6535 158.424 26.5259 159.175 26.5259 160.178 cv
26.5259 161.177 26.6535 161.926 26.9088 162.426 cv
27.165 162.926 27.5468 163.176 28.0541 163.176 cv
28.5655 163.176 28.9489 162.926 29.2041 162.426 cv
29.4603 161.926 29.5884 161.177 29.5884 160.178 cv
29.5884 159.175 29.4603 158.424 29.2041 157.925 cv
28.9489 157.425 28.5655 157.175 28.0541 157.175 cv
cp
f
32.307 162.575 mo
33.3382 162.575 li
33.3382 163.815 li
32.307 163.815 li
32.307 162.575 li
cp
f
37.5951 156.393 mo
38.4128 156.393 39.0373 156.717 39.4685 157.364 cv
39.8998 158.01 40.1154 158.948 40.1154 160.178 cv
40.1154 161.405 39.8998 162.342 39.4685 162.989 cv
39.0373 163.635 38.4128 163.957 37.5951 163.957 cv
36.7784 163.957 36.1545 163.635 35.7232 162.989 cv
35.292 162.342 35.0763 161.405 35.0763 160.178 cv
35.0763 158.948 35.292 158.01 35.7232 157.364 cv
36.1545 156.717 36.7784 156.393 37.5951 156.393 cv
cp
37.5951 157.175 mo
37.0878 157.175 36.706 157.425 36.4498 157.925 cv
36.1946 158.424 36.067 159.175 36.067 160.178 cv
36.067 161.177 36.1946 161.926 36.4498 162.426 cv
36.706 162.926 37.0878 163.176 37.5951 163.176 cv
38.1065 163.176 38.4899 162.926 38.7451 162.426 cv
39.0013 161.926 39.1295 161.177 39.1295 160.178 cv
39.1295 159.175 39.0013 158.424 38.7451 157.925 cv
38.4899 157.425 38.1065 157.175 37.5951 157.175 cv
cp
f
43.9574 156.393 mo
44.7751 156.393 45.3996 156.717 45.8308 157.364 cv
46.2621 158.01 46.4777 158.948 46.4777 160.178 cv
46.4777 161.405 46.2621 162.342 45.8308 162.989 cv
45.3996 163.635 44.7751 163.957 43.9574 163.957 cv
43.1407 163.957 42.5168 163.635 42.0855 162.989 cv
41.6543 162.342 41.4386 161.405 41.4386 160.178 cv
41.4386 158.948 41.6543 158.01 42.0855 157.364 cv
42.5168 156.717 43.1407 156.393 43.9574 156.393 cv
cp
43.9574 157.175 mo
43.4501 157.175 43.0683 157.425 42.8121 157.925 cv
42.5569 158.424 42.4293 159.175 42.4293 160.178 cv
42.4293 161.177 42.5569 161.926 42.8121 162.426 cv
43.0683 162.926 43.4501 163.176 43.9574 163.176 cv
44.4688 163.176 44.8522 162.926 45.1074 162.426 cv
45.3636 161.926 45.4918 161.177 45.4918 160.178 cv
45.4918 159.175 45.3636 158.424 45.1074 157.925 cv
44.8522 157.425 44.4688 157.175 43.9574 157.175 cv
cp
f
48.3822 162.986 mo
49.9931 162.986 li
49.9931 157.423 li
48.24 157.775 li
48.24 156.876 li
49.9838 156.525 li
50.9697 156.525 li
50.9697 162.986 li
52.5806 162.986 li
52.5806 163.815 li
48.3822 163.815 li
48.3822 162.986 li
cp
f
54.5836 156.525 mo
58.4554 156.525 li
58.4554 157.356 li
55.4867 157.356 li
55.4867 159.142 li
55.6294 159.093 55.7721 159.056 55.9148 159.032 cv
56.0586 159.008 56.2023 158.996 56.3461 158.996 cv
57.1596 158.996 57.8039 159.219 58.2789 159.665 cv
58.7549 160.111 58.9929 160.715 58.9929 161.476 cv
58.9929 162.261 58.7487 162.87 58.2601 163.306 cv
57.7716 163.74 57.083 163.957 56.1945 163.957 cv
55.8882 163.957 55.5763 163.931 55.2586 163.879 cv
54.9419 163.827 54.6143 163.749 54.2757 163.645 cv
54.2757 162.653 li
54.5685 162.812 54.8711 162.931 55.1836 163.009 cv
55.4961 163.087 55.8263 163.126 56.1742 163.126 cv
56.7377 163.126 57.1836 162.978 57.5117 162.682 cv
57.8408 162.387 58.0054 161.984 58.0054 161.476 cv
58.0054 160.969 57.8408 160.567 57.5117 160.271 cv
57.1836 159.975 56.7377 159.826 56.1742 159.826 cv
55.9106 159.826 55.6476 159.855 55.3851 159.914 cv
55.1237 159.972 54.8565 160.063 54.5836 160.187 cv
54.5836 156.525 li
cp
f
66.8666 131.356 mo
63.3666 131.356 li
f
66.8666 131.356 mo
63.3666 131.356 li
@
28.0541 127.734 mo
28.8718 127.734 29.4963 128.057 29.9275 128.704 cv
30.3588 129.35 30.5744 130.288 30.5744 131.518 cv
30.5744 132.745 30.3588 133.682 29.9275 134.329 cv
29.4963 134.975 28.8718 135.298 28.0541 135.298 cv
27.2374 135.298 26.6134 134.975 26.1822 134.329 cv
25.7509 133.682 25.5353 132.745 25.5353 131.518 cv
25.5353 130.288 25.7509 129.35 26.1822 128.704 cv
26.6134 128.057 27.2374 127.734 28.0541 127.734 cv
cp
28.0541 128.515 mo
27.5468 128.515 27.165 128.765 26.9088 129.265 cv
26.6535 129.764 26.5259 130.515 26.5259 131.518 cv
26.5259 132.517 26.6535 133.266 26.9088 133.766 cv
27.165 134.266 27.5468 134.516 28.0541 134.516 cv
28.5655 134.516 28.9489 134.266 29.2041 133.766 cv
29.4603 133.266 29.5884 132.517 29.5884 131.518 cv
29.5884 130.515 29.4603 129.764 29.2041 129.265 cv
28.9489 128.765 28.5655 128.515 28.0541 128.515 cv
cp
f
32.307 133.915 mo
33.3382 133.915 li
33.3382 135.155 li
32.307 135.155 li
32.307 133.915 li
cp
f
37.5951 127.734 mo
38.4128 127.734 39.0373 128.057 39.4685 128.704 cv
39.8998 129.35 40.1154 130.288 40.1154 131.518 cv
40.1154 132.745 39.8998 133.682 39.4685 134.329 cv
39.0373 134.975 38.4128 135.298 37.5951 135.298 cv
36.7784 135.298 36.1545 134.975 35.7232 134.329 cv
35.292 133.682 35.0763 132.745 35.0763 131.518 cv
35.0763 130.288 35.292 129.35 35.7232 128.704 cv
36.1545 128.057 36.7784 127.734 37.5951 127.734 cv
cp
37.5951 128.515 mo
37.0878 128.515 36.706 128.765 36.4498 129.265 cv
36.1946 129.764 36.067 130.515 36.067 131.518 cv
36.067 132.517 36.1946 133.266 36.4498 133.766 cv
36.706 134.266 37.0878 134.516 37.5951 134.516 cv
38.1065 134.516 38.4899 134.266 38.7451 133.766 cv
39.0013 133.266 39.1295 132.517 39.1295 131.518 cv
39.1295 130.515 39.0013 129.764 38.7451 129.265 cv
38.4899 128.765 38.1065 128.515 37.5951 128.515 cv
cp
f
43.9574 127.734 mo
44.7751 127.734 45.3996 128.057 45.8308 128.704 cv
46.2621 129.35 46.4777 130.288 46.4777 131.518 cv
46.4777 132.745 46.2621 133.682 45.8308 134.329 cv
45.3996 134.975 44.7751 135.298 43.9574 135.298 cv
43.1407 135.298 42.5168 134.975 42.0855 134.329 cv
41.6543 133.682 41.4386 132.745 41.4386 131.518 cv
41.4386 130.288 41.6543 129.35 42.0855 128.704 cv
42.5168 128.057 43.1407 127.734 43.9574 127.734 cv
cp
43.9574 128.515 mo
43.4501 128.515 43.0683 128.765 42.8121 129.265 cv
42.5569 129.764 42.4293 130.515 42.4293 131.518 cv
42.4293 132.517 42.5569 133.266 42.8121 133.766 cv
43.0683 134.266 43.4501 134.516 43.9574 134.516 cv
44.4688 134.516 44.8522 134.266 45.1074 133.766 cv
45.3636 133.266 45.4918 132.517 45.4918 131.518 cv
45.4918 130.515 45.3636 129.764 45.1074 129.265 cv
44.8522 128.765 44.4688 128.515 43.9574 128.515 cv
cp
f
49.0603 134.326 mo
52.5025 134.326 li
52.5025 135.155 li
47.8744 135.155 li
47.8744 134.326 li
48.2483 133.938 48.7582 133.418 49.4041 132.766 cv
50.0509 132.113 50.4572 131.692 50.6228 131.502 cv
50.9384 131.148 51.1588 130.848 51.2838 130.602 cv
51.4098 130.356 51.4728 130.115 51.4728 129.877 cv
51.4728 129.49 51.3369 129.174 51.065 128.93 cv
50.7931 128.686 50.439 128.563 50.0025 128.563 cv
49.6931 128.563 49.3666 128.617 49.0228 128.724 cv
48.6801 128.831 48.3134 128.994 47.9228 129.213 cv
47.9228 128.216 li
48.3197 128.057 48.6905 127.937 49.0353 127.855 cv
49.3811 127.774 49.6973 127.734 49.9838 127.734 cv
50.739 127.734 51.341 127.923 51.79 128.301 cv
52.239 128.678 52.4634 129.182 52.4634 129.813 cv
52.4634 130.113 52.4072 130.398 52.2947 130.666 cv
52.1832 130.934 51.9791 131.25 51.6822 131.615 cv
51.6009 131.71 51.3421 131.982 50.9056 132.434 cv
50.4702 132.885 49.8551 133.515 49.0603 134.326 cv
cp
f
56.682 127.734 mo
57.4997 127.734 58.1242 128.057 58.5554 128.704 cv
58.9867 129.35 59.2023 130.288 59.2023 131.518 cv
59.2023 132.745 58.9867 133.682 58.5554 134.329 cv
58.1242 134.975 57.4997 135.298 56.682 135.298 cv
55.8653 135.298 55.2414 134.975 54.8101 134.329 cv
54.3789 133.682 54.1632 132.745 54.1632 131.518 cv
54.1632 130.288 54.3789 129.35 54.8101 128.704 cv
55.2414 128.057 55.8653 127.734 56.682 127.734 cv
cp
56.682 128.515 mo
56.1747 128.515 55.7929 128.765 55.5367 129.265 cv
55.2815 129.764 55.1539 130.515 55.1539 131.518 cv
55.1539 132.517 55.2815 133.266 55.5367 133.766 cv
55.7929 134.266 56.1747 134.516 56.682 134.516 cv
57.1935 134.516 57.5768 134.266 57.832 133.766 cv
58.0882 133.266 58.2164 132.517 58.2164 131.518 cv
58.2164 130.515 58.0882 129.764 57.832 129.265 cv
57.5768 128.765 57.1935 128.515 56.682 128.515 cv
cp
f
66.8666 102.696 mo
63.3666 102.696 li
f
66.8666 102.696 mo
63.3666 102.696 li
@
28.0541 99.0737 mo
28.8718 99.0737 29.4963 99.3971 29.9275 100.044 cv
30.3588 100.69 30.5744 101.628 30.5744 102.858 cv
30.5744 104.085 30.3588 105.022 29.9275 105.669 cv
29.4963 106.315 28.8718 106.638 28.0541 106.638 cv
27.2374 106.638 26.6134 106.315 26.1822 105.669 cv
25.7509 105.022 25.5353 104.085 25.5353 102.858 cv
25.5353 101.628 25.7509 100.69 26.1822 100.044 cv
26.6134 99.3971 27.2374 99.0737 28.0541 99.0737 cv
cp
28.0541 99.855 mo
27.5468 99.855 27.165 100.105 26.9088 100.605 cv
26.6535 101.104 26.5259 101.855 26.5259 102.858 cv
26.5259 103.857 26.6535 104.607 26.9088 105.107 cv
27.165 105.607 27.5468 105.857 28.0541 105.857 cv
28.5655 105.857 28.9489 105.607 29.2041 105.107 cv
29.4603 104.607 29.5884 103.857 29.5884 102.858 cv
29.5884 101.855 29.4603 101.104 29.2041 100.605 cv
28.9489 100.105 28.5655 99.855 28.0541 99.855 cv
cp
f
32.307 105.255 mo
33.3382 105.255 li
33.3382 106.496 li
32.307 106.496 li
32.307 105.255 li
cp
f
37.5951 99.0737 mo
38.4128 99.0737 39.0373 99.3971 39.4685 100.044 cv
39.8998 100.69 40.1154 101.628 40.1154 102.858 cv
40.1154 104.085 39.8998 105.022 39.4685 105.669 cv
39.0373 106.315 38.4128 106.638 37.5951 106.638 cv
36.7784 106.638 36.1545 106.315 35.7232 105.669 cv
35.292 105.022 35.0763 104.085 35.0763 102.858 cv
35.0763 101.628 35.292 100.69 35.7232 100.044 cv
36.1545 99.3971 36.7784 99.0737 37.5951 99.0737 cv
cp
37.5951 99.855 mo
37.0878 99.855 36.706 100.105 36.4498 100.605 cv
36.1946 101.104 36.067 101.855 36.067 102.858 cv
36.067 103.857 36.1946 104.607 36.4498 105.107 cv
36.706 105.607 37.0878 105.857 37.5951 105.857 cv
38.1065 105.857 38.4899 105.607 38.7451 105.107 cv
39.0013 104.607 39.1295 103.857 39.1295 102.858 cv
39.1295 101.855 39.0013 101.104 38.7451 100.605 cv
38.4899 100.105 38.1065 99.855 37.5951 99.855 cv
cp
f
43.9574 99.0737 mo
44.7751 99.0737 45.3996 99.3971 45.8308 100.044 cv
46.2621 100.69 46.4777 101.628 46.4777 102.858 cv
46.4777 104.085 46.2621 105.022 45.8308 105.669 cv
45.3996 106.315 44.7751 106.638 43.9574 106.638 cv
43.1407 106.638 42.5168 106.315 42.0855 105.669 cv
41.6543 105.022 41.4386 104.085 41.4386 102.858 cv
41.4386 101.628 41.6543 100.69 42.0855 100.044 cv
42.5168 99.3971 43.1407 99.0737 43.9574 99.0737 cv
cp
43.9574 99.855 mo
43.4501 99.855 43.0683 100.105 42.8121 100.605 cv
42.5569 101.104 42.4293 101.855 42.4293 102.858 cv
42.4293 103.857 42.5569 104.607 42.8121 105.107 cv
43.0683 105.607 43.4501 105.857 43.9574 105.857 cv
44.4688 105.857 44.8522 105.607 45.1074 105.107 cv
45.3636 104.607 45.4918 103.857 45.4918 102.858 cv
45.4918 101.855 45.3636 101.104 45.1074 100.605 cv
44.8522 100.105 44.4688 99.855 43.9574 99.855 cv
cp
f
49.0603 105.666 mo
52.5025 105.666 li
52.5025 106.496 li
47.8744 106.496 li
47.8744 105.666 li
48.2483 105.278 48.7582 104.759 49.4041 104.107 cv
50.0509 103.453 50.4572 103.032 50.6228 102.842 cv
50.9384 102.488 51.1588 102.188 51.2838 101.942 cv
51.4098 101.697 51.4728 101.455 51.4728 101.217 cv
51.4728 100.83 51.3369 100.514 51.065 100.271 cv
50.7931 100.026 50.439 99.9034 50.0025 99.9034 cv
49.6931 99.9034 49.3666 99.957 49.0228 100.064 cv
48.6801 100.172 48.3134 100.335 47.9228 100.553 cv
47.9228 99.5565 li
48.3197 99.3971 48.6905 99.2768 49.0353 99.1956 cv
49.3811 99.1143 49.6973 99.0737 49.9838 99.0737 cv
50.739 99.0737 51.341 99.2628 51.79 99.6409 cv
52.239 100.018 52.4634 100.522 52.4634 101.153 cv
52.4634 101.453 52.4072 101.738 52.2947 102.007 cv
52.1832 102.274 51.9791 102.59 51.6822 102.955 cv
51.6009 103.05 51.3421 103.323 50.9056 103.774 cv
50.4702 104.225 49.8551 104.855 49.0603 105.666 cv
cp
f
54.5836 99.205 mo
58.4554 99.205 li
58.4554 100.036 li
55.4867 100.036 li
55.4867 101.822 li
55.6294 101.773 55.7721 101.737 55.9148 101.713 cv
56.0586 101.689 56.2023 101.677 56.3461 101.677 cv
57.1596 101.677 57.8039 101.9 58.2789 102.346 cv
58.7549 102.791 58.9929 103.395 58.9929 104.157 cv
58.9929 104.941 58.7487 105.551 58.2601 105.986 cv
57.7716 106.421 57.083 106.638 56.1945 106.638 cv
55.8882 106.638 55.5763 106.612 55.2586 106.56 cv
54.9419 106.508 54.6143 106.429 54.2757 106.325 cv
54.2757 105.333 li
54.5685 105.492 54.8711 105.611 55.1836 105.689 cv
55.4961 105.767 55.8263 105.807 56.1742 105.807 cv
56.7377 105.807 57.1836 105.659 57.5117 105.363 cv
57.8408 105.067 58.0054 104.665 58.0054 104.157 cv
58.0054 103.649 57.8408 103.248 57.5117 102.952 cv
57.1836 102.655 56.7377 102.507 56.1742 102.507 cv
55.9106 102.507 55.6476 102.536 55.3851 102.594 cv
55.1237 102.652 54.8565 102.743 54.5836 102.867 cv
54.5836 99.205 li
cp
f
66.8666 74.0365 mo
63.3666 74.0365 li
f
66.8666 74.0365 mo
63.3666 74.0365 li
@
28.0541 70.4139 mo
28.8718 70.4139 29.4963 70.7373 29.9275 71.3842 cv
30.3588 72.03 30.5744 72.968 30.5744 74.1982 cv
30.5744 75.4253 30.3588 76.3623 29.9275 77.0092 cv
29.4963 77.655 28.8718 77.9779 28.0541 77.9779 cv
27.2374 77.9779 26.6134 77.655 26.1822 77.0092 cv
25.7509 76.3623 25.5353 75.4253 25.5353 74.1982 cv
25.5353 72.968 25.7509 72.03 26.1822 71.3842 cv
26.6134 70.7373 27.2374 70.4139 28.0541 70.4139 cv
cp
28.0541 71.1951 mo
27.5468 71.1951 27.165 71.4451 26.9088 71.9451 cv
26.6535 72.4441 26.5259 73.1951 26.5259 74.1982 cv
26.5259 75.1972 26.6535 75.9467 26.9088 76.4467 cv
27.165 76.9467 27.5468 77.1967 28.0541 77.1967 cv
28.5655 77.1967 28.9489 76.9467 29.2041 76.4467 cv
29.4603 75.9467 29.5884 75.1972 29.5884 74.1982 cv
29.5884 73.1951 29.4603 72.4441 29.2041 71.9451 cv
28.9489 71.4451 28.5655 71.1951 28.0541 71.1951 cv
cp
f
32.307 76.5951 mo
33.3382 76.5951 li
33.3382 77.8358 li
32.307 77.8358 li
32.307 76.5951 li
cp
f
37.5951 70.4139 mo
38.4128 70.4139 39.0373 70.7373 39.4685 71.3842 cv
39.8998 72.03 40.1154 72.968 40.1154 74.1982 cv
40.1154 75.4253 39.8998 76.3623 39.4685 77.0092 cv
39.0373 77.655 38.4128 77.9779 37.5951 77.9779 cv
36.7784 77.9779 36.1545 77.655 35.7232 77.0092 cv
35.292 76.3623 35.0763 75.4253 35.0763 74.1982 cv
35.0763 72.968 35.292 72.03 35.7232 71.3842 cv
36.1545 70.7373 36.7784 70.4139 37.5951 70.4139 cv
cp
37.5951 71.1951 mo
37.0878 71.1951 36.706 71.4451 36.4498 71.9451 cv
36.1946 72.4441 36.067 73.1951 36.067 74.1982 cv
36.067 75.1972 36.1946 75.9467 36.4498 76.4467 cv
36.706 76.9467 37.0878 77.1967 37.5951 77.1967 cv
38.1065 77.1967 38.4899 76.9467 38.7451 76.4467 cv
39.0013 75.9467 39.1295 75.1972 39.1295 74.1982 cv
39.1295 73.1951 39.0013 72.4441 38.7451 71.9451 cv
38.4899 71.4451 38.1065 71.1951 37.5951 71.1951 cv
cp
f
43.9574 70.4139 mo
44.7751 70.4139 45.3996 70.7373 45.8308 71.3842 cv
46.2621 72.03 46.4777 72.968 46.4777 74.1982 cv
46.4777 75.4253 46.2621 76.3623 45.8308 77.0092 cv
45.3996 77.655 44.7751 77.9779 43.9574 77.9779 cv
43.1407 77.9779 42.5168 77.655 42.0855 77.0092 cv
41.6543 76.3623 41.4386 75.4253 41.4386 74.1982 cv
41.4386 72.968 41.6543 72.03 42.0855 71.3842 cv
42.5168 70.7373 43.1407 70.4139 43.9574 70.4139 cv
cp
43.9574 71.1951 mo
43.4501 71.1951 43.0683 71.4451 42.8121 71.9451 cv
42.5569 72.4441 42.4293 73.1951 42.4293 74.1982 cv
42.4293 75.1972 42.5569 75.9467 42.8121 76.4467 cv
43.0683 76.9467 43.4501 77.1967 43.9574 77.1967 cv
44.4688 77.1967 44.8522 76.9467 45.1074 76.4467 cv
45.3636 75.9467 45.4918 75.1972 45.4918 74.1982 cv
45.4918 73.1951 45.3636 72.4441 45.1074 71.9451 cv
44.8522 71.4451 44.4688 71.1951 43.9574 71.1951 cv
cp
f
51.1994 73.9045 mo
51.6713 74.0055 52.0395 74.216 52.3041 74.5358 cv
52.5697 74.8545 52.7025 75.2483 52.7025 75.717 cv
52.7025 76.4358 52.4551 76.9925 51.9603 77.3873 cv
51.4655 77.7811 50.7624 77.9779 49.8509 77.9779 cv
49.5457 77.9779 49.2311 77.9477 48.9072 77.8873 cv
48.5832 77.8269 48.2489 77.7363 47.9041 77.6154 cv
47.9041 76.6639 li
48.177 76.8232 48.4759 76.9436 48.8009 77.0248 cv
49.127 77.1061 49.4676 77.1467 49.8228 77.1467 cv
50.4405 77.1467 50.9114 77.0248 51.2353 76.7811 cv
51.5593 76.5373 51.7213 76.1826 51.7213 75.717 cv
51.7213 75.2868 51.5707 74.9509 51.2697 74.7092 cv
50.9686 74.4665 50.5499 74.3451 50.0134 74.3451 cv
49.1634 74.3451 li
49.1634 73.5342 li
50.0525 73.5342 li
50.5369 73.5342 50.9077 73.4373 51.165 73.2436 cv
51.4223 73.0498 51.5509 72.7706 51.5509 72.4061 cv
51.5509 72.0321 51.4181 71.7451 51.1525 71.5451 cv
50.8879 71.3441 50.5082 71.2436 50.0134 71.2436 cv
49.7426 71.2436 49.4525 71.2733 49.1431 71.3326 cv
48.8338 71.391 48.4936 71.4816 48.1228 71.6045 cv
48.1228 70.7264 li
48.4978 70.6222 48.8489 70.5441 49.1759 70.492 cv
49.503 70.4399 49.8114 70.4139 50.1009 70.4139 cv
50.8499 70.4139 51.4421 70.5842 51.8775 70.9248 cv
52.314 71.2644 52.5322 71.7238 52.5322 72.3029 cv
52.5322 72.7071 52.4166 73.0482 52.1853 73.3264 cv
51.9541 73.6045 51.6254 73.7972 51.1994 73.9045 cv
cp
f
56.682 70.4139 mo
57.4997 70.4139 58.1242 70.7373 58.5554 71.3842 cv
58.9867 72.03 59.2023 72.968 59.2023 74.1982 cv
59.2023 75.4253 58.9867 76.3623 58.5554 77.0092 cv
58.1242 77.655 57.4997 77.9779 56.682 77.9779 cv
55.8653 77.9779 55.2414 77.655 54.8101 77.0092 cv
54.3789 76.3623 54.1632 75.4253 54.1632 74.1982 cv
54.1632 72.968 54.3789 72.03 54.8101 71.3842 cv
55.2414 70.7373 55.8653 70.4139 56.682 70.4139 cv
cp
56.682 71.1951 mo
56.1747 71.1951 55.7929 71.4451 55.5367 71.9451 cv
55.2815 72.4441 55.1539 73.1951 55.1539 74.1982 cv
55.1539 75.1972 55.2815 75.9467 55.5367 76.4467 cv
55.7929 76.9467 56.1747 77.1967 56.682 77.1967 cv
57.1935 77.1967 57.5768 76.9467 57.832 76.4467 cv
58.0882 75.9467 58.2164 75.1972 58.2164 74.1982 cv
58.2164 73.1951 58.0882 72.4441 57.832 71.9451 cv
57.5768 71.4451 57.1935 71.1951 56.682 71.1951 cv
cp
f
66.8666 45.3767 mo
63.3666 45.3767 li
f
66.8666 45.3767 mo
63.3666 45.3767 li
@
28.0541 41.754 mo
28.8718 41.754 29.4963 42.0775 29.9275 42.7244 cv
30.3588 43.3702 30.5744 44.3082 30.5744 45.5384 cv
30.5744 46.7655 30.3588 47.7025 29.9275 48.3494 cv
29.4963 48.9952 28.8718 49.3181 28.0541 49.3181 cv
27.2374 49.3181 26.6134 48.9952 26.1822 48.3494 cv
25.7509 47.7025 25.5353 46.7655 25.5353 45.5384 cv
25.5353 44.3082 25.7509 43.3702 26.1822 42.7244 cv
26.6134 42.0775 27.2374 41.754 28.0541 41.754 cv
cp
28.0541 42.5353 mo
27.5468 42.5353 27.165 42.7853 26.9088 43.2853 cv
26.6535 43.7843 26.5259 44.5353 26.5259 45.5384 cv
26.5259 46.5374 26.6535 47.2869 26.9088 47.7869 cv
27.165 48.2869 27.5468 48.5369 28.0541 48.5369 cv
28.5655 48.5369 28.9489 48.2869 29.2041 47.7869 cv
29.4603 47.2869 29.5884 46.5374 29.5884 45.5384 cv
29.5884 44.5353 29.4603 43.7843 29.2041 43.2853 cv
28.9489 42.7853 28.5655 42.5353 28.0541 42.5353 cv
cp
f
32.307 47.9353 mo
33.3382 47.9353 li
33.3382 49.1759 li
32.307 49.1759 li
32.307 47.9353 li
cp
f
37.5951 41.754 mo
38.4128 41.754 39.0373 42.0775 39.4685 42.7244 cv
39.8998 43.3702 40.1154 44.3082 40.1154 45.5384 cv
40.1154 46.7655 39.8998 47.7025 39.4685 48.3494 cv
39.0373 48.9952 38.4128 49.3181 37.5951 49.3181 cv
36.7784 49.3181 36.1545 48.9952 35.7232 48.3494 cv
35.292 47.7025 35.0763 46.7655 35.0763 45.5384 cv
35.0763 44.3082 35.292 43.3702 35.7232 42.7244 cv
36.1545 42.0775 36.7784 41.754 37.5951 41.754 cv
cp
37.5951 42.5353 mo
37.0878 42.5353 36.706 42.7853 36.4498 43.2853 cv
36.1946 43.7843 36.067 44.5353 36.067 45.5384 cv
36.067 46.5374 36.1946 47.2869 36.4498 47.7869 cv
36.706 48.2869 37.0878 48.5369 37.5951 48.5369 cv
38.1065 48.5369 38.4899 48.2869 38.7451 47.7869 cv
39.0013 47.2869 39.1295 46.5374 39.1295 45.5384 cv
39.1295 44.5353 39.0013 43.7843 38.7451 43.2853 cv
38.4899 42.7853 38.1065 42.5353 37.5951 42.5353 cv
cp
f
43.9574 41.754 mo
44.7751 41.754 45.3996 42.0775 45.8308 42.7244 cv
46.2621 43.3702 46.4777 44.3082 46.4777 45.5384 cv
46.4777 46.7655 46.2621 47.7025 45.8308 48.3494 cv
45.3996 48.9952 44.7751 49.3181 43.9574 49.3181 cv
43.1407 49.3181 42.5168 48.9952 42.0855 48.3494 cv
41.6543 47.7025 41.4386 46.7655 41.4386 45.5384 cv
41.4386 44.3082 41.6543 43.3702 42.0855 42.7244 cv
42.5168 42.0775 43.1407 41.754 43.9574 41.754 cv
cp
43.9574 42.5353 mo
43.4501 42.5353 43.0683 42.7853 42.8121 43.2853 cv
42.5569 43.7843 42.4293 44.5353 42.4293 45.5384 cv
42.4293 46.5374 42.5569 47.2869 42.8121 47.7869 cv
43.0683 48.2869 43.4501 48.5369 43.9574 48.5369 cv
44.4688 48.5369 44.8522 48.2869 45.1074 47.7869 cv
45.3636 47.2869 45.4918 46.5374 45.4918 45.5384 cv
45.4918 44.5353 45.3636 43.7843 45.1074 43.2853 cv
44.8522 42.7853 44.4688 42.5353 43.9574 42.5353 cv
cp
f
51.1994 45.2447 mo
51.6713 45.3457 52.0395 45.5561 52.3041 45.8759 cv
52.5697 46.1947 52.7025 46.5884 52.7025 47.0572 cv
52.7025 47.7759 52.4551 48.3327 51.9603 48.7275 cv
51.4655 49.1212 50.7624 49.3181 49.8509 49.3181 cv
49.5457 49.3181 49.2311 49.2879 48.9072 49.2275 cv
48.5832 49.1671 48.2489 49.0764 47.9041 48.9556 cv
47.9041 48.004 li
48.177 48.1634 48.4759 48.2837 48.8009 48.365 cv
49.127 48.4462 49.4676 48.4869 49.8228 48.4869 cv
50.4405 48.4869 50.9114 48.365 51.2353 48.1212 cv
51.5593 47.8775 51.7213 47.5228 51.7213 47.0572 cv
51.7213 46.627 51.5707 46.291 51.2697 46.0494 cv
50.9686 45.8066 50.5499 45.6853 50.0134 45.6853 cv
49.1634 45.6853 li
49.1634 44.8744 li
50.0525 44.8744 li
50.5369 44.8744 50.9077 44.7775 51.165 44.5837 cv
51.4223 44.39 51.5509 44.1108 51.5509 43.7462 cv
51.5509 43.3723 51.4181 43.0853 51.1525 42.8853 cv
50.8879 42.6843 50.5082 42.5837 50.0134 42.5837 cv
49.7426 42.5837 49.4525 42.6134 49.1431 42.6728 cv
48.8338 42.7311 48.4936 42.8218 48.1228 42.9447 cv
48.1228 42.0665 li
48.4978 41.9624 48.8489 41.8843 49.1759 41.8322 cv
49.503 41.7801 49.8114 41.754 50.1009 41.754 cv
50.8499 41.754 51.4421 41.9244 51.8775 42.265 cv
52.314 42.6046 52.5322 43.0639 52.5322 43.6431 cv
52.5322 44.0473 52.4166 44.3884 52.1853 44.6665 cv
51.9541 44.9447 51.6254 45.1374 51.1994 45.2447 cv
cp
f
54.5836 41.8853 mo
58.4554 41.8853 li
58.4554 42.7165 li
55.4867 42.7165 li
55.4867 44.5025 li
55.6294 44.4535 55.7721 44.4171 55.9148 44.3931 cv
56.0586 44.3691 56.2023 44.3572 56.3461 44.3572 cv
57.1596 44.3572 57.8039 44.5801 58.2789 45.0259 cv
58.7549 45.4718 58.9929 46.0754 58.9929 46.8369 cv
58.9929 47.6212 58.7487 48.2311 58.2601 48.6665 cv
57.7716 49.1009 57.083 49.3181 56.1945 49.3181 cv
55.8882 49.3181 55.5763 49.2921 55.2586 49.24 cv
54.9419 49.1879 54.6143 49.1098 54.2757 49.0056 cv
54.2757 48.0134 li
54.5685 48.1728 54.8711 48.2915 55.1836 48.3697 cv
55.4961 48.4478 55.8263 48.4869 56.1742 48.4869 cv
56.7377 48.4869 57.1836 48.3389 57.5117 48.0431 cv
57.8408 47.7473 58.0054 47.3452 58.0054 46.8369 cv
58.0054 46.3296 57.8408 45.928 57.5117 45.6322 cv
57.1836 45.3353 56.7377 45.1869 56.1742 45.1869 cv
55.9106 45.1869 55.6476 45.216 55.3851 45.2744 cv
55.1237 45.3327 54.8565 45.4238 54.5836 45.5478 cv
54.5836 41.8853 li
cp
f
.307813 178.91 mo
.307813 177.582 li
6.40625 174.349 li
.307813 174.349 li
.307813 173.393 li
7.59844 173.393 li
7.59844 174.721 li
1.5 177.952 li
7.59844 177.952 li
7.59844 178.91 li
.307813 178.91 li
cp
f
4.375 167.689 mo
3.88438 167.695 3.49271 167.833 3.2 168.101 cv
2.90625 168.37 2.75938 168.726 2.75938 169.168 cv
2.75938 169.67 2.90104 170.071 3.18438 170.372 cv
3.46771 170.673 3.86667 170.846 4.38125 170.892 cv
4.375 167.689 li
cp
4.63906 166.79 mo
5.07813 166.79 li
5.07813 170.922 li
5.69688 170.882 6.16823 170.696 6.49219 170.362 cv
6.81615 170.029 6.97813 169.564 6.97813 168.968 cv
6.97813 168.624 6.93594 168.289 6.85156 167.965 cv
6.76719 167.641 6.6401 167.32 6.47031 167 cv
7.32031 167 li
7.45677 167.323 7.56094 167.653 7.63281 167.992 cv
7.70469 168.33 7.74062 168.674 7.74062 169.022 cv
7.74062 169.895 7.48698 170.586 6.97969 171.095 cv
6.47135 171.604 5.78385 171.859 4.91719 171.859 cv
4.0224 171.859 3.3125 171.617 2.7875 171.134 cv
2.26146 170.651 1.99844 169.999 1.99844 169.178 cv
1.99844 168.442 2.23542 167.861 2.70938 167.433 cv
3.18229 167.004 3.82552 166.79 4.63906 166.79 cv
cp
f
5.44063 165.408 mo
2.12969 165.408 li
2.12969 164.51 li
5.40625 164.51 li
5.92396 164.51 6.3125 164.409 6.57188 164.208 cv
6.83021 164.006 6.95937 163.703 6.95937 163.299 cv
6.95937 162.815 6.80469 162.432 6.49531 162.15 cv
6.18594 161.868 5.76406 161.727 5.22969 161.727 cv
2.12969 161.727 li
2.12969 160.829 li
7.59844 160.829 li
7.59844 161.727 li
6.75781 161.727 li
7.0901 161.945 7.33698 162.198 7.49844 162.486 cv
7.6599 162.774 7.74062 163.108 7.74062 163.49 cv
7.74062 164.118 7.54531 164.595 7.15469 164.921 cv
6.76406 165.246 6.19271 165.408 5.44063 165.408 cv
cp
f
2.96875 155.809 mo
2.91042 155.911 2.86771 156.02 2.84063 156.139 cv
2.8125 156.258 2.79844 156.389 2.79844 156.531 cv
2.79844 157.04 2.96354 157.43 3.29375 157.702 cv
3.62396 157.974 4.09844 158.109 4.71719 158.109 cv
7.59844 158.109 li
7.59844 159.013 li
2.12969 159.013 li
2.12969 158.109 li
2.97969 158.109 li
2.6474 157.92 2.40104 157.674 2.24063 157.372 cv
2.07917 157.069 1.99844 156.701 1.99844 156.267 cv
1.99844 156.206 2.0026 156.138 2.01094 156.063 cv
2.01823 155.988 2.03021 155.905 2.04688 155.814 cv
2.96875 155.809 li
cp
f
1.99844 152.973 mo
1.99844 152.192 2.2526 151.578 2.76094 151.133 cv
3.26823 150.686 3.97083 150.462 4.86875 150.462 cv
5.76354 150.462 6.46615 150.686 6.97656 151.133 cv
7.48594 151.578 7.74062 152.192 7.74062 152.973 cv
7.74062 153.758 7.48594 154.372 6.97656 154.817 cv
6.46615 155.261 5.76354 155.483 4.86875 155.483 cv
3.97083 155.483 3.26823 155.261 2.76094 154.817 cv
2.2526 154.372 1.99844 153.758 1.99844 152.973 cv
cp
2.75938 152.973 mo
2.75938 153.454 2.9474 153.835 3.32344 154.115 cv
3.69948 154.396 4.21458 154.536 4.86875 154.536 cv
5.52292 154.536 6.03802 154.397 6.41406 154.118 cv
6.7901 153.839 6.97813 153.458 6.97813 152.973 cv
6.97813 152.494 6.78958 152.115 6.4125 151.836 cv
6.03438 151.555 5.51979 151.415 4.86875 151.415 cv
4.22083 151.415 3.70729 151.555 3.32813 151.836 cv
2.94896 152.115 2.75938 152.494 2.75938 152.973 cv
cp
f
.546875 141.386 mo
1.50937 141.386 li
1.33021 141.76 1.19687 142.113 1.10938 142.445 cv
1.02083 142.777 .976563 143.098 .976563 143.408 cv
.976563 143.944 1.08073 144.358 1.28906 144.65 cv
1.4974 144.941 1.79375 145.087 2.17813 145.087 cv
2.50104 145.087 2.74479 144.99 2.90937 144.797 cv
3.07292 144.603 3.20521 144.236 3.30625 143.695 cv
3.42813 143.1 li
3.56875 142.364 3.81562 141.822 4.16875 141.472 cv
4.52187 141.122 4.99427 140.947 5.58594 140.947 cv
6.29323 140.947 6.82917 141.184 7.19375 141.658 cv
7.55833 142.13 7.74062 142.824 7.74062 143.739 cv
7.74062 144.084 7.70156 144.451 7.62344 144.84 cv
7.54531 145.229 7.42969 145.631 7.27656 146.048 cv
6.26094 146.048 li
6.4849 145.648 6.65417 145.256 6.76875 144.872 cv
6.88229 144.487 6.93906 144.11 6.93906 143.739 cv
6.93906 143.176 6.82865 142.742 6.60781 142.436 cv
6.38594 142.129 6.06979 141.976 5.65938 141.976 cv
5.30208 141.976 5.0224 142.086 4.82031 142.306 cv
4.61823 142.526 4.46667 142.886 4.36562 143.387 cv
4.24844 143.989 li
4.1026 144.724 3.87344 145.256 3.56094 145.586 cv
3.24844 145.914 2.81354 146.078 2.25625 146.078 cv
1.61146 146.078 1.10365 145.851 .732813 145.397 cv
.361979 144.942 .176563 144.317 .176563 143.52 cv
.176563 143.177 .207813 142.829 .270313 142.475 cv
.331771 142.12 .423959 141.756 .546875 141.386 cv
cp
f
8.10625 137.172 mo
8.75729 137.426 9.18177 137.673 9.37969 137.915 cv
9.57865 138.155 9.67813 138.477 9.67813 138.88 cv
9.67813 139.599 li
8.92656 139.599 li
8.92656 139.071 li
8.92656 138.824 8.86771 138.632 8.75 138.496 cv
8.63333 138.358 8.35677 138.207 7.92031 138.041 cv
7.51094 137.88 li
2.12969 140.091 li
2.12969 139.14 li
6.40625 137.43 li
2.12969 135.721 li
2.12969 134.769 li
8.10625 137.172 li
cp
f
3.17969 129.272 mo
2.77552 129.047 2.4776 128.778 2.28594 128.465 cv
2.09427 128.153 1.99844 127.785 1.99844 127.362 cv
1.99844 126.792 2.19792 126.353 2.59687 126.043 cv
2.99479 125.734 3.56146 125.579 4.29688 125.579 cv
7.59844 125.579 li
7.59844 126.483 li
4.32656 126.483 li
3.8026 126.483 3.41406 126.576 3.16094 126.762 cv
2.90677 126.948 2.77969 127.23 2.77969 127.611 cv
2.77969 128.076 2.93438 128.445 3.24375 128.715 cv
3.55208 128.985 3.97344 129.12 4.50781 129.12 cv
7.59844 129.12 li
7.59844 130.023 li
4.32656 130.023 li
3.79948 130.023 3.4099 130.116 3.15781 130.301 cv
2.90573 130.487 2.77969 130.773 2.77969 131.161 cv
2.77969 131.62 2.9349 131.985 3.24531 132.256 cv
3.55573 132.526 3.97656 132.661 4.50781 132.661 cv
7.59844 132.661 li
7.59844 133.564 li
2.12969 133.564 li
2.12969 132.661 li
2.97969 132.661 li
2.64427 132.455 2.39688 132.21 2.2375 131.923 cv
2.07813 131.637 1.99844 131.297 1.99844 130.903 cv
1.99844 130.505 2.09948 130.167 2.30156 129.889 cv
2.5026 129.611 2.79531 129.405 3.17969 129.272 cv
cp
f
2.95938 122.919 mo
2.63438 122.73 2.39323 122.491 2.23594 122.204 cv
2.0776 121.915 1.99844 121.571 1.99844 121.171 cv
1.99844 120.506 2.26198 119.967 2.78906 119.552 cv
3.31615 119.137 4.00938 118.929 4.86875 118.929 cv
5.72813 118.929 6.42188 119.137 6.95 119.552 cv
7.47708 119.967 7.74062 120.506 7.74062 121.171 cv
7.74062 121.571 7.66146 121.915 7.50313 122.204 cv
7.34479 122.491 7.10313 122.73 6.77813 122.919 cv
7.59844 122.919 li
7.59844 123.823 li
0 123.823 li
0 122.919 li
2.95938 122.919 li
cp
4.86875 119.862 mo
4.20833 119.862 3.6901 119.998 3.31406 120.269 cv
2.93802 120.541 2.75 120.915 2.75 121.39 cv
2.75 121.866 2.93802 122.24 3.31406 122.512 cv
3.6901 122.784 4.20833 122.919 4.86875 122.919 cv
5.52917 122.919 6.0474 122.784 6.42344 122.512 cv
6.79948 122.24 6.9875 121.866 6.9875 121.39 cv
6.9875 120.915 6.79948 120.541 6.42344 120.269 cv
6.0474 119.998 5.52917 119.862 4.86875 119.862 cv
cp
f
1.99844 115.322 mo
1.99844 114.541 2.2526 113.927 2.76094 113.481 cv
3.26823 113.034 3.97083 112.811 4.86875 112.811 cv
5.76354 112.811 6.46615 113.034 6.97656 113.481 cv
7.48594 113.927 7.74062 114.541 7.74062 115.322 cv
7.74062 116.106 7.48594 116.721 6.97656 117.166 cv
6.46615 117.609 5.76354 117.831 4.86875 117.831 cv
3.97083 117.831 3.26823 117.609 2.76094 117.166 cv
2.2526 116.721 1.99844 116.106 1.99844 115.322 cv
cp
2.75938 115.322 mo
2.75938 115.803 2.9474 116.184 3.32344 116.464 cv
3.69948 116.744 4.21458 116.884 4.86875 116.884 cv
5.52292 116.884 6.03802 116.745 6.41406 116.467 cv
6.7901 116.188 6.97813 115.806 6.97813 115.322 cv
6.97813 114.843 6.78958 114.463 6.4125 114.184 cv
6.03438 113.904 5.51979 113.764 4.86875 113.764 cv
4.22083 113.764 3.70729 113.904 3.32813 114.184 cv
2.94896 114.463 2.75938 114.843 2.75938 115.322 cv
cp
f
0 111.322 mo
0 110.424 li
7.59844 110.424 li
7.59844 111.322 li
0 111.322 li
cp
f
0 108.544 mo
0 107.646 li
1.13906 107.646 li
1.13906 108.544 li
0 108.544 li
cp
2.12969 108.544 mo
2.12969 107.646 li
7.59844 107.646 li
7.59844 108.544 li
2.12969 108.544 li
cp
f
2.33906 101.83 mo
3.17969 101.83 li
3.03906 102.084 2.93385 102.339 2.86406 102.594 cv
2.79427 102.849 2.75938 103.107 2.75938 103.367 cv
2.75938 103.951 2.94427 104.404 3.31406 104.727 cv
3.68281 105.049 4.20104 105.209 4.86875 105.209 cv
5.53646 105.209 6.05521 105.049 6.425 104.727 cv
6.79375 104.404 6.97813 103.951 6.97813 103.367 cv
6.97813 103.107 6.94323 102.849 6.87344 102.594 cv
6.80365 102.339 6.69844 102.084 6.55781 101.83 cv
7.38906 101.83 li
7.50573 102.081 7.59323 102.341 7.65156 102.609 cv
7.71094 102.877 7.74062 103.163 7.74062 103.466 cv
7.74062 104.29 7.48177 104.944 6.96406 105.43 cv
6.44635 105.914 5.74792 106.156 4.86875 106.156 cv
3.97708 106.156 3.27604 105.912 2.76563 105.422 cv
2.25417 104.931 1.99844 104.259 1.99844 103.406 cv
1.99844 103.13 2.02708 102.861 2.08438 102.597 cv
2.14063 102.333 2.22552 102.078 2.33906 101.83 cv
cp
f
.307813 95.4921 mo
.307813 94.6624 li
8.52656 97.2015 li
8.52656 98.0312 li
.307813 95.4921 li
cp
f
12.0681 176.664 mo
13.1072 176.664 li
12.7978 176.996 12.5671 177.35 12.415 177.726 cv
12.2619 178.102 12.1853 178.502 12.1853 178.925 cv
12.1853 179.758 12.44 180.396 12.9494 180.839 cv
13.4587 181.281 14.1952 181.503 15.1587 181.503 cv
16.1192 181.503 16.8541 181.281 17.3634 180.839 cv
17.8728 180.396 18.1275 179.758 18.1275 178.925 cv
18.1275 178.502 18.0509 178.102 17.8978 177.726 cv
17.7447 177.35 17.5134 176.996 17.2041 176.664 cv
18.2353 176.664 li
18.4697 177.009 18.6457 177.374 18.7634 177.761 cv
18.8801 178.146 18.9384 178.553 18.9384 178.983 cv
18.9384 180.087 18.6009 180.956 17.9259 181.592 cv
17.2499 182.226 16.3275 182.543 15.1587 182.543 cv
13.9869 182.543 13.0634 182.226 12.3884 181.592 cv
11.7124 180.956 11.3744 180.087 11.3744 178.983 cv
11.3744 178.547 11.4322 178.137 11.5478 177.751 cv
11.6634 177.365 11.8369 177.002 12.0681 176.664 cv
cp
f
13.1962 173.061 mo
13.1962 172.28 13.4504 171.666 13.9587 171.22 cv
14.466 170.774 15.1686 170.55 16.0666 170.55 cv
16.9614 170.55 17.664 170.774 18.1744 171.22 cv
18.6838 171.666 18.9384 172.28 18.9384 173.061 cv
18.9384 173.845 18.6838 174.46 18.1744 174.905 cv
17.664 175.349 16.9614 175.57 16.0666 175.57 cv
15.1686 175.57 14.466 175.349 13.9587 174.905 cv
13.4504 174.46 13.1962 173.845 13.1962 173.061 cv
cp
13.9572 173.061 mo
13.9572 173.542 14.1452 173.923 14.5212 174.203 cv
14.8973 174.483 15.4124 174.624 16.0666 174.624 cv
16.7207 174.624 17.2358 174.484 17.6119 174.206 cv
17.9879 173.927 18.1759 173.545 18.1759 173.061 cv
18.1759 172.582 17.9874 172.203 17.6103 171.924 cv
17.2322 171.643 16.7176 171.503 16.0666 171.503 cv
15.4186 171.503 14.9051 171.643 14.5259 171.924 cv
14.1468 172.203 13.9572 172.582 13.9572 173.061 cv
cp
f
14.3775 164.804 mo
13.9733 164.579 13.6754 164.31 13.4837 163.998 cv
13.2921 163.685 13.1962 163.317 13.1962 162.894 cv
13.1962 162.325 13.3957 161.885 13.7947 161.576 cv
14.1926 161.266 14.7593 161.112 15.4947 161.112 cv
18.7962 161.112 li
18.7962 162.015 li
15.5244 162.015 li
15.0004 162.015 14.6119 162.108 14.3587 162.294 cv
14.1046 162.48 13.9775 162.763 13.9775 163.143 cv
13.9775 163.609 14.1322 163.977 14.4416 164.248 cv
14.7499 164.517 15.1712 164.652 15.7056 164.652 cv
18.7962 164.652 li
18.7962 165.555 li
15.5244 165.555 li
14.9973 165.555 14.6077 165.648 14.3556 165.834 cv
14.1035 166.019 13.9775 166.305 13.9775 166.693 cv
13.9775 167.152 14.1327 167.517 14.4431 167.788 cv
14.7535 168.058 15.1744 168.193 15.7056 168.193 cv
18.7962 168.193 li
18.7962 169.096 li
13.3275 169.096 li
13.3275 168.193 li
14.1775 168.193 li
13.8421 167.988 13.5947 167.742 13.4353 167.455 cv
13.2759 167.169 13.1962 166.829 13.1962 166.435 cv
13.1962 166.037 13.2973 165.699 13.4994 165.421 cv
13.7004 165.143 13.9931 164.937 14.3775 164.804 cv
cp
f
16.0666 155.394 mo
15.4061 155.394 14.8879 155.53 14.5119 155.802 cv
14.1358 156.074 13.9478 156.447 13.9478 156.922 cv
13.9478 157.398 14.1358 157.772 14.5119 158.044 cv
14.8879 158.316 15.4061 158.452 16.0666 158.452 cv
16.727 158.452 17.2452 158.316 17.6213 158.044 cv
17.9973 157.772 18.1853 157.398 18.1853 156.922 cv
18.1853 156.447 17.9973 156.074 17.6213 155.802 cv
17.2452 155.53 16.727 155.394 16.0666 155.394 cv
cp
17.9759 158.452 mo
20.8759 158.452 li
20.8759 159.355 li
13.3275 159.355 li
13.3275 158.452 li
14.1572 158.452 li
13.8322 158.262 13.591 158.024 13.4337 157.736 cv
13.2754 157.448 13.1962 157.103 13.1962 156.703 cv
13.1962 156.039 13.4598 155.499 13.9869 155.084 cv
14.514 154.669 15.2072 154.461 16.0666 154.461 cv
16.9259 154.461 17.6197 154.669 18.1478 155.084 cv
18.6749 155.499 18.9384 156.039 18.9384 156.703 cv
18.9384 157.103 18.8593 157.448 18.7009 157.736 cv
18.5426 158.024 18.3009 158.262 17.9759 158.452 cv
cp
f
16.6384 153.065 mo
13.3275 153.065 li
13.3275 152.167 li
16.6041 152.167 li
17.1218 152.167 17.5103 152.066 17.7697 151.865 cv
18.028 151.663 18.1572 151.36 18.1572 150.956 cv
18.1572 150.471 18.0025 150.088 17.6931 149.807 cv
17.3837 149.525 16.9619 149.384 16.4275 149.384 cv
13.3275 149.384 li
13.3275 148.485 li
18.7962 148.485 li
18.7962 149.384 li
17.9556 149.384 li
18.2879 149.601 18.5348 149.855 18.6962 150.143 cv
18.8577 150.431 18.9384 150.765 18.9384 151.146 cv
18.9384 151.774 18.7431 152.251 18.3525 152.577 cv
17.9619 152.902 17.3905 153.065 16.6384 153.065 cv
cp
f
11.7744 145.746 mo
13.3275 145.746 li
13.3275 143.896 li
14.0259 143.896 li
14.0259 145.746 li
16.9947 145.746 li
17.4405 145.746 17.727 145.685 17.8541 145.563 cv
17.9811 145.441 18.0447 145.193 18.0447 144.818 cv
18.0447 143.896 li
18.7962 143.896 li
18.7962 144.818 li
18.7962 145.511 18.6671 145.99 18.4088 146.254 cv
18.1494 146.517 17.678 146.649 16.9947 146.649 cv
14.0259 146.649 li
14.0259 147.308 li
13.3275 147.308 li
13.3275 146.649 li
11.7744 146.649 li
11.7744 145.746 li
cp
f
15.5728 138.934 mo
15.0822 138.941 14.6905 139.078 14.3978 139.347 cv
14.1041 139.616 13.9572 139.971 13.9572 140.414 cv
13.9572 140.915 14.0989 141.316 14.3822 141.617 cv
14.6655 141.918 15.0645 142.092 15.5791 142.137 cv
15.5728 138.934 li
cp
15.8369 138.036 mo
16.2759 138.036 li
16.2759 142.167 li
16.8947 142.128 17.366 141.941 17.69 141.608 cv
18.014 141.274 18.1759 140.81 18.1759 140.214 cv
18.1759 139.869 18.1337 139.535 18.0494 139.211 cv
17.965 138.887 17.8379 138.565 17.6681 138.245 cv
18.5181 138.245 li
18.6546 138.568 18.7587 138.899 18.8306 139.237 cv
18.9025 139.576 18.9384 139.919 18.9384 140.267 cv
18.9384 141.14 18.6848 141.831 18.1775 142.341 cv
17.6692 142.85 16.9817 143.105 16.115 143.105 cv
15.2202 143.105 14.5103 142.863 13.9853 142.38 cv
13.4593 141.896 13.1962 141.244 13.1962 140.423 cv
13.1962 139.688 13.4332 139.106 13.9072 138.678 cv
14.3801 138.25 15.0233 138.036 15.8369 138.036 cv
cp
f
14.1666 133.393 mo
14.1082 133.494 14.0655 133.604 14.0384 133.723 cv
14.0103 133.841 13.9962 133.972 13.9962 134.115 cv
13.9962 134.623 14.1614 135.013 14.4916 135.285 cv
14.8218 135.557 15.2962 135.693 15.915 135.693 cv
18.7962 135.693 li
18.7962 136.596 li
13.3275 136.596 li
13.3275 135.693 li
14.1775 135.693 li
13.8452 135.503 13.5989 135.257 13.4384 134.955 cv
13.277 134.652 13.1962 134.284 13.1962 133.851 cv
13.1962 133.789 13.2004 133.721 13.2087 133.646 cv
13.216 133.571 13.228 133.488 13.2447 133.398 cv
14.1666 133.393 li
cp
f
11.7447 124.862 mo
12.7072 124.862 li
12.528 125.236 12.3947 125.589 12.3072 125.922 cv
12.2186 126.254 12.1744 126.575 12.1744 126.884 cv
12.1744 127.421 12.2785 127.835 12.4869 128.126 cv
12.6952 128.418 12.9916 128.564 13.3759 128.564 cv
13.6989 128.564 13.9426 128.467 14.1072 128.273 cv
14.2707 128.079 14.403 127.712 14.5041 127.172 cv
14.6259 126.576 li
14.7666 125.841 15.0134 125.298 15.3666 124.948 cv
15.7197 124.598 16.1921 124.423 16.7838 124.423 cv
17.491 124.423 18.027 124.66 18.3916 125.134 cv
18.7561 125.607 18.9384 126.301 18.9384 127.215 cv
18.9384 127.56 18.8994 127.927 18.8212 128.317 cv
18.7431 128.705 18.6275 129.108 18.4744 129.525 cv
17.4587 129.525 li
17.6827 129.125 17.852 128.733 17.9666 128.348 cv
18.0801 127.964 18.1369 127.586 18.1369 127.215 cv
18.1369 126.653 18.0265 126.218 17.8056 125.912 cv
17.5837 125.606 17.2676 125.453 16.8572 125.453 cv
16.4999 125.453 16.2202 125.563 16.0181 125.783 cv
15.816 126.002 15.6645 126.363 15.5634 126.864 cv
15.4462 127.465 li
15.3004 128.201 15.0712 128.733 14.7587 129.062 cv
14.4462 129.39 14.0114 129.554 13.4541 129.554 cv
12.8093 129.554 12.3015 129.327 11.9306 128.873 cv
11.5598 128.419 11.3744 127.793 11.3744 126.997 cv
11.3744 126.654 11.4056 126.305 11.4681 125.951 cv
11.5296 125.596 11.6218 125.233 11.7447 124.862 cv
cp
f
13.5369 118.988 mo
14.3775 118.988 li
14.2369 119.242 14.1317 119.497 14.0619 119.752 cv
13.9921 120.007 13.9572 120.265 13.9572 120.526 cv
13.9572 121.109 14.1421 121.562 14.5119 121.885 cv
14.8806 122.207 15.3989 122.368 16.0666 122.368 cv
16.7343 122.368 17.253 122.207 17.6228 121.885 cv
17.9916 121.562 18.1759 121.109 18.1759 120.526 cv
18.1759 120.265 18.141 120.007 18.0712 119.752 cv
18.0015 119.497 17.8962 119.242 17.7556 118.988 cv
18.5869 118.988 li
18.7035 119.239 18.791 119.499 18.8494 119.768 cv
18.9088 120.035 18.9384 120.321 18.9384 120.624 cv
18.9384 121.448 18.6796 122.103 18.1619 122.588 cv
17.6442 123.072 16.9457 123.315 16.0666 123.315 cv
15.1749 123.315 14.4739 123.07 13.9634 122.58 cv
13.452 122.09 13.1962 121.418 13.1962 120.565 cv
13.1962 120.289 13.2249 120.019 13.2822 119.755 cv
13.3384 119.492 13.4233 119.236 13.5369 118.988 cv
cp
f
11.1978 117.426 mo
11.1978 116.527 li
12.3369 116.527 li
12.3369 117.426 li
11.1978 117.426 li
cp
13.3275 117.426 mo
13.3275 116.527 li
18.7962 116.527 li
18.7962 117.426 li
13.3275 117.426 li
cp
f
15.5728 110.868 mo
15.0822 110.874 14.6905 111.012 14.3978 111.28 cv
14.1041 111.549 13.9572 111.905 13.9572 112.348 cv
13.9572 112.849 14.0989 113.25 14.3822 113.551 cv
14.6655 113.852 15.0645 114.025 15.5791 114.071 cv
15.5728 110.868 li
cp
15.8369 109.969 mo
16.2759 109.969 li
16.2759 114.101 li
16.8947 114.061 17.366 113.875 17.69 113.541 cv
18.014 113.208 18.1759 112.743 18.1759 112.148 cv
18.1759 111.803 18.1337 111.468 18.0494 111.144 cv
17.965 110.82 17.8379 110.499 17.6681 110.179 cv
18.5181 110.179 li
18.6546 110.502 18.7587 110.832 18.8306 111.171 cv
18.9025 111.51 18.9384 111.853 18.9384 112.201 cv
18.9384 113.074 18.6848 113.765 18.1775 114.274 cv
17.6692 114.784 16.9817 115.038 16.115 115.038 cv
15.2202 115.038 14.5103 114.797 13.9853 114.313 cv
13.4593 113.83 13.1962 113.178 13.1962 112.357 cv
13.1962 111.622 13.4332 111.04 13.9072 110.612 cv
14.3801 110.184 15.0233 109.969 15.8369 109.969 cv
cp
f
15.4947 103.948 mo
18.7962 103.948 li
18.7962 104.847 li
15.5244 104.847 li
15.0067 104.847 14.6197 104.948 14.3634 105.15 cv
14.1061 105.352 13.9775 105.655 13.9775 106.058 cv
13.9775 106.543 14.1322 106.926 14.4416 107.206 cv
14.7499 107.486 15.1712 107.626 15.7056 107.626 cv
18.7962 107.626 li
18.7962 108.53 li
13.3275 108.53 li
13.3275 107.626 li
14.1775 107.626 li
13.8483 107.411 13.6025 107.158 13.44 106.867 cv
13.2775 106.575 13.1962 106.239 13.1962 105.858 cv
13.1962 105.23 13.3905 104.755 13.7791 104.433 cv
14.1676 104.11 14.7395 103.948 15.4947 103.948 cv
cp
f
13.5369 98.2214 mo
14.3775 98.2214 li
14.2369 98.4756 14.1317 98.7303 14.0619 98.9855 cv
13.9921 99.2407 13.9572 99.4985 13.9572 99.7589 cv
13.9572 100.342 14.1421 100.795 14.5119 101.118 cv
14.8806 101.44 15.3989 101.601 16.0666 101.601 cv
16.7343 101.601 17.253 101.44 17.6228 101.118 cv
17.9916 100.795 18.1759 100.342 18.1759 99.7589 cv
18.1759 99.4985 18.141 99.2407 18.0712 98.9855 cv
18.0015 98.7303 17.8962 98.4756 17.7556 98.2214 cv
18.5869 98.2214 li
18.7035 98.4724 18.791 98.7323 18.8494 99.0011 cv
18.9088 99.2688 18.9384 99.5542 18.9384 99.8573 cv
18.9384 100.681 18.6796 101.336 18.1619 101.821 cv
17.6442 102.306 16.9457 102.548 16.0666 102.548 cv
15.1749 102.548 14.4739 102.303 13.9634 101.814 cv
13.452 101.323 13.1962 100.651 13.1962 99.798 cv
13.1962 99.5219 13.2249 99.2521 13.2822 98.9886 cv
13.3384 98.7251 13.4233 98.4693 13.5369 98.2214 cv
cp
f
15.5728 92.8796 mo
15.0822 92.8859 14.6905 93.0234 14.3978 93.2921 cv
14.1041 93.5609 13.9572 93.9166 13.9572 94.3593 cv
13.9572 94.8603 14.0989 95.2614 14.3822 95.5624 cv
14.6655 95.8635 15.0645 96.0369 15.5791 96.0827 cv
15.5728 92.8796 li
cp
15.8369 91.9812 mo
16.2759 91.9812 li
16.2759 96.1124 li
16.8947 96.0728 17.366 95.8864 17.69 95.553 cv
18.014 95.2197 18.1759 94.7551 18.1759 94.1593 cv
18.1759 93.8145 18.1337 93.4801 18.0494 93.1562 cv
17.965 92.8322 17.8379 92.5103 17.6681 92.1905 cv
18.5181 92.1905 li
18.6546 92.5135 18.7587 92.8442 18.8306 93.1827 cv
18.9025 93.5213 18.9384 93.8645 18.9384 94.2124 cv
18.9384 95.0853 18.6848 95.7765 18.1775 96.2859 cv
17.6692 96.7952 16.9817 97.0499 16.115 97.0499 cv
15.2202 97.0499 14.5103 96.8083 13.9853 96.3249 cv
13.4593 95.8416 13.1962 95.1895 13.1962 94.3687 cv
13.1962 93.6333 13.4332 93.0515 13.9072 92.6234 cv
14.3801 92.1952 15.0233 91.9812 15.8369 91.9812 cv
cp
f
129.349 1.3425 mo
129.349 4.4475 li
130.838 4.4475 li
131.408 4.4475 131.838 4.31563 132.13 4.05188 cv
132.421 3.78812 132.567 3.40062 132.567 2.88937 cv
132.567 2.37812 132.421 1.9925 132.13 1.7325 cv
131.838 1.4725 131.408 1.3425 130.838 1.3425 cv
129.349 1.3425 li
cp
132.315 5.01563 mo
132.569 5.10187 132.816 5.28562 133.056 5.56687 cv
133.296 5.84812 133.537 6.235 133.78 6.7275 cv
134.982 9.11812 li
133.708 9.11812 li
132.591 6.87375 li
132.301 6.2875 132.02 5.89875 131.749 5.7075 cv
131.478 5.51625 131.108 5.42062 130.639 5.42062 cv
129.349 5.42062 li
129.349 9.11812 li
128.166 9.11812 li
128.166 .369375 li
130.838 .369375 li
131.838 .369375 132.584 .57875 133.077 .9975 cv
133.569 1.415 133.815 2.04562 133.815 2.88937 cv
133.815 3.44062 133.687 3.89812 133.431 4.26187 cv
133.175 4.62437 132.803 4.87562 132.315 5.01563 cv
cp
f
141.321 5.37375 mo
141.321 9.11812 li
140.243 9.11812 li
140.243 8.1225 li
139.996 8.52 139.689 8.81375 139.322 9.00375 cv
138.954 9.19375 138.505 9.28875 137.974 9.28875 cv
137.303 9.28875 136.768 9.1 136.371 8.7225 cv
135.974 8.345 135.776 7.84 135.776 7.2075 cv
135.776 6.47 136.023 5.91375 136.517 5.53875 cv
137.012 5.16375 137.749 4.97625 138.729 4.97625 cv
140.243 4.97625 li
140.243 4.86937 li
140.243 4.37312 140.079 3.98938 139.753 3.71812 cv
139.427 3.44687 138.969 3.31125 138.379 3.31125 cv
138.004 3.31125 137.638 3.35625 137.282 3.44625 cv
136.927 3.53625 136.586 3.67125 136.258 3.85125 cv
136.258 2.85375 li
136.652 2.70125 137.034 2.5875 137.406 2.5125 cv
137.777 2.43625 138.138 2.39812 138.489 2.39812 cv
139.439 2.39812 140.149 2.64437 140.618 3.13687 cv
141.086 3.62812 141.321 4.37375 141.321 5.37375 cv
cp
139.17 5.82 mo
138.299 5.82 137.695 5.91937 137.359 6.11812 cv
137.023 6.31687 136.854 6.65688 136.854 7.13812 cv
136.854 7.52062 136.981 7.82437 137.233 8.04937 cv
137.486 8.27312 137.828 8.385 138.261 8.385 cv
138.859 8.385 139.339 8.17313 139.701 7.74937 cv
140.062 7.32562 140.243 6.7625 140.243 6.06 cv
140.243 5.82 li
139.17 5.82 li
cp
f
144.607 .691875 mo
144.607 2.55562 li
146.827 2.55562 li
146.827 3.39375 li
144.607 3.39375 li
144.607 6.95625 li
144.607 7.49125 144.68 7.835 144.827 7.9875 cv
144.973 8.14 145.271 8.21625 145.721 8.21625 cv
146.827 8.21625 li
146.827 9.11812 li
145.721 9.11812 li
144.889 9.11812 144.314 8.96313 143.998 8.65312 cv
143.682 8.34188 143.524 7.77625 143.524 6.95625 cv
143.524 3.39375 li
142.732 3.39375 li
142.732 2.55562 li
143.524 2.55562 li
143.524 .691875 li
144.607 .691875 li
cp
f
148.246 0 mo
149.324 0 li
149.324 1.36687 li
148.246 1.36687 li
148.246 0 li
cp
148.246 2.55562 mo
149.324 2.55562 li
149.324 9.11812 li
148.246 9.11812 li
148.246 2.55562 li
cp
f
154.122 2.39812 mo
155.06 2.39812 155.796 2.70313 156.331 3.31312 cv
156.867 3.92188 157.135 4.765 157.135 5.8425 cv
157.135 6.91625 156.867 7.75937 156.331 8.37187 cv
155.796 8.98312 155.06 9.28875 154.122 9.28875 cv
153.181 9.28875 152.443 8.98312 151.91 8.37187 cv
151.377 7.75937 151.111 6.91625 151.111 5.8425 cv
151.111 4.765 151.377 3.92188 151.91 3.31312 cv
152.443 2.70313 153.181 2.39812 154.122 2.39812 cv
cp
154.122 3.31125 mo
153.545 3.31125 153.088 3.53687 152.751 3.98812 cv
152.415 4.43937 152.247 5.0575 152.247 5.8425 cv
152.247 6.6275 152.414 7.24563 152.748 7.69687 cv
153.083 8.14812 153.541 8.37375 154.122 8.37375 cv
154.697 8.37375 155.152 8.1475 155.487 7.695 cv
155.823 7.24125 155.991 6.62375 155.991 5.8425 cv
155.991 5.065 155.823 4.44875 155.487 3.99375 cv
155.152 3.53875 154.697 3.31125 154.122 3.31125 cv
cp
f
165.278 2.39812 mo
166.216 2.39812 166.952 2.70313 167.487 3.31312 cv
168.023 3.92188 168.291 4.765 168.291 5.8425 cv
168.291 6.91625 168.023 7.75937 167.487 8.37187 cv
166.952 8.98312 166.216 9.28875 165.278 9.28875 cv
164.337 9.28875 163.6 8.98312 163.066 8.37187 cv
162.533 7.75937 162.267 6.91625 162.267 5.8425 cv
162.267 4.765 162.533 3.92188 163.066 3.31312 cv
163.6 2.70313 164.337 2.39812 165.278 2.39812 cv
cp
165.278 3.31125 mo
164.701 3.31125 164.244 3.53687 163.908 3.98812 cv
163.571 4.43937 163.403 5.0575 163.403 5.8425 cv
163.403 6.6275 163.57 7.24563 163.904 7.69687 cv
164.239 8.14812 164.697 8.37375 165.278 8.37375 cv
165.853 8.37375 166.308 8.1475 166.643 7.695 cv
166.98 7.24125 167.148 6.62375 167.148 5.8425 cv
167.148 5.065 166.98 4.44875 166.643 3.99375 cv
166.308 3.53875 165.853 3.31125 165.278 3.31125 cv
cp
f
173.4 0 mo
173.4 .898125 li
172.369 .898125 li
171.983 .898125 171.714 .97625 171.563 1.1325 cv
171.413 1.28875 171.338 1.57 171.338 1.97625 cv
171.338 2.55562 li
173.113 2.55562 li
173.113 3.39375 li
171.338 3.39375 li
171.338 9.11812 li
170.254 9.11812 li
170.254 3.39375 li
169.223 3.39375 li
169.223 2.55562 li
170.254 2.55562 li
170.254 2.09812 li
170.254 1.36812 170.424 .83625 170.764 .5025 cv
171.104 .1675 171.643 0 172.38 0 cv
173.4 0 li
cp
f
178.164 .369375 mo
179.757 .369375 li
183.637 7.6875 li
183.637 .369375 li
184.784 .369375 li
184.784 9.11812 li
183.19 9.11812 li
179.313 1.8 li
179.313 9.11812 li
178.164 9.11812 li
178.164 .369375 li
cp
f
191.629 5.25 mo
191.621 4.66125 191.456 4.19125 191.134 3.84 cv
190.811 3.4875 190.384 3.31125 189.853 3.31125 cv
189.252 3.31125 188.771 3.48125 188.409 3.82125 cv
188.048 4.16125 187.84 4.64 187.785 5.2575 cv
191.629 5.25 li
cp
192.707 5.56687 mo
192.707 6.09375 li
187.749 6.09375 li
187.797 6.83625 188.021 7.40188 188.421 7.79062 cv
188.821 8.17937 189.378 8.37375 190.093 8.37375 cv
190.507 8.37375 190.908 8.32312 191.297 8.22188 cv
191.686 8.12062 192.072 7.96812 192.456 7.76437 cv
192.456 8.78438 li
192.068 8.94812 191.671 9.07312 191.265 9.15938 cv
190.859 9.24562 190.447 9.28875 190.029 9.28875 cv
188.982 9.28875 188.153 8.98438 187.541 8.37562 cv
186.93 7.76563 186.624 6.94062 186.624 5.90062 cv
186.624 4.82687 186.914 3.975 187.494 3.345 cv
188.074 2.71375 188.857 2.39812 189.842 2.39812 cv
190.724 2.39812 191.423 2.6825 191.936 3.25125 cv
192.45 3.81875 192.707 4.59062 192.707 5.56687 cv
cp
f
199.767 .65625 mo
199.767 1.81125 li
199.319 1.59625 198.895 1.43625 198.496 1.33125 cv
198.097 1.225 197.712 1.17188 197.341 1.17188 cv
196.697 1.17188 196.2 1.29687 195.85 1.54688 cv
195.5 1.79687 195.325 2.1525 195.325 2.61375 cv
195.325 3.00125 195.442 3.29375 195.674 3.49125 cv
195.907 3.6875 196.347 3.84625 196.996 3.9675 cv
197.71 4.11375 li
198.593 4.2825 199.244 4.57875 199.664 5.0025 cv
200.084 5.42625 200.294 5.99312 200.294 6.70313 cv
200.294 7.55187 200.01 8.195 199.441 8.6325 cv
198.874 9.07 198.041 9.28875 196.944 9.28875 cv
196.53 9.28875 196.089 9.24187 195.622 9.14812 cv
195.155 9.05437 194.672 8.91562 194.172 8.73187 cv
194.172 7.51312 li
194.652 7.78187 195.123 7.985 195.584 8.1225 cv
196.045 8.25875 196.499 8.32687 196.944 8.32687 cv
197.618 8.32687 198.14 8.19438 198.507 7.92937 cv
198.875 7.66313 199.059 7.28375 199.059 6.79125 cv
199.059 6.3625 198.927 6.02688 198.663 5.78437 cv
198.399 5.54187 197.967 5.36 197.365 5.23875 cv
196.644 5.09812 li
195.761 4.92313 195.122 4.64812 194.727 4.27312 cv
194.334 3.89812 194.137 3.37625 194.137 2.7075 cv
194.137 1.93375 194.409 1.32438 194.954 .879375 cv
195.499 .434375 196.25 .211875 197.206 .211875 cv
197.617 .211875 198.035 .249375 198.46 .324375 cv
198.887 .398125 199.322 .50875 199.767 .65625 cv
cp
f
204.823 9.7275 mo
204.519 10.5087 204.223 11.0181 203.933 11.2556 cv
203.644 11.4944 203.258 11.6137 202.774 11.6137 cv
201.911 11.6137 li
201.911 10.7119 li
202.545 10.7119 li
202.841 10.7119 203.071 10.6412 203.235 10.5 cv
203.4 10.36 203.582 10.0281 203.781 9.50437 cv
203.974 9.01312 li
201.321 2.55562 li
202.463 2.55562 li
204.514 7.6875 li
206.565 2.55562 li
207.707 2.55562 li
204.823 9.7275 li
cp
f
214.076 .691875 mo
214.076 2.55562 li
216.296 2.55562 li
216.296 3.39375 li
214.076 3.39375 li
214.076 6.95625 li
214.076 7.49125 214.149 7.835 214.295 7.9875 cv
214.442 8.14 214.74 8.21625 215.19 8.21625 cv
216.296 8.21625 li
216.296 9.11812 li
215.19 9.11812 li
214.357 9.11812 213.783 8.96313 213.467 8.65312 cv
213.15 8.34188 212.992 7.77625 212.992 6.95625 cv
212.992 3.39375 li
212.201 3.39375 li
212.201 2.55562 li
212.992 2.55562 li
212.992 .691875 li
214.076 .691875 li
cp
f
220.257 2.39812 mo
221.194 2.39812 221.931 2.70313 222.466 3.31312 cv
223.002 3.92188 223.27 4.765 223.27 5.8425 cv
223.27 6.91625 223.002 7.75937 222.466 8.37187 cv
221.931 8.98312 221.194 9.28875 220.257 9.28875 cv
219.316 9.28875 218.578 8.98312 218.044 8.37187 cv
217.512 7.75937 217.246 6.91625 217.246 5.8425 cv
217.246 4.765 217.512 3.92188 218.044 3.31312 cv
218.578 2.70313 219.316 2.39812 220.257 2.39812 cv
cp
220.257 3.31125 mo
219.679 3.31125 219.222 3.53687 218.886 3.98812 cv
218.55 4.43937 218.382 5.0575 218.382 5.8425 cv
218.382 6.6275 218.549 7.24563 218.882 7.69687 cv
219.217 8.14812 219.676 8.37375 220.257 8.37375 cv
220.832 8.37375 221.287 8.1475 221.622 7.695 cv
221.958 7.24125 222.126 6.62375 222.126 5.8425 cv
222.126 5.065 221.958 4.44875 221.622 3.99375 cv
221.287 3.53875 220.832 3.31125 220.257 3.31125 cv
cp
f
235.469 1.04437 mo
235.469 2.29125 li
235.07 1.92 234.645 1.64312 234.194 1.46062 cv
233.742 1.27688 233.263 1.185 232.756 1.185 cv
231.756 1.185 230.99 1.49063 230.459 2.10188 cv
229.927 2.71312 229.662 3.59687 229.662 4.75312 cv
229.662 5.90562 229.927 6.7875 230.459 7.39875 cv
230.99 8.01 231.756 8.31563 232.756 8.31563 cv
233.263 8.31563 233.742 8.22375 234.194 8.04 cv
234.645 7.85625 235.07 7.57875 235.469 7.2075 cv
235.469 8.445 li
235.055 8.72625 234.616 8.9375 234.152 9.07875 cv
233.69 9.21875 233.201 9.28875 232.686 9.28875 cv
231.361 9.28875 230.317 8.88375 229.555 8.07375 cv
228.794 7.2625 228.413 6.15562 228.413 4.75312 cv
228.413 3.34687 228.794 2.23875 229.555 1.42875 cv
230.317 .6175 231.361 .211875 232.686 .211875 cv
233.209 .211875 233.701 .28125 234.164 .42 cv
234.627 .55875 235.062 .766875 235.469 1.04437 cv
cp
f
239.792 2.39812 mo
240.729 2.39812 241.466 2.70313 242.001 3.31312 cv
242.537 3.92188 242.805 4.765 242.805 5.8425 cv
242.805 6.91625 242.537 7.75937 242.001 8.37187 cv
241.466 8.98312 240.729 9.28875 239.792 9.28875 cv
238.851 9.28875 238.113 8.98312 237.579 8.37187 cv
237.047 7.75937 236.781 6.91625 236.781 5.8425 cv
236.781 4.765 237.047 3.92188 237.579 3.31312 cv
238.113 2.70313 238.851 2.39812 239.792 2.39812 cv
cp
239.792 3.31125 mo
239.214 3.31125 238.758 3.53687 238.421 3.98812 cv
238.085 4.43937 237.917 5.0575 237.917 5.8425 cv
237.917 6.6275 238.084 7.24563 238.418 7.69687 cv
238.753 8.14812 239.211 8.37375 239.792 8.37375 cv
240.367 8.37375 240.822 8.1475 241.157 7.695 cv
241.493 7.24125 241.661 6.62375 241.661 5.8425 cv
241.661 5.065 241.493 4.44875 241.157 3.99375 cv
240.822 3.53875 240.367 3.31125 239.792 3.31125 cv
cp
f
249.701 3.81562 mo
249.971 3.33062 250.293 2.97312 250.668 2.74312 cv
251.043 2.51312 251.484 2.39812 251.992 2.39812 cv
252.676 2.39812 253.203 2.6375 253.574 3.11625 cv
253.946 3.59375 254.131 4.27375 254.131 5.15625 cv
254.131 9.11812 li
253.047 9.11812 li
253.047 5.19187 li
253.047 4.56313 252.936 4.09687 252.712 3.79312 cv
252.489 3.48812 252.15 3.33562 251.694 3.33562 cv
251.135 3.33562 250.693 3.52125 250.368 3.8925 cv
250.044 4.2625 249.882 4.76813 249.882 5.40937 cv
249.882 9.11812 li
248.799 9.11812 li
248.799 5.19187 li
248.799 4.55938 248.687 4.09187 248.465 3.78937 cv
248.242 3.48688 247.899 3.33562 247.434 3.33562 cv
246.882 3.33562 246.444 3.52187 246.119 3.89437 cv
245.796 4.26688 245.634 4.77187 245.634 5.40937 cv
245.634 9.11812 li
244.55 9.11812 li
244.55 2.55562 li
245.634 2.55562 li
245.634 3.57562 li
245.88 3.17312 246.175 2.87625 246.519 2.685 cv
246.862 2.49375 247.271 2.39812 247.743 2.39812 cv
248.221 2.39812 248.626 2.51938 248.96 2.76187 cv
249.294 3.00313 249.541 3.35437 249.701 3.81562 cv
cp
f
260.993 5.8425 mo
260.993 5.05 260.829 4.42812 260.503 3.97687 cv
260.177 3.52562 259.729 3.3 259.159 3.3 cv
258.588 3.3 258.139 3.52562 257.813 3.97687 cv
257.486 4.42812 257.323 5.05 257.323 5.8425 cv
257.323 6.635 257.486 7.25687 257.813 7.70812 cv
258.139 8.15938 258.588 8.385 259.159 8.385 cv
259.729 8.385 260.177 8.15938 260.503 7.70812 cv
260.829 7.25687 260.993 6.635 260.993 5.8425 cv
cp
257.323 8.13375 mo
257.323 11.6137 li
256.239 11.6137 li
256.239 2.55562 li
257.323 2.55562 li
257.323 3.55125 li
257.551 3.16125 257.837 2.87188 258.182 2.68313 cv
258.528 2.49313 258.941 2.39812 259.421 2.39812 cv
260.219 2.39812 260.866 2.71438 261.364 3.34687 cv
261.863 3.97937 262.112 4.81125 262.112 5.8425 cv
262.112 6.87375 261.863 7.70625 261.364 8.34 cv
260.866 8.9725 260.219 9.28875 259.421 9.28875 cv
258.941 9.28875 258.528 9.19375 258.182 9.00375 cv
257.837 8.81375 257.551 8.52375 257.323 8.13375 cv
cp
f
263.787 6.52875 mo
263.787 2.55562 li
264.865 2.55562 li
264.865 6.4875 li
264.865 7.10875 264.986 7.575 265.227 7.88625 cv
265.47 8.19625 265.833 8.35125 266.319 8.35125 cv
266.9 8.35125 267.359 8.16562 267.697 7.79437 cv
268.035 7.42312 268.205 6.91687 268.205 6.27562 cv
268.205 2.55562 li
269.283 2.55562 li
269.283 9.11812 li
268.205 9.11812 li
268.205 8.10938 li
267.944 8.50812 267.64 8.80437 267.294 8.99813 cv
266.949 9.19187 266.547 9.28875 266.09 9.28875 cv
265.336 9.28875 264.764 9.05437 264.372 8.58562 cv
263.982 8.11687 263.787 7.43125 263.787 6.52875 cv
cp
f
272.57 .691875 mo
272.57 2.55562 li
274.79 2.55562 li
274.79 3.39375 li
272.57 3.39375 li
272.57 6.95625 li
272.57 7.49125 272.643 7.835 272.79 7.9875 cv
272.936 8.14 273.234 8.21625 273.684 8.21625 cv
274.79 8.21625 li
274.79 9.11812 li
273.684 9.11812 li
272.851 9.11812 272.277 8.96313 271.961 8.65312 cv
271.645 8.34188 271.486 7.77625 271.486 6.95625 cv
271.486 3.39375 li
270.695 3.39375 li
270.695 2.55562 li
271.486 2.55562 li
271.486 .691875 li
272.57 .691875 li
cp
f
280.744 5.25 mo
280.737 4.66125 280.572 4.19125 280.249 3.84 cv
279.927 3.4875 279.5 3.31125 278.968 3.31125 cv
278.367 3.31125 277.886 3.48125 277.525 3.82125 cv
277.163 4.16125 276.955 4.64 276.9 5.2575 cv
280.744 5.25 li
cp
281.822 5.56687 mo
281.822 6.09375 li
276.865 6.09375 li
276.912 6.83625 277.136 7.40188 277.536 7.79062 cv
277.936 8.17937 278.493 8.37375 279.208 8.37375 cv
279.622 8.37375 280.023 8.32312 280.412 8.22188 cv
280.801 8.12062 281.187 7.96812 281.571 7.76437 cv
281.571 8.78438 li
281.183 8.94812 280.787 9.07312 280.38 9.15938 cv
279.974 9.24562 279.562 9.28875 279.145 9.28875 cv
278.097 9.28875 277.268 8.98438 276.657 8.37562 cv
276.045 7.76563 275.74 6.94062 275.74 5.90062 cv
275.74 4.82687 276.03 3.975 276.61 3.345 cv
277.19 2.71375 277.972 2.39812 278.957 2.39812 cv
279.84 2.39812 280.538 2.6825 281.052 3.25125 cv
281.565 3.81875 281.822 4.59062 281.822 5.56687 cv
cp
f
287.394 3.5625 mo
287.272 3.4925 287.141 3.44125 286.998 3.40875 cv
286.856 3.375 286.699 3.35812 286.527 3.35812 cv
285.917 3.35812 285.449 3.55625 285.123 3.9525 cv
284.797 4.34875 284.634 4.91812 284.634 5.66062 cv
284.634 9.11812 li
283.55 9.11812 li
283.55 2.55562 li
284.634 2.55562 li
284.634 3.57562 li
284.861 3.17687 285.156 2.88125 285.519 2.68875 cv
285.882 2.495 286.324 2.39812 286.844 2.39812 cv
286.918 2.39812 287 2.40313 287.09 2.41313 cv
287.18 2.42188 287.279 2.43625 287.388 2.45625 cv
287.394 3.5625 li
cp
f
297.631 .65625 mo
297.631 1.81125 li
297.182 1.59625 296.758 1.43625 296.359 1.33125 cv
295.961 1.225 295.576 1.17188 295.204 1.17188 cv
294.561 1.17188 294.064 1.29687 293.714 1.54688 cv
293.364 1.79687 293.189 2.1525 293.189 2.61375 cv
293.189 3.00125 293.305 3.29375 293.537 3.49125 cv
293.77 3.6875 294.211 3.84625 294.859 3.9675 cv
295.574 4.11375 li
296.456 4.2825 297.107 4.57875 297.527 5.0025 cv
297.947 5.42625 298.157 5.99312 298.157 6.70313 cv
298.157 7.55187 297.873 8.195 297.304 8.6325 cv
296.737 9.07 295.904 9.28875 294.807 9.28875 cv
294.393 9.28875 293.952 9.24187 293.485 9.14812 cv
293.019 9.05437 292.536 8.91562 292.036 8.73187 cv
292.036 7.51312 li
292.516 7.78187 292.986 7.985 293.447 8.1225 cv
293.909 8.25875 294.362 8.32687 294.807 8.32687 cv
295.482 8.32687 296.003 8.19438 296.371 7.92937 cv
296.738 7.66313 296.922 7.28375 296.922 6.79125 cv
296.922 6.3625 296.79 6.02688 296.526 5.78437 cv
296.262 5.54187 295.83 5.36 295.229 5.23875 cv
294.507 5.09812 li
293.624 4.92313 292.986 4.64812 292.591 4.27312 cv
292.197 3.89812 292 3.37625 292 2.7075 cv
292 1.93375 292.272 1.32438 292.817 .879375 cv
293.362 .434375 294.113 .211875 295.069 .211875 cv
295.481 .211875 295.899 .249375 296.324 .324375 cv
296.75 .398125 297.186 .50875 297.631 .65625 cv
cp
f
304.68 2.80687 mo
304.68 3.81562 li
304.375 3.64687 304.069 3.52063 303.763 3.43687 cv
303.456 3.35312 303.147 3.31125 302.835 3.31125 cv
302.135 3.31125 301.591 3.53312 301.203 3.97687 cv
300.817 4.41937 300.624 5.04125 300.624 5.8425 cv
300.624 6.64375 300.817 7.26625 301.203 7.71 cv
301.591 8.1525 302.135 8.37375 302.835 8.37375 cv
303.147 8.37375 303.456 8.33187 303.763 8.24813 cv
304.069 8.16438 304.375 8.03813 304.68 7.86937 cv
304.68 8.86687 li
304.378 9.00688 304.066 9.11187 303.744 9.18188 cv
303.423 9.25313 303.08 9.28875 302.716 9.28875 cv
301.728 9.28875 300.942 8.97812 300.36 8.35687 cv
299.778 7.73562 299.488 6.8975 299.488 5.8425 cv
299.488 4.7725 299.781 3.93125 300.369 3.31875 cv
300.958 2.705 301.764 2.39812 302.788 2.39812 cv
303.119 2.39812 303.443 2.4325 303.759 2.50125 cv
304.075 2.56875 304.382 2.67062 304.68 2.80687 cv
cp
f
306.554 0 mo
307.632 0 li
307.632 1.36687 li
306.554 1.36687 li
306.554 0 li
cp
306.554 2.55562 mo
307.632 2.55562 li
307.632 9.11812 li
306.554 9.11812 li
306.554 2.55562 li
cp
f
314.424 5.25 mo
314.416 4.66125 314.251 4.19125 313.929 3.84 cv
313.606 3.4875 313.179 3.31125 312.648 3.31125 cv
312.047 3.31125 311.566 3.48125 311.204 3.82125 cv
310.843 4.16125 310.635 4.64 310.58 5.2575 cv
314.424 5.25 li
cp
315.502 5.56687 mo
315.502 6.09375 li
310.544 6.09375 li
310.592 6.83625 310.816 7.40188 311.216 7.79062 cv
311.616 8.17937 312.173 8.37375 312.888 8.37375 cv
313.302 8.37375 313.703 8.32312 314.092 8.22188 cv
314.481 8.12062 314.867 7.96812 315.251 7.76437 cv
315.251 8.78438 li
314.863 8.94812 314.466 9.07312 314.06 9.15938 cv
313.654 9.24562 313.242 9.28875 312.824 9.28875 cv
311.777 9.28875 310.947 8.98438 310.336 8.37562 cv
309.725 7.76563 309.419 6.94062 309.419 5.90062 cv
309.419 4.82687 309.709 3.975 310.289 3.345 cv
310.869 2.71375 311.652 2.39812 312.637 2.39812 cv
313.519 2.39812 314.217 2.6825 314.731 3.25125 cv
315.245 3.81875 315.502 4.59062 315.502 5.56687 cv
cp
f
322.727 5.15625 mo
322.727 9.11812 li
321.649 9.11812 li
321.649 5.19187 li
321.649 4.57062 321.528 4.10625 321.285 3.79875 cv
321.043 3.49 320.68 3.33562 320.196 3.33562 cv
319.613 3.33562 319.154 3.52125 318.818 3.8925 cv
318.482 4.2625 318.313 4.76813 318.313 5.40937 cv
318.313 9.11812 li
317.23 9.11812 li
317.23 2.55562 li
318.313 2.55562 li
318.313 3.57562 li
318.572 3.18062 318.876 2.88562 319.225 2.69062 cv
319.575 2.49563 319.978 2.39812 320.436 2.39812 cv
321.19 2.39812 321.76 2.63125 322.146 3.0975 cv
322.533 3.56375 322.727 4.25 322.727 5.15625 cv
cp
f
329.6 2.80687 mo
329.6 3.81562 li
329.295 3.64687 328.989 3.52063 328.683 3.43687 cv
328.376 3.35312 328.067 3.31125 327.755 3.31125 cv
327.055 3.31125 326.511 3.53312 326.123 3.97687 cv
325.737 4.41937 325.544 5.04125 325.544 5.8425 cv
325.544 6.64375 325.737 7.26625 326.123 7.71 cv
326.511 8.1525 327.055 8.37375 327.755 8.37375 cv
328.067 8.37375 328.376 8.33187 328.683 8.24813 cv
328.989 8.16438 329.295 8.03813 329.6 7.86937 cv
329.6 8.86687 li
329.298 9.00688 328.986 9.11187 328.664 9.18188 cv
328.343 9.25313 328 9.28875 327.636 9.28875 cv
326.648 9.28875 325.862 8.97812 325.28 8.35687 cv
324.698 7.73562 324.408 6.8975 324.408 5.8425 cv
324.408 4.7725 324.701 3.93125 325.289 3.31875 cv
325.878 2.705 326.684 2.39812 327.708 2.39812 cv
328.039 2.39812 328.363 2.4325 328.679 2.50125 cv
328.995 2.56875 329.302 2.67062 329.6 2.80687 cv
cp
f
336.01 5.25 mo
336.002 4.66125 335.837 4.19125 335.515 3.84 cv
335.192 3.4875 334.765 3.31125 334.234 3.31125 cv
333.633 3.31125 333.152 3.48125 332.79 3.82125 cv
332.429 4.16125 332.221 4.64 332.166 5.2575 cv
336.01 5.25 li
cp
337.088 5.56687 mo
337.088 6.09375 li
332.13 6.09375 li
332.178 6.83625 332.402 7.40188 332.802 7.79062 cv
333.202 8.17937 333.759 8.37375 334.474 8.37375 cv
334.888 8.37375 335.289 8.32312 335.678 8.22188 cv
336.067 8.12062 336.453 7.96812 336.837 7.76437 cv
336.837 8.78438 li
336.449 8.94812 336.052 9.07312 335.646 9.15938 cv
335.24 9.24562 334.828 9.28875 334.41 9.28875 cv
333.363 9.28875 332.533 8.98438 331.922 8.37562 cv
331.311 7.76563 331.005 6.94062 331.005 5.90062 cv
331.005 4.82687 331.295 3.975 331.875 3.345 cv
332.455 2.71375 333.238 2.39812 334.223 2.39812 cv
335.105 2.39812 335.803 2.6825 336.317 3.25125 cv
336.831 3.81875 337.088 4.59062 337.088 5.56687 cv
cp
f
175.512 13.8068 mo
178.184 13.8068 li
179.166 13.8068 179.907 14.0286 180.408 14.4724 cv
180.911 14.9161 181.162 15.5655 181.162 16.4205 cv
181.162 17.2843 180.911 17.9368 180.408 18.378 cv
179.907 18.8193 179.166 19.0399 178.184 19.0399 cv
176.696 19.0399 li
176.696 22.5555 li
175.512 22.5555 li
175.512 13.8068 li
cp
176.696 14.7799 mo
176.696 18.0668 li
178.184 18.0668 li
178.736 18.0668 179.161 17.9243 179.461 17.6393 cv
179.762 17.3543 179.913 16.948 179.913 16.4205 cv
179.913 15.8968 179.762 15.4924 179.461 15.2074 cv
179.161 14.9224 178.736 14.7799 178.184 14.7799 cv
176.696 14.7799 li
cp
f
182.381 19.9661 mo
182.381 15.993 li
183.459 15.993 li
183.459 19.9249 li
183.459 20.5461 183.58 21.0124 183.821 21.3236 cv
184.064 21.6336 184.428 21.7886 184.913 21.7886 cv
185.494 21.7886 185.953 21.603 186.291 21.2318 cv
186.629 20.8605 186.799 20.3542 186.799 19.713 cv
186.799 15.993 li
187.877 15.993 li
187.877 22.5555 li
186.799 22.5555 li
186.799 21.5468 li
186.538 21.9455 186.234 22.2418 185.888 22.4355 cv
185.543 22.6293 185.141 22.7261 184.684 22.7261 cv
183.93 22.7261 183.358 22.4918 182.966 22.023 cv
182.576 21.5543 182.381 20.8686 182.381 19.9661 cv
cp
f
191.14 16.9886 mo
191.367 16.5986 191.654 16.3093 191.999 16.1205 cv
192.345 15.9305 192.758 15.8355 193.238 15.8355 cv
194.036 15.8355 194.683 16.1518 195.181 16.7843 cv
195.679 17.4167 195.929 18.2486 195.929 19.2799 cv
195.929 20.3111 195.679 21.1436 195.181 21.7774 cv
194.683 22.4099 194.036 22.7261 193.238 22.7261 cv
192.758 22.7261 192.345 22.6311 191.999 22.4411 cv
191.654 22.2511 191.367 21.9611 191.14 21.5711 cv
191.14 22.5555 li
190.056 22.5555 li
190.056 13.4374 li
191.14 13.4374 li
191.14 16.9886 li
cp
194.809 19.2799 mo
194.809 18.4874 194.646 17.8655 194.32 17.4143 cv
193.994 16.963 193.546 16.7374 192.976 16.7374 cv
192.404 16.7374 191.956 16.963 191.629 17.4143 cv
191.303 17.8655 191.14 18.4874 191.14 19.2799 cv
191.14 20.0724 191.303 20.6943 191.629 21.1455 cv
191.956 21.5968 192.404 21.8224 192.976 21.8224 cv
193.546 21.8224 193.994 21.5968 194.32 21.1455 cv
194.646 20.6943 194.809 20.0724 194.809 19.2799 cv
cp
f
197.715 13.4374 mo
198.793 13.4374 li
198.793 22.5555 li
197.715 22.5555 li
197.715 13.4374 li
cp
f
201.049 13.4374 mo
202.127 13.4374 li
202.127 14.8043 li
201.049 14.8043 li
201.049 13.4374 li
cp
201.049 15.993 mo
202.127 15.993 li
202.127 22.5555 li
201.049 22.5555 li
201.049 15.993 li
cp
f
209.106 16.2443 mo
209.106 17.253 li
208.801 17.0843 208.495 16.958 208.189 16.8743 cv
207.883 16.7905 207.573 16.7486 207.261 16.7486 cv
206.561 16.7486 206.017 16.9705 205.629 17.4143 cv
205.243 17.8568 205.05 18.4786 205.05 19.2799 cv
205.05 20.0811 205.243 20.7036 205.629 21.1474 cv
206.017 21.5899 206.561 21.8111 207.261 21.8111 cv
207.573 21.8111 207.883 21.7693 208.189 21.6855 cv
208.495 21.6018 208.801 21.4755 209.106 21.3068 cv
209.106 22.3043 li
208.804 22.4443 208.493 22.5493 208.17 22.6193 cv
207.849 22.6905 207.506 22.7261 207.143 22.7261 cv
206.154 22.7261 205.368 22.4155 204.786 21.7943 cv
204.204 21.173 203.914 20.3349 203.914 19.2799 cv
203.914 18.2099 204.208 17.3686 204.795 16.7561 cv
205.384 16.1424 206.19 15.8355 207.214 15.8355 cv
207.545 15.8355 207.869 15.8699 208.185 15.9386 cv
208.501 16.0061 208.808 16.108 209.106 16.2443 cv
cp
f
216.114 18.8111 mo
216.114 22.5555 li
215.036 22.5555 li
215.036 21.5599 li
214.79 21.9574 214.483 22.2511 214.115 22.4411 cv
213.748 22.6311 213.298 22.7261 212.767 22.7261 cv
212.096 22.7261 211.561 22.5374 211.164 22.1599 cv
210.768 21.7824 210.57 21.2774 210.57 20.6449 cv
210.57 19.9074 210.816 19.3511 211.31 18.9761 cv
211.805 18.6011 212.543 18.4136 213.523 18.4136 cv
215.036 18.4136 li
215.036 18.3068 li
215.036 17.8105 214.873 17.4268 214.546 17.1555 cv
214.22 16.8843 213.762 16.7486 213.172 16.7486 cv
212.797 16.7486 212.431 16.7936 212.075 16.8836 cv
211.72 16.9736 211.379 17.1086 211.051 17.2886 cv
211.051 16.2911 li
211.445 16.1386 211.828 16.0249 212.199 15.9499 cv
212.57 15.8736 212.931 15.8355 213.283 15.8355 cv
214.233 15.8355 214.942 16.0818 215.411 16.5743 cv
215.88 17.0655 216.114 17.8111 216.114 18.8111 cv
cp
213.963 19.2574 mo
213.092 19.2574 212.488 19.3568 212.152 19.5555 cv
211.816 19.7543 211.648 20.0943 211.648 20.5755 cv
211.648 20.958 211.774 21.2618 212.026 21.4868 cv
212.279 21.7105 212.621 21.8224 213.054 21.8224 cv
213.653 21.8224 214.133 21.6105 214.494 21.1868 cv
214.855 20.763 215.036 20.1999 215.036 19.4974 cv
215.036 19.2574 li
213.963 19.2574 li
cp
f
219.401 14.1293 mo
219.401 15.993 li
221.621 15.993 li
221.621 16.8311 li
219.401 16.8311 li
219.401 20.3936 li
219.401 20.9286 219.474 21.2724 219.62 21.4249 cv
219.766 21.5774 220.064 21.6536 220.514 21.6536 cv
221.621 21.6536 li
221.621 22.5555 li
220.514 22.5555 li
219.682 22.5555 219.107 22.4005 218.791 22.0905 cv
218.475 21.7793 218.317 21.2136 218.317 20.3936 cv
218.317 16.8311 li
217.526 16.8311 li
217.526 15.993 li
218.317 15.993 li
218.317 14.1293 li
219.401 14.1293 li
cp
f
223.039 13.4374 mo
224.117 13.4374 li
224.117 14.8043 li
223.039 14.8043 li
223.039 13.4374 li
cp
223.039 15.993 mo
224.117 15.993 li
224.117 22.5555 li
223.039 22.5555 li
223.039 15.993 li
cp
f
228.915 15.8355 mo
229.853 15.8355 230.589 16.1405 231.124 16.7505 cv
231.66 17.3593 231.928 18.2024 231.928 19.2799 cv
231.928 20.3536 231.66 21.1968 231.124 21.8093 cv
230.589 22.4205 229.853 22.7261 228.915 22.7261 cv
227.974 22.7261 227.237 22.4205 226.703 21.8093 cv
226.17 21.1968 225.904 20.3536 225.904 19.2799 cv
225.904 18.2024 226.17 17.3593 226.703 16.7505 cv
227.237 16.1405 227.974 15.8355 228.915 15.8355 cv
cp
228.915 16.7486 mo
228.338 16.7486 227.881 16.9743 227.545 17.4255 cv
227.208 17.8768 227.04 18.4949 227.04 19.2799 cv
227.04 20.0649 227.207 20.683 227.541 21.1343 cv
227.876 21.5855 228.334 21.8111 228.915 21.8111 cv
229.49 21.8111 229.945 21.5849 230.28 21.1324 cv
230.617 20.6786 230.785 20.0611 230.785 19.2799 cv
230.785 18.5024 230.617 17.8861 230.28 17.4311 cv
229.945 16.9761 229.49 16.7486 228.915 16.7486 cv
cp
f
239.171 18.5936 mo
239.171 22.5555 li
238.093 22.5555 li
238.093 18.6293 li
238.093 18.008 237.971 17.5436 237.729 17.2361 cv
237.486 16.9274 237.123 16.773 236.64 16.773 cv
236.057 16.773 235.598 16.9586 235.261 17.3299 cv
234.925 17.6999 234.757 18.2055 234.757 18.8468 cv
234.757 22.5555 li
233.673 22.5555 li
233.673 15.993 li
234.757 15.993 li
234.757 17.013 li
235.016 16.618 235.32 16.323 235.668 16.128 cv
236.018 15.933 236.422 15.8355 236.88 15.8355 cv
237.633 15.8355 238.203 16.0686 238.59 16.5349 cv
238.977 17.0011 239.171 17.6874 239.171 18.5936 cv
cp
f
245.503 16.1861 mo
245.503 17.2061 li
245.199 17.0499 244.883 16.933 244.554 16.8555 cv
244.227 16.7768 243.887 16.7374 243.534 16.7374 cv
242.999 16.7374 242.598 16.8193 242.331 16.983 cv
242.063 17.1468 241.929 17.393 241.929 17.7218 cv
241.929 17.9718 242.025 18.168 242.216 18.3105 cv
242.408 18.453 242.793 18.5886 243.371 18.7174 cv
243.741 18.7999 li
244.506 18.9636 245.049 19.1949 245.372 19.4936 cv
245.694 19.7924 245.856 20.2093 245.856 20.7443 cv
245.856 21.3542 245.614 21.8374 245.132 22.1936 cv
244.649 22.5486 243.986 22.7261 243.143 22.7261 cv
242.791 22.7261 242.425 22.6918 242.044 22.623 cv
241.663 22.5543 241.261 22.4518 240.84 22.3155 cv
240.84 21.2018 li
241.239 21.4093 241.631 21.5649 242.018 21.6686 cv
242.404 21.7711 242.787 21.8224 243.167 21.8224 cv
243.674 21.8224 244.064 21.7355 244.337 21.5618 cv
244.611 21.388 244.748 21.143 244.748 20.8268 cv
244.748 20.5343 244.649 20.3099 244.451 20.1536 cv
244.255 19.9974 243.823 19.8468 243.154 19.7018 cv
242.779 19.6136 li
242.111 19.4736 241.629 19.258 241.331 18.9668 cv
241.035 18.6755 240.887 18.2761 240.887 17.7686 cv
240.887 17.1511 241.106 16.6749 241.543 16.3399 cv
241.981 16.0036 242.602 15.8355 243.407 15.8355 cv
243.804 15.8355 244.179 15.8649 244.53 15.9236 cv
244.883 15.9811 245.207 16.0686 245.503 16.1861 cv
cp
f
252.429 16.9886 mo
252.656 16.5986 252.943 16.3093 253.288 16.1205 cv
253.634 15.9305 254.047 15.8355 254.527 15.8355 cv
255.325 15.8355 255.972 16.1518 256.47 16.7843 cv
256.968 17.4167 257.218 18.2486 257.218 19.2799 cv
257.218 20.3111 256.968 21.1436 256.47 21.7774 cv
255.972 22.4099 255.325 22.7261 254.527 22.7261 cv
254.047 22.7261 253.634 22.6311 253.288 22.4411 cv
252.943 22.2511 252.656 21.9611 252.429 21.5711 cv
252.429 22.5555 li
251.345 22.5555 li
251.345 13.4374 li
252.429 13.4374 li
252.429 16.9886 li
cp
256.098 19.2799 mo
256.098 18.4874 255.935 17.8655 255.609 17.4143 cv
255.283 16.963 254.835 16.7374 254.265 16.7374 cv
253.693 16.7374 253.245 16.963 252.918 17.4143 cv
252.592 17.8655 252.429 18.4874 252.429 19.2799 cv
252.429 20.0724 252.592 20.6943 252.918 21.1455 cv
253.245 21.5968 253.693 21.8224 254.265 21.8224 cv
254.835 21.8224 255.283 21.5968 255.609 21.1455 cv
255.935 20.6943 256.098 20.0724 256.098 19.2799 cv
cp
f
261.734 23.1649 mo
261.43 23.9461 261.133 24.4555 260.843 24.693 cv
260.554 24.9318 260.168 25.0511 259.684 25.0511 cv
258.822 25.0511 li
258.822 24.1493 li
259.456 24.1493 li
259.752 24.1493 259.982 24.0786 260.146 23.9374 cv
260.311 23.7974 260.492 23.4655 260.691 22.9418 cv
260.884 22.4505 li
258.231 15.993 li
259.373 15.993 li
261.424 21.1249 li
263.476 15.993 li
264.617 15.993 li
261.734 23.1649 li
cp
f
268.765 13.8068 mo
270.038 13.8068 li
272.462 17.4049 li
274.872 13.8068 li
276.143 13.8068 li
273.049 18.3893 li
273.049 22.5555 li
271.86 22.5555 li
271.86 18.3893 li
268.765 13.8068 li
cp
f
280.195 18.6874 mo
280.188 18.0986 280.023 17.6286 279.7 17.2774 cv
279.378 16.9249 278.951 16.7486 278.42 16.7486 cv
277.819 16.7486 277.337 16.9186 276.976 17.2586 cv
276.615 17.5986 276.407 18.0774 276.352 18.6949 cv
280.195 18.6874 li
cp
281.274 19.0043 mo
281.274 19.5311 li
276.316 19.5311 li
276.364 20.2736 276.587 20.8393 276.987 21.228 cv
277.387 21.6168 277.945 21.8111 278.66 21.8111 cv
279.074 21.8111 279.475 21.7605 279.864 21.6593 cv
280.252 21.558 280.639 21.4055 281.022 21.2018 cv
281.022 22.2218 li
280.635 22.3855 280.238 22.5105 279.832 22.5968 cv
279.425 22.683 279.014 22.7261 278.596 22.7261 cv
277.549 22.7261 276.719 22.4218 276.108 21.813 cv
275.497 21.203 275.191 20.378 275.191 19.338 cv
275.191 18.2643 275.481 17.4124 276.061 16.7824 cv
276.641 16.1511 277.424 15.8355 278.409 15.8355 cv
279.291 15.8355 279.989 16.1199 280.503 16.6886 cv
281.017 17.2561 281.274 18.028 281.274 19.0043 cv
cp
f
288.176 18.8111 mo
288.176 22.5555 li
287.098 22.5555 li
287.098 21.5599 li
286.852 21.9574 286.545 22.2511 286.178 22.4411 cv
285.81 22.6311 285.361 22.7261 284.829 22.7261 cv
284.158 22.7261 283.624 22.5374 283.226 22.1599 cv
282.83 21.7824 282.632 21.2774 282.632 20.6449 cv
282.632 19.9074 282.879 19.3511 283.373 18.9761 cv
283.868 18.6011 284.605 18.4136 285.585 18.4136 cv
287.098 18.4136 li
287.098 18.3068 li
287.098 17.8105 286.935 17.4268 286.609 17.1555 cv
286.283 16.8843 285.824 16.7486 285.234 16.7486 cv
284.859 16.7486 284.494 16.7936 284.138 16.8836 cv
283.783 16.9736 283.441 17.1086 283.114 17.2886 cv
283.114 16.2911 li
283.508 16.1386 283.89 16.0249 284.261 15.9499 cv
284.633 15.8736 284.994 15.8355 285.345 15.8355 cv
286.295 15.8355 287.004 16.0818 287.473 16.5743 cv
287.942 17.0655 288.176 17.8111 288.176 18.8111 cv
cp
286.026 19.2574 mo
285.154 19.2574 284.551 19.3568 284.214 19.5555 cv
283.878 19.7543 283.71 20.0943 283.71 20.5755 cv
283.71 20.958 283.836 21.2618 284.089 21.4868 cv
284.341 21.7105 284.684 21.8224 285.116 21.8224 cv
285.715 21.8224 286.195 21.6105 286.556 21.1868 cv
286.918 20.763 287.098 20.1999 287.098 19.4974 cv
287.098 19.2574 li
286.026 19.2574 li
cp
f
294.199 16.9999 mo
294.077 16.9299 293.945 16.8786 293.803 16.8461 cv
293.66 16.8124 293.504 16.7955 293.332 16.7955 cv
292.722 16.7955 292.254 16.9936 291.928 17.3899 cv
291.602 17.7861 291.439 18.3555 291.439 19.098 cv
291.439 22.5555 li
290.355 22.5555 li
290.355 15.993 li
291.439 15.993 li
291.439 17.013 li
291.666 16.6143 291.961 16.3186 292.324 16.1261 cv
292.687 15.9324 293.129 15.8355 293.649 15.8355 cv
293.723 15.8355 293.805 15.8405 293.895 15.8505 cv
293.985 15.8593 294.084 15.8736 294.193 15.8936 cv
294.199 16.9999 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 24.0%%AI8_CreatorVersion: 26.2.1%%For: (kyle Hamilton) ()%%Title: (allNesyByYear.eps)%%CreationDate: 6/5/22 9:36 AM%%Canvassize: 16383%AI5_FileFormat 14.0%AI24_DataStream%.((`,!*H=t"(!`NA.9uL6q!IS!+;D7X%q'DNr_[T_Z2+KTIlb:Od&Il%#P2g!!",Q!!!!%lO:B7K+4\\i_gEtVlZj;a6ej@E*G'?%9gc3a5sONkE"")N!:9`^!$I#E>abN@Z<G6Wd!f6OluHX>J<r&/E.8@4pjICf\:D2oCr2'.Q`dl(Yq)$W/GPcIDC_<dAD*0s[&g-9%=]X"X/@W8pQFg7Z]aR&BQ=V.uZg7m@kB%9NC=%"[fB&k0n7Gg`@GWQYhCQk>l_WF'[u(Po^7EgCMJd5)SbX`fn7EPra7:ckZ!,i'%Rq4JD^@Qk8L<6XCjgA]df:#jG3I]5UXR-%mA2;A<d9^U#akk`ebq)rs:MsaM)^+iX1Fn!Ek,Z#-KjU7kD0^&3\_u(f[IW\'B!8aN%H*Q%\o9S^b<\@HSMmMSe`EmBSMI!P>CO%f(>1I;iL0ZPnJ1I*npg(9\(S8H_%EC#\Q<SVMZb"AUjk4LY0\W;`g8-r9QKLKI4BXp4%])ghlIUt'+(=9cQgr:n3Y-m?CP6K%4>JDild'PmXEfKd'!M1i-[VB6;"kRE+L0K_1>B;<d]rlUG)kpGX&QL?6$1"8uD@OA;N"l_.%`e)aG2e1C>2]]gh\?^uDK,T2QRB2t8ef;<oliqEAR4Mshi)[:Lh\c<DgY%"_ZF>]!^@.n.p`7<BT^7(^pr<<lW1OSj*H]Y_DI;'W%G\d'o<)1b)J1Hgj)-T$*^/rUKDD?:8q$&F[29.9"o*l`\9T0+m'02Z3Z:#<::KZ"WO9diPNZq'@mlGWTK4-cS_(j.3#]O!eV09Bd%E%HJ\7l^da>YI0/n2nh")^(GX1)C]&-O5)Or<Gns],Cfcbe1j`qf:kN!*:Mn@b*enAM!h4?PraYX[qT#_FFKLkuSRLH_G5AVGC:%%C?mmG"fPeQHIKgj+ig+(qeBn"\Ac6s2_uj4B<Q)k?/#e1b/s[V?3f_/0WVl=2a`\jA4_Li3$.S70dZJ"(mW3J[)_1:VW[e#PL\7,%)=tKgqF(5'g;."2Xn\%#>kFrf`Yc5T/$!IU@!5fXc>)Ic.$";=>g-_(6gt8O/ur8nQ]#itQYSCtZ#!ueQ](*7oIRMSkr4%,0*'d/%`(A=X"fO<Fom4LC4\g_b*0R_253STlj^Q)'"L[nMeTtkoll\h/_HqEV25k;1N"s78\VEBX`S%BXeh`-Jg,Z+%M,l-bT5J:a/CWH+%[mjNE!af(\X3Fss0Y;?U%n]p3)Rso?Ms5H$ks=X+?\8>\YWK<L%C^CA-nAqSkLXJ,#BMGS=m_k-4m9caDri7Zf]uW4Y1d'0$Q?MU%As[[RcCjpSH+*-gb41G!gm[?Ig^d]\S/fl(8gs=7^."4G#Ka50ge_65>ZV1h>#r.JLb73cF?_1*S/cp^*+O&Z$)!R*oUBkq+11/g%?IeY8k]$IN0-,*HK@Ja?0hCGQCA<cK]N$B7\o"j_3s1"km[r4p@V0Uca/_1kI"NJ*!!3;=?EXb&,kkgE`Nb3U'1_M"FmB3]XE?\`%J0b$E7B^cooucJ.!#P%Y:[NVb\kQIu4DSY$&)[`OR)LpgA#3l65eF=%qp'&/hK!,-=9cgMVKP1F)kasH#<fNs;D`blpbh_(>cg"E%a!1hI29-2-X2FAkFKelQqQ4DfkFgqJL(,!Vqq_i;=M;"$QH=9=8c6/jc*9o"'@=Dod%C2MB5cV7'X[qM0)/cDn9ZI*JDX4E:rjS"%Dg9V,GHb9.TX3ca9Y7XKeXC'T\,LcX*'jJJ==o9.2)bZF2&lVPE4+h_pRgVU=dK!g^]OQ:!75J/h<U[`F$E\u2V7"m$aWqF)OAVN%e7<EH(];SOa)/es(Ckiq7=g3.f,T,o*7&4Ob73slXZNl'cQUmt/E+_Pe8?dkCUipE4RC?FfaD;to6c"d]eK]ug9#.kGHU8?iO32t%2A;/h4PWu=_.6(;bUjgL2=!uOeD;0t03,Gg2$J<QfCXuhE&JJEgBNa?*4N(V=j(Nql=8amdr2HR^9'gBoKh@sU]K@V"+DF2A-T[W%!&3VhJcQrq#(-f/1uR+[g,oJO[A6+OgLe6,R65g\ho6MCZW?Z,'W5,8CL(gMOOtNT(]Z:<q)6rl"]0^6q(*JEn2!nNEXVaQ>&Z'Z%B//]&Ds]?Jh%oq"@!0X9eLoY"3&UWBR(7oTR2b)'cn3n89a3:tojV=1\col^NpF0N%Ka:#bE_>FA\Be.SR8QoetVhbf(03K>7S;s%3O1UKal4-oJC1cM176n/DHUjO#Ol_EXLFd*cA[3`nS/iT7uh.u!*Gf:Z-,iT"3&'H>M6$<hptF/'JK5m[52LS^=l^90i6@N[pZT]%[+k]N*7l`C1iQN9lV)-"$a.RYG\5q/<KhE#Uh4tiD[jH;#ECYj\Q6>7="K8B%UI!?C_id_h52c+h0WAX;G:.i9\6uJ0jT(Idkr.A%m_]?<H[>8Q/BP5gn;s\$\uo]_3=;cr\uqkjWd@Z724^E#W/g.&NorCu]oeuV+A^V>Hd[-,ahG6u2j.-%\Ms!UaO?FHHh1e4aV8"3%d<Eq4hR_n*PC?KOFB$;#oI3=W:Qh=ITg-.MNh\Z'D,bknOsfMCZ'4(CUHdA\qiIS";b-:>H$Xs\?M_@/r.c[[NpFi;](0qhf6.$7%hqR@C8=!Y0K&jM+-^^nu%DDKLe;'e0a74rN3r,QFj@T&!-27+[H1lCZT(C7<pE>p,lT.>P&I$cd,h$aOWt4q/qJ]_A^GjKVFPRm3%;_VM+&I%p[4UV#sjPI)uhU6NUpP+:c\tWWEP,'I$ndKfTNoT!9E>1i+5pp@?hQQ5pm]CiA4Nk'XP4'u.f@BaP,Z!l#^UK>1=+>D.%2m8,'8tP+CNrE"uF^9FijPIQ<^@WHM]gonYm,!rhhU7NK6%Ab!8`)Z<L?V=%kr@Y7qsJn,'6INjR'(c<H&DT?*60cSJ!c60FC!F;%?-tN8aV3b"\t2#i-XjTH4rr*l>t;Z4jQXR)9h-:k@2e\n*PljR)ottK<(3CUA'!,ADs?K'F9Hm#mLB-ZRZ=0;iTP\LH68/rD]qp.%dJIlVa)pt4kfM;/5"s">9n0a;kMCUM6h3pkFPN>racej=F^<+1?.1MKdrA[81EAt]T'K#FF:CMMo\nXd?WYNQQ)Em'pgh7fP9`__%O!>1Q]l=VE^2r0.hY+CeF^=b8s5(n=DsP!;AVm/I>*eK3U1K1U.(Znf;06*eZ7Jjp?-@8,AVm../'E'@f6(BNFVR>B'Lbk5`H;na%;++8Y'ZIB5gU`:%hYu\c?.\cLZ<Z#]7<)W5?WRs?+%9'!s1O[DMZ,8d.(ZQmq*0b&jo8mpQN)kP=mg-47IbjA'ug3r;AB-I78[=A%s8PU:s8Oaqs8NnSs8V!2s8T:g\oM,ClcT%[6ucKms*n<7?WRs'*(<_ho<Lb]c:&=63WC0i3FCCDj;^V3P4QAPAQa%+MIjp*s(/aD%U<#?PMB_4p.>jXRU*t']^F8Me?2s*#/H=m<'`[@os8Pr\F3_slF3[4:F3agKSFaGADB6N'+Maf^aO'ZFE3sbWm_+_bOrTRt%ihma%KibT!%.qYdS7g35LY]OZAZH%t)0U!N94)^Hp<H75%nJ=5SekW"bbdjkP9n:=:P.FR^MaOr&SsGbp[ufNpXO<X#QXT6Ke6AjC;DA"%gq&2P\!ESaZ%q6;'Lb7MU@3a*Im<..-O6>8QC[Al*0B76(c^;P'SBdphP<+j!55.VV;V-FB/`)uoqlKVXl1*k_=,R<UrH0UD?)8#%<n!-4#9:L$9bu3\VflEg$gOj1Q+="V;tbd[Q*m\(h$/C6e:#Rn-3a7g\MnNdT^*C(c*"/1i>`!t^u5cJ5P9E$_TKEuFfg0jcG0G\%pC6&@,nJ$o,fB/!s+>q8/BJBfU]6s5TGS0Qk9]?fn":I[&,+!c%!a3fmRL,*]i+2+g$?<_m"<Y0\Td@?-I5rD&'N6gO-b=B960qU%)2=m,4gBVA52ZMJ*LkfO*7'KU*5?VXfC\r\4TpU-n)EdZ0DcT<SX1B>P[[aXTa+#k"?B#)TG[CMK4Q]+dGojU/AVr=7BlZo"@nL`%*1'P-h0\/a#Q983\op=+X.<6gA*)M#^u<"23gBK+F)PRA#EIJCc"`]5m&`u[^/rUn`E96Y1&sQjPI[MU>Jom0bm`Mg!-I.lk?&Lp%2!qU.R8_#kXN$.H]slG]d>-g*HPh($oRenEq%lIR'LgFp3B.#Z&M1aP%*,Y)]/L3d?B-<LJt-o-]go]+Qa6>iP($5JE%hdAJO;[b%H,4D,Y/QU<!sk?HJWW4IaIt[#4Y&Jm`5hP1/4k?JhDCl0l?fp*@EP;5X@/u^Zo8jaJj>Vi+?677ELLD,d,KjBgj__"8]:r4\AbdJ%F,5:hoA25F`e)"E"dXKjmq+ZBQ*@aC"LN2J#qT?mdSLJY,(/K!O(";-GcKK12`Wc=kQ=*nG4$!=oFX[@Hh36J,HfBi9fpV"3VGOC%.Y^^ihI*&_!r#'?0-$P`%Wj6n-U-J/1TB@jPN^%Le!QE#<:_Z/TfikQmD,u==!KHW!sr/[$kkc8%386a)!U(!$I1Gekrrtb@hucr%*>JL:HH($$3M[^&?_5S!F',?V:?Ieq8+37ugUm25OD]!2C>rr=!JP>2eCD+n"U7S5b1P)-jKs#BSW/]1N76%nZ+$"MTB%5##?"-j%%b\f/*ul5c83&K6N+u8N,4gc).1/"6Rg>CU#[f$RCLVZjY]`6KCE">8XKKl]3V++j,8XE//VWp5@[N1scmQRe)H6mk&.#[(3>:^F%k7[6R1aokXF9KAgb#)%2bS$@MK@NCg7RV875@1+R&AYkJ\fDsUUkJ&!8lJfsE,VEdI[ud\C=Np'=dI:C;s"H&OLh%kE/+r1)&-C8%Y.@q!'N?`,"_,BI_7at*-l9b\\`dn.,#D3@jb/'m1W@9WHfP3cU]Y>!iLCkh0D^lWgrW*@YTQq;$0fcoV4lR2/1M"i#RGsDRS,Vf%`Yd#s'lqHE"bS3K5pl_h^Gi[`i^gQ^_>XVi8)Ym&K"<,R$-pd.GGQn0;kV(]dZmRB:uji%hpE#9IAZo:Y@3R]bB+j+<h`,DW^=&X%]lJR+/\hP_?9.7MmF04b4)6^TkS(:1e^H1pSN3e8o3!fFjfW2F/,IKX-*D#28Uq1X7@tKY='"s5]f<+WPCc\5oRYi-e]qt=DW)B6%VnQ6X`8Hd3Ri-b)[1tM[/lK%>j@Nt8qqOkY.jJ52W^tk#/6j"7WmleK(H1'l!p0h*O$:MqfA=T)+oGidVN+J]7%$<UQIVaBZ]BWI%B$Nr#RG2L');.jjA?B*%a2TnM`EKQ7)1tmpEl"h5I0qGTN``ME"@`L."HH=AI4.eI43oW!9JlW+YQrtZ0J954YLMO;Gu_TYY:jn7%>W'rCj'pCahrT-V13YJRiOC&?J?FJh1i(@+eS,c2(h0PJ>[eI7Va%8rM/!LAnuNVuMBckm<ZI._Z0H9X[J%M#%(%7A,gr,^'gp0E%#uIX(LJ_'R!\..iN5S>J4]+eMTobTJ/]JUg)W3NPK%P[R;$MnRQqo)O=ueF#e(tSkM*%-rb%)E82eq>S&;A52TiqStf=qkJBNHRs%.+Hp8lsP>J+rH\W_"G.k!9jebV,c`DQ:?M,/$Uk7([7(G2Pbp<73nk0CE='G3A:fN?KZ!?i+Jc$'rVA(-tC+LU(0JCU=]Q)LH:UE%5fdpgR"PejefqJAeM#8riS]4h+s7NJR0Xd'<btU)Q02XATnE5j/0W9^'DY1]B.Wfi&*J<HO$`2<S\=DY\`j[bQ0d"*-a$CCl4g..%MGuQh(?RW5QqH*eC'9-JkGWLo=>Se\2$qJ`RR0!^&?+TfJ\B&u_`]=M)?5FV)0GG<)%kI8R0!F%%'qo*+3`Rg4pAceAhnq:?N]Xm%[]\d;64H141r1MY0jPC8Ee8j+QEK/7(6,LH/2LKG<)=>rW)B9bS/(Vs@T6[>`Je9+0G5ZiF&E?k.61s?F>Pnng*_&^SOQIb;.Ln^%+USIpde.4[L17;t/RdOHV$fbK[5;+#lH,G\Wa\7heCQg1l6i?idh=W#V4P0$UpO_iVQCcYOG_\U$anLW#;n787/oU6TmQ*-ZTK\@%'@^RTnmsSWFim9A9E6eu[>9F`20t8-=/i$f01#K]fEoNfEbs<iE'*TP+T?UX5'HNhb#Y)Y.:[3>*/qOeS7[`uM4onuj<24C\[O:L%O>8>EMoIl];M[>?=GHW=M[[-56n&BLenQ=bf#!*5V+:]_)K=(,'IL+#W3BYLJ[YWE#_[m7(Du\NINU2:ecTtc5n=lrVN7!2_+-&g%(`n#s+e[F1_q^E-N=[WNNj(PaS^P,h0EaqW4;hC(.0*:.V(=Z$9$YEKV3c!*AV&q5P+%.d5_9[A6HU""!'/bD)W\GDdGlFB>@YmH%U60O`Z/a]lQD,?fd'OW#V331J'!ddiqKP9bkF8Os7Fasa10H0HEP\<%r7,2/MTlqE2i=ma@2tP@]ngeSD>5qY)bM_b)\s]\d$60?%@2+6B*EmsNhY:\N!6H%Si(FL?l!#JZkD*"[qGdl!r9u(6Hpe!&oAdl.H.H2]HjPL5]M+;Zh]X-!T.b&.&VgG^)""Bla#MR)]WH:C%iWJG;6IYhg0T!s?Ysnr[iU<lC."-qsJQ#eJg4g1\.tg)&3"lV46?-[GLbQ>&PU/0UrS"OP:m;mpKnU<<XZW2p-h&^@:Bk$6*[PoB%4bE`(jGaeHMmp/mL.OM\l6(BjJk>.qJQJrSo6@N0An4ds^*saR@[HH0(st0Qj(p]p7VD-Y,6i`+NDXLLA#NbR@XQJ#`$j!6%HC`.%PsGs?";mTMl5>dP.`'clkTSHH7qN+>9bZ5u-=oZ;/7iKU(K[HhMElH/WL3>6l(q3u"KAn;&=hV0_UQ_/$^;Ts(2\H_/6p)j/7K_J%ZCn$AED[i<G`.TJmR9[hBSsJl5j#,WE3W"i67jHO/*:gcF@p$X*fZ%*9FPN4E'!ViYhTOO6+BVRKZGOH"@fi,'!0Yp8fU#K-t/uY%-:)sZC8*$_+:3g*M@!2Fne)q\6mVIAOi2!&We-W^\ru8DA7.8/6;G0<7)Up%&?X9UJcOiS"CZUu*XM3[!YM6SD'0`AqLBD3)RY2V%9&Tk<ke7PbbM0plm0jsWN!&8Da%2W973o0o]d:s*EZjQca5K<$_1Oj3G_]$EL,a^#M`]-b/pVM;WIc_9"g(LWa\\I+'1uKgNM!>'%>V[8LJ[,+4ife4#1]k9NCN77oVJd-BenpA#FP(qme/mE=fNL2_BN<7V]4>.NJqBaTE($>?^cK,j!CAS)L2bXR%#sjW%#CLL##;n"%#$T/K)J1-F1_a19g]1h]S`,8X&-c3H6SQ0u"'pGN*k8G`Jr;91bW[\h0XmR\5`j/f!MLp+$4TN,VuV!7S,sro_A$&MTbKC#9j/A^%n43nhLJ"4)[kk>:rBj[09>;8kihoWjX^4Es('+pL_u(Yl`"8Xim&`TpAAUnjbQtRRkU$#H_aU6nfntmN4t-P!G+&\tQBqk";&pjr%*LVZ_Am-.jL18"2A<g)I!+&JPiT#K_"BoN*&-Q0i8MIu@#9eZFO9CK:+=-;jQKb%2BJZ0Og2qt_,A9RQO^JL4TeJJ<1)%2`W3mA#%5k0f%UQ&A4NqG:b7k6T3*/,JD>i!CR%V)qPS3\L0\;s.eiYWh0`L16W'K:b;->m`U88<ZR))6sm'\#NULr;Y#R&PJCpKVjNMKn&u%MCtX^;S0neB<?14$M((2RH.*$,W*fh)<QRoV$[>RQS'6kY3W<FHU1%3DIYCqDB'Z>gtlc]lbT:)OFs<YCWZO6K]M8p+$!;O+`\?L%6cb+Xg?/leiH+EXGHSiOE=VQR5#0L-H!Go8C2bA]LqudkSW<:_QN\1T<!>c7M^19J3tU3(_@>SAENjG(X3MYD:!+l'NmiQp*B9)>%G(\hb!TZm>90-3c,S&aCS6-.=a)S![2h8\`MpelgBI&Rh,FfMV!lo:cD2E3O3ia5*N`(lfTX5![N:dpq7TU;6!<^P>As.UA_j(kI%#'m?_W2+4QrFB2?STHQgp,QUkj)\Bb"HFETi)I_-?=D+AGL>;-Y')4_I$mA\fc-[6Wh]cgZ8(SNBV<gS-sb+:K<Nc6Ks!NnTh[9\%_9R3!@Kd[*A?rcNe1j;%WFqZ3j50(PlU>4gj)[74n2T$3a'C7$Dnl?Rc1"0HMG_!J'qn2[-DP_o$KOWEXG\KE.]^?gHc<=T(-Ans%[M^c,^uR)p,`J$62Go=.$+h>!#8Ik-dgefnH&93D(]Y=8F`N;F4Juhb1h""o0mthJktFQB"i52X%EEH!#N:Y^*/D*J3,Z/A3,ZOg%;B<et)a],9rbNF-/R0G&`sik>@).<+Flj,+9cBPe#>,Gepj+Nd.%(P8@DDk=(TFos^l\E:YG<5Z(!^]8+8'E9FAiaRPe^^0WMd\S%+n:JI\o*r@3]W1<neVn^pWcqlYS&p/V8?b_5TBba\^5I7MBGJmc7>9SKI+ZYD1ZB"e4,6P]BH9g#01_*_rITPr.4&J<B6*"1^oE)%^*^9k%tWb#H,4J?j7EoLhEVVUa)S6`%XABm30#4/30'2PLHJ]Lec87HM*/jDGuuOIQ&7hG*2fI#7$<Yl3"C+>?-.aG#oq!.2TKgC%f4d?5*63'*J`F7Hl-'ddE?$oFULHQ1DZi^bis:GEa/(6h`sik>5fU$`'ili%a8r0^qNeO"j,eL6i.9p`RH$,bO""UET*]&bmJ84[%RkO^@O,bi=="/Q&i>E?di5))--ZM=F\*0%E/,J>;L\#Kr_tePZ;;lnm&Y=p;Tq&E+.==uh;7I.A+5^9c.h06$cUI"9p>[6LrV.@a%+?Z[/ZD^O8.LIX4=#ejGEJt$#4*dl`M'+oJ,2b_cIGo,j&hUi,;Z\d?hS8bQ-aG/k9r$+tUl[uZpN`?c1+8jL0aQUCTS-pdLs^*l%&gAa_=&;aRD$nNW5t0ak'PZP9W=/U?&d7/H"H(]DRMjgcWDF4CD)9TM2&]aq)ACFl;Guu3@s+<@"#i2<p*r&OiG3D&Il=f,bj7:s%Tku&7dO<!Ue^i29j.XF;#DC/A.=nbeS/jK>.3hPj6g?,&;!,sr9p;L]mdTBKU$^b%S[h4$-.$F?;L?4\1H&3r90nB%6O?(/*u2ZN%WG6J]mhWsf$oBc&l,lc>_@.jdp4+%UmOjq?V\*@Z9J_?0+0`pn"Qfg,p)/cP#)A!a&O+NeEZWp;Tn'Bj-Y12dlTeY&B#4@!%e?-o%^:1tXnpI&U1&5NL'U$8=W:t@-Ye=g[%a!HS`LP<A>-<Ep&843e3)eiQ!\(*V[5jIZA[>p$K]XckKH5[c/F8.u-aEtki/mY@_7^%J%,)NAM:c=QhgHa8;Snel3nH>8[bp'[Lk!s6^k>.Z3\Wb+5ptcRXYN#6LUpu>96LbLnFlJ8i@t5ppN=i?[:a.Nm\VRk*FGPk3$Ab$5%oAMB)[c&mk%)Z#4$ALL^%a-SF]^iCM=h1;)T^o9O<I#R26/CBiSqfR4d`b4*(-jtl7R83-F3tTTTegP'DE4BX1Eu^1&Z@q9lS1]*%&*B+aC'D7&SZ1ef)P7OK;B:qS@h4'-ZWX/LflBVHk8gOLV2]1WGOt@W;e<BG0l+!3/@6;i4qDcn4Oh?`KYtbn&Hq&=*$c0]cRG/-%*$g\6-1=P`ODq^C-CSX:=qTI&9'@lk@\@%B;Ge.eic7UCZ#Y[Y7=4o.1_c_ZVMNVP?ap7\H>%:4nJ/%SST4Asq2de9K;YG_FN.a%%S@uDT[R61,OWC.:7s#`5Nn9rF\'/N^iU>#HZQq0Zi].GIdN]O2;?3If^/@cVJ5n(aJi"(5*H?gB8ns\M3sp["CC91b.5)FYX*dE_%<NUtRV0kU)q,dNGP7g&.]ced*/4%cHG'"`&+(S6<%DQ:o$k<F!%=Sbc.MlAIUk_8H'KW=/?rO()"7Cc^&\+ptCKJAE!QkZl#mDlM%%jQ]"+bs$9!\\Il6%fFLm$Ce*W<Ae,T$`X&n<J2&8HG+_:kqUc3@.ORp-^_?'B*/rM6u]1_fh/Alr5\Bo][Raa5Rl_Ol`(*4dL[B%Pct.JA!0V2:-J%Os3)J&nRNl"e>nZjo8Vh]ob@O3.*6jteOpeVj<$4uV"RB:cs7q3rUd+JF,Dj<e=>f;-J&2dK@!m5RV>/.,t8qB%gJODr26im.89?8I9Ido5E$8IjM+%s0k?N*NUKu_d[*-3$m;do<_IjiWWc\oQf"K.k*K'd@?0$p<j+qfJb8s$5hf2%:(\t+7\n,LL%[*hdWFNZ393Xh=B-/gQUDjf-,4]4X@+NDAN"Y%m<;dTL!:c=:inX[UD^J<c"\4CJfAk1dQ0",>I-%)%]gXN%me>.8U;,U7sC/V[$%iYj*X2=\'=_L-`j77uK:Ji"cEbdDSZ:n8q8\07h")Eb'o'XQ?jWh>HM$Yl1W>X:bc4AGl7-<p[ET1U6KcTDC@00M^'RnF*-DZhiu%c(pFB(KR1n'+NW(V(DT7dC=M=8t]2$5RAut^@Ums?,KUkjo[oBFEdks4$CJLcbWFe^5%#4#&!I.*@E:d0fVu1N5:cOMcs:&*9s.*%:.:!V>cIlb\@oRh:I&.[o4(jWY<])4+1"XM&kqQOq$rYlXO#gV9X:W//=mO6%Nj*.5e7QfdEb0cS6iHH7>XuQd&ZT./me)_UcCjN%'+Q_Tn-MSo"[S5@$QmejX>sGq\uR&t(RId88M8+2eeFBCC.EK]0rZ3'i=_7e>qBGp;(Q2$]nK8nk$3"m?I)&1A$d1YJD^t9l$QU>%qiGP*'nrE^f&`m^jf-hm[FF'CN[%Gccq;3Z=aJ"AZZoYfpbb^*=>&DbZOe`P;NjbkV_(%E.UXt,j:qqX&NM-%P>=Rr"_o5ZnQ,;(%;t`\M[FsrLNmo)f0Y7hcPS\2fo>ncj(kV731<-aROkT/(3hF8-[`-[*bj7B^D0:20f649Y#d)7SB"*5W;,U8j8X1/>[8GYIMGb<<%))\BIUVp(4Df:O;!Pqp_P&o"aNDa2.i0Xhs-G_[Kpl;1c1C)SEgqopgdklB,d0XlOEi?&J:*:et9\eJ3Q5;\G3(mpXHWu?@f_/-:%r)G4to.2OaOp*DdKObUSUiYMuk*\R8d`f!ZjB,B\+E#->ar@:E?rDM0O("<(L&BtmFFk0^`=TB1>F;uY3&G5j*2f'2E&@ebJciDY%%.8`\0t<>nAT7Tf=`C>Eg#+P=Zf=4Q0EsHS4://;1#FL3<,C/#Gl5,CJ,#re_ia<Q&fD^=m*UEJ=!hRo$9'G^A`NUX6Q@F[hE#s_%l4/Kq`/>]%ih;.=q"IT$#9ur*=s>grUl"Oc&Hq&i1#[*A^!3N:`L:j_D[D2Wf)uY<pC[s*_VsL$CCkg<&6bYKZl)3rAI*.-d"[3K%1U/:OA7EdqM2!1\]jh@c7keT^f="].;\4\L5sr/r>[g,IKnpuu<D7-tBa>M^ck%h$QnWn(UKnAo@bCF#NQ8TnMoWBlk`=+DO%$<%%(9o%2(-Bf1=+ob2J,[drO[(2#1dNC@_V6!bhA-EOMSdc4C0a$`YVQc)c8_p$+XL)%NmdG#;,C+L@W.n)3$K176H9aYLE^!DEKLut%:ukto[PW1=7K28_renGIFsuosN[)tT6<\*u2+s"K,1c*3ZuX??7$6@IL>O5FATf1-*/=JF1U]-R3_`"OOChtHXo_f8-Au3.M$T"&%l:O?RDhXWDq+?3iKB\TR,$MWW^m8S"nQ3)#UHV,8Gfkprc+S*MKt0;STCPlbe3p+-&7VGls!tFNGfjefUIZ%o1Ma>g$ud?JE04f>%(M?qr[igoM?,!e"+U17-M5Mq-b(5C^>AS"#<fm(9b1PPf.`50rL:4E?Q39MKM5Qod(_,hJ#X$VU]=fL;%%:O?ebkb*mGukW_8nkQ%*`5R1b*^ka1r#4NhWP\iZ8J?C?`8.YKT7G9hGUH.IAog*LC<uj`\r_%/lto*)2C)]]r;6tit`OZbb[fj<Feu<*,F,adQsR9)^Vgh%pEjB]7Oe'+j';3hTtC)/D[!\i8j8=(&^04/QK^@Q?+TQFS6BR(%'sHBSP8eV$BH<W+a%5NhBqHskS$`2B,Fi1=o(P%Q6rTe#8Mr6%6>U?[3+eN*nRQR5($,>e%P<(fBdKB=I,LAta4%"9"H4C2F:"n2ONiW[Q.8pAo-23'TP)Y;]=i1u(_c\sRtKZJFAe/1)^m7g7O<16%Ug!n)0Ged1J`;slfh.o1i&pJQ<"iu"K'8Uc"?N`eC9o'L&<O.-%#b<eaBpnH>%N=4d!J^!R<PtFin%??U_4Mc!daqU1E4o?gKT:4%6$U8jEHF`T-(Kmr=@(fIO:cG?^.5sFb]AaHq)AF&1EV0A%M]Pi@!6no+7S=]-T&I'nkDrFj\8QI5TNB]V0*n4N=jNp,3ht0Hek)>%S5Zt-&d;KlSMXCroBe,<)MKFeL)-!"b)b^71ILFfL(&7F";l-G>!FVi:bIuLPQ9+jkb<WO4:H0R)2LZh$eW!t<?M;QFn*.6kROPd%KTCcg[=G3G&ip^2c^gU<nWpj/gf<K9%gu=t^`>,$(!PAW'D.S25!!;b;<AddmB&27U)6>]e-1R=[8dc.C)ZK!qc8'nV'>\E=bRiK%mc"D2[gSHXKSp<H:_"2&Z=4D(&(bEInI`:KYQbU:7("^hD^s)MP9reR1Qi"t=<qC`b<`+&M?S!A$T?]Z\:SrrcUEWVXgV4D%MR*5%VrWY2LCbaG;m"5/.Q8^@NC%q37qCU-#\hQs]B;:tGh(*GJJ6\j"a(Zr8d!3E=P1.ULe+1$\f,Eb]FXdWc4&+lhADbJV3`N86-u(1%/lG%H0g3jE6]6RpQ@>JAUh]MX(a&8-VdlF[(_\3(,5e1S$n*O"iic6iW]&<GLDEr1-OI7@6:4+DB!9?E-*I.3)/`DOHuGW.2`&!0%du_s):7Ba7==Vs--+5h):*!;+2)FJC1?+dl^nsL'O^O;?&-9lkg)hO^?UUD1=K+?ccO33u&rH\kND$en'WDU]&F>DVO*g\Ya2asC%$R?3cAT-[EOl7a(D8jMHfFAI#\3.b`Kg>*Dd2O<b$Oj*kPA5]"RL"VC5;1D472U`)Dl#2I,#6Dr6n/DagCf<Si7KZ<o]N?Se&qEn%nM?57I'!M\03;I0JZLq!-t)#jHH?R:6\aH=5'!ijR,7]u$VSm**X#-A@n>%'?s&#S#EBW2p2)^:nT/^:SbJ<>+pa4f(jb8!+iV1?%6EpA3#CG/$=F.:F8eP'_^5J[ep><FDTCi-8an#%"'ZCXUiTP:<0q]o7d$NX2hmqqGL`(l[Im/U[#P.:M&KK!_5P`LjnLocjMnT%Z%J$OFXG75jI#C@n_*#-<\HXmt&#+tggaNG'N?M&Kp9-/[/3/4+SOrbUXkkR2Ys1e<DZAZBnS<n[-8ahY2*'+%k,^oJY&*tAo#fg:m%Yq5]1H=Zd/pq]2k0GHt&$cN\d\]B3fh3X]<;fQT8#2H+aXLaZagP@[_,R3A]8[5"NMZcJQLH[7N.!d$"0q^LT&er#drbX!*hTIYO%V<?\#j7`X>kTDm+Z0\'K@-GYg5=gfFmpPCtmn#:qU*i/3HI'bI*<-O@:aF"eG#"(Sj+BPb@G*m6UZfbhQ_TlW3kUG1(hNc",Ueu>%#JCt/hY8h[C`o#da[boKYq/$loE-1uIM>(F"@r;.J/bW!\`\K]!$DaGFq4;5g=miOcY&+G'Kn<m%+7bH<mLg(@*Cm`#Dm;O)=RY;%#CI);^)[%:#1-g_YaXj*1BTn[RF"(`D/YcSH"\%(4:N'.?7edsLm2tr6d=nH,6D%UO#bO5UEt[2kPk'ZKAeol6Z_\B$j<C(:IX5h%oDMTb3<-\sj6JnSLL+'a>nB//Dk->P2N]n[kX[m)7H"XZK:uc@X`K1gd4Rm$O.k31VbhbJX>Kiu6VoRekk%7S8U*d1VgaLeGp:\T%Ii/sTpVo`1D=7Ug_f%Y2C6-=F)4PkH%Z.QqMjTKk"MugW#u=DC#..<9L4U2gr^7'^2%Cq>pTUeI1qV'WZ[GR^O`#(H9k\\Z&&n6;%Z[bFp*0hDt]2VI\.;tHu0.N>FHK#R+S`atMPgJ2-`C$odUQpQeU#QFqOXApq()SI5F+alSoOonoGs+6.#VV2&@\fBd5_(u":+0TM%8bU/lAVu<j1E!0KG]RoDPQS!S2@`4VV[?-2F"aDcD8X5'@%@$,ogb2[UeVoO`rQ!8iV64U?7tBX<s]-L^?A\0HuIuFr\u@LW9^H+%]+ciR<,2_$Kk:S(15Fa_U"L_]-*uX0d-UNsEVSB>1_0d&In3CnP+h<)b_lR361!WY1W7^+JFY29#6n;0J^Ec%fgGGj.&Q#rpICq1%`M5U(bt`7^R2mAtUX8?k[$1=uCQ,&1"FX86j*U*bd-N`i25%[<g?3jG""2YWE9_BD_/of\MS`09%p-<;(`/*OmVVLbA/!9V&lEmM%BQaih0rHGtLH;Nn4/(>iPmFF?S^?^aUqqpE%+?pL=Imh*]^E2mIr/"CQP_.,COn.Imu=#D,si!nK^CElrnJ+)fNX!Y@Cim")-q65%+W-bK^,;De8/!XX#]3(j@A5!ZnDab7+]G5q%&sI+3+@hhIDq&-dmOhj=;/[_4A]B?;E;!K\NX3h-R#inNOUp1LHV>GX]7n`mQ-H\%cn1\#PT7_bZ08F+hZK^iUfmd`4UJR?A"<?#+\1W%p$7_/nMHhrZBQ7YT!$bj.>O\\"3K]sdipHBZSIJ,,2cRG*JB$S?F4[+;OR"t%oB#cVM?%g#?D5SE8n7$k<tRs.\+H_V:Q(XFP<lCT(La)kFltW"_4eoh(jlGUs31tfab:\Al5h0J]&po7HpsZT@q@kG92'(B0qJS*%W_EW_,cjMOY^LEs%BO#PaC;")o2rekIZPA@?UD)7F;RIpBVEqIE-N\W`:HUrXl4s[D:m;/d.$')$3Loi]H_*craWl[QR>\5b?K*'%q)gbU]`Fm(Ic50.^,J$8.&\Qln/Y](a8,`F76X@,Kk;-EXG)^WlL6/.PRG[*;6:^&6T"5u@4E%nW"-XqqVsCC"Q<LchUWcE835Kc%Wb.CYO,L?sVI`^jof:OYIOhinEIo#Vp@3kb#.AumqKV?WV<LjJ@.eM."gdKa[/*+ic)Ls%;B[>bGRrM4-^?mPWh^aR+^%sRm#Vtd%$5;-r_N[5Jo=BO2_@$DKZg0lMg&9PNo6g\c[g6t;DP3+=hhLamGsc7,M=EDnXs!2rRaf&R3?M%V7[J17'$eO5>U]0TL])J"J3J74%M)=`1`hCAb$B%5R'ElrFkNcRO?c>,b:pYf@mEs<RpskCd$cFk?#tIKQ\.ih3b>YOd5;0h^K\4>if8J&<:WuD,edfX.G_6Wt)cDF,%@:U:/,ILDX%U9Pj\2*#^ELL%R2;5'b=0^9aUUdFVeI!WiQtThT%+Me4!%o_c=:&"X%(IV4MNfTYSW?Jk<[gDpZP#7DKXo$p\2[N>%ED.8h0e@")1Otoq*)qf*Fsn$(`.:>s:<(0E<kG1A]ja^5dRc(Y/JaI.'?T<,#6Gh)\=0Tm#YL:`rF1fJ&]cRLp_n^l2XbLUoC=:?%eJ^[fh6Hf4_1LT_52L'=[MaS=$-c9I_)kLHMMWZ*HPB)TX?A+*BY-iY)"8/c:=LA`I2HS:5L20c]q[:*Y$mdKmPPEZ;\[$.;\#$q%B-X'iR-9*'r4mk6clj=i0hdj.7%g#2W<V-b88rjj#FT5Sm5fou[3,,s^qK-[J^0.<@W.=M@IX?\R7jZ/6PY8>VeP+H37(gU+I&8^%.1!F"9d"-:a%&fh.m)@:/='JcnXg7gBk_NBJd)V]\Mp+1]OqFL`&N/g4\o95<$$ap\fR'.4C>t@l2H56Y'<9LDgU6.-q=%m6H(Z=%`]Pb2$7WmN>5rDXk!'g?BCu[nUI5O9Tb1+?X66`KmLh<;%YONpgda4Z3'UOo36g_+gr*]Fgtj:tX5h>'NIhi0&BE"b+3c$oYe7j<%1pR92L/OcA&G(\-B`d>a/JF,dHVOfH-f?hD]XPTAD/Y5eA8dF:j?\SIWfI?W@]HG.pU7QErDnetW>+-b5rQ4XU!o!3)M@'slV*>\%pPdu#b8?7ncNLsUf8s<[_PolaKY(1Fo2<1FR5k<b?>GZM*aLVL]m1_9!mVXNkIp8Bj+tp#C(Q(mb23&0DmPW/HAHlcHTTdD5`0MG%%%b<Pf!fj]6,_u_,JiTMHg9e,`gLap1@L'&WUO%&=<.=s8@0IkY\\&H%@7<GMDpM3^!m00@M9H@$f%FfG(d/b8Alj%HX5/FnR*>j%e2jq?k.uF53^UA9:X&BkoM_;a7fo9KqU+..nnZ(`a9LEbe:)=_e'N"ol*>E-hcV6g^QU#/08H9j:akP_>:N(V_aIED&q^3J`HuOi%,(f<Y)>#6ao2U-6$C2@:\!G'2Y%Cca=$o-#Oq"=kV$>FA(2d0N=ae@6QUIS].H^ufel!QH)5eeI,3c,lYYGLk)5j>g)6'3S'9k7$%4<+uR-,&Ku5\:IKZJH6d:s>s*.iN'7>5BnBZcN't6/UN8V,kH_WV,<:+r)jlrE=.od0"rV*_6M\Zj'J?dC(OE6_TLE\TAp?Rn"[L%#oe+NPqI;giWD4cV('A][H]51^S;nn>\U*gE*Ri_\bZ0"R1`/+,_S]D+4_6ncrQ@a'r;DWM/6:nLGPX7Jfuag<dD>7"Z&:eM\OA'%%K)UC5/S?5dC_=\+<`"FT@4ts<741N"*Es*'o(t!P&N;m3%YP(jqMgpBFip=V$8UWSU86[]JaDR_FUf5NMo`8:n:c?OGcZhMJ1iP%cUEUF#Tnnk*QK+0K4@Rj$4^?)K@>(H:6?CW3(kd@i)W\*EK\7*a(Z)lKCb\!_>Am4WR(iMk8^#W1\;*!dQ!Ri,2&Wi^,NHRb']Xq%&`[2QK?lt61qW45;#9%[-8`?K2CO!-$*m,gM)=a[$N"fHb's7FSVsXQBL9&[]K-+e8=Qi1l^,ub,*u<N3Q>m+0bm:mNFqojHAKs%%*Q1&h7e>[3W1rcX.j:AuN@=?LlGN*Q#NPJldeba]eAY4R"Q9r4am;&\7mjd#PgJbX\%kF/l;VG??D@FD!p$k=/qmohTXF?';1a1g%Lk<H?*4:g5+MJ&H(sjZhXA/-eM&PE$/,>e$CUkB)7\LVnd7e!^'Kfqjfn'JU#W!3ZI&`=35@2cI/G67)_bYAVZO9R&fbHL2Ee:*C%J-88Y="9uh#"5jL:&KLk+5^:80r`tjcUIR8.LQ1]C&s8XF@^4^+pnnNbAe),^U,^<RN8@7c&T)a,(C=;KP!_d]Xi]u88)Dj=2'Y[%:d`tNB7i;_]sEC#H_K*4AQqU^iG8,VMEpRi9<Ek`;Z=JM00Tr#Dhn[9B;?l^1C>T=pH5L;mqq2->.eES<iQZ;c#2Yt&'7IR.8UD(%M(^TT#"S.h3p"Nj6WK17kX6GQON9e]VtBM=/<I0ZAeeaQ97_+*j<l>4gQVc.&uYs*7Cl<]8u2rUaG^+^-:e4P!&,N@*YJl/PA(iF%!>L%e5ZB.@7SG?e,*PQ-OZ4`tM<%3`_CuIP+9`Ki9NfmM!)[iQeL.^/D7h:QliI2d3d@Cp)VDo>\Z+D+aS6i[U#1G=o,R1&h&-(<%]Z$f9R2=o&dk'KXG0^3?q]uT'_U)JY`"-lAZ>-bbRYMu;!?'Xl)5kRN)d/ltK)"rM4o9(#cd<YA);j:b8SsQgmpSJA^S.Jf@Y&l7%!=Yh19-Jp5Y+9&Jq(o*?mpr\5[fWW0N[#Ea5)*k!0bXHoXn3OHr/KMe(d(o8*$eAd80Z15cr(CZ^n:-ppd"W_o<(Ic*;Z'ihOgKq%?K0#=@a+r9$1tIu0hdXe59h]OXc,!Nhfg`$:@T1mi@lF^mNYSgOg&G]"jUj&Y:,Q6=_&_a?uj3(:_EQ+FGhQL3h7Qr9.(0E5OGZ"%&WP*)q4O4e1DAA=BPFld"E_%ELXIP?O;Vb.47f*p<kI3LVEh2^=g)^BSPaY)/bl4t`[srubBVD"QJ:](>ui(6nlOo:,Vk^#"Vat4%+a"C1lu_mmSE`I+e7=YFa/e9*Qh*bu=TP`f<<K:Q69F;t1fZO[&;pmkrPT[":gsdM4^_q,&W#$G,hF_',1'd6kkT"%'a!2B"(6WV%9JQ>aPM5t/=,L]%O<jgqm@Eg8#k<d$pR$DB>e#Xt.(KQ8Dr9U<giN@K=0c<[`%.^4?[`_@G$C!pS4ZG3kuZKi?\WC#R#E(bU>O/`%Sur<MV.*mXSH-7is)mVrO^pj7HMVp`-^c+co3rS!@Wer[PDCtdI4b3pV*gF!IhQqc7qU..pb_NAgi%/dg&2/)g^ossUi]j"V^7YL%TNe"5Rn7V]`A?aKiZAo'Ote]Os5YETa"SXNkd<[@.HD?Te5`8"acBLZrnQ`-fOO9?n849b@rNtIYc*r/J224+Yd,]/Do6q\h%\h_%dA4%$jVFe:ZnZY19D><NYk$7VK/m%3>Qt0Z;97i&1UI0U<I`MX3rB0t(53u(M%Mk:QWSL9@Gf-d%o,\tcl;`Bi]3f7cO1UJFRF%Q%M05ab+-?fM;R,is<Kp14bn0m!#Q[JU&.G9.64XM):,&t@!1r4uhVHM2g%Sq.giqsLZ-.@'?\A'Cs($A@e\AfB\bA>,1EVj5FM+GG%6:&iSpSE9[:NjmpmHMC"I.PYP)PsPr9-aT#;!eX_Ol#fV]m7=r#Ytd9/U`El-00EN'UJ1@kRukF7[`El7b`ui'#g"2]nbg:h01]/%-_bDid]m=3,MI0Z1@q+a2XI!"DCY*(3scg;;AaYhklCaWGMVno8`uOiLB$(0O@fUk,j1STP$:(c9LIma53,/3KRLa*b$'#/RM%H2%J.MCQQprbMF`\QHm\*\U90Mp!nei<M1*;:RK\sE%LiKIj#VZd+fC"G-Q8/B?/@`:^l+jr'/%$J<?HDj61(bd\i1I:cjU7SO/`3X5%_(.l`#>WnnJ`1g:G%,81(kU)!3aqFZdLPfNX3e4_o4dV>+sN`k&-P*5=%k<MD6i6THToA?\B?J8E6p:0/O4,EQslm_W$DH?m(ke.%CF-rEV%Eth<R7S;rL'5&_KC9:d&crB5(sOa.IBX+bl=j6H\Q5VW%_jto7[!#]>6gmgsHZt#HU7npNPru&?),!C#38KI@FGd9!ieJ%$pYB!'[^@%Vt-kb0/jO]r0[>K<?4m[8)"pjr-b^\f4P6!&D$P/Z5'B-'UatAdE]/sOB[t4i]DJ:K96%s"s9nTs"N<9^7d?X$Q-01%^ZPV(0Y$@,ooA=pNEF5)YD_cr5isZ17k%5*>P3LTm/[akA*L0`Lo_($X!D-bpQiqXJ8Dd22Nh7Lle"u@LB-LCT>(%/H%ZIO5ZDod%]5MH4R$iU24uOO==KM11<G\@KCZg_Kbfd/,]HYVr(YaX:@W)['kk3e@NDA/6N@kl^Q]@mX=JpY8RQca2].)lJ^:ZI;F'@H:!rB%/%lr%@JDZ`a9+Vjqig]pXhD2Rbi)0%[i1>.Z`\LE&"U52%)\`konp16b$/]&Wn^]H!X-@i-&IY31Uli3hf'd(MHr_oV^L.NV/jkM'g%!o;7>\i>6mArZHP1?m_=7*u#Gr6[*jX6!Q1570pj%JIuK94tC;+n2`Lo\=Nalofcc%j*kfqC9n)%sMIG$?D+e?[@f!.[8*UKl+/j%[2l^9]o-iZ2E0rN+5sJiQ!$(h'%)4>r2S>4o48GYM*%'m^2m7B,Yf1ZAmGn?$Z2/SQ]O_IbX7JlgDhXI9I1p9VPP2(VQ9+T`LiG=%X=m"4kFm"q^:H/b5s0RAAOtt/r4'7\(\T]d%Gs;WRO\!-eIeMM?!/'!@o9:jmjj+(F\ui:WXTi*\hZrqLL0^liuC%R4Xh6!j#H_a%i)m@eP*oK./2X#H>)RYcr_m^[=9^CS8[>[s6E5s80BgK\:!V`?:SR)(ok`_U6,s%5N%3r?^b]6t-HIbS/H=*>7km!o_g[2^"">b@%d>PonO#eh;N]#D9?8u3,Vg8U]4lQ?5Le'Mg>Z%B\1[:*fL;JY.pI9J4q,6BJeg1io<RK1_Em8At:e;QM,`!lX-A"p&gt+4p5=6W!%)=UPO0_2<r"J6ZS(5*L@_2UVU)ckEj^-[02`p4EK+=pP='[Q`MD8i*adbVc1U/No"0Ic340JaqdeBr=4l:=[!SA3RuMNa7@Jj'W4%NttB'.8#:<kXRcO:(OO1XR=sTqAk0]9LF5oos_eFYUIamY=;*]g'k5P0_3OpHDLNY?7XVbX^R7<!6s=bqG!Bm#Xt=&,7GNj(B"7^%.iS-$_*.2RK^ccK3Xu^dXL8Sn''&)KT.%3Sn7P.B&:3kl&oMZCLZN`=;UXXK0oVLr63O#:^ql-ab`E-n^8F.9!p%IhR*7nAZ5mu3%U,:6i=bqSa3DgCB-7'?[gq6rJi-VR`2Sj\s&oZ<"k[BKV7=5<E6g?"frmhTqM2T1c8;QV41-l8@g\/iJ:E/Qt/39d;Tm&$Sk?8!A%2>$U,]n72"31U&]B-;^S>3l.GXS!1"CBWhIr6t3,K:il88(%Ue)u-7[#L?I_XC&H$j(\tZoq5(lHo@Y-.sAbj,U'b/7L'*)@8ACs%Ed4]ej4^>7SB@a[99K__c$i=@,VQ`t%3FV0-c>PC<'PJ9gd=1&XS\(QeXQ37;1i6/dX#qD0b"UE3Ba7K/KmU[EPaGr`SqS;j)8Z%%rq2G/HbaVM+a&">iuDuqJ=8H-CNiuMlBdS5H#EK,Sd>pqR$G-&r=r5G8B],UVGXgt[,%_hoHJ[nE#[r*rO4FuqGY.J$U$"MLW1=;%9pDMceK8og8]*$:p`^^:K6(0:oh.A?hfTjrgb6E;"#tECITa"IN9%WT[\J1B-i'/_+/+Vi;<q614^)Bfb;c*TV"NXQ!rA;2h&R!d%/I[O`3#nNX&*eps#p91hfC=\n1rZbH,o)i&F-kaZG;KDtUm4#@qES'N9cbB5`HOC".^\,U&o?!icG[)uIti/c"PT[3#'/K?pVjFS%:Q++;W^h"t\"B,XNnAS=@j8a4VA(QX%e<Z%/(WHfMNDW+LBo]MN3It(M?O4Mai0DBV3<N\ZE0u\7re0Y$3?(2#Usr)+&HXe;7h#s%%ni&3c'TU_Da"fFX3b5;VJ/_:EnAX]Higa^\;K]+kb$$9R@0*&/M,VherO.9%![-Z&Mi9E^X0R7\mSbP;d6D6k5t12<?AZm8ApdH%*P_Gk4E.+sP7":JP,c%e4<O+_[O\L;JK$,)cG>9$\7[F6gdHQ%eCg`Ah#Z.>,?!Jl,1IJ'EQA^(8`1d0d;Od_/,J\*iE)':;l8Gh%;mDda6uhs1\J?b6FM/eH$NGMbRGS93gb2VPT`<TT3i3g8#N]aH#$'njd`\gQ-gPZ&;YpM`kacCBjHXd2lJ7;oZ:/\%p/]7"?.RmZ%%R`+6DN.Ii6fg*<n,EQqT,ZOkN+03!1Zmt+`uDbqF2oX="k`hl)[_[Z/2qcHO0QA+q.J&Mg=)07G_-]3lI]1RQ6Ecj\*h,$i9uQF%Irc\d=%!SSr1YX880t7q;`d"n7.S+b-O0ssEq4p.lf-%>N`27-KF#B[0)%uQ4=NW1]:b:%d@$q&.u;n2@[OM#mWnBe'7(Zf="[P.%\+hi]K@1Dus*O]QMgiWU@QWp8i#0$ffaH21Vpb#\HZT'[l,LaAk:\PSh\!a/rZ)0:U(^q'36knafO"*D6H&]+d[kJ$)*2('dkN[n%:/DsqNcJhn1guV8m-_Hn;4Okjhu#8d]:&F=*qPJa<ZuYI=*d`qrC%+o*W#m#I$?pJR^[`/_sMeR?afKL6sTQ&EdHjuZM3nb4mtOs%2c'^6BF7Upj*7sn$YEopA8Zgt*i#X&D_TL75_6AsXmKB^(#I7:[o9ql1'KY?9S<)[4rpQ\boWRAkbW=ZcM.VDR8Ee0@9o)=jW'??%2V%FscePJa^foJHBpk)41)JI05&j4\A/G:1p)*OlL:s@QYIB76ec#hDdVL,(W"]lH7FoERh$RRh2^D*C%Dg6m0Y?BldCc-)=SA]A%Y\feh_7:Zs0k0o#s+ruk(Ig2SYs13?DOf@F13(UUF&n(n[QUX%S3p%:ot^^N49'A:<Hd3Em>8X<Us#fr)=\R6)&[[>PoKKUF73E1%5l3bUS6_cfSd,6<J=&/PL]*hBk87a"?H,odVtkiKs#$=K8RXa)<V6+9#nRpBB8h)LN5g@&Y#s<K"ee5%As[C[HKiQjh+o$k@Cjqr%7cM7.a;t?q`nAek,^nhii5HdNpu$L!4uQm2BP:t;c[*"GiP,>9Mf6Hm)XBaU#dQ*mO?8q,(It&6+QgHLqPQ-."0PW\s(VQEEikZ+%2]_GF+2<0.Vr,M)dYagP*>`nE.jX,g\=mIF#Fp][J&^L#iC/[R//ZCOZ$S?[HG?Lb8BT/=n$QHU!g6[6T+ln]beHM!<Ur8Y82:-[%ObgejKpU/=J==&^UV`[@1!9CkS'*9$0"bnI\0.aN^/otM/t4ZWY%%d$#N/miCJ+-Kp^E&d4tXu_JS9tL]@Q+l+cN=W<,NT-i43UT%MW3lndnM9DGl$&0$W3?9L=*(o%kp>rA)Psr-Qh\H_1oh,TUil&4Y3@Q673dQS.kG"+NCd_QA7g/IBi#tC8db!V\2BmlNGm(`RFd5%DdZNqU]%g48ibU035;O]>Qpf5;@=u/hcjdZBFUBk[#*BH:Q/no]*OD0>*,2W2<nc6:Rn[Xqs?'Y]GNksQX[W8cQYfK<NOLO%dj@'%\&l@@Ge@:`r]bR/Os@AKqU';R>jju?*Fop(7_;N9,C;_k,:Sl/?Y10%!)eUgWTTs<GFDLs=Tu>2!LaE4>YEP8U>=uocUe5To>U7\%_<_*BDsMTfQmKf4,">c`j#l'(!Vk^%FH?tY-/[GG3;e+2mr+M)65[9oH_mN-Ra%mtJ:#*pGtBg<@_(,V,-bYkoEYT&@iL'+1Pr41%FDJML=3UnfeSna4+i]2>a=RWAL-r4Mj)'cumK'1>cZ?:)`OQ26S0lNJN,H?Y?<8;83-Ium[2VooCYo):Z5A$Qr=*"%j:'#b::JTc%-4]bWY8>em%o_L;pt#*\T.J!U7YH&jO9p421))=B(%BIu65aXnGbT,dgqJ"qZ"AHDW_!h#,+FhLomAl1]F!Klb)MCYO6Z0d"EYLS%n6SI(0#lj&=c_;m,CWNo7[VTGVQAph,i[pRk@Q[Ck'haPLVg7$p0!t%G6k"q?fVGA80mk.&])L^?U5@<a`5g:5n[d\;.e&f))3%*%`9[m>G>X:SR=ss]97BfXJ'Su9`RsgYQ__,L6:j.o[1-M-$gc(X9\18Tf0FsC'fC@CG__iK?a,9E'!_<cHYIZ<;WHL0Na;(m?,U@-%J<5c3#6.I(@SSD)@]p1H@7D=6/8:Q_'F^Yn;,Zuab4.qmWSp>A@+<p$_[ZE)RU9>CY@M*ZnFA1h%]UJ)5Ug7D4_(tRIb-JM%eP[9%)Nq7ME!uOdFe'nVho1kJMCL%)2a'i?-^;l2@_]"Jgmg#*Y_@asG,PtK/JM_WpY`HLJSOZJ1V(Hk:Kmj?:'=*F^9o3OaT8?Y[J4YY%68J<tL^-%Qge/@b_9$l"^C>2.2.?(n9^A@AhS[$g19DV86/GqPZN<kn_"O9WbcaZ\cb?,t3?p5O^([/?m="h(Wsr;<r,HK^Ro*Z9%0ic2`2sqd0dh#]Y)mAokmH6'=?)_Z>:V&jt:c+WJ-,nJFVHVHe4@/Ph'nM7-66c&&-lt+_A>cq@GWdM:C!3Vq^oH7J^fG\bVK>8S%"I2,J'WQYb:"q_b"1Ut_d'ZY%Uj[T>%3ei2bcsKpeS3Yki1p#X$H(%i\j5\;oTQ^W`5:MO_@[JUH,Z4b-+#N5X3sAFo&L>G3"`#J%X7l[Z3,U"XPl?sY@MS;s;'Z\WXrWer_TFJ$p<=eoCiJou&j',\>h&40#BMk(AlTcrh5GI^[^"p)L/X`pBV<o;I;,O]J0U(Y_TD$o%*sbH<&Xt/G^l2_)i;OfWUS/T9:F"$YR7iq-"^4H>N>cCXn+CMae:i+-?.>0`0[i?,[B1VC=P[i318XrQ$TRaDDh:-Q785?4("80.%Eg`E\2O;!7&_%[PYDi*,-[Nk$(KD:E=i:aTDq`1K%(XI<_<G;?Mm3o>?-Q+$H]#UlImj@8+$'%[rQjEZ=qaZ-=H(hG78]_r16uOk%q$_=C6pZL2;WTjs?\-eCh3GN/nMZj:k,Nn;d8_>180EnfIr0i:.MS9Un4*1s7jPqhUK,=SnF,M'N--ZBoP`kI.O.V"KjejC&CA1Z%$g1h^g8Fr-:e""%AlPufXK`C+3V4F\Top,i/ho>cZZbp9\"$)'&Z,"qT4D"0cJt+QMT?6fIqMD&J(;;M:>%@ZIh+-R"QR.n5$Q#Z%n1RWg1jd;UWIJW.Ms!#t0(a'-1'Zqhrf);t.`bET:2#8/+`)`ZDWP\=qUR708duRg1.._'B[g:tV:=Cg+u--m.eS$Gi4j'bIL?Ym%J\%nK<pCmLS2TuJB*CoCQ1rVsQO.&kd;"!KhL/Al3*(nq]+T^F(KL86A`5qBKel>p^!;t_TboCiNb$3iBMGX1K!o/4XU`1@,C<(T%s7+a<W(X)Rbr%$:%.h;KC"LD(9:>rNM_/7HQkr0U9EOlHkqhJ!kV=LuG_;A0G[k<Spi1Z28.\_Iq?K5.?=+;!M]?`=DVr#U+i$O%%R'*LOM'BtR$7iZ##OrPh])ITGad:[nJQptTQMU)VY2-3tIG:SL2h_"bjN/47o"$37SN]qVF00F&q98t^6#"Qh(q;6D2qR=jp$26e%cZJsdRkL425Rjr"F&<9XdfOh_I_,#lK,M4WV&k*e&RuY[IH`a],OI+X/Fu%1?X*"7n%u(7.0F#hW[M2*'OL42,U#eN2&oP6ciF38%*rZDliKIhroqLj.:c_QYDMYb>OLAsOE^0J.%[[DJKIYC@GtQ24p`o1a$Yo%DV2#P$#a\/sjHOP%#Tjo;'hU$oo.:0S:CG\QeE]+<%[N3++S7[Waou`JcO<&0,V1Nlj+U0OKGLS^oHamf27E'RMW:tN+V-Xq,;29I#%#=g7<H#o\!G.C>mus<2khUh>L+?XAW2?Fi6)2s7%#BCCI2g9VOQmOsb`$LeQ`DllmZ%M1!:1M>'+<Q\TV!-pL0WZhYkGF;k]k"?b>6Y/e]$V^C2B$I0ESH(C$*q,Np4@BQ[MOqBbPGlL%d0VtMSZ/AFP^HjGrnb&\%7VqUEMAF>[_^UJ,&\/'4%_%JYlu.RYp5ooKce`H`gJ3`^g^O:Oe++s\G_?h_ULP"ZDnrGQCSTo'rU?'%jB'(F40$,$,:R:c_tt/2`3&HJU"Jit+*=QDO"k8-M=Hi[<\\5$Rq's=modSH.i&HYos/SO$^OtVfi,4t<>!7kfF%Bgdua*4eC!&K%P;6^F8V.eZ-:u%?9UuXrkIV&An;sWDChD^06\G!WZ/fAgI&2)ZF[BDeGOb5Fk-lXHEhtU>.&5A&$7KNkkd?nZN!fS<>1M#aW@:JF%7DSU02CRe!geS2bHMYn\Qt:ugXpE=pF./BTXFBYXW9WJ%.-ar#`[CfGX1&id#O8,[lQX[UEV8nGmr/J1]d.&TCnF\3X'Q\!'Juao%9U`?Rbo=kHZY,p,_:8qN`jnZSEcC/*[%'sl=-L>"Wk[O@\%euqBU*8]CRHt'kF0/chR:BG<Ha(Qh2u'Xjmui3F_&$1,p\.'_KBsb%h5](rm#o(0A\/P56CV*1dV,(Xk(-gr^u?P2in!ll;rE0GYGa3odrSgt#C^o:RUE3t6LaL?i`K0hLrpbr*ep3ni0*Na[rNhl>cOU[%K1"[!,W+L(DS7YhkO:^P>I5@Ha):J7>l\H?B6CCG,HZT71YLgO:rhGm&Jd,\Bc8bf,uLli5]b)=QTK8tWh19B-Z]gt_(`>mg97cS%(L;+%I`#*0c_/T<q.dKf$=\Gq:%CeBRiN1<MsVVWTa5.DWNW79Oa&;W1bGDkgbaHTU5tJ<RneRtb4LS8/^hia:fR`rRK;i=ZX,Ug%?X6NIB*2oKbG@-d(e0.!/RQ3Wo\h!nYmL8oYZU8[j^<S>!"VLp/F-u_Lm8"2eK+1-ZODI:,V<\GKJ1^pBMfF&(mNKpn!S8kSpRLV%)LN4[#_0oR-e$0*Y33'AT)kS:O$Q*7ImF`W2/pr4ZID^tm=!)<#t^(uo)=pYnSZ0n`AO"`6/#9r&H-jo#*%BJ_a7>_-6K<oSi!'k%I97N[mRi%'7X94"5%Vjd50icgDO4\+=qT!faVKLQpEqM<BogkiQfEGCG@/mGnV$MiAc#cqQ!dVa=b)'5B#08[h4!lK=P_MP=3/Pg%'"oll`k)?*@`ZJ)n#fA7V_cm/d,$&cgOpVOFYHS;Xf2beh=j1i?JmM8P%#E5BLj"L0,f?Grec&&Ij7d%YAG35r;UVVGT?-E]UCQ#%\G+ZU^,8+s-Vt.6c8-LfFlht^d+L>]Q*[8!RkU:oEZ1rp^f`PY(hnLW420S\c.lNri*FW]\)3BfK6+NkLmK!cmcmH$b?,[2E]bl(%2OC@cC=K*0n7C_BQ*a^Mf^mDXcB+`mSOosJ=TUYE0.")*G_Dr%n-oBM-kP"['$lFeipZ#)P",]/;?cC_K&;?3E1A@#(8Aj:?5B:e%[t4t?Oru#GDq*u\s00eEC0/("V;EO=Wg4;Nc"]fl%,LP:o!K[$PbjmCLN'd_4)&J`T4^5?Hd"Wj]eCYneA$.U,':T]4bdP48'pE,%rE=-e0IC?/`p$jI9m@>sfFllXk:Bk9(WDVIFp?Y]mJ/FbD1%#dbuWk@3qS0u^idPmeg=WEWC4.g]FWujZE*`rh:S4%N_XIX'TYnm%:bPG9hERAHlfR_md_=,eLYXdpe=,nJ2TQt'GB"R?-k_[LG*2SRjc4:)))pV?^54,7dN6#2&@72O8YZ]mE5E;="a>h@o6=4<B5.i"%[kF]?D7P*pJap]<(i$#>"qiR?"m]TWju1$.",II0_];t+@3Q'up/3-2o)Br72YZD&/s=3;!9a728Z:De\$;/BWt$E0C)YU30L(3S%jVr:O*PY1!;oYE'-\dY<9HmPO\Fjs5U0HL1f?cRsX%fi*=s06tf[.gMY39n,4A%1cD",Mf/%XfFmP&5f_<^<2*>>PAe[qTW&VVc%%>]`[Okg=N*meWI?nE<pBIK!)6**tr[[LN[9Rg=?&6K$81_iuI$n$8!,o.Q:t>TlW+)<?]2O:JOp7m^n'e&u\Q"&P"^dWNsRCL&K$%X<kdK^(`pNn<]TO7?#.37rd\2M[&^1:gI0#Z)$Yl:WqJ<'OOq(9+/]97BtqOFUf4tEP3RkK(-KNg*1?SVp,ElCP<r2"It?B2gNi[%6jgk*.Z.5do/^fa2m96bfq(P[L4\c,-7!GT(L`P9A)?1iJ#)k-/SU7T#C.pI+tRq4<fPJ$b55BUU#k\l(g(OSn7Tef5b2ulP![:[%,i(-1"5\Lb<j8A&%=G-2Il>DE?;tdA3$EYWW+$N?CKWfrS*D0.oHP]?<QjU4Z>Puh2jrosGaOg6+maBH#RZGCeSaHbd,]W/5uUTG%_>\3/fJ/E_B]K3@bIs;Wg%f479b)nW=]5p68WXtg^qo7qD-'0'ZR;MjP"*Vg=O[e7$6'=(SoJQN0PBs'>`SG-pK7:$@'@$S*D_oI%O&[Yn7SmDS_kuRFT-P7@!`-2ffoH-lH2B`A__V0/VeY[+*p=k>SWi#H>r,b]:QVGFRU`q0US7/)R,u,n2.?ZbRgo:a?&GM$4]R;>%K^#qE@N\h95MDsY_,nFBkt9F(ARtu@3&.7f8dR;:l!?C-FFA7">"GN[A)\ScgMXPAOQhY'03+V.iXM/2ir`(P3YF^YAq[kjIAC.2%[28,7]QSUd6DTKF8H)s6.,##G^=G8k/dYo-kfOb2UAa-7DHB;fE:P.2UG_s82ltAJ]0S2,'c+dQDEc?clcN$QrT7H("hjBLT:ss5%b,@DZS!o>Q;K-c^A30"Q>qK3u[IiC.CM"IfS+Q.>8nA:mb;pRMkI-jcaZ9XI$t49Ch^T]6EpZ?&=M.L%,jI0fnpWPpEVS"H&`S&\%<CS'JIAK"V;"W!21h+9(a^$VG>l$r#>B=BA,+>e:N=;-C,0?!o*E)U[,o\W<9Wnl`fuC(c(O;*SC%cJ.n7P&)i_U0qON9#hDV@Bi%n6[Y+r9fBg>0m##/17:,OThmh;*:1a=E]6P0\hq]$Z7Vb=s=d"cN5WpCifP!a-9G6DZ_53Nia9dFGtERUnE+Wi@O%VpjB$r<1Tc>%Mer\*>(:sD8$Ra1%^u!G"[GfCWhG(R"U?]:@<7T)?m5bF4Qa,_3-l"UO?Fq!>YbS^X<I!Ln-nDW$.6<%f*R5%rLd+AlO\;eN3#um%287:WPMU"o<;*1)WX6,JGUK!K0+*=8EA,R^Pn&:XmBSP:&rKa\e;6Li5dj=0Qf/;anb\%=-sAd_n8tObe6h:ZY3[JhX>\E>^iD!3%/3G;Prh]e6(iYOVj"d^@H5<HX+f!q[Bb1#iSGceQP6c$o5`$_04#:s51R*-SGA2)1!F4n^3hT@h*)2irioJ)k6Z*frL]bB;ol\0"%=b_shqDH6pRmIk3=;G5$^/a?P-K^`&.\Grf]@l]N`8!FE=pqpOF"3tKP@<qj2BlI(5Lr2g_o42-*,5\3^hVlI9&^8[`nhb&UK%tR%2YZg*@/E+u;-_Le*<0X16+3Vn(7'S-dFN3s<#@cA&l0&0#@gu]Xplgfb_V?o[hm9JRD09/5tH4I(!eTHnj[u>QLXmt$L70.Y'^\m%V(sKU;:LkA5,;&QAbo8K&1)L)FN_9O)gT2l2XE-X`tSZJQ;Xj"hD!<e\cm1?B`l$AI`dtR>]J;bD/tgbd8=Gfhpq+3CU_BeP!O!9%p[=[WHkERPB)8-A7jb&B7_\n9R5.m?]b%q%`rMrtZoe`WY[KF^4LP=,DX=>l]bqt5)2L#O>LJt3SYG.W::si8?tqitG;c--@+Xjq%A7T=T8%MEGf'P=(%0uH)QN'$3Na5\e'5UpEle=!BS4sTaa0SX'SIMRfAtOa*l1XC:s)jKI"Jr.(6QW6@PEtMA;6S3O;ROStEVHah%&RD&Wf&*Y"Z\I`.3AIK?em2[QWRsl>&0e1o??q(%IC#mU6K'4p&mgmB?o^Zh4:'6.'3DJPLcu0,SCZ_d.&V<h1;l\2_!ZD]gA!mE%j(mFWK/q+@HOW_>;fh$C/\"q(L.4sPZ\Y'A&-erIi<qMh7A\O$WL\f"osK_N'ckd9n7e>s:@]mI__<h%L*qL'(E.S"_@up/n+FS>%89+.Z/J.`k0?WPLC4$*n^OZ64*4e'De/%JIkbM),K2T\(>qDA8Bj3Cnq8uCkBuF&!R.i=EXI$ch@<h5trjqfK*tK`&fT]bQqY5tY%,*&O_Cf*OLi5[3;LR!-E#8)>lB7.6EIH[iV"]l'T&\$?#Pi5i`!64dXFI)"09Q>OD<[>kP^I%JbO'fh<^2qg`$iHYEZXpsE;l3+T%PjTRkY^0i3`%("u%h^FI/KK[B3-,Nm4dd#'H.3T/-_2WU]R[faM@?@pb"`GRJC]TLO^bJ[>sN2$cFip['CF,dj0"%hbRd5_X!eh-%a$#i78_FIgWJDY6J]h=?Q:!^C&ErZc'BbLhd!>Aj#AKAk3Jjo!G8WSi;UmJnY0iB=X9-9**;kT(?;Gq-:=kXqBIKpDk^MJb%!Bs#%2;Vla^8\!+!YNkO&W<`ZbJ,0L>OSBSqn2?h3V]StS"."t9_(#OGi-d18`Kk`,TLLu.J<7[O_-;[1&<hDo%suif<RV1^.heD"IttN%6U/ps;Lq/r>iMT.g]6<PNk$23ZX'CH<[7^Pb7q>Sk#f?JK:=B(1OUSG1b83'!>]Ut2s/@Hk"iPmr=Fj)1mjSt7ZD-]=fSuWf9LkF%0D=YX\/Qa=+erV+P*t-05i8s/!Ehq,iGeL?NU6@<%<tRQ^ZRZ%>O8K*VX$d'\CoZg0-e[,gLo?SZR/i5qoUp1Y'U@/]0=pUa!e4h%jr1*q6pqpq$Ga_/H>:>/9Wao4Q(<)Wbo@]tZ;-6S'%<c<qbHHlA>^6e58@LE&ss,A"%W,@=.5#s%<OgN[2V0.86=ua1KFAQ,5:,8%=\"NT/Ya(A1maKb>)_NqQ\HsGM*-_qiVoKbIV>U@a<g@^\.N5%!X"gt<ud]3en!BZL.CFDfB@fn&f2O#IgQDO0tsCtB-?[h?iR=I%bd9'".SW6EeKsc=R$[_K6M8lb$YW._g7[?==]6XS6LkU&3PV!J[T`p#:qUOo<:Rc]>-!B`1q1Yb<s2'ErUMLY`8;tV3!#InQ*W&m%RY6B\Y_lOUSuWo%":R6S5h)$.XM>$gf0)GgL-c2k7[lNYO:d4g@2D$p]Mi?/*l8o\Jg^U&:Ht.UPS_KsKmaGgp_$4Ult[9mMSloD%8aWLra=77iBBX*WUaLgs.+ud?++dg\U6E.X$*t+=jh/ko#43CCYe3=@LmaCT^,i<uNN9cY51ttmdUoqVV'T+p*!be:B4jHA6Xu-j%&[hS!JKYXh1mQYs$jF6j[2LX=MFm^"+kE.d1YS&Zj$HuTE6dG1NE"JZ&9UoQ8`:(:,jtG8jMI$f-?9q5lc<<.q0nic%#d518dCIS%!ZkEQ8!14GMGB[YR)AmQfl<p@E`&K+"q2G@c%f1^M%Y8Cj"bL@@_1\#>a!X1^+!h#k=1s-!HA\(p8$R:_c"sKcB3%2`70;d8$'I8%5"q?<*L`USFg_q#-monYaMCfg7@U1)["!,IHKJSfV2"G7'!IWY=76ku$l[.4/]ueFg(1^]-LYl5]j_K2a3h#_e-GfZdR0T96Ogtl%-K)uckKef_SX.$qcmMFBO`O8K:]V2^n:D,-5E`u7hbusog1hYE(aC&g="nkgV>NF-/.[(Di0,,oG12I^8382?$NDg-3:QC@N+A?A%R>72(a=bU@6m.bWHWJ!!7/3GV1X$@82YSgO"euRe%+rjtqs[rHTtLu1YCO8H`cI^]N-e*5([^-`.Bd6;!AG0`TYcGVJ/P7_gcq![%Ro>d/@F)^lNSZlX3j[E0;uU+#XZASDd.+jWSj<l.(R>FR8$lW`-I=IWmmA7-]_juF$SeJL&\,d-2.i7'k/.@qpCJF@;L,U>g-ZG%%&/Hn^eJ8R8Kl<uT9F2f.J_@:>XjLEJ3N,>%pNtFPQMTRl'PU8ASs1,#J.I8C,ng_bhpGTk`(^eV!+3M8k_J9H([tpu^<Kg?Os+Mf%e)oV-OXo(fY01ecImL54BRFe/6X*pOCmZZ&CX(Da?\ZF*eidlJ9%g=DH86P&g^'(*MM9;MZ?`faH7TsW54MYPR@(/unR&#>e>Ft=%\Hm:a^kS0dQ*ls^@+TJ`-27=o^=FI7J3Md$r,DfQMpbo2PA0FV,CUpYHc:*'a;!?cQfTmeU&o,!]>Up&(j=ri8$;%j,1FT[%fT9$%eqqlfl-1):8<6*)\m0HTgfDVqq(R5cC61H13FGsXRK816eBXLeoO&"O#)*/[@4pHl[h$tg)6isDr'S:tXE3OAjs!ii$M&sI&:\NK%/n/\=0,"`2(-@Jt`&[[uhsSCbf"<r*LOa+G^$=0C\S\7Bc%?k^]JRCUMlHPU=5rp>:.m(+D/Ntq6a"WXJ$WlPj@\Crg:$2=@X:KB%_A[J#mo;"0BOs>?CW\qRfmA"nN(m6S`arH,T5rrY_(-HN4[knUSi\IVRLW\Gh.jA%VM6]`nCR'sM:Z9l9&*t25*P_DST0&]\@nKp%7,PQ2CH8A`V=n?FAhXo=O"1l_-Q-F@76bWD1UBR+2%*%a:BmC!ZJ6Ca-`h;XAFCdEV>=34!=2u&[c7o/$D/lr`Ac43F\620-+ilV%^S(@#'(cU8O9CFZn9)^d2ViTJ?\k/S`#e2>!!/>+9(udQbPbC;ltO*&a+?hfQ,L?m=h79n+bN-'5?W)IY5.kU;A3WLIM+mL5K/L#%No5X+A?%`nYnKrtQu\R.gb'P%Ajq02!T0LfaW4HQ<nclT>nPm!P5jel@d&.[60q]^G!9cbeqJ;drm(OqlLP!6cg"KHI0gK5!E,J-%:*a$3BPh>aZXAfq:9mIo(mc[C.6=0ti`t7\iGuV\g*'B0r.bITd:7BTbW;o(QWA!?li,YDVfV.Ypq!51]'!fm;en)cNM,OTP3rBs%fn`un(UCZI0g_,Fa>7VmPs^;C"(iOgiG[Soq.-?'gJI/1[cu9PJS1V%=0BL,YsQ+g/&A*WQSh!QpJ4``.<a7b]G)"i]+OXKV`!^h%D/k$>o6@0^PF^_C[6:^-EpX#c8<`=lO\PSpe#85L!QQ'uItfj)=2U5uLPJT5,%6[kS']CJHQmpBR<3K'#qolDSMVgNWt7mc(j[,\%P[$8!O##n<aR.dh@s4!'A%"P(g[F0(p6<0;1,@8i;2%Ak5KB5r.POH0)fMq$k)`ECU+\`_4VlLc*Ne*DqD-5\G,i9!&;L?IkJ^*V%=EO\VYgKi%m!!tt,V"Io+DK@4)bJ$1N1>DID1Jl$iY++,E30FK*bJY"XC%(d!?cc\[l?_CQe*PtN"A2-1E#hP"qGu$fZY(!B1_^O%c6/mkIYHkkke4ju<,E,`Fa@a14VfWuC]sDNmQAcY="/TDeI1Dsn8(k&ElpO:.[Aj@Fl*,dCF1JR!$`&/L-Ht`n:QPUAGj(QVm`TG%\5R[>F6'Pt6L`aa!b8-uiQ9SFPF6.AQ2_q+B8':KMr&QG:8+a`$"?[Q@MHu\iIgP_ZY4t%.j!D-\.hp<\>P?B?AP:0,i_u?:4/TP%ZGMR2@=TOrPK>#K%NsIcVrD9Q'/7*%%5M@6iW)ct=\F*R8.S:%Hob6BoaAnd,NVjOk]e*eP7XhB<>t@a1g(OD:mLBQ.$M9Jf:oPT%ECsBiP4m[F2!M/#dE?YNSS=3OGhV6.@t]^F;,B_+DeoJd.'9d-rL"'noFaZ@\g(ajQ&3h]>T`>rj9otqKg=-F$B]"FJ<8Cr_W-L"%ZHU%C\i@\^1pisJ;tI',&bcm-$k2bk^\eia%!Jc\0a?[S#&D"iA:,XA!9#+J_)Mb/J'Rce0o/at4;S]B:_DM)i7.E6:a8U<U.so[%AiX6$^me$P+<s:#3Fmf-XJb@9cmdCoXiq`t!9iBjC7Jn$E'Tt._5%MOBs]MqAgC7dT9u(d>F*FC(R>0]+m'4Y1EJ:f+8`^CUqT;j%-?4G7a[!fTRMoKN?O&+G(*N%QjF_uePfEmsiklR(?gsu:G3i..ntp3QVP1ZbUI@"lIfeuZ@",Bh5E9T_5b9R.RTf$kE-81*glN)A%T0R`7Y,SsG-Z*<!!1FEq=qjKF.6`Ok%(>IkU]BR+NsKB-;/m8WH$,N&@Pg4>8IZ"5T/q?VJ9I@/fU2c_\'nT38EO(T/=#/s.$>NF%%?JR=cfT*0I[_KkeCIE0LD$:*I#.hJSi+IOSkqN0_dSQ\62@N0*0tV-3,LIQ?%p(iLHrZ>9ao;[lM2uf]i#@CEcHo0L4QhS:`^QZ%6Kd'['._.AL"gK+3_NF;g.;l`J*gt5&BEQQ-+oa[LLA97L\q/Kl+Q3is!;OJ#ZHk,,6%@I!3-'=ZO"%$'/tWhc1tTsH3M4+=Bu<*%5p_.&L3:=4gTOMQ$p0&KBAAbj8^Ws3K".Nb8^pJe-2HeVWcj#u?5Na3W:!3@nBolPdW5HBF0)ag0=I)c,sgag2#]FF7Ak9l>#&-U%1ojgRhXK<cdgDsd%U$B.:g$;CQbO13D4#(CbN&^S/pc7m0:b>?7?q40X7?QU<_I8a0sn?@8leJ.5Q\kVTo\!fDd"mT1)_d,\e,NH%B;^po[U/Y]@sHe;aRPuC"q9l)]2RcZXGF*^of(EMFI4fA2+NR^GOPS)5=Fboa^>.Mm][cl6j@W4RpH58PmWl<QZjTb,624QZPN7_%/uQ>F>Xtq!grTU`;$m$$XnBP,5lZo364hZV(Ou>1qQVjb@Wq/A:hj3u1T'.VNHbh-,$Ki7LBp*qrjGXr$BRB#gS_"W!J&QG+g?&l%$DhBh;0i9NiXZSRkmtt5pFdo,#"A%80j"90=!Pr3k4O*h8ql^+-g$N-A^W^)"c$sW\&@0Y;Xc/Ek.aU"4KrcDkBdVL-7kKW3^>4N%%ADatD")gO7PFH]%BWh\C>E$fecZ7Eqd52pb'lEBF:_d9beC6fmmNfmIe_Ubhn+D34k/HCj3ZOFh?Xe)';iXYbp8]`@Y-0Z\t"UG%e19`)J9<?,QaGS\pR(pN3r)WnJE[0HCs-o`2>Y0)8UdC[)mJn65X@bS>"ReS.sg6oh$!.h,nX6)&4DZkg.#-p%@f3VHH_iB#__.k%);`]Um^4M<\\ZRmV]!,bIagNV;VD&D.;.D`K*2nD^4.MMZ3]L%Uoh$f+.>;[:^j$#lp+$,1ED:5_aBcU6E236-<E'JgRiH3'u?.?%gMVbiU'To\<F;f+%7Z1bY&KVtE(U^`-p['H""JZW.!DRG&gI=)#a@PYcGOb3JTY"qZQi6oVo+K,h4=0\L&u7T/,Og>A\Y.ar%DAs%b1R^Cs$=i$KY4(("tCgtIqnljb3JoN?_T8G)6lp<>"E/?G;G5;br;H<\<2mJ>r$JuC^8LTl_MsJ8aHRL'?cEVS\,Y:FC\9H\/'n+%F1pi7RVhVQ@oc,#+)'U1Km!mBJ#m%0:B%irH5;A86h903X%LPQCkZI1I(Jr@h.)@DROe1c@iYmdAY/PW9oC&i5o9gnd=@1f]uJb9%(F+<":nZ6rcQ^=d>,4WHTLdTKPfiqmncrkDm;C]'0Ch;#Q$d5TeklWPNUt[cQ_!#g.-!1.l/^kOd&"?iWRoM-I]b>o9XU[1QGio0%oWVa;#[ffRR-1$>#KiJO3`=V'Q0#t%`9DLfiA!(IcLsY5,]VO[(TUXkO0&=2p!Sb<,32m\#fpGd"o"*Zi2I4\YNmIi+Xike-,QXp%*`HEQs$q8_^!t6Tqeo")aI50d43UDXK9JL\L*g4ec)lBE$qEOV`QEq-N1]UAa,fq1$6BM.*mc_LW/O.5J4buF[nl(uHA9PF\goQk%OEc-E00^?:K_IBrO"</Qh=_<b<o^L'Hr$!_a[Rtt&hIA.Qq#Hl-^f%Pe?#+Kg[d6%^@'Br%u<ds(>QNC[_o;j2,-0lQ62*Xn7:f[%_Z!VGiKr<L![J"17I:H"a1qXBM4$VV_1.^`II?X11Bt-$T`X``kn##)VFb]VMdU22*YGg;9STX_L"^!mn!Qu6E%o43BZp=k9'!j=%(u'tW24&Zmf"C[OmSD@Z?%eic9agle_=(Z6BhRHC=-R%9`#P4i:Sdo%4#(A?+7ImB)\%I-EbgtR/%4*BfYQ&LTM7Urn>9&`fG3<B%'Ishn1tW+e#O%O;9O99>Wk@<rQ*64PYeI1;lte>A^!"0^pR^$>OPRHQGg%:Z,,DHOk_JCoqF?'F+8/K9AA%BFT(p-^93Z6oXVf0#%RcjVj5?2=dT)>J4d:g^rZM%Hd"FF/q>NrT<b,aKbN+,f#oY+8uJ$3?.LLd^<G&%hhhV'pJ`DegD_V<S1`k+ZRLPo^`Ed?r6J7Yi?%m75oTOlL#56$2Q#p0*TdKlun:;KIY>$3[drB30lYW]Fff40nL&Htp&Pe.-\1A)-:hX*;flqW$a4Q&V2p8q2XrPFo7sg;eVYKr6F;%IQ5h5YWQj-WR=9[==sF$Db`K!Tn:(H>S8A"+5:&i3\G/_;mZE6>LP`XcNYG>YSGaF?V2Tl6]-B!s5+aLj/_NIZ\02mo9\[gdmQ^c%H#R2WJJpEO,g<2L]9@"_6/V?HAsSs#KqZ'/-tsb4=`p_>:Uf6qR[+CA;&qRJg/K@:\g@'s*;i,b,rP$YS@=tOEA%!`hOBL31L4D%%!O=mB7qB#1D`!ro8R'Sck.QC.F<^W%>)5"-#+B>6M6&q;[R4psmepUXUV";em3>qU#!>6Pg&.UCgX>YV[#Q2ue[.tP!7$;3QVW'E%i0o%.a"Ru]KJAIgneCT$Nr7\f-b[F$KWkA./noa.:9d\'+S"nW=e,qqPW_?6b_8Lq*81p>2MuVjdJrXNk9qW=@Zm3c=6JW!XH0a7%Vh[r*4R'B,Xn.%;7L=M_E1h3u:6krOBPO#d12\+J(J:T3R$@JKoNgRg0BsHgNr`XK2uiXYlFNe@0h2)UQhGd&qDgOfj!R7j7f%@O%&-1b=g)O8\]"-$t8=mAo'7AVh(&q$/9kgB+*CqMK>t@*"@!igg!bIRD5@Z;JCj1q)JZJm2=="Q/h$@P^TN&$&^%&N;MZ5X,01^QG%,8ENJfDaYcZiC&A)hsDBUF<L\[FGpBlM*IlKjmV8rJAbGaPnd@=3u+taI4K!U=S%[H+gJSWneCle7=Vg^\ZZinEisV07N?ZqDeh$%"9NjnlUa0VFs>u"edCpE8BR5XQdS+O?I3^Em;=M;;TP=P<$KP9%P]]G+JK^;,e`Z=->t<ZpIS!OFde,3(jL-&$0q\"kX^hk.YCah%9R*f-hb-K@V,99!\p)]VEReq0CrC_7hWg"HWc+V0)8YO9P\+d<;+:h5PQ;tEm,4S!,,g)?K2m"BHl])[[gnsbm*Y##ODeUPWCCol%=^ff@%B/E8kB]X>4gEK^XKs6bV**"PcQVZXe`HbNX757A0BBft9#]+cF5VaS^X:2_2U,%>XB&o'*X<,0m@lgQ;R4/>c/^JD#Ba&4%EL[Np<FY\%[U37aRf,%^9gC`9FY,'EmM\F3k`kaLAj(D#GBlE>`O'%n,Q<==4";b2nlq>]V.B1XBq)Bs;V?X,e^s3IPSk8IW<;bp%BaK"e!2ChM_tj"^V56L,^PsZ)\s9o;aZ,([@:t\4EZDO<SX=i1Yt$Bq&s"+T79D!1P+3/m'df]6kb7E1n?D:hG.\-jjVCJA%*DjG%bH;o8:1\req*p6XdJ\CtF`g^1H)WI&%6lMJEG?%R\9ZVl.TO/VHK&72;ZDe5,B>aIB/=Ldcf!Fn-BG>@)SUM3dqHA!NTh7YrY0uM%]eZ+D+N`;+4)6C=KrgUQ.RWl[1;neA=0%@\hq.$oX0ukO);1B8mt%VGrmLZ?R\MEEL21.uQk$&!gJ8tIJ`#bb]e\M,QLAEdi>lK/%gu-8;HA:B'A`*/.hL7](h]<5;ak_cm+<p^Vcq3U*s*(<9>Z]Z]GuQ?'F65%)>2j7J+82.f8539X)Jd!XXW!Y2a2SX%e[niqSZOYT%HDHdOh3HP=R6p1(c-MJ0=46P[_a[4gm]9K,7rkWU!+H@F]7$jEEC#![SZL[k+)O3e1>]e67=U^@h;d\ErnYPWDIgCVTHJjFdF>4R%750'>.FC*icgekMj&4MoW53O:_.sn<5.h)XhmT.=^aif,"`';'W+?;PGY*s2qKf/UQ[L?M%ue@#+9"62cX&ZqYptrqUp%`i%k6DB%5'R%e7r%t!-Vc/P(4Cr:>2^lm?goH#I;SnB'>@,N2FeQ\)ie^qLPM).R$2<&Mo34bVJU*]SCYl#>Q(El0m%-R=Pok5>'n6`!ASPQ%chj1GV+-\jj"QYa^)r"'a/r9)r=n5.1SUU)V#A4)P]]#SHiZe14q($s5[3cRSLh(/l\*(5iLm4JB]3M%riQC8MAZ6B<JcbtbZj)=%UAZ3V%umIOCp6u!HlA#d@D]-YXoFXQR'&3Ve%;O(M[Y11g0_l>[2rSd7?ojn$`RXFE5bK5T$pIdMJaL7s2?:up"l`9nG2mIALE5u%Dt06LrGDdl>_=-slS('DN9;?s%c:`4aQ#D_!E99+/]&2b9V+'fItF!61Dl3BHHsS1LGZ*&:^0rsX1^a@Rn=Jq2L^Q_SO*Z#IXHW(%h2M?q/qR#:PHYJUB?@>/TReX!;/!RQSe[[-,:3lH^EL8W]kHsXUh[_;l)[PF_[sGf?J\)T\OL'E#uM9*s0V"O8*^8F9IWGfJdN2#%-S&!Srtqpo,ge.3hPEqnn1gO@E)'+qdNpuS/"I2-Dnrc]IJ#jR#*67OBnq)$2%,rM\E.@#=t'0"%ibKi*;/r;]'h;A]FO1/JfsVj%BB3J-b7\Q=At?+Y"Mh^+V(JfCS,qj"b#!.:99mWA8\$Ug%UoYs4m:PeeOi7`414hmTHun=r&'EIcjNNN"9("YSd?M^<=4Ei><XBr%cQXKqTfKX9Te[oCAP-Me&jZQX"FsRl$$$?R$)YXNX)QjNqUNuM+];=HXQ2$lTnFLrbeEk8(g02Mi^lh%7k*F(M*mYqP>J,I&Le%_%+2T;87P73L,!7*:<[40S`(5U-`Y>d&`$fJS&>s4%Q/cRkT`m83H%coG?VV(Y53fII\)G75B>5cC\<#;\9ROnN88@aKcTOb6-%"0W%4q/i2aG8eZ0X?9Aa-pS*+q1_'?bV7<RbT&Y$r)F!7P3UG#t4,!j@4`2QT2_1[#2,j)A9k$PsPp-Ar_,TMGGCOdB-`ED]&#/W@CIV%Z'/5*,=^pX\6#P\gb4a;,9.ju,m&p%'.q8f#p[k>[rDF+(fM0gdE8"(c+Kb3^H3a"Kb')bn?@:aKMsZK>`C"VfQou4.;@=DWeONJ%NQAqmB>p0]64d;&Pp;+UZ?Z5'4rf:hrOHZD$R9\d6P2fC=Iohu&4DEHA0cs?FqQ&,#siZ,VWq^uU4eJmIAe;8VAfG]TnX9Q(H"N+%Hs#69d0Lh#8=pt5"V3UB#8.bF;"Y#_H2+Un9mmW]al`8r6]72*$Eo9H^$loNR<GSs?f#a%F0oisqPtrr3Z>&N%#-&]Wc?D2U/;]k%o'hE?eLDmC->.3MeSgZd/#D8N->u9t8lk.Re[JJsVNkOg`G*o@b`H-!`$&MbY8J/5Wm$W.UhUl=]JM2iH:7u,.K<QfYuZjGO60/u%HEdZMSsb?Y9LmCf'XbgI?Hi86>Ep?J;'6`cG]i,=cndEa]?+VQZBS>dZm69]'B'[oX^Ven4VcR<eDO51<3g8M7Q1FW$5Q2.;@1g0%,M%u,$=]`5Le^oRX#cC@j2j]d#b-gg/g973YE(41s0O6"9f6\(GXIJ8dAcjp[).e@JUXV96:<RtWYF"7<YR'kTIZS=U;O>?mPT^$%K[?YWhap>mmMhH+B^]D$OkGuAZHBrS"Qt^6KY5m7MFI`XK@PQ#Fucsd.3>Ef;IPG?[\tKK4.pgQM#B7?FNQM2<l'AW3F&=PLpkr!%VCUg#Z&.!*.rG[A.R:eb;R(1SNNJ@0g;1j(@i,mL:_)o&c1,b,[Y$3HW-Lcom*cRU=qq\_5pdGqjqV_hF"/XkU%O/Y;6r[?A*Tp(%LJ7Z/M3J-tAZ@f186Ep4#fkJN,)[aokM]sHKZk44^='o%"VYuE392c\M[BbliGotO7RW?_Y>ZaMd\@sT*g%14#Z=#\oZU8?OsEZ\%km_.%Yr`^/k#,QJ9p=FfiQI]T_Eg/\2l38<B/W)MCfsHm7h$Y,9eI?A,$-2W;'T)(%]/E`:Xn,qIT@`"<=Io!;G%ejdS7b\(jC9b%mos3O-UG(H"'Gd@YVp#(o7<.#GPS`+V8`h0+<UV(1NVo*%nY#67%dQ>SeB9rd-en`'>]UW]ORC[EU\ca5D@;dD^omJKF8l]/!AB7%n9(JjP_D['lA2/GB>Sk]7Buibn5WJ?)SXM<[":e9pKU%O?jZg`<Wrk#6BtH2R.;rkE'_DK1Pmd/<[ScqV@PH)L*Xh[eOGXkY+G<I%";t4:K'^IDL"Rlj9c0Kg&$m`f:`&Cj=Vb[\:FG]>1a4kBDZs=ln]j[a_36f]?@k[eqC$SfSqSs6]R$t6_;j;.M>TR'I0<=m^543B%)U5/kK*#oRXAUXsC?FAH6qTjBN=%F16g/`pmqWMG&r[tiAYJU=*cmMm(hOb?17=)t,;CX0-]17B7&j]N!RUlVaM<B8Hp@fV&4$I`%E.JLH?ig]Q$%N-YTKiLq_%6V_+oiZ45R08V!<GSr+UBc(L]Bi9!ZIHA!Y5PZ!j6#]'K#k&W5&WbTRd*-co+dX]HBQ48]!h.=K?[L%ka>\IYaQ^aHU3(Y93<*i,C5U)-`e;0+UR!?C(c>a#u,TQ&p[]/CF$hMg*H02-+*[ak0ou22&t`keI]4?"hK(p2!(F48kAeD+3Uac%5-$rPHEG-J)#PQ+4=Q^%T0^>ol8c[6P?:fqU#:8RX(3girhYJbHp0[O>Xn3/-tDcMWc:jgGo'J83PGE,`*,H5'fS@D;34G'Ld<X[%YGJHi47oP=7VW]bRmSisAO=/+TtRMRJ'9$Z"XEkhCB;>C\-@YDVD&h\`!H")'Z0[b5Snpe'Bh768iRLpFQ!?KVF#k5:3dN:@r_iH%=:K@Q-)tMJ!kh>to.VOtYBgn:q.ZmrOIT`Cqo*_-aBKsV8ZaK7Rh*n;n.I5DVg^`DH3ku>W=F@l9L'aH`?=V\!"(9M@"G]F(b&11%CmdB%jZejG-''0a%JD9g''!B/Jm<>R\D\X6:ClMt>0a`V(3q'IBSC78Uc!0V``'d>FqVe'+3Xa71$"G@@IKlWU+*#$5R[+RP-E9f%1p,s^6L4tHfKGK4c^$oqjP%Tq'8-N'/6G&@=G@=Una/g2RLjC*<#Xc5#T!C1#k866Z(5<J6+pqu\M0f9/1/4Vmm.0Mq>(CR)QHVk%;\S@(qNqAbLl-/6.+fQi8#7%o8KUkE:R$L,Zp-F\7j@jV;Q:Wn(_(\)A5)#HKp+k&3Obti/X1Sc+;hm*^]POCJ-/%:JI,_W!XV+W%dJCFiJoEt3Yp_$M@$"&C)2<dq)dCK#a@2=-L'&3l2_C6?n^YZ">p'X@g&ugS\OaYi39X2\(5*o$KHASjXu><%_MHXdR1AVNWlrNm%k!3OKZ"9&VPX^6b=B/(jh"Y=sA."bcQrZLBaIXfSgg7Nl%*96;II5RaZpP<Y2(S.4>rZJuMF$$K7-QH1`B]$T,dNem\h=D'L(YmH%d3:&!"@]=)/4HQWU'"a`?PrI?PqOm\#Gd/L"iEck+cghD8Q?-CVn>J(23)@7ca.[n4VYTPp3mK@/k,#[]2sIi)=es+JP30Sa#cY.%0FlYM7QT^N\P3pABNhE3C&BY.8+sh,,[Vl4#I8Vb'UNrid<nUo`;ttRRq.a.:FYlC`IWjmB1tFJcV9P#<]C>V7rHr"6iEH2.B/<?%V@9@7@SL/T[_/IuPAj4U?k,p=+fTrkc^6"0:QUs[*!f!pS=>=371"8KeQm%5=<uBrJ:Kqj<\Xs"_&_"MC0dc"+TKl_G*L?COf/>"%WV<Em0HAFJYos]9JZaS.KAshr1acuS%_SNYBO->&K*p^UD(,h/!T."]2)/nehFkL(*)sHc<BLag>5EtU4V]Ar+/Lc,M_M#ViE^hd%E\QUW1FX4HN"fY'2K/[+4MV$KTYL[kJI,"h!!O!'O9t\3=MR0++i(m$U]M)9!^S^ma-]Wi->XA8$rrZnM+1SM%8Ee&(9uEm=!+R[%6UIcF75VqB&2GPb`"Xt,1:a%a0mY_mS_Q!,>uDAFM\=1B<C75NQ$k*P^'M%hN)';aT<Ym62;#uB6J#%dYJ/XVqG;5]$oRPAI75WZ%7ql9s%;(Dc&nKu=(Mc:<ms@IAn,7E#L^iRAE:?_ibDMEXfN3/0gK0ofapCBKY'>`Sn*>@$$Si2O'd$&%)O0EPamh_gW\MM=a=N^a%d@d.9kW&@tX+?)::1T$5HEg/',/a[1PuECHO[s`:b';)?=`!"lr8]n19c4DN08r$Nn=>rqU6Lo'YR(N@2l[;A@.VVWJ7&A"7X(.9%b2hu]N<;*f"VnuhSFC4B]HV/,Z5O>a7PW_Lm(X,R<$6bV_lD?5;!I.*>"f)+(6Qt\558?=\&c/>An=c.;!d188Z\G[#i%W0`o7Qa%K_fA,0>]$.#fTcqTjh7C5mr_['rP:[.d>-4V<b(B;,s"IOP_0Ho$P@VC1r"ki65#"eEA.L.@@oQ_d\ocL%G_31G)a`6q(FAc=@uL%1%VB30GUFpa]=f*=]AA#`Q6HZHDp\L<L%NmP_>`f)AHDpm,8\uq"BT%K5N_"HrbE8E5G<rL=\ljnu2*aQUc+$jC*q%DoHHb#-&Kk%9;&;#JVn"!e)8sDXdSCHQt:3s0d/h<+c9`-gLt$WMNtas%[A8=1u%PeY8CB,W>er.HsK/T=JZ9Se,$kC[M>K9nk">1bX-([=>G_+%@%H$j=@4>H<i(]gU1Al@%">(uk6X19e7(h$H;$>$fc02k/jauB./Y#u,pLi1QA.HFMP!97&Yc"%Cktun5W15mLg"VP?<gU?e<!=*%8\8jtj05O$JQ5=%(0G^t!fKTS@9'S6&$$gUbo9]+MCbj+I#15?n%,;=6j;J0Pt7hiX$qsXd=bj.ZF$+.(0].ujMmlgA>MR!2q%2K%Ho=UC844.`MeD6>A>Q:k66naWh&$XXi&k%Pb<ZX#)iW+)'6I6.*oX<K&h]]3.86aULosnb9kGYu;IP!lpXC!kLcQ;Fn'm&BBKrEW%W;k]u6=K`*LshI)bReT-NLF=qB>TC+V'&ubMA;j_Se>f)W9eXtND8jcTlF<CTSqRr6[qG9'8ADC4-`Wb?5+Y2;U](X8$/s-K4Bjq%a`MuHVFD$h*1r1/+r32[_':FLBu]$d6IDcqBeYBqBI/q+3SU$<W<M!LLVXVU+cTMrd](E+9JV_q?'.fF;F4eMOD,UP8l-bZOL3Kr%U8TnuSAeALED/)qL`S;p>o%p/C-8C=*6b-O\:bbY\MNZD#c=m##t.^rTILCLW+])(W1XbB7%tGs:(5TScma*q).eXk7U3VCY'^[6%.gd%hEC$P#UHUQ;l&!b?\4/=]D6QJ@;>k&caQ<'G0\R,MKNBl=[CSYGl'.pgV_Bq2$Ud$U<e[5ihP`]H_22#'1IXUG[#Ph53c9`k%M^"3=<-)2P%AI7H?l3CD18j#.Q.(1Dnr@O-3)'DT#(F5$)3JlAA))qP,g6jXb]d/K&N]fN##fNJ-g'&#NBL`T:W=;DUO,=VE<o`a%nOD]J:+1#.%Q.0=5t;<T&W'(tYfL\JM7$r"*M+'[Um61BO's"ufSo?]K1P371JUZT19]oL$CjuGb@qf,jp!1FBL];Y<C(&*O-[Kr%Ai;@U,*\K<Z\ldQbV2BlZbGtocl]&@Alf<pCIpobQ%_M9<H:bS%%MH_\h'chS/&<iC'&$*CU$!@(?C=VaNtg\e"JgE`XC%3h_#d4%&M1>A<K/\H$CQ_n$WU.Kff<t%>W8Pa/Nu"R8BRWF)$se1e`!fC:f&+)A2QJd\+V^\b"<:=f(+VtALJEnjK!Bncg:9>hcELd0s,oj%2!+&1;^b+!V7<CdP_^hrVOK+^FVrfEAnjgY=]A+P(J"\Pb"8gRRhJpG/<d%b>XgKVq.)?--X8"aZpGBXo/@,FdAFmCiNb*0@TBZ!%&N$mE=B9>R/<`":G*uI:CrB1.5p$CYqp=IH7WsZoa_*GhCf;\VlDu,6U/!!s'2#-0!n,.*82g,W40]d+g>'667FdbrCF2Hn<#CFt%&c3:Q$VeO=$6^&qBA87K&]8.6;<EOoa=E*k(_ZLC9'O8IY!>+33)E;A`^WnT?7,1r]=lAL,4l4jV7pdq@M]mhD1ka)/uP*3s,e-J%)OW&n5mj0K_J#)9-$4!*@U+^$nh.dG,cG1p:UrK=a!IcidDd,H4paMV)5/:5Jn3(h;A@+$,`f0Ta\SsA6<:rM0tkrpX^%T4dU^R(%@tBS5%Qge@aA>W2KRW9\asp@?0p<;s(r['WCD[e17:c)CLmoMD_[O-_oU'p"7MP'h'Y,9</8dq<&qh7O/3FmrWR.ZhpG*XZ.TfLk%QO*C?qf(UE`COd!V@jdj:F&9<?m&#G0dmVkSd6SHXcI.E;-%,d:t6A[i(?/d@:Ve9"ZM1387DG>1#m&$O,T/5*J.gem[=I\HS12q%K='/UD;u7g5I^m#1*TJK\3O7(kN3^o4c(#VklORQQZ.QC<W'U4PWY[Piq35.Lom0;A=qck9"5i\6,hj*n0$=^Pc:AGTMOC_oF)JQ%M+`p38,CAr\V(*GVTf7o't1QUR42^a(3GXcY<pIl/K2'a/)h5"#ob2MZl"OWjdM@4&=X5`7+s'--A[NloRmGuk-.YsKno%uAhI$@%0ci[cWHOVUeq=A[R,BXH`p%l0Re1$_(cqV9%5V=&c-VPPhuBBI`0hiV2Ft&9%&2])9^kH9)R2!$ntiBqJidI/()/*1b0i;*$$+/2%bDu:O#u[.`S0%.80]B:8^*(8;6:,0#;3QsgB5Eh8UEb=EnQr0XZ,!<[/)>?X@8Vd`-iPl.&JuPe8RP5-\H<XidC(\R1dkC34>VUX%KfkFJ99>O8d4mB9+@2>/6lT'm%h]:s=:5??ZH*\)q!j:`d54Bj-8ti<&j_,c;TB:W1>&^"6A&0Km3VSD+F/NHf>A:Y/;Ai];>$<.%'dfke!o)Tc[fhF^1#b9SPIO8cW:gnZE6ASFS-b6HZn'(mnmM>L,WS*E<$9$8k>r257aVt.KUiGs+:6IRd0C$8eB+<08D=El9GL34%i7RZNR9E2?:e@m_L.W8H1XTWRemN4"k*TBg_8<@,j$4e-'E./T$6umEO^\DeOfVh>i\=>>jR_[O7QTWS"Uf(d0JQPH;,_29`^6BY%Mp"tk+sl@J+EFJkQ%OnB_W+H!JlNQ"'4s^';(j+pX!f;o6,6NC3pA1aY1CpMX&UTa.![;YWcSbgN*LKO8/3[XgB#Fg_2I+Vm@5u=%98+ZK1_OAe6&BBS"Yu(6n.'&N`Kk0d(R$1FcqG;1kJ7]bW"=0c(j!O-&<4mrKNPl1'a<mLm4+K2d*hhuR*8A+*QTLj22D<68>(44%61`8$FX:%AS0<ZeJd$d0$*-?a<*GZ-oB\b0@0REi:-kX__8*+2<.d-td9sA:%]qg+,p'0^kFiUqL$E%f5J6Mr5roj_]s82))"MWP%`))).7^P`,U^AFcI&tFXaOLhW+Q5\B@;<&4\_n2N"[4*rJI@9A![aNA0e$cB3un\Qk'MXZgL[N;%cb=(VCF-*f)6=lg`S&%=gd(i%/;Q5F0nO.q\j@(q"u583i+&ojYe[_T/__;0aEO;X`XF`H$Z&EHJ+\X'EW$l'1B`po$0)AJ0l8D%i:QHD'>^8*C2=dqp/7g6V&2T1%$2F*A&6VQF<%;<M0Q#I1f7L+B%5'VqA>.("6D8'6c43:%&7,VMI3C_=KeQ@0QQust#Xq0\W^Tf"h?eMqOhik[<TJ9FZHP,0bqK]#%(P0Xp-O-<mAE#j"qh[2j?6BcVTr<Yhp-G*C[#cD5.K3.C`#@4-0ndRQO6\n+&0CDdkY)83*bQujfKn&VUI%hYlmEM767!_Q;b0kI%I3N4!Ho.@.L+3_2(tMbt3V+FJR/YL'W!Yqi<Ma.S&5Df"f(]NW`,OQ?[@nO.Z/8*6.LMoC'&H##%jeLh7SX2O9sT>g6.Z?K<-&S4%FDOp6U+K(\'td&b.BX?N9[(@Ek[3@cKTK39;&'M2,qU;oLc$350JX_;6%(_G1C^BYX[K$#7[2Sb7O0Hc5W4`fEf(2L.Zo$s*)aUL%@b#(NWhX*g:tfKIWi)Ugih2n[7;.g*0BZ0+U1#Fl)3g48ZQJd#:OblqlNGPRo9[:7$.l5V4=!CS,U-.d1KD%?G:$e;,[k:PmhbFT%2Vk(p#X_,]30BH*\@I:Uq4knsa-h/_1.@PMN$sr<jo'k#PL*g!ni6c.4-HR4WP!e:8BV]i_P.)@a[.JH`-=nG&Yh<XE7&8Rb'6d`%fOn`.1^W@'H+?$VGaHZdL.eOMA\g__7B-!oVuhs;-;('bG*n+8M@cCom]-#NfOqjYR/\!QOC32;25lA\4<Zjp6OcTM3&ed$97&AB%@$K55R$eNqaX8EOLDb=$5u]YfE"925No8SNA>gm[cW5mk#o+b-WMonYD)'VAo9>"t:gVo#QVn_Zc#(Q/gS!9L`QtI)D'5t-$m,rr%o#7@i=7B$ZenIcN4Y2:S_@JI\X[puE1GfdalP#>O\rJs7bRD13i!(KsNti,(RY8$L2\;INB;d+$<C&K?dZh]IK^R>D_nh'rFI2)H%_es'R-OMX]FmN4=VFX-C"Uc)hT]%8'k#;MQF,HQWL*:VX2A>Ep&RkJj&hc^;W15n*)BYuQAO^+05(;rk?i^R='2[MF^nElBb14IH%+bg=N+H_b`C/ktQNJpqi$5Q0LMVEbpUnW[]_QfUnpD5BaZ?@?658KK8-B+&5_T7)_K8=JW;l!/"R0jN1&QtsZ@4Wa%O8o[@,NV93%6mW)c<2^4ZO?k-C&edZ(X8"u6$5V,Y%O:(tn>?+e+JB?"9OS5Q)brY$S9VRd8@V5=8g4%gZ;D!/Q4/\#e>*hq'hsbHCdW(9:)dGm%0Vhm5l,1Qk)3$JMped0J\K[_.P7`[:A2c53*(o"1?D74Y]]+uH'Zn4f*7rO'(,f*lBJ>*Y+@W]"6olqhA?'g,6kN"u<\msY;Sdr#%mA3KN%GmA0$'X?0?o5K7Up!.PMk\NROMuhcm-7[r)Y?Ug"D(L)"J:?a5a.6BW3f8g\g)li84,_^3;sJAlDY/*>oL/%StMGg2C.ie%MrGu]$^:pS]t2RrUrj9I(NpJGZ:e59ma/t<Wr.QgYZEP/SmXBYORd1&*(g55'J-3$d#3U2WiDJU$:WA[#uQaB,"=feE+-mTCK<il%Q<-Ap+O=PLPie!QLhT)*PUGma>pcpXY^kqg'oJHq<[(lA;k;GB<^(k8*-8BakjkruE&kg&@:@&'[)*KH@'J$bF.#`=<d(PG'MLca%&^+tr31X6HC9TJ*,Q\RuSR:tjWP\G2>!3:*>Ul/\ch\@C<:n-Wb09CX%f<\@%O.s/k79ln&uu<o,up"_R/"2?.F,#P-B^i[Ss+S;%;M"GcFVV8YWr<?:+_-atQjI%(eN#1!oZo(![W"%:X;4?bX9VC$8N`PF6Sfa/6AUN985DUUc5q_!O]Ij@9[n9N&;`XlQ4+M9e]5`4%O\uI@:1bf8H-(nV>`8<1&6BN#+W+06,,Wi96BM2BK)a&Le@VLt&[@E[`&*a9U.h^,6>q6nOC=so-IF+G6Ih*,*`7KC@f$kY`slZp%f\+.s,ZLLo+JXQ:StP&bp-e\M6mSQ\+:;aXV'VjiMRm@3EZ%ntUc'aT51=XV;8poM'!/1cMsAknN\<,^W9FH6=@aKOPE9h$o12"i%5#RjPe[(>L<SSd0&<.A;BOm6?X/o-MQ"M*'9S(3N#DF(t3/\%`>:Eq1E\l,nDSJ_1dPf+'4+'C91=T\KPZ]D]>iLJVr'N5r$JMR&%D(!h`ZcsJ)XbfjV\g*rQM.sX<Q5[9LK-Q!U/>,60$*'e?`41oX?r;9PPM/<47u0`p0hQFq:*nERb;^8.]Aeo"HkKBL&e6u2>$QG^%Ta'Nj4[ma*re"5@1V=/#=(]fl`7,LSOBsZ-7VjA#<f$Rld9^QG)3PQZ_,8k+O$tC?<3W$;(_N$P+KM^U?7]U!M1q!h%UkpL#i'r=%&Xl\Q:h*0#ME-rH`+IY<H+Uo75pKa;lXDUb;sPq?A,3FK7Trd!@S-]7(a0igiKr[_jUs!e?pbO<4epiM<m43p"rSdFFK7n%&nJl0%;K.7m4I.,M.'S4'"H<(o,.'I^I#:6L?jqC&_'jeHkgMNN*JAl;P\?.5k3/?!'tBu$a9H`TI=\F2$IL793o5i6$]3*9QA25]$8H+G%O&FVVX$anITWo/=DtG3eM,b.1G&g,1`4sEK;5)d!gMt8.LKo/)lL/-4CgIk9Z4qd[\4mT92=rWY]S4F7a!XJ3fU&:V"M7.SUm$p4%P]afk8aUB_X].XG-HdL*=bmTJ$upPaK41+VKampDaMU2jfL;SHqgQ#[(sgFnYg4#=[4%n.lb0Vj-/k5f_7mod7HJ6pV,bHgZGRuN%UW=!">IBh0B/^i2LfZJm_]J\#7-7o2o29$m")15n#X'&C-hJC>jZurG%!(V/LrjFnTUg.\)<BkW!^EjW)#AOAms9nY#sDGfM:uN>%_[4"ED.i'HOs25jKYD+^iP867'6?bbpu*IeI13kRKYm_JS0+^JF1sc?9o.QpNMWfaEBg<o)e7F+*:=G4CPM^@F0U*>YG*HR<Q?YO%l9tGE*>)5t$`We:^/eK5B^6[;S;jVWP,T;dd2[7s=8dr2(oIsV&n;]g\dINC]DAK82JN0,/oaU*_S%DIb6kk/oY?MV6eX8gh`\-)%=cc_@a7McI;6]:o=5FRQk$lDY7Z4QT']L?K?S)fd=AaXAHP-Y`.t#p8A5fjmRo4>A,NU'5k92XG9qVoETlEXEj).YPkX`fhgigbd%Ag1[&P[oabG%VMYM;T9$guHaT'I"Bk':G%>Bk$Km(pbsmiB;$h5C<[ECa*C*%;bioR_e4K;;c8a-=m*:8P,iucpVINKc2\.6cY<^%S>d0URXngE?UB_R"MD.pOM"r#+tM(c>T7G*K;t:F.EgjPJ&`n(dDqTFS>_2\F.t-A1iABm(M3lX\m%Qq#95s[V3MaQ5KkN@^jo<F%HdW<n'2f^AR<a(N;6\up(^;@Y^W`?3b7VEU65;Ti&2<n5OVj&'^a8gRfVM@<%&>\O7)=HUH0?NI.uR,!S6E=*6/b`t<HZP!53B:m%1jju1Wk8_3R@H`=,&g!iff9V3LME^S),Q!'D-iV7Fb[`-@)8MQUs'meMR?`Gg#/d<>PY6P'<Ou!m'IQ8ZdB@s,j:tS0a]6Ee:L66%4!#8N3*B='"Zu<IMPR=b+dqjWW[q<M;>DESd8Di,C*l\#l\UT<D.kuAY[UUQb,$NQ#oB=8;<fDo8[QQ-%j`IC@j[b+K#&T$MG-U/%Og+-cr#THRSTrrK:bo)i;!Q6T[h1SENB)=.T;JP!Ai?5P\0S1\<bW:=D(8N5dEL)A7s8ngF3@^>3F[/m,-qaSiX7j=)4!h<59VY#%BW<J6MF+kRn*E&DS=pqMEJhC1\[f^#pHacmDUAnFN%:mHAW'fa8<hW,6Y`0RK]%0ME+I)s<ChV$W)RmFXrNtT;_1ZN%l*:7JfWeU%>od[A6>\4pC9'#kf8*$nD'e8@*WnDOa%[]ib*BrJ*&fT]1-4Dgn>plB$,U[sL,p(.W/h)?/jY;iInGBa=4q[r645*^M2G:XR!X/e%`*LC]743G>?_aRlnK?e&*]3ns?ifpU8(f14Z:mDB6Y7i`-.?f1_c$dD'hM,O\l8rq<YJH=U!^h$f$NWd;A3fGL<uttS*MIs#`_dt%%-+/IAs"X+>K,)?5s`#;a!cV*$,Zqc:[0UP;+sT+<RhPp"ZMm<q"-R$DW&&/Ke#a]*c;[H)_M[l9$n*deMBU9SrXH/K^9V8W=9sA%F@*N1eRl5PQcFq<4/>Uhm9fc0T`mqPWOOSq[B9EP`>tsl;BWg62O+_):2o!p)BKQui#9g0`8E2(YpfPr_%M]9:=q*qM6>0m0XI+-%FcTe%*0b\B/W-`4a@/Xd8P)+HB6a",XVru5'03qp_eCEK'q<iL81<>?Um3U]$;i+.eRrW__mYp=XH<is6=5.0.SND>s$1_sGYW2]%UYC%P74errAmQ*V,FlYd50qbX$*=-,Pj>"MX9jXtKgdbgbX#R->c(,FF]*OK5ZNAmJnqIQ-DI)aX/Q#M.c-1Yb"8+tj0^*q89"e*%9,l.`5Me&F<N<ub*qOKdEcGRs9ghPVjUnlU<&S]/iXlXb'2qefaUL'pm>rJ*gI)+fMLg@`8XQMTKP(ZiQjAupL5:58V,S*ZGD_cM%7r7D[O9f?jP-N,sK2>E9hmm*PcnnWMm8dL:3_^U2\?P2Y&fHC6;'8TMQWVB*GU<q;FV]1iR%mooQ`>WsUKa<dC'A_],q>\+6le].%dE?/B5pm+VnJ00?5$9!W5eu<C18bS2',?O@3KQdm1I?pj8uOdcoF+%gg=2!l8Rp(Q6SFVtU6MV/$I_IdWA$0]d-RUQ>bMK?%+o!h%??r$Za7Ubf%B-)^:E1EcUg])]":Y,^=>D7m5Vul&9+ls`T4ms42\BK\+nV4l7nHJi,SNcP.1)H'aD>S+"fW26oJH/J-kT;k03]ii%XRMT,;Nt80<@KB9Qj.)#Mr,JO7'J@7;W(N:jG-An?\]=h0VB@3LSDURk]$qSQ<YBO4m/%M]e&$,?P98`EVHPkOh+J;54-FuLcCqP%d>O,B,d5mY[@=LX]]M$W,gK1LL!jg^PM$^,3F(EPdaWhI\]^(qCBDV#W(c5_<Esn_<m4i`UjgF)U3'qaPLIE@b"u'2W([kujH>9F%)MG+fSV]$G$fXb[RB.K(1`cs[e>]`5*_s&@VlJs(CtloLF2J0@JS51!eLX]4=H8(.qI<4[:K]5WDUDfqM`Qtc,,*6k749Te0L]HC%U'q>r1_bFjW6ot3@;,:]_M4a&o;#cGZ;#(2BbKQMrX:TB0GKi#9m.):42[11=KiRS*@\D_&kHLmq44GoUmdQ:`1e+b2j>"Mcq;jf%:o_"@R]>Z"7?.^0LJt=2#ZG@r6:57MfuS')0J]XNUZ"HkD(8(2[GjO_f4q7N5H=2Zf@[6hQM<irRX6NS6nBYlTC*nen<)CiM+b1T%0]oEX>&AgQR?4X'@FC7%K1E`\&+WDbW^E2n@P/oba`,]`CtDR2.9u]VE=HJ#/eqi8`JeS+F!qo_TR@;aLf(D7>[:l=kZ!cVP(_-$%7O*"WVBS/L7'0qN&FJQtY:,LT;CYCK1iW45Nt[)LH;T-cYZZ`M$H7!I0:g+VW#h'-'$6^^@V//EXb`Y^UL8[^F?Br#g/j&Sh?TT/%W:]T_PK?WF,s`#_e4DS"!!)$l!!!"8%Z^r"ig@N^p(RK0P?\q7"onW'#S7nbMKksG%06Gs!!!!S!&?kg"W3-7BA6*,DY#B:AnYE@%8q_DOE/p)R>[1;bKgmJ>XDAf;mqA\Hm\^Ju#q3+;<(a#2WeN/B*.fs\Aq(+5'E+_[C`uNN)^WrX-Rs.U\Ca'Q95'tffnKFnqYVts%qTtSPJge;pCpXIRN)4?a'j,/BH3"7e#UZDmJ,]$'n&JgL<c-U44E\otqK)OF'nm[\d[p:hOl%FJ==U57;T&(n8Z%I1/V5T\b^qNc%;PT/h'b*3e\0MaUVPq/Jak/DOYD[*ch1jS(<lcOP(K1X!Yk+uT)0kUE8iMr-R#*:baRREi/uErXe]$a+b/FXHPSS5C4sB7C\Cc,e%D-[r^iJqHK])/T+9e%*>Ms2plgi0O/af5e&*.]9US@u+9AkU@t@VeR8>g,pNr#Arm+,LAB>g/1^;_E5<01muCoRe'o=I.QrbPg!g%[u:(CP;U=,]Qk;4"@dU?[X392]OVB!d5M7U?d&!!`H23i7K";.5-!P(M+-1Qh6SOPAn5#8_1/50^"d[I=Zr'b\"Kk3PRTMk!+XK%%"U*,Qe*2l)+9:0BXl*K0aKQ/PK.k#?DTr2KCB2qu&,2(XO;!%R!Eai]9Oh>VJ9D*(`I!qS2;VDK9PnbLXArZ(<WGUq">B/i!*CBd%G(1g#?<hU@`NkM("i)VJai!H:?*++n*o?0#%qEnNr&.h+'`cGU/gC@[PP$aKH,@32!';,dH4>D\]-IP6!s,fKS8C-r4UUf+-+(k,%IP9`0;)Ylaf&mr>N_O&Z&n$a^1Lf90&7EbA-l[;>KhBYr(^`kGgf[>%\H^]U#r$]ddh7Sa-G['m*Pn!@;^4aK$HhFpo6\=)]&4XF%cF:k[(K<m+QtbT/hHc$[#I%S,/?Q.o^ArG]+@iiFH]BAeN[f;%gDL#].nhh;!DTU+QKbbdW<=(8b*.GBBV7Eem<&sd!j&bgQVE(X%%mbIZ9nt))fgj<!TFuKl-*G&:pmR-CM,MC_*!4=b.qa_E2!E;C-/9<Y'X'VgALS!s'n6lk\&,?j8g[a=$73^ug!=9$Op5mF+#'kL%q^V+9X*g+\2T$?cg#Hn7H,$i,b@IdHJr;$%Yg8b::&4BK`*i_nJ#/T@%h9dVGIOP-Yc=Fj2R(EJq2Z0oFS$l_efM>WH:jUbN4iYG%K11`W1U2M-X&iRMo-u-[?VSC+c\_46"B8^;3Fa8:<*@lXMYa6EYpiFncNpn+b-^a0[Z:2Q,?^\4ns,+IHUi$_TNYnJR!"i.<3J]@%`C[^cgb-4*'s"G,dS@&B>\l^0TbYJlN1ZJVagZ+R4i&Pb_V[aarnQ2N(u$*QWsjhP6,33nl_e`flrbI5%,K!m&%k024_.>cipYP3%AgK-0%l\R(kUAn:?03:7PP^8.L:9,QN+GAF3G/K%,_L)^U%Y4_!cUG`MG!%_NoC`+.\c$LUL(V.lJ1Lcd@[])3C"La-FK;QP&I9u%_Nh,G5M?qDmrgEn`2^JOTt!l/VD["5Z_8GMK]JqlBr6tc2sWhB!3p6e%@.<%GJUCApm&,0!3o),hMI^;,P)%\J6p`*nb*kpgf8HK%RFSr9F\EKRS;`eq6`3lLYH$0sZ5&_K"cq6+edGsr3R1p`65AU0Bp^gm/R15_X/@6R/W2<HUajt2!BuCFVTr#GVD^k+8jKnR1</:K%:-pj_>WG"%5aGfXe(*?DU*';t"QpJ!Sr`;AlQK[@hD@W!<)>7[c<3q/BUSY+%,-Y$QDl\t,/5Kt$1jItA/*uri\+`-Fr9Po''<g5%H`4o?G6odrD]ZBNGgn-Ma8!npd=uDVa[VT]gD@Hnm\_Sh!ap*eG):?aWL1ZYgic`"gb1h>,VaL8lH^0UUV#ha\n6TY78-fB5<3DZ%*tV'Zopt#mA\t#I:oqo#Y3m,!/reO9LgNF]a]RAn;niLOs.8ip3+f,61S+_nZmb8kr`Z[`LKKe1c;=bD%5_ALPJER\nj-1rXiUr#%<[oh5"FYAYGd01#,r\fNbRU7;*m5&H7>>.GREkj2LX?a#4tV]s+)^FM3&c[?dWY1-csc=l8nT+A_FYWDB>DP71MON^#]d!BJj!>n%4];tQ+/s](72Ug*gZ(ZN;G=W)n0J.UPZHLs)*FmBPB(+<CdJ[Vn>g2j'"6.46Q^=tr-JE24kEV1P!g/5*F@uXr_nlZ+`3N3-etUJ%FZ`qTVN/$TBfeIjSIETu;2[./P[\_?n0Z3e@O+ZdPU']rZc5V'3>NdN=<e7f1J,[$r[+\;A\jJ&"V*&".'5A@qsa%@)B_%dWtI^C%=1^]#bp;Nb_6^e7j&We4A40OIThZh.Ee7ZkIKDR%RpMtJC3Tpdpp-7mgN=GJ*rO)s?5U#3L<bfQol%J\o'*G7dUt"je0A0c$e6'6%Yd2Jk<:`l'GK<SJ_%WJoP'0Wf3tWe@QV-C7KbF$<[N]!2\_Y>A4R]h.$O`Fhs,a'"QMa\J.Vhua&m1Yj&AORmW%=7n)U*fK$QTI;%12mtkj&bFEMoY>"6^S?@.ha=-#1P9"`Gg#&fD7SmkB\,`Pbd:Z2d,H-1UuhN`1;PE+Yuc^YLu?e0p`u8-sf##0:#m"=r5V(57m$8%dQ2=[oppk%8\gU7/:*gMSr-YX>=EAR-QI@5a&jb&aT1m8,`U*c;G,6=Bdet2+E9Xa6geD&'"L/ikS#9u0k)b"h$SaDPs`ftfO8+N%&Gj:LO9HLmROtU7\7Q2SO=UimfjcNSW8nL;%Ad(\]hZ;!5%X!TA31Z2[s9'GE'Y7t!/Q+"9J+pe<^sM.,Sb2n")lN.2KJTJ%pm3g%&X.e7i^HR<>HXB`QhFtF_8o%l/9)_?R=a46H+\4[Ipr-+Qrio7*-DgZ8K91kemP2V-(*h$hl;NGUS_i6n$?\S*^isDp$'!?5R_tG%e==^LR[qNq(o(n'5:hd'%qT2bV`#bW%Z=YM;G"b!0[ZLmJB<c\SiCCRlW>Kk<uo?(JNVZ!@fm&Xd7R0\JT$+Xh9.(NBY(:>EL^a5%gbN:QMAq.?Q"c0r0R4\:?u^`u&H1#Q'<m^Tk,oBF^'VdpF0Yll%+o1aU,:^Ca#k5CUgU,Yj2*tCJHs3H_m\$di//("mARA(;k6iT%'oAY*";`^+,O(=Gj;GGL:*EddE,5VnA/&0.DRrcaCu-QnfIi_(\T.J)iGrqY"%UcQlphq!U0Mb7g6N:f&ggeO1h1)BN=DN]P9J9b%SiF/9Z/NYuOG!+HFLBa6[1ff]b!^s1Z[m[_1djD!(lJD$oXbs#_k\spo$SP\(aG>:g*[gXHL]@U%/Thm#`(R.A[>66*Ch1Kaq]p`%P30-$M_Z0\`[f6PG-,<p\:j3:al6g(h4ordcuJtE(UX_2D:tjoR,`B3<,M!;UruLb/`MnMa_W'_32F#E0n.//Q-QIM1U>C)6:\XA%?!JX"i:`C#[da?_m`n^j"'qX31d2ALm7H=X\7mg'SZXui$EpCJNlco-]Bo?bN!QpnfD4or0UK0!<E'66Dp^PIPkH>^`StRQ\3JuP%QrhK(1gXWkDFo9RC(%LKNFO*V6`P/q+iXc#Lc%fe]-=uu[F/#WDeKoa4/c\'j4(;uP2M^cOCT#n=3pG5Cs6JXODOPn;X;B1ILaum%)U"-3S6m3C9jY1GabK]2GWD(jP^KmZJr;Sur!l@Qqapc5)]XR?b/8*(Jfs-#P>EW(9R^5edeY-Q)g!aMEPAR:El6=fYt"u7Q$buR%3=/:gh\O0%/N"(HGNV)a[i>W_,-5RXMafeekt[7[b]UMe&Ef5rq8XhiX"S0<>&/kr%QPJR4uQ"#>h\@Wjfot_lR#44!m1^<"U$tH%CVp8-&/lc^2AZI$[)rcBD"8a9/1j@n7eAK_`>_lN2WU9B:nn]9:.)6!='=!L9Q>'36O\>L0hO?<*Pj.9%^9ql,Ttd1T0UtV)71L?%o+NAg<PNDc,o`.0ZXcE0:JA&3%HtNP[UeFX/t?V?mAqS=&c]&iMA?hMA@%K/DIc*IKG)t.'/j>b*jZ2a[copjff1Z2alY)Z6hUVG%9n:5n.2r;oN88-UM4/6Idr]Dj6MGr76.EV/CkC;M,?!5a'i%29ZDhlu;>K1h'r@&C/VHP*B7r7t.%@QoZ3_Qn9K(Jl?fKL+bm,Wi%@J\HL8$^OWG$9l^6F*"ra^Un8I=sqmM.JH!>G,j@^6=Xh_d5@O`b!<hHqQADW:klHbc2b@KOV#-f`88oQim&-AXIi\&OR(9<49GD%aRF<l8[gCbN#ean6jFH?r39/@:u+Bh)19dA1a72'63J*K99$/%K5b/'6$JaI[a;&M4jtXN$(@Il%URLA&N6F:L6AP\n5`RH)bOc>%6kq+5]bTMDYR73&225>Yl1-,ba(+$.^C\'#Q491_/4GhUFa]_MBmE94B!E1<Z]'-g"^[%hB>u`\bXDui@i3A"oh33E[eqX>_%j._%.16j:.;e)1)//iQSCjhX`T^DR3.WEcF8"W;eC%pP>H]%LGEI>]Ulr;u$]*26.j+@WPd3cP#UOq5cWeWq*9Z=Wl^$%o:6.*K(*A08%&uFuc_ZD+9#^O#dOZgRkr)",<hX<Y8+n-5ZVm*sb>O&:kib"Zaq&T_sen`GC?rXk:e$_%@Xdh)YAEGlVbk6\ipKCU8>1mF6"`""C%a.qa*#Kk$*]G.@G6Y#6qlcE,Q1$$HjI)rR(XW7je-1+S;m0LBWF%:N]bs'DL<^hJ764X%fNeNii07)\1Lur9..g<t,0dZomeQIhU%H'2k:+\MY\C9!BHF^[)IADD`$B"A<9br"j)q8=.#Dke`)4<'4$!\!uq&IBKb54\do/Gj4Y!f*=cm7oYC^DU2nX+BUhl@I-;:,_Pk%"^u@n'/)mO1CX@LQ?q4)<gu2H8s;L>#JH*`YLG[WD5Y)?YiHg-S8Ia]q$_sX2o`<G7-P[*hMdET`FBB]0328Q2TBA!PV3#')d1@f%'MH>U"lV2IB<7;td/K^-5tJoaXM1BW#3>5/[?Ha6,h7Za7"K_the4@GB:N6G7,kuSJX1R]-1OhTDSMH`juB9o^f"9hT;kFpJdVfo%kf3hYIPu#Fj=YLELFplgoHKAoVK>nVPMn0,.U-`q`mYB^]`1U?PpEDC=HaMVXK`F.4nFPo+ti@%#ZZAm=$.f/*m/HiHKOT[<!Xt>%g8cgoK1Z[QNhI?ks--"TF.RB]l0inkh]i4&2PHh.d!2S7Y8!&%d!3E7M5@%)kRg(l^2(-kAc]KY1O\R#NXSgkg+")il]Xs^MrKsC%jU@GD4L:N^5_cA]1rT?a41"?D`'+mI'*$u.n56=2&u]igkHN.`)0fk*EBh$D>gui"kt<L_Qof'p/CGM6[h--,(+^7!dU6NQ,.Ni"%NODTF-ag.b;k@i4Bgd20lT2/ZfA\KCk1;^a)!T!2jjFNH9'"/__ajrrHM$tD+A][$h-h&])0*hE6]OK;qMr(qI1-K&.4\fIXc9Se%?HGt-WhbBH;3be/.oda^d+!Wi;Mu,bSdjq7`c.?7TGot\k`%]qD*/rk;84UnrC2jV)*/1S1sCe<%ZuJ6.Y9`6!16#5;m*K.Bu'lB%gm`^U33*@YWDTc_JSOYp#.ra#Ra]*b80]'?\2@'N]UH<r%J9c$C\3W[k,AuZE:lZa8UZWbK>8aIZPHIgeB;R[poRP/Ge9^HU>&3`%,g"GaDPsl\F;Lc%;9OD#IjU%%b4be&I^I9@`,0)".')$`X89W<kDXO>HpAkLH8;8bd)A1&qGR.CqMT*5l#m5;jHe-Nn<QL4dM4hj%bD+un1'RnK[WY<\i<0Sc<[tFe6k1Q''l0kb7PENX$Gro)_c`7i:q4HSE_E&7TiMQBK&1JHkS2>[To?]<:OR_tI;[Z;LMq4VCUU;N%-=(&dc*CWR6_%$B"AHY8]Ju7BBAeb%k6u)[BmC@ueBjqueKSui.87"9rAE:D!nHk+Nd;kG.NG&U;2i?>q8-g!<#=(f`\:(\O=J)h%Io1RK7<?hX5BUXI(*VJ9W.F,]=\#-tJbnLjd_`"!^$t<_qDF#NA:e^Sab5X(bDqsP&@(/LB^*Ak=CE1*Uh:ZW%5l-J=*Y9@3s;<=%5+Y\+@[g]a3fC;@%g#3iBt9YQr)=:G5R+h9Z09?N.c=b?V^<i+NE@T<Le(0SJFtZ>*6'o4?<NjRNS..YU%('c)2_NaaTda:LDaQ\%[&b(Rh?66W;Htf,bAWREH736,OT/mJ+fh's0/n:M'"8GT.S7rpO0rhJ+@GNiq1MQH%eVbi1.O.)NP^ali1!2j`CI#@O`@<<SL"h'%1cZ=(fo5R!!;dkL^co@Xmcro@Dco49lb"sX3f0-J.gUuK>X2.Qg=P_1YoU)CibYE?.oI4Uo8)'GRacI[Hl7i.e#9<:_4LlVL+<iu%a3tTjjg"Z5`2MX^eAT.q5h8BE;RL(t(taM(iR8NkMo<3@gf58*61ISGXt!h2jlGk2kgQ2B$b6=YC[&U/4rmZm&@c$jM=&PODjKJ,%d/62j]-N\)b`E[m8+Z-0]UMFX-F*(LqD5Vn7+=TPB[H9ANe06"mk5=>fXg+PJle^=s%_+4BfeC[P3ZLbVtotc86;O1fI%u1$/!d\%j(V^B41+tG/>H?FX<:a<(d!h+&?5;DIT7qhbDN^\:9h&]79b>D`R!H_@rEUSI9%c4@@X5qi2"$T#^7h%,USqJS7f<b13'#]`"-p*%]:DcLFg[)O)D,f'$uK2I`4,?ALF#BbV`*>DN0\lNiZa@*Cp8L<!j5QfU#+nn\Wn0V5ET"a`5J-MF9=QiQ$;Okpofo>Q]GWb^Z=M$%5nFAr/dd2+\B%%c_1?`*'3I@qA;DR?$!bM\7Ka0S8(0pta4BOg0YsWF0S2XOVICE(Qi*a29K8qkn.fqUKaZaWp+Y!o6QSmThT1s%%=G9G4E+-j_s0k9-A4]5e_'IXa=OcuZAH\*/<CcP%^_+4C7</>An+OqqbIXbUEJ%G/,XdjefI,GS6@RO!h%";W-b,J$^(O66Z2e+5%`tEBV7O(P,Z6*6c$(,HnqY.E9Zj67H\R.j@\1.m\.'/&0nBN!J(d+aB06AVF9@AGJ$Y75T#f/G"*"`b-S\C81J&PbnD@1,X`f"(H%PlH<p\YaYj7\V6t5c;M8)S$\u*SR7,04HEV&H0?f@2ML1cnG@ICgen:)HjulDq3X1WjSU"iKMX2caE*pee=o^N/nq2e-UJuQ\$fj%`H*#Wl'/TU*_=fu26$RH6CHi9NAPV[!H%+f?K,N4KK!er'GY^G8FJeV73aIoU(h84Z%<p37Jir]08g@6P[>!U;K%h.(Bh^*75#:G%A]0<u/!O?[CgecalWBC0A$XYEG#DV)-T*G(-t!aUEAl`Mj+_6;l*Bf_=Gr+2K6<;4)*t_\7B!IPV`%Ia&@"[d4;Q$T[TZcYeYmIc%Gg!#%T]N;#eAZ,5btG\fKBsRkU'O/;/$(]\A!K"&MJVgKUWOZOauh5S3><9oF6F:EA[rKj+(WHqdhpgD;E1VZ8<dG]3GGR\NEV#b%c?<04M(=mV;\#qODKQL,FGfrgYOKO5F!Rfl27XLk"Co-RpdhO"ntTB^Q4ttTPRWRMp6X`?TcZT>)U(9q22PN-FBPCW/``m@e-I$i%$G?/PCG!7=b61G>o#jn\[GrmNneCM)bUEg$ZAjEo+`j20!f^F['_4Zt@4c@lYm>8\ol5aVU1,F0'Jp@![s)AIT2>!)G?a98E=A\p%<4UEgX\P!,adq#"LPe>(O,*+NY+og?<RfR>1K^oZFs1%JL/#P&Z?U?$4-n_Nm^\isqsBU4WUppk/RpF>jWCV'h:J++^CKaL$>PJ9%f1q?*<En?N_e_Pi@VUfSep7G+Q1I4p4LEtrgIt<Df-&4GOH;s@o)mLegCetqC^Vdq2FI&*S`s@:m"SknH58u&A[O&DA8*friek_>%PuEBRGc_[9,[YEY$L`SDT#"'Qco,)g4KFc_(85ZEO?1#sB*4m!QS;PYFdbUCq-o#N@fff_0o(n*NAo.b8h&n6WU`R"`i5=nZfQ,.%mqf,[LW$[Y7m!uGMu*,+F/@8bP<"r.I#BE_A30$uO&h0_QU,08BA>sPe!H&Qq5hmX[`#q>G;%0@#pa.6ph0!(URmE*>6^i=<usLj%Ejcs("<tUFS63,jC5oYN0j>8eo%F7S0GBO9k=Bo\eT$(9)G!Xjc.5sN_Z(Q'm"r!k<Xg$H&j/!TXl2;(khfa\1_"1e+F:D4cgQ8/%6J@WO*3c[#;0S^@O]en3Qno,aOU%@f@4+A_f*nK25fDagYS?C]S9i)7APkWm=t]b]HY?EmYd?#@0]BT.nQ'KPb773s_h]Kd_=K`K%3+n$'>o#W*W*uX/7X3W?J^g%s7iciD?i`M-?>B64aB;XfiC._gj9bA_!Os6[&h&37G[Ii9@?BR_ML01)$YQ-`or\oUK-t?tDn)a^%0OsHSJ1_Q-l*OVb(8@Lb0?o/SmL0?@-:fp3iLV%"%D$uY?"/TK)]dd13h^AE/)cBEPY9O<2oW9hI!MT>@`t.9"oa54S#)q/9#MFs%&?J3+!db-ff^^(_2:/-/V8Tn'?5S,WWo)dT)TN<ESC'VtEB)CVJcrnQ3`-X0h02^qpf9`aO5)8OFpcDG;3>7Udr7@t1oLrud#$Dd%8=oO2YVMD'mA3r[r.:m+StgKU";j;]nQEl"PuXlLT^Ef7;ds?.gp8qkA-P;)k"_1(`B)6a[+rT+%QSWE\keZ"Q-nMQh*g$tj8/98%bX^^:gdV`Jng_Mo)%*pXpEl3]Ep65@+D`lL`pF!@QSK1^;D\f3/Nmdh4U8+6N((,_qGoT7U:!+2epXF$:LrRjTHV-jg,1Y<E/FjN%ga)Lo@LJ`GmOV%YI2>!N[#^qMCq/Asn#_`!*B?hMDAp6\#ssC+Ce3TncAI"c,4*rQBaL7^*!iQ>9H3uV0th?.F>XiRcKi,`J)Q_(%_gu[EQkQCRhlXd]nT#oOgrHnX\r7PWlEk:O%OVDp#AJ5MZuEhQYDG#>R?*<`*!^YJ^JAKu%b`rUGeB,YM/j=Pa&k+PH3g/M$CfMC%`]jCBRc3@-,TXDG-JnR'_4NK_m_JkO+OH]QZf)Fk"^6,rHg@,/1eL<b%V'F)gk@MumD.D,T70AeU]m#\:uf@-n5%I,Aqg@Q4b@i'%XiSK@f'r@2m%hXa3;Hhl`u]24)Ps89(=B7HP#?N`a;XOD^gDlCW_l'Blul*FBaY9M$hG7E?DB:*XFh-F\4#?No<R-)LDeWol(Y/^%[MFS'M_co2h("[]0[.aSqa]:FMtgHi=>M(5&LCd<88FrOi>;I_0`Gn)*)O-40f['10Ud$9%Jf:VRq8\t)#^9_F>^anckcGgD,$+o%b[\k^i(Nqe?#N"F(f5&E@^K*L#qogJdZu$Yh`=<&.,Y0ona9Sp\9M!V5D9/@83n1M/s'c4S_@?0BO<FHo?nA.B^-Rl\5ZfhMkQaA%=P?6mAK%XY8'eSZ@\MIi7tY7T\U_AG@VM)9S`c0b1\3B`i^,?WdghG,nrW%O34B<0,?jP-,:c7WPSg7N!LFZfl*VQtGA(P<R.)'V%Qg*FhLpBl]K^S6a.]knL.0)l(i-Qr^/ZI$Q<t#@uGaN,&C\W7!=o1n'VqTQWM`-2c)kUiu#oX8o3:H*TQAY^-(KcaaNCFg".r'Zh%6dO_q\IoDRV-cYJEI_Pmg\&NF,,$`H?JWi'X8ZCcN-I>$8p]B8e%K\\45C/qnWY@Lgd*:V70^h/"@;5I6*Nq,eKX,<]):STQ@\S"%aVedAQi#hFHJBSEAnL$f)#];^$\XZp)Rg5<QhH^X6ZF(q;Y1^PN;e*Ep4_YP$J:4;"@3lrZYTabT'A)6fIF\`Qu70se'Z`Ke:km&%>TF.3Q2-PGf[@^*+=7na4N"!dU@F[8c6(WibeqDDmdu@fq#*VYnVD(5(0Lo^E+jcX*?5cn^LVVk`e87749Z?[M(A=]@*D?1#>G^,%C+9u3;8"7c@%URK&eQ_CV[kLNqFI-*\\,*ric5G*pg3ce=pc>,1+EbbH4uMqH>UfIb@=+KCKeXtaI<a1c,\EX%-j_[aFs-:k^W,P%>&ZIcX.+2?(DMu&+?/9PZtWrKEfo5d%[3W,;=n7BJf(B;Jbr@9JVo`CX^E[Z`R0MSni+N+6k9O,5k4Ur?@UT=,ocnBe@=![eD:ir%Ua)0bOQ)fCi98bua?#p8'7P*k:1f5cL.cVJj$Ym3:db)%Y.Ds#1(UE=>$i/c8^H"Ui^DH&@oM'#qB4^[g/$U1?*dpYE<$Uo83<(*%_3biB3g_]1C_V=,!*(Cr<@KDZ?h0'+M/Rb'H/()mId\:Gr1(sD3'J3BO$UuhFsY\upQN-a-]qMOMlEhtcN$=@U\;CGJ_cm`F7]=b%J9#;,KNPTi`('W"4B&6BKcl7]c\<ULNYrsOf25JSmn=.6h4DA%m"S7:caR9L-d]W;QiNLOnr>4)%'-u]@128LB6L@[pjDldL">GM%!PdEF-\h0h-;mI#7b@-Wf(EH&NerYVo@)XMCi"A4]>e\KNN1sS>c&:k;XQ6X#]&l])Is_;:-/E%n_/([+rSc'a3=$jV=T2dV9s=9%hfXAVF!Di$\'Ap9kp_W)+\iqK'%\30FFG]4I0ZJ3X3paUf%8uLo=>-K^4ThY$kfI]Q`WZD<4*d`cE0Eb%CL.:4#lf1L-#>tD-DUt%/>3:"MDB\LOee>(c:;q$IIA^JSM.X?&0Q220#[YTc9Ho#V4GA#+&3QRE.>W%/u7uEEf[U()kKFj$1?*jF+8kYn5`r[rs,HsN]J*.%*gnbon-@jC&"MbWkpHlCp?2%XfU7ubo7p"0`d-c7Of-M&q=O<<"[E$%O5,%u<S4>Tf)uo;&tlJ)!eKldI!Phlq9c5k7pe<'e>F-!%5^#O@)[LnSO`u-21_cJ?Pc$KrDZ1.Ek1Sp`kD6/1>q'uu@>Z?7YBh4IbMEq]4!PTf-p)b*R<7[+"258\LfOKZ8gDD#cbIo'NWh:"%@34k?.3_j'dk71$)K(1s&Q>'L/Ent_kN5!`(cO<b3*p/[WM2_i>\BKUAsF#ASFK7(i_u8cQQo'\;q!cj^]CZLCOeU"J<&S]ZD.9[%H&Oc%0+K5QhtL,)1"N!T$j^_`Mm!k:6^mT^2GL/VCM1q^]PUl]>&"_P%7M\=YL%WE8'^$>5Z:0feL__B4h6aC/Icfa!09.ga_HUn%p>oMpVbQ^!2m=T(7F)!m<q8e8YHGYF/-^n6-/g_U8n]>$m>5>X')"9//=FhrCF%e:#6Ba*l@'l[l"p3chas.g+ib%HV$bY`4p`"b%8FJ46Faq6`,D)h?'b3qU(_KYk%':OTT`,hCnS8&R\rO^h:A==Jb$6Iom:C9R8n*m%o;pAgAIZHG3lKbQkc`e[S(/'E#<.Scm0?4?%dA9h+[!U937E4MgcW3Hu!Wq]:%5dA;TTR,<n`&E?!CfL6:IE'C'bC)aW@OE=5PJ3q8G%f"BiQ^<a*H4s&C&FF1Rb<GV?a+d?u8$D%P:T(3h_qeQ6^;aGd_t^J&bt'f!J^AHc,-c]@Gj[*k;k9okr.C8V`N,&_l]04+uig*1K'I-4lJ5=/q7SL(LN%@T&ZVA&&"0E/LAa9%]^7K3:'C#lks(BG)5iO)1H'V=MiW:P4JIKnnlA_Z;?;9or=0<A-1X71;HEs6WY),m[A$c0T2W(3<3S>MEMcXPi-sd68b/Hh#`(P#%["A?;.QCTk8gWhlU<<2OiH_ZGBlq8VNPm3&)/2T1Z.Ur'&%tpb(2?Vfa76)G4jakaUtT>%AGn,968Y*Lg?U%2&U%AE8m,<aoI6.@%;3!JkD3gZ3Nli1f0Xs"qmYU@&1UH5Lf&.O7DtPi:(b6u'U\P]jCu9)a;G`f)rSIn\==+1:0>m+1m6NuWi/8C&o$k^\^q<YRU^V#T%PC?r$d=Fas0KVSIHM_Rl;/0so@obt3]T@.2]+XW>ef7T[)YSTNDg>egXiM!dE?B:Pnbg:dYo<q:BF?cOn)`pkR"&c?k8g9.OKf$S%eP1&74"3_di0b?2(dDkC6VkZ>aEN9A*<:U9n$\j2([0#i?'@\;,`i:>aA.N?[ASg*\_C;pWC*h^TCt:p,eDoJ=S1<;2!!,S"bM&4%'paMsd.1"?X@ot@YYlSY--kO0(L9)X4251A[jJSiASW":eO%H8,>[67mkX`F*#5"MO++iTkegVq`SF0TescYVfF2ZQP/ChOk``tZ%<Ak'!/_tP,*upX3V,6-pPeN-YV]UF-H?N*Gk-`."17$R!WY+&b853'pRWpinKm>59Y976$M!]YHKZ/1B\@3;:>?m1Vf!<11R3UN3%(_an[lcN%e7,"F/ILs2.`_J(2?^%8o`+WP3#aWI?R,5Kp#O0mV?ZW.Up%pCc^r./?p>>HhAOufITV)#VI7Njs3dM>IFXfDSO,eH%%5\tuuAVP8=8?!Fe*9O655uj2Y\g,5K5an9!12c[u/u?gQ(&Ac<4Y\51di8uI?-4!%(kY*8-uhdn4Ao:r_Q?am"A;A8o!UN4K)Un=%^38E:f2jD7Cg;NoFrQah@>T9WM2a<KXQr4F,@+rFQ,HTA??f+=''=+pS&YN]?VrJr0,B51.&=b&"F1=i<40Ds<iW_Ms2IbR16$N0%%W%U7,>*6(nYSqMpe3Fh%N<9P&^':YK6plY@V<2a$D7V8jI:^Jb?$/7FMl+Kpesi[`aN:l.S3SVp21`Gm@F>$oNY@n(--=o'hiNe%0TXXcg@c?ePV4k1_L/H+&XB-O$Xc;J*Ba<'e>dKKC1-?gD?+(&114>0Ut\=pbq'//Ml2XElV)`*8+.^l6#Zj)Et@J;8(Z,dCEWlk%j_F;-?OY[bJ:T(%j\kO6298.MTG2?b3,*aUm33,%j)22RQ9,K"R&<2qf8>>kqBadUJp%:uVOq#15jq-a/%Q>hKe=rKUHNMA(UGO&%VWm3-j,,rIjFR6dU46Krm9;;aS^p6\&M<8E%3if>TZAgi$EAd[<Ku2Q=mMI`pr&K9$IOVYI99%4LMneS[F,lrq2)SSI24=k`"?_F%b-4@gq:a]t3[sBnWZ\n6$%j#f5VIRXFn+,GD+<O^lr%X@]8@#<<S:H"JOpW!VTGmkQU2]`8b9ZqB,QG"38DurWJ+ul=i!=X\)EG;%.MUf^1@e3Qs$TYfOL2/2)"8Bq0?OtQij&,e3V9/Sll#s`m-)CfZ]5k2AII=gmpc]hqlh=FiKP[m=j(c".<l`)rqseJ%`l%)QO0oR%Qp;Q6Euq.!9hn.K1,a(VrV:Gp',\Uf]28--KV;(P\k5s:]QAB'-*-&F#fNO_+uqKuNpEN9D(Fs#P.;u19KJ+O2U)CH-DglQ^=HHO%+Tm:V-e!4n\$</p$)XI;O88H?'"aFu]EF/Hc2Y$RA>j"A^86;a/H0#K[4/<q,@t>QQh?V3O`ch75r:#FQKD6CJYBGnng@GbYZLPg%nLG?"%-BF4)WCuf'!g]&=;H;pJ\4DSHGrD`Bi&DQnA$eR3!D7W_84hsRo%sU)$f2c2'=uFQPL4oO!,rd'9=t"f\DqH'DEQ#jAQEg%l?E]5J/@3>qPrJi3Bj[&bY#B-PtHSh.ou5Q,ml3*p,?tf8_McHT5oqA<bg]Z:%SY>rD0CV++6neOQ*U:!\J[D+,RElFGrIVgtO#=%Tn<,OP*8oc-C_XUFu_-X8'4(6jh=[%QLD/cEtVb=6*cVRnt:]%Z.u']N0=h(179B/KQhtN6D(q<;B*%\ht5PUn1Pd#R`V$BMgMgZ%E?K-s60W_[8gtA(-QO"W@q1g*g%)2d+T"C4hOTl]9XZ+I;?kMQd7\27]jmFQUDpb`!&AGg>o=IB$/>U.4.e/)1'iuMV)"s89b5H(%ho4IW6)YY?A+97QIQu0E8_"H^A<UL+R9ns6d6VYg5kU8#&e&CTb/f/QN`=d4d#3m/_t69$*9JRIL(u](3/,0P_/N#:kV!s9;IM;/%!#"rB"PQhc0c]dn6d`Uq@)Of/O:!OBX(+cD[9s;KroFU5RO@sLq(Qq-66Xl_JR'tD8<lpSKP;"U!B5c[1&MA%\PmhiLJT^?g"2oX%$CYo4dQWBIibXOfVjJO8Bmkt]TI`eV>d&\3SP<3]9)2op>3M=n*-Z1%2F:_\4;&Ap-UUag"(<sX)_)'OS9QU`1ia1J<nHe5Vk/ud%"E9Bu;rel?-h;J?,\`^b1OM=s#+*orX-!PT!eI&+^2[j4\nQ@MeP$jhoY$k%QC>=p7#6CdN0L,^<7kNV1UL.M.&k,aGg-4^<Du(7%N7)V6]qI=52`.kI-o@-p)>m<\KZ18&H@Q7h+4(TD"@Y^E,b.J,P3Q2'EtMU46@47QT#/Yqc\tRG<*.)V!ElRHM,%V:<JZK_L\-Vp%I@>dnQY)VAJPRdBW+.Pbdi!6TjK/]VlNf,?T-FiEEbI4M"PE!:JR-@;Xlo.OZ6\0dWKSH[*4MUP,ePG$;)[V"bJq?2SK0<^#KQ\:%4t]5V<Xu$\aQZ,6^Qr87;&HTJTS"g]fM.=<+BdJf"S_45W>O[Ce'8pq-a7!dEu+-CP^*CO^8bCY?nLq)5s@Be!)o]/fZ<o:jeKXD%]M20n@/X#lE4a<""uLT)hoYJ>/D=TW;*;Q!/?t.7T?d;`64<ADEPhco<;]RKmJ8>edW4\FDDFMW-Z7J*r-\SkGa2B#c>ui.+93QH%XV):U\VVa"<O$@qe0Vrh(/GO2[lEXr_1k7'&_7Tbg5WVEYh0s:l,jDlSt)F*niQ1^KPu@2,GH!rMW%HH.0O#\d5?P2/GeD;_/AN#%K$J0reM.ccfQ"6Qhi#Df@$]%7>n<_<+n`d0nZiGUh'#rWEOfhQg4u'VBp\?-UJCDaF6''j/J05#6bT[9U)U2BjW'2lWhG$3\F%np%,kC$6P@3)@;8(E$^4uXlamjl/U2@hsK`m72`[=j9HIS&L^Es<M(^8>(:(+Q^ZE=D9R<HXC?!_*1o?(tCL\Y[*Fg='g+Lq1\o[B8s%<KOj<MBX4?IP!eTl,cOA@rLnN1sNW*1GDs"WN75)'!$GBba&./1uQ>PMf9Q333a=Vd7<*YH$>-13Nhj3H/`nd48uB3:6q1jMh3NZ%rB'F<\=)@G'7D5R_$idZ(.6S8^uKc,L`]:E?SD8TO4V0R'QAef^K0A*T2UO<OF[74!08V&)Q3'j8@J/HqHGnrWDac`?Q&FSJ9%5%%8Q;`8L`g_j_$&kag#d*T[%=4DCsAJbC^oDg7FMU[3/V/&GSrLlk$?3Yg\9p1B6A#@L<!FI=Va+lY)N3]3IF8kaK#OG9FIl>X8Bs0%k]U@\@+_di_d_^AERuRLH,Zgn^eCcS$lQNuTlR`!E3[4r0l<2Rd)KH)LAJgc[+6)nm,Cl_(+-hP.?Fq>"1OY#N2X_rOSWQ,REGop%72uL3VOIHLaXVbA12=mSZ#0A_<9MKP&;M#an'\I!NERW6D0,t0?n+ob>dG)L(4ciDT4Uc`G75udh^JO15k:Q`Yt!-Z*2m@`-j:u?%YhQ_u>nlAI5@Qlj'SfK2Q[[)h?l\a2Ks9ITV$]NEMa\A51XOsi[J&oi9tX$$"Qs@9B+6X!."qE2)%:/Cs6iFXELMFCB.mf7@u7.F%=*$-PH":)=Q5:OS#?jc%lj))R<=Mo:R#F'OM;a3HIhIK(pg^]X#FlV@4.!Anr7_..U&^nbP2S8-?"gm-TfBTGV-QMus04]7"m^DB%0FjOVJ5-'*"7+"d&B-t[*'ZJL)Zu[qUFUF.!]US45kO*gl[K;ci^^p`;=,nPlsUBun],#:pB<U+Ec!"05]?Gf:Tj7SZgtVsneCrQ%&;*);$=`6iEpZ6seVU%c`b^17WWA1ue05h(hla>qYjtD)W?>)aIt/P0Y4SduETAa&/$NM;ag=`I$PS.$-X!m`$s<<OWRgah"[3Q$%6@+a:]9Wf*+.6Me[5Z*,@(&OSC;<j;ARjrR7J;$Um;%5.o)J3#id0kS]oHdpJ#]$44MG5=o.A,.:"oTi:aPA>L19X(o7Tcp@a^8.%o4JqtIGh_>?it@QKfC!sG:C+\iUgI/[0OZY@CdIX.>H8tFpmgob,jOL@NNRrFgpqlDCP5X]!70h*jXQu*t.(pZ"98^Rt/7C/;gJ9%:a3G?_7dZW-mc^>K=PBG_O0KElGsUW0`tR/7-RDHNP\tPogEUQcAJQ%5^g+1l@Bi6_cHrJ6\pt5p&>-iZ64"KX^Y.&XTrSn\P^5,%6DjnKdDPPS^5Q]Y"$Ve^;\oX>I*K?c?s,12LD";g-^7lJK$E0n0=4CEV-+=eb_dJ2PTAW@VB?o]G(eOI2^6Dl:'b>(MP.Sd2ceZh%3ZP&=B%j027TuJq3A8a;_!X_:2Z.G3n<fmY6Lce\kgOWa?/MuKI$tIYE*Kl2RSGq?kL]99lJHZ>3_A+,H"VuOP5pob73'FdKs7uV%VT](nGgtZIBiisK!,OIE5j"?mn&!t4&k^9`,!28#%(,6[2"6a79p^jd$7br.JMcSNiWAiXBG'KL[Sc_8GB3:)@?7,#o.Y]hkiki2%iBrD4OE,*7REf0,5#qhbV/,"S;hIXr^M4Ol4o%lD0Y'UUp7N8P<D?fK9esAt<pm$oYr*B7).icaMHWfFA]tNkTqY#/@OL+'<R`Nc%IZeN+2i(BNN<)/\$H8NgdPCfmbt+fDaS^/""5[2E<lShnpM;[?ht2SRp]j'%q8=.an\X"[g59-B)TZ*qW&%@)"^0)@8AA)fS<%VD%;.5PRc+TLCj*.^\ElgRA(k(Fr@MAGJiWICY;$4_O5sGdAId%u>eVCrT-8Gp'>n/QB9<J2'<6fNS8=KWp?_s/WWjB`%<XZk>r<o%O%,9\&L_$DY*Rk\],H;*SAd1?=0'd%3\4QeVr?VG=\I6bCJgSc"h=b=E_]JR"=!m^<*fBSFunah%EihSU5r4iOuid&fj1QuHPq:Ik2%+9?;nq=*Tonsl*;e"#U`"4PW#)=dUr4q%hnW=IF1=kl5.NT*Xq27D&$k>X)+@j<2B2Q(Q2F3p<W)R#7->JV+DkB/-ESaeU.9,g5H%&qD3NnJVn5B*!V'&6=JAH.(joR$_dSXQC[=%nT5Y?brLH2cFo[&3Rg0LWOedlktMk)Q)aq;SV6PZ()@'hM8?>\-;Olf/Q[U(-4Ak%UPBmN.u@l\)Qo<P/'_T`,/3`'GYH@#VZ"\sQ-:'SlFN_2\_.DN7])/l;ef%3`_e]IRA(]W`O.(eiq"F%b#iI9nFROg_FUR+g%06u%>o6h[R<rArac\H8\HHm%:t':1:e')*9"]<B;62V;d74'L2(=ifF0;>j`WR%([Vrd#VNj[B6^U3iiB.F-Zk)?T,&5+l/rQLXWiSa0%I=:!HKe.`o8tK5SIRJrmDk4%r)/X\m3JV[<-0FWB@0VtiA9uUSLJ;9a^!/fMZb$@ZRm.r`4SigYh>miDl)L16a3$j#*1jVTIQp[G%S27[L`_mX5:Z\&c9g2j-D[f"s$PV:[PsFNNo_?="BtVGBEk9Vt#FuoSH]j98"2KIr*^pF)c&VPLl2Z6B9;AL.Xe#nTS-O4LhY^IK%VOO('Q-W,W)7W3&K=T4*f-#tCV./N&pu.7ur:7&E\(LTjdS;n;8E*'JAb3Ku<Fq.JQXeoNYFZKnVU+jCTJ);DCa`Llk&OAo&oFe\%MEWcUDV7DQ)q3rPZdpNiaPDJulYQ0>;oeH-MX[DNrC&[MX8'=^k%\tdbC8fr(kR;fkN>a@r.%R5d$0q`fk'cdqr<2L9%M]cs.TkG%=B#PmDS;uDpKqfYFa@t5o6&'.E!&ESU$e'KqOGGm"E@Y&WR#*NHO=7i$Mpm"DsKojIBgM5q?4$b$TGF>j`_.`QZ94.,fEho]amL3%F3k@lcU?n]ki[(Fj@:XMSV`Fb23Mp3<P.HY@G!DNEICX3Qj2c%NWlJ-T?EblKCH!9'A3d?k2$V+hZt'(!j#Baq*o_68=Q,X=SK,i%ek=p:n.h'aU$TD[HS/&O\B$@S)D?1[dg?NQcj6Am2G^+CMm.!N24p[T@ACuT8<+skm^Fn:#S"nM*CgQTPs7)LNK01[GR6Mm.t-5o%fuW''%WtmqL`(4Y:2u52VkKE3_:I1ER2J[(WWRo/Q66[!J@"2Ug@ZO5@0ct#2-Afb'K9p@#%=Hdp%nF&m#$puT<"e:>X,8kZ8t>R%Z9k_Hg6ekm7H,V%,=T#Xn`UT(9--3K]FWKE6\LO`C>$I7=>CQN1H\:9%`TLpq`@;p4P(JH`]\0s^3d/BH]7ABbeAC=#,/@.7Y_^S%i!^Z/g)V[t19f4#J6lued<<KCl3mY5OXY:SZ#?U&@JK&T-Ik29AL0p\4d84YeYFC:3BR9S0#snqL*Iga5;acj?=cPk&EH6WKcj0$%\f>q054J]LB-FTJ<0C9a6BDG#Qu"AT&nUa(<m?LC(8jUj4$'`&#.*@VPd*PnJ5C$hEojPaU]QNKc'^)KM?NaGS]2mbbZ)]A[0m/5%'-'U\:iNA<<;nu=5#HldZS8E73\qMK8.&RZgXm0q>$/M[4(5LJmGc&%;-5MlVPitg%B=IlM5"Cp$P=D+2$++e=W)-8hQAK0e->o`%m#JEl:,_CGAQ$L<'YMr'pE%R+K60\g$Qb+sA:]@XW.Ht7PpsKr)#YpiPY4;mORH/AJonTl@MWkMe$V2toR8'['sYkd=0nPXg=Xt]%+q#[YR#B.m.UIa<r&V;d%BKWr)G`YSU1O0IHokD:K4=;/CEXc&#5ND7<Xs16n1_]>Q&$\:-o&O@">];R&LO=&8V8G.&b3384:2#)%_SJf0Up<*,bY1#AK'X,S3t^P-&o/,6hX%9V!XU8/_<*!1gU_F`/=0pp&0R4N6Um7;`=P=+1M6j:A._D[UfL@R?k)[P*_qMTFU=Be%C?ZIQ>+u4po<s]TS'V5cCo/i=3JD195FPs]!NLo2Y?Oe@lCREd9Helk4I<)L2&?,qf!rZ37LA?s:&C?q<UIR$.;Ft97]-A6*3XHe%3)Gr]q9YV#b;/^UIL:9L[!\OERt@ee0hT<)Cdg@]9#9eX$FGXiHJl!!\ZHYrPTK1jdI`JLW6=<0#3fC$Hj5BRZOK.h@E/mH(u7KY%$cXMIa],A/1B]LI%8lj*,0(t=eg^sLF0A18KSQY!..g!unuERP[`hPBT>0"r=SG/8;-3bc:[##rNe;M'S-;HXQNi-ATh2PbAuHs-%l@:NY5CpN?X?og[k<+&K$B:?/^fJ_aK9M&TXT7pOZ2XAhWP[7gMr?bn_;ma&-%O7622*R0U%!;=h]aU+aEX[C/*"_bU'Jo/9H+l<%c#"A3!q!q;Bs.R1E%_3elR3-HkEK*7qE,-E9(?mr(XXgiN(;o95$a/lgK<ls6H<?<<F!&hq_<bO"0IpkFbFjo0YN_Z*+0621D'V=%]i_ltLZUCEc<Fc^G63^UH?[6#YFU3fW::#S_/br@\ZsZie_H<SOEcdtGO@cr;Rt`!'elq*UFL-o[g"o%!ruXJjqk:!bZ=E?cMZbT%:$s]n@\<-u*;gP]*Ar11i"KG_2D%3PSU>E_,1$u=+qiB/14@"M(*$66a`k$gOHA'[II_<"7PM*G4i%al)ihk$-h%sr:B2^RT4%LF%8;SUo5JcK_l+)b&!Z6XV(?HkaTkY&G'K_2g21TLiK4&_"m[a5?F=:73,bZ?U>B'D+Dd%VGBnnfZDm_W=n$"hS)20emoM>NOBfNhS%<k_F3'^uk,lKl2M?p&4^QsZ&=X`BRbM:!_.NBgT[&=BH,]gCXjeWhCG"SEWhka8!A&:XchQtW9;s.i[EMc&+O(]UK<Vn&k]FssVi%!$hS0@fFE0E7nV5e0t`['mp`C%\Y.H9=)G3,I]WC(lXN$TK%LJNc-;l7+JG:hN-SEl+P#3nD!snF<EGj'#nfY7I!B7KKCrP7b[=c%M]U&3WOY7Poe)/c,#CK)):h7rHjS\4m[q8+;Y%:p6"2)3>md?;qTX+Zk46^j3X>\,W.eS'DgL_O(bHQ9EEAX3^s=u*fBu>o`EMo5%2)S=*nLLc`-'47BOe%]/cOXFNI^`TW:;T(KGeoXo$u(b^,C:YRlE2Wd_o'JBd(,nN(3UHgk>8#>WjZDL`OYcbGROb\\%l3s(L]#l%E@>]Mo.Qq6p0Bc@dQWqd4;D(.RS$e-VT3Nm%?ao7f<R:$UEf,("rhE',LqZA`/7m(B$=_iRB"r<oU#Aafhl-4hWAo7`PVhl;Aogf%.XarLK:YuFc22ZumE?g9^9@r3^[4QX>#f?Q.o'sM@`7b45Q_(A.0.C$hnj"HHGZ#ZA1&]5$1;:@C?S;lgoSREoH>mtinFubGa4D%%'2u:b[c1/("_qMpMQ9:"P*O,5Uk*h1gnPk?lI(e_L9&Wa:WP#I:'VFO*u4k"V`Ct7:hGaqQ]'"7#dKi+78;bs5k&u`ai@`q7e\I4%8.@HoQMmChqblnZ@Y&T7CneIX,9tn'5+oXOB1nD,:AAOX<%LP*Dc0JENo@=_I/2p'*/OV/!f1OX;!*sbqJ10EpolG%>YJ>q";X5,%ku[P@(]\jK0Ft\Qn=6<u_eT"$nI=j\RTtN[a3]r5RLge*7mOOa:"W@JR?Lu>GaM?I_i`P+bIg[&K:O>@Et8lkJWsJpbI&l9m\Ae]%&)pr.#Rq5eWU[cE9SkiBj"i!VegtC<kZ^?1NAi]c"Dn@'`'^0Icfd\5Zf2iX'L[X'_T=7s_?'9.g"[`c=oQWhGBC5D4[pS-B9c4`%1`p4LB)_B?[(56`6G+0KA,\,m!U%V"meT?+Mb@[u4b1(Ygo"$^!CiL1Y,!Sc;)=Ij1e]4p5HBcub20ZZ3fq0A"lW%NjXtL?5XS'_%X\iAG-,.O;?e'YTl_3i,0ZtGZVJbHl(6foLqu&D6mUPpn?#d[7C3d\%2V[3'lL4%*4PX"SCF\$W&$=&YFoh+ag=h1f3'c/$-?HR^%8Z?CTKU/"0BX,$a:ZZi3p28&LeLNL=n[l8eej4tg)kre0NX(Xu+bU_8PL2,RZ^H"9`4G:.%Xb.^W-^%T=L/;LYR7d&Sp&6'[&33j%Br#%?XKt__Bho55@"Dl86/#B%JN]7k(efBO_"7/2NMR"c'/&4TCT61\_4%-AH`#5J(Ssp=[kKD$cM)N`k:=%W-2/`HB;(IO%,95n%)`U]ALl3^f)s(gJ!u*2A;rESB+=#Hs3h/40(WWg5C7o8JB3)@b-0QZ7gRFaton"`5bLtVdSgAcU!q5IBnmM84I[+6p>eY9^?a&7#%Lc&UjcDo5k9E-9E"C5R7s,HN'f*%gkIDSp/-tEnjlf.MrP3XC!T:B\%5*kg;]@-_gU.'3s/):reMr4Ets$$t>G$X#&4(P]T#h<`c%SW+)>B:=41H[Jf"Qj*d)V0,E.<d`h4!$[FkbSkofkS!7n'\ja2Eho/2Lb0-/q*lk`YOka_Y^i:ig'VUIa>IanoUTJp.F_6'+Q;?o%lLruf(j2"?5&@lF'>&'4o`"Ai?Ke_1@*@T:;3dDcTnBOCX(a"dA;c:?3*jIH;-YFb3RiC<cI6ciWU?[AUqs8A,pJYbHOiTe!6Q<H%'(fJ=3kb`g3^Cgp3r#J-pc'J(G)lqM-6`?_);o8?$@qQ*,JG65O?_p=3f=D!JBD&"gI7DqR]jJ0)NYcSWpbm0Sj5lb(3.D[NGg0Y%;/WI8RE1d^Vd,&!&'(on6!SsbR?.g*lRq.Yme9khUOKeW+k!gG<%NY<'PQ^,HMe/_O6&g.;*Fe,]NEQYTkYf)D1r&%0iec(cqe$M%iNjY*KcHs;Z5#Um2QRF@Qpo*427_NZDS7O$"pU2*=TV1k(3cb%8:/LTATWG*/i<8l#>KfA"BTDQ$h&_b)/:S")@8.#p0uk;b/[BF%I$S'*[Gi(XilFgJ<Zj6=kP,&m$7o#i(3[9Nba`/4J99;>d7;tGC'"<%,LtAfRZJhkGOZ8BEEJ1^i<:c('LhQ6\OLcZP>)*=r?Np^%2p]\1nKC/iO;g.Q>V4N&d<5[-33;#/4$NW5W1#coJLJ^;rVa]ts"(p@l,EK@;]Yll]8;W5>5uB@k[m9W/5Z"3`Y\$%,uLY<^Bu0=%7;=C;MIM;bjWmY1aYk2iH=n%-.N>Ka'Y,PUT*H:/amW/\RVZQ:?5a$SEC^7F9S@$V4lo(c?UgfVQ@F^EeJV5:&=6^"N0GD!UQ+u]%!b76JRQ$>o8*`qnJ%#]BhkGYi@\TZ4S>ub%mlcu=[:\M<TLWdDU$-tE.Y)F8Lk4EAlE1'_AP3V'EO'M^iNOYb',^"cf'inkVNAd*%S@+)0)iU]HVkX.+l2<8)?d9mW[@9Vi=![2<N6iRtZ*`n@Pi,WEF_:k-k9@(MA4!l$5?5;h^]<(kUJ4>U3Dg=$lWT?l[Pg<+/b')X%VU@O"J\'*S36PLI91/\/`5ZR`dBp[0J):LZ-bp]Ikt+?/RgEWsYF`kM'oXDmaS,)h$9SD4>i^*e"#25Vr)-*N)MTe%IAU#+rkf1*%8,>C2Fs$8/h%+mp">8Sbp';XW8WlCFY(OU\!>/j;\kf1KV+aI$V</U0pIbhK#jqu`#il=m?B?^1&c]qF;dFX'O$:mmQ\;]c8J%&I%:j&MLF-+cq=dTY'09Lu$ZP-rA3OJW%B$m"]AqQd[=$_XEVr8W6'UhHB1Bgp;e7aT:<RT&#1mc(8?`q]2)i00I,VBYO-]=Q'e3N$a%`:*jA%i<,48#81B;hI-9Q*@"9b\R<25qqYuP2JWCAB:9,#p'Y9<l%&n@4?5TD07Z`=";tu?S?-t%m30K\KYj`e*;:i@%`6R*0V\Y%P@D%ZpaMOVFtku`NkC9`NZd69n5#1d,!lZ7DF((dSYHfPb4S9(\Cr0L4Sjo0_UX>pCP=!D\VMP4k$o2SicqERL7k7s4sEuCNZt/h%>*,#%eVu;):FF9pH\sK*A;Z-,E[pR%-MGn*&I'bq,L0LL1fZrQTMYSd5E_QP7sR*c[I(k$1^ui>m:Ki2fuTIU]W+^p-#b'(_`$dM%,fVl=Ai$79M+.lB`<6>[+r\/a';F,U/^=l%86r7Z(!R:8\fESLmg3XZ+r)T%*(hn-1mO>jh-_B\+,mg-VBr4"`aDbjpUZ"g6r'k<%U>cD5@8r*LOS.(b&CIJ8+8@5N&@,/(3/p'G2WKN&>cEU>cT03%q1K+_KOmAUE"TPe4D0iI04r1Vl_l<tV9mNCj6VZ^>^NHf)&<U<%'m1os\L%62U8B!*STnQrH=44lKG\Jk^3((Zg=J0_#F$cmk:mY0_@!a_MSHr,A.HH@MH%RH0;ZQUL:hD#0C_l(X:J?d4uM<Pb_Sl#%.WjSO"1(JTA:;g6b&fj'#oh&bA4n4Jbfc,U6@u]cH.LO]lfXiN'utt9@h^f(V9GC5VR!`B/k]Ki-`NaO8l<YDnPW@/ZZW6<<K*UU%S-1Pb9IYi3MSqC``4O1T,u@;d1DIeSj"_?H=Yd(H.6]tM.SZ!-WG6],[h6PY-O9_[ZWP(B$00i4Aq#QD@NL9o.(9saXf+dYd`;q*%2&J'U8+][<]g_c>`"LO<&fb3,PnL:d8;,oSJiP<,&mM#gX(4b@d3`D[`dNr,i7'5r!,mAN9`/.*,&:do1tB\f>t7"a]MN+$&H"kV%8-kJS5ep]jNm1LJV^%,ZEf#E`+g^$)'AYed]$c-5#`POW&\.EF%<AQ!e$O"YKDMV8j9A%s13p#QaG\t(%n3;AZIk+0<RcXu9-$GW%j)=Ne(.t=M#o>Yk<#MA:]Q7%4'W&,)D;Y]T\.k^1F]i&s+Y]QSU?kfY,GGLV-F#V5gfXB'gL`cA(1/JDA.\``$/K'5mLL=P8Lh3H%VR7!IBR(jm8451Tcng@mWQfZ$*&(L=ONr]=nUulkEh$QkD,<YW12KNB=Bin#)G%i)4Do7e1)Om3!s;<3DNMtl'H\3Sq=7f'<?j:D%eIh@?Ji;SSh5IQCRh-g<YR(L`L?pfMMo)ng47B4ua"j395i'8N(PGY5e3t`&aufq[+VeOnq3G#O%F'"pH@=WWnm(6e2@UB,MA(Uu%dP^rJkTn>:O+f]<KDp4#0JJkDI6*BcP\(S@)\CnqN^AO7Ah]+;,#uYQcH2KZ.thG$',%#29`/DJgl:eno3Y\\,#9MaU2tr%]e\VH%]fO"31Y`-=N(eBT5hf\@'\.u`"bo]N'.,Uc9DBJa`/6`@-o'FDbsIBP##l>*T[:_*l;^el%N%b,%&$HFaHVRo@tJ3_e[U1-\dM_,%FV<^qattnS;5Q`to9E!b*`p/iY"P0V<'6>[;&jkk<TZg^LDLG$e=0WH]M06c6tku;LFRbW@]F-)`\`V#O.O9TiRYmf)>nHj97!Dn%RGE`=Id:r:6EQCV<M@f^1FLXQ16%SXpM&#QO`,J+'JW7A$J"Mf;e9<&#`32n&CNV]$kj;.acJ[Sd-NHK(,7p<@5=k,LF?S?:/D4i%>f*\=6V&:U;YNQ"_B&nK.f4lueVWL!H3bB<Kb0-(&AkE#&Fi,Q(%umZ:d&+CV&`nAh&]gXM@P@91+'NdX+KIV#+)`[3[7IXAYLk)%NG/u53d8NZZtAlr^+a]6+"u9]@4JFn$.Gl=L`P"Kl%LE,Y(dpl[:<[%p`OE(gleTj9Z<%<@4IU88WgY$CoIKD'%>bO"a<Ws<PaqV%-l?9VHjiM<,+KOo&R5GJO\m)J?TMVrQ#O!>O#/2CW_RA>g'']YOEqV<FM3EB.Yd>G7AGsN+gu4/cqKN:_t<Sl*2\+O8g:s-I3F80%A%q(m#_ss>iX$9eDA8l@M1PM#AJ*_NA.5o)n59t$%:;dV$R^T@6:h,q6punWHm>L-9sfl3U2H2::F"(.b\9aDEO/3d6V?5/o3l2K%1m`[K<Z-Z"LB#Bb,V*V.,"#&d,O<"3W6Bb^U`P+7Nqe;OZ:0aCMT3G/FVD6:V@&hQL!LaF2E^k)8ABDRlus&==FlBJLf7^u2TuSY%ZGau(&\)"_Ti-O'2?HV"3'sE?FH]HD'PQV9c7"KHRs69510s\Vqg-N%nfu^83Q'WBhc.3P6G0P.SAU6?+f<8FW/!H+3ZS(EA*ie0%;csmG)e+rnN8#1!BX6qMVO;^_$L)8rE6Q7q.ccY`n8RcV)Nk_Bq"lqY,nD2g25[sP_[fle<14>g'1.Yg84?ZN5pi$+e!NUXb+`^M%&J-)1]E_"E[>AA(dg<Q$\RC.0V&$2P;t+mr=Hk=_LDdqD:s`%RLBLHhhb'OjX^iq2pkJ/cWQ#X\CE=1`"U]^pE*3P13;R$_?2LJG%n5q1X1Q\76Pp97U6Hu0$'[cK)?&"f!:iJmC^jteAAN1ZQWu=02dNV6[(I<,[Q"XXLQrA5Z_MHq7h[b!kX4^k?FVLq2YVrO=&LLUu%JgHTe'\)M,PkoU`_W.dq;;^n+Xtu(Udnk^@&JmKCTV*atQRO85-oh!)]]%t6@pu.18189_O]^PO%pNNH,NM$q'LHl'&JlI#eG)^7%Vgp-%15V/3A1F)uMP(NQWmD2T]q]k;To6-aruS>!^i;Ge_P0O40n^t%/BCikJh'A&]<]Mr:c7")k:F]4E!\9kON!;O*2Hi=&]PDM%Cb(M5FXgP/O%"mK$Q67)pNe&`dP1\&'+$G&N6$kZR4)d(apCjs'P8\u&/VAcLp='ml'4FIk#Flu_Jo"5e\gQ#duZF.3>ZEY2RQT\%Qq0M/1ZL0:7Q%'<%[LO'$qDSC<>F4e+(j5I0H(YA\m'8Y_FU<&=NntK+nk7!4MrTQdI)0d68:SE$MC@BF-tc/PIVtRC\Fk\1/Z94%*`Q2-MSUS1$+Wq]eFlm5'g+:s)Eo1I$g[l5D!D]u)p!E6N(5X5R9,&<.GTr_e<\e@8/Y#QPq"7PL_/#GX+mHBD[Fhb&qVtKJ"*[!%Tr@)4ArlbTSsV#!9E,W^EWqWk:rOstP<b$)QDlUkNf;J*_cfFia$g`CBum89O',p%,ojhV2O*RgY\C_TPSmMYML-Pcbk>J_\;HXh%/S=?G<G\]I71K$jQ:6TA-6/SP(&"o^;q$t@=P]Cg'rh^7HpVC5;^+*aWJWter8GYH.h6Q9Y*8F5;32Y%#?$<(pu2sc@\fqdV_fVR%-.Gt%H>(WYMWZ`MqNU>#@q9<p]s)h<nXhGP%:#lT((!i!4c@h(-jcYL2C'`?@/'[iP<e)Bc;LUbA@e.3AIT9'307<3[hqnJPM;E?%\88\$;0->q"VF[/1rfk7$sE'D)p=sEX^U@&du24`6cFU#oqI+JJuC(aUcJjH'dj9@&j\XfY/$tM*3b9bVA0jh0Q3kdbc!c>[u!Qm%mpe!Ta7qqW>0+U77!J`if0i?NgBkdEP?Jfl,&.!WE9AP$,bK!Y@>.NS?ml:J<DHN0ReRj#7u#=/-AEflRkTd4`[S&%XdLV21p">m%9o/2@c5hV+**@8hade44*^j6Y?Wh,%VF%mDb:#\8S-VK4hC+TjBq,s7)c4SAq2#]Zm;CL230ZHr9+kD5K0eK/\l"8>URJ.c[R*si%IlVKsL;GuMGs%E38k0^-;RM;.8F3I;Rk>jF5*T#R.jcmd$B;,Lh1Ne$o?Pj=.<4H'iQ_K>.8V[`=KjWr:p/;`1(G*"%\lj9N,UOO%IF#c%]0gQT,'R@%P,X?]L:_)-C*?I(33]27EU)KknIT\R."l[U4D2?`X;<)mKg$cJ6HICA0.p[(pR%`c/%#^X:Hepe6u6;CRQIpB%Xgqq?,>n5pFA',1Ct'n;&EgkR1ggJ_[buk01c@H+_.Y(?9Fo`(&J]*SMVg-0LZ#t?&<\id-n)l#ClVmP3qS@6H*&.$6GdR2\NBC4%F<YFA50PpHK9UYS13c4_bQM:o%?$WLn@6^ke>RU/lX0.9@RHTEAV'B=.h-jj,o&n\:RX[=bng`eK?E(5A>MVP@e5\Mr:Pj_#;*2k%hY\O?PTr(U`V=b`Dp3dm!lJ0K6/iA#@R91MBJO3Ck=Q<I.lYQBM0mbkl@e)'j`-s]dmGmKb?Xmc&sFafb+CPjK0jNr&l%#6i1Rs[%.suFlpl($6&[Eel`DXPB2&IB_X<LV'e/sG4e:V]dbnAO`rYO;(9mgALA]t![)pr@t/#n?^:"$7q]UeUp!a/EHS,t,VGk`SSO:pYC%WfNU>73XBUhk[=&<;lV],o@JG>:CbLZpG1hWqWmk(PX9:447/&\d;9/$V_55rE.-ED+#9dL0seM5XaS5rtig)HHE"]_b]7\8YI&'%&Z7#`+[OS5SsfTkTf/kFkVB;75[Y]cM%L>T:J*6\$KmneC(fQa-[[;AEYUcpGs7o[dkCph$_q*;7XRU+C_LRKe75Te6E7#hfRPiZ%)6e[s'(R_7XZ`Eq/=LQR&sa]%+]Vs&XMhtUq\>WdMB7&1[/`XO6NI3#.:d++a[%?L8Ygr70X(gM+h*%k=i?[:o+H7._FtLR7H@dW%TbIpJ+rD:)%uFaA<Y'ml[E*p(JRdJm+IZGHgp9r&TbW`r0I[9;XchVH7)FlkH'NUuU,E8]MAfqGSs?0>9i/VN3+,Q&NAn8]>%4F!%"Q07[&-sD9!"2>J!X)n]iDpQg%HJ6FKfPD8dm+F)?/A+5IG.GPa@-kI1i?./L-B>0WtIc.Z.-d]EUcm4Tb8!=3j*.+AX(p]i`$?J%Tt<p`:`%HfiiCK`/P6>TKTMWb*;=9m@T!gG*A?brdcU-NKq<#c&js3%9TM9HH:*'2,Gl#j<J]*7,3=[6=C/ZN+u,"5eNkaIU7%<3%nP6WV;-cK]G"A;]BBWNkc,MQ8Pa&bk5K&<fGK%b2(8HJ>RAb"(7(s3[&s3b*(C^1;=lp>a[Rl8Yr'`+n\gGon<j+tLMIWhJ;4tot%H3#gZ*(>Q9c,\8[G'kK$Wu66N+Ba9o1(0pPK7T?#)Uko]89mlF\$a5J0GG`okm^$Z_CCuWMdtgtLh.7:+^Cln74r";.&)Sd&Vo.V%.&%nIGnFWHE8&O5,un:bU-9-rA3Y[f<L4XuiE"4j:[%6(^Sk'g2<?,pSd@07W/o/_C(QgV,X\7L[3C+<b@]`o9glMQs)n.a/Ykc_%72QUCQ(`f,<gIVUZ6Bo,s1G/oTFHcV^>tsj#=L(OV$5Q-;G7rh&Xd-$+iXhSXjK[m"U.-5<ZLKhB`k>ki4qj?4=<O.`kNODLiqpY%KT2kGYp]sU=N)(e8eFp*Vh,sWVKtVm+h'gBk"ZP_1Xml]jHRfZ`2kpC<ThFT,S=O-j*HC'8B=.i!>:SY7/9\C+a)%,&XVd*l)8j+%YeY;m6U;<ZEmYO._&.n:`AILl)6$q.+XU)B`Un4Hk_K`'4M4:Jfb^i^S@O\X+(T,l)4lkUP7#d$(m`M#n_b"Z5kBl#<(*!B3FN(N%j(V0<JqUek'\CR=gmL19Ej[crOMkgKOou@Wbg^!r;N4\(KGfVI\M]_6*FrE6Nf"*>/m@<td?u1mPX`qY'#2QbjF=?F:'q1d;iWWR%^]!":%/EoNZ-nFMZh6;nj@*VE77\uPEWes-6]d4oPV+B*BfuU_ISiQY+WiESX!OJ3e70P1L6;N2>Gsj%9p?8oP^F_)E)9,^-uP6b%3(H8$%NU6U)NmPE.$CSVM!MGc7mr5o+F<*N"^4MTF+bCpZ31r9<DYrr2:&\^'oMEV=GH1:gC3_3C'&+EV,km+_Bk+tLDEIGQ-EF*%QRSJslqD,,%sc][Sg'j_\PV0s@'+%rJfKKhX(7bs86Bh%OpMr*ZBI7%=<SrqLANQ.6He"]d?(-_,3'PL.9Nq7iG\V#+Z_#X,TBt+%@HOQ0eb29i;J6c^QqB6`K]16pe^lpbU`rW(_b.9=1$OH.93R3U/U#=?cHtK;Mmh+iQ'(4abV=5OE!7]%eI%nl,5P!;)&EYKU<8W*%58bk?*0WeL+0:N(6"VCK6TqB6E]=iW^:or1#mJ=ZAn4(?_X4<Uhr3?JRn!0B3%u`tTS^IQb;Ub7K*/:Na\WI(,W\j7\I&rh86Ng0%M=&[/0L;-V=Tm7`Kgm%133\3K51;L8&%kJA^lVX60o72-;.@$q&WV,?fe!qV0#CK9:dbZ.P]2TljdiD*,CsT!3[13SOr-]l]!Usk%.bq.`&9551e=dl2&?i&?<T:%Jg.FmZ&R6W1L`j_lopX9U.)raCBdiad)>T:)&O*QkNWlC[2G/*5SkYl8&LfKF2WAJjd78H+X1X<&%7*8`<o1^K)6#%d%E_CG7M6MZ<V5.dZj@)H\;RJf57^u)g4m9If-ouCcCU+8L#mO!PWXWhqW=t1TQ>P\:IZVF2%*8QJOC?<(Xu\9`%#:rj!oQnncT?+BNn]CeW6[[C>h8<?J=J@uI9i/VHq?.&i0r9X#/S2W4mjZ1p:09!lg^jttF_\gk]F2G>Ss9TTA/tAKkU'=n@1gTA%&<R7,"Qp*7.dW[!%E4FAO#,>0W.OJ%WWrJ0$HV^eTF`(Zak\W;;!5b-`JfJE3YY:nF@/`%\.!Su8A]U>L9]C&aT4_o#-jP*HDi,6%U([Vt26m-QQt)>@5p8o4@A/eMf0(TF6>uql=NTeA-P@4^FD5S);oL)2@\G.6FUc;h*H]ae5s2EiPfInbh'KHp7\9>%d30B5G``Pa%l;?Zmn:2Z^]bh.M@0LsY$`-c*10ZWLQB5Ob4tmAt@?Sls:BH/o(`F;:%lp"ZQ>fnmeKU]!ougr(Y\kr?S5CGCPU]0kDu^%G$m$Cr%Z\:0nR0C=?U.-sEe=<Np'!H.YkLa(^=tW^u<[\OkW))Xho-/&.+(?M\6OOj]'#a_G6"'I).kp+Kg;[#/Za?,;JO<BWP'FU4c_)#\%$_bcn7'0rc,hjN;k4POHmY\:AGnM=RDiBU_?s1m=#^(a9Lt#X/d4!)f2pQbL,4bTWb90\3lDE^;HakKB_kF(r$&p^f9J.0i%Etb'%+Umn8&WIU$*<i/i7f=hKeXsNOVb`.%X>"c0W?@G7UA@uFq_\_G%2IDc5(Wq?D]ji*\3OJT'V&r\"d+Lo.L:q^<,1DI[.3f=L`=ec%Y09">4Fq$a"edphWBZKso$/eu,?R3%,f(\b.dR(FRfr:UOr?&W`cr?[W5o^Vn22E?$1o?3+uQWo;3Aq5eVu9"aGOM!Es`<"pee.&%$T5Xm"ar.+ohj406mfuR)/O;LCjL/,/-S,4*^o^gKTQ^(q![@$oA_"+XI6;>@3`(;"-/=r*6N)W<t`Y47Dg=U7XGK*nc9C4]E*X.%5X7TsdEofL_-=c^&gq\FN[0iL@+F_$O9S8^_8&m';,#U]YF7M<<fSXOQIkFBe0:LoV`YI(d*#bU#h&il4b5WpJa#Sqhp%mPa&$'=%&T5G#:mFpGp#6O>T4j<C=2]qr`65#C'h$H,Ei9ah)AQ`XW+FH_bto`0:bi:D.=tZF#k=!I8I1aB(l"+aU-D#mRRIK2On`EuU*_jm%,iRnD'^btR%>$nl=LHG.i_u%),P.&U=3,ju^/XU:n2mLZ.%DIsl7[j;/ZM.Nk/:.,6WDTmDc)<7FppI6hQoP56^5PYQR^]UR7^Ap%0/B*S+_:'iQ.plh$$:1rN<<IBs$(\rB1=\:e)a>urXVHnjG9Ob.!dj@2<<m[[AnsT,-7[(&/C5"7as>jEqj:m?lT)?dA7ak$9j<R%.LW[7_(X`s]O?+34=$>PP,_t*&WrEf==Tcn@eMbQd01WeZ;1[RQ_!9!YS3FVC4p#npGD:'P9L,/$@LG9Gq?uJ;B56nrd&PpE_D=u%LV76`1nSW9-XKF*^q8l/``+YaT"ad7ef\VMe'Ca`%J.hKQ>0,gm+N"h:PG1lNk`YFDA?.s=!0FQ+fH3C9F'ScjQIUm>[_GE">\e5%JNS"a[tb[=Pkfr;,/IU0K,kQ%\n\SO]*ep(IAY/$e;R9/4LZs/?[KkuG>8"Z9"]hO;eh2GiM)E3K^e![0t\XH/FM`%-d_NUbD-#;%X$AUU*k=IC*a0Cr$6-k$U3VZS1_-G245GS=4<'FE7OK!(4:Uma'P8")!\H7VFb(:`:sZmQdoAe#r<Td.3\i!K%:`+lL2\LP6t=V6%6;[d[lV3b`+ml4V^T+uA1blB?.!u:K5hcnKi<#.S-/l%"7.+fIW[bn^BWA_k)C0]o6>RDYbEP=B/0S[r,&$6S%8&.4>3l<i71uaK%6&SN*&7:jW']sS196([FZn+OmV7)hq16Jfob7CD8bmL8/16h4L3o0up>H<SOPF:59V2I#b,kkh:<7@"b$)&ds>Q)N7BaIAP2hBi_%&h*krQ*ICTM?FDdhDV;X106I]8=Tu\q*]+u9OXBI"qd"kJJicLUA1T]7NkrHB!XluC*QZ*mp<ieE$U$eX-K@I%2]d#]UYdd#rJ3q%98F[F))8a\n1g6>SCLOO<YZqqCFE>98nFn>m"%$3+B=>W3l:[meO.sL-:K$l=gqa\RALA>bE6d]H2'@4."*sjS;%r)6%[0SUKJ"&%$ppGG=u*'/$;hAXSY;JX4nsgM8LBfEAo9;n,0X:)'pf#bVV6K(RaPo[p"dJcFTY4V@H<9*V[4=fhMDFS@kGZ#Mf=BCLEB"'U+fQ/%9q3&&3RPa%k[>5*5!"rE*_s3b:qKTCW^I+TBV[UVF3l6^*&O%D6H8H28!r\@om`rMFHW'=-X?=i&"nfQn3dA<gIt(M@o[/V3knLB%!YsfqChUmUPKBSW;4qM-%N*<D]JcV0N)Gq(fV;mE2DnnFRZW,N]1oLr7(BV+W+"bK^^u6`$l9g-r_#:FGtp1dqc?dMWJl]5@8bV]%&YF>&`@$<q"DIA>j6<M4cNFjhYc-'Ra<Z<Mo0Bl%%+&J#CGW)l`'DZWEUSI7MjY04#S-Vp'Ptf]`("G+6V8)N0F&$3.5;*n,9hA@%Yps7@fPcaU>H"_b@?[/U<>/e?0d1;Z%K%`3YI1e6(NLo6X:K/V5?C\pdmHc7j]%*/Y8W+k#ag@`;%cKn?=/SA[9;C]^m\Y=(0DO"%FN'EUT2q6rU%PgN;n%t@$)G)soV\I@E)?q,:8C])WK637.#'c$%YtTuqpD0(8KC2aTO&J\.*O>C_*:XCS2f\UF$`X*;08Gi7?Ilb%5_,L-JH:7e'Mac><M\S"`D!6g&O$b]6iN5l$DuF,:Ud8W,SI9D@7WjPGol+T#<e#f8tS8p$9DndTr/>hEZk]Bi#:Z05Y6\iBREUC%d\tlIl[mRhK1;r8KPDgWdAoUaMeNI][,7Zc&J__m-l`E5h,3U>+BFG+ko13arSjn\#^OgZ,?/5H_TVGW7UhYDOUK^Ced<3@9tb(q%MTL(%WEM&FR;)ke8nU1K:g02NM6@`uZ;$-(9P,HDlu4cH8%-[D6DH,M7rV<g+JR.(@T*"9l5"GU]`i/#&L+LZ="mG`r^0=h7q`j2%l<R7q'lm,Qq0H.'AI0mk.7.7j6X.Al/aL.`iY`E,)e5m9I(WqR'aN<lW5)G!TPS:/?PT@O$rE#u_pnF6.8?2$^-Hhj>Ot8=Am2P2%7Q#.=BhVng_@T=,Od-8dcUolApO^:B@0^9?P-egR=#d));HPE?_Q\sQ1n0S@+I5Ht@%`<5eR6s?#=@uX/84#/<k3&HW%OT]B.^Nj%Cng"L4J5$GUP]B"86_[S&b!+eUj0soaPgp6<Q>lp?FVF_7Fe5[LML-g_H><]m\*[13&CqJ=V8#K^"2a(?BAE/k93s$<_$1oV%Z9?%4,QrR)\Nh\g7];$'F[A8QGOeL94''A<RuUcQ(c*Hll&9ILZD<5DuaNK@DqKK,)Q[b@UJV'T6\1#^Y4OkM!OZtOeHNSaM$N+,dFDe%K`ZPZ'IZ"e"c@L]pP^Xc8d"H1<7E5SA.Xra\ZSPe9[lrJNV&MZ"9onS9,NMK0V4RN'Ko.g`;)1IG*FI!+Do1a5@#>ln7]=`JQU$D%Kr%-];_8mpYmL\e(8<9`RT(H]5o[72AR6UQ!XB-//s4Uu/*S;'U8DC1A<,kBM%56VU5KR[Td<Z<nPfrt;s/lV;2X:4d1UI5G!phd%<Lq&3M8mU(98t@c;,kIg&gBqhW+)]g79(A.A/%n7P#I2#`,*:n=L<`0MC%q[Qlsf.&LPYW<b5^6RmcL>NZ)IDUEX-o<Dc^`A41o7%6t\p8b)!V9&Z$))(`$s/()76s+`p1dm(fR('=?-M\F`7g6DLs_!%E&b%h^J!>#eHe<C]kPBR<-<M:=^(p@'MKOK$PKoiLdX%7lTO%7k/>N%K`Q_Fn'RR/@t.I'GTcXK28Z<jBttiN<C"cKE@&a$3i,[6S#/X>3&?[.1-?6k=phdWL0YX%8fsO"KA(j9t4p^\>gED@5O]L%.C$P)6pfULROUVb7#;&=*9r3u>"49*$pPaP_5G^EEJ^tGe!'>%Ej9i;jlA\)N!hhidg83jDmX,I?c13ZkELSE1!P!:F6"KqhGWX?%WIp_3RWVNI6-ce%V#3%?O(>u)#0GAI"U)b1Vi_7bYX?@7M%D=*J3U*olDl5'=sg&@Q&"oelj&1L);\$O<?@J&_Fst2b=n;V.5c]<%"0TUU>k]cZ[FF=B"?7Wj\W/@R#nn"qSA@UE//.\O(NpAC'#lft*T\_mr?HD7C)F9@A"kY%-#/!16$8ph3;k;;o,7B>_N^Wi-(W44%-c\Z]Tc%NOdUka:.*-,$>Ruh_3^jU0:+)<a.Fa3k<MUJjF?m)H:4jF&0L77\)9,ZUQ[05KS^W[P!515JRu1%uLD.YKfE`)RlXYR&%Q*tl4o33]P2[mAd6KArBK2>f@W`%c*-tuQUc!jqp(Cc0i+VWk*$)42pAeRMjl'WYm;@u&T`+9YBc_7Z`g.*Ki-H8n_NmOLC="&PH%C@o:j&r*.MN.rK+BrLW[&8)T/P(I3m(mkkkE\A,K_aIpf"$:*f..JBkaAPp)&77oo6jXs<ZI=n`Jkm,!'33JHKXg]_*(?u.W!VSU%.MU]^#U2o%>&ocSYqQ;XW8TX/Y'niZ87WVV.^`.t^<UEia&d1,Jq8Cmigp^DdFjqi-,IJ"3MZ(qLOoU4,hm/!O_E!<X_]3j,#sc2%K?1\MO$t07+!KcoV*rU*'(f@B*BdZ-W3mCp9?etUdr;"BBS(qiJc7J7c?hY,S7.**aD$=uQR&;/'_Rs8WSX1;*5rgk8:2!sSkqq@%A8'+8s-X&ISis$gNfN>-M6fU88Y\LLX$ta:.,%_L'')FBKMr6Kd8$hO@fca2W2O#\Ks>Du((=;'%u>g(-B*Z?5jm.-[H-hg7h8Q/%7RC'm:-q&gqG;03?[,_i5\Hr\[50DKj[Mg2!em]nBr*Z0k,9s_)Bo@mGn7e&(sE*ieUb#_c\]r(Lgc:m:l%YWG3SS7%c]q]Wd(J<%O"$Cc=A:iRLaW9(,7snU!*C'N$jWO^a^hX'#8D[jqgKNC!<=5b&0.%^LLPu<"98E%!&+D'!=Ah['ds2oDO2ucK<s.*HUr%R?3LrR%%,p1D->3nrSQ5]KQGq0=LV^Bse,e&&?b.)mo1%O]I?#Iqd<\3WCX?;.GjmbA\-"f\JLsf"U-i\N;GlSU[R@-@^W<JPP0CbM[.8H=%:M7-8`VjkQ]fMG&@#&!,ONSS&I-h.*1<e@h]?)sub?$Ak.cIr%=4,nuE_pA&,d<:Q'5'^L.$\r7Nd\2+VLU/SXUVC6]d&+=1?Tka%<DBV:Jk=p292GPW]V5`@rL.QY!#It$/#G(cKZRa)Q1Ch`pX)ke08noW<5t]Mju=KA2qN&75.LYP1>iOg7j_Jt;=t*FgJ1!sA?*UQ%#AZT:B=@l@"KB0=&grj7.:!KkKHPk+[u0*c_D/kK7t6!AbQ*qkqakZIf!^Epr3668G)Y#_41?Llc;S#),("R#;U^h@]);@)Vu_%0%V2F2t6aS;N@]"+[@Gn?d1>FFX_Ku`([^o8UrFm_3^"kNdp0'p4]o>+Gp^%Y5cVr?'P(Qt91q4j+O@lWPmCEWqI?@cjO`;Qn\t5K1%+'feg0.XXH:sB*W\go]JN?J9U^Ki_+&]nB[@S&7<ej4*nSohWW<@a%r<\RD,REbd,#F$N=euG?(*%P9O?`k$)LN:\L,[mTu9(d;E%169co/OK)WrNUjgBfqEK7rs5MRI_2,^aH5+'?:V"!0EV$#o_m'8K3]c%?>(nDBCW1C:5N2HgbX<,SX&&^F3\jhfjLSXP%V)D!@V6%U"+rZFDA&KZS7kX3RkiZ&q7S,)Za/mHYNe^9>JFUP\$7R6Y&oPWnO*Y't+]$"ZG?h3$-Yp`QV^m#ZU=\E!-[_1?5e?j>(WLWQ(Qa%pEm.Do)=pcbtraIESE:hcX!N\D0\Z8eF:F4@]F.+PhoXXU`J?/66S%YF7T)BlF_puO)qgu0Yc"*7?u)DP-eZPkTdeK<5h>a,/n:f%[X16D1Z@Tm2O6dZ>6+>q^W7?Ge&HU[Wq+U8O&^k6(DoW]&`PutDD8d09rP:^"*SKFFM^*>TOO*oX+<tNO0O.6gQ5u2o-Z^%9b>`S%@qV7>c9"-5"$bk1+K:cb/gMr\N,%hHg22;s].gXl.JM;50qr`F"TW\AHcG&dS1.2r=2CMC[oeku^bqaj+orVootm"tL?-@`3^8KC%B>%1k^#8UFAj!_^3(9;@H*NHa+bMIn33*D#%A\[L:#;lk/Bu*u'KNa2SKr8d^DMG5DoVs_G4B"RPQ6okC_;VCALP5fpWW\qVNJf<%C!>!^XaL[YL7DG_3t#>E"'H:'fKW3'qYho>o52*5o+iL`6kLYiJ+c#8&d>>64\rYp&nctDQ)iC/"dJ]RNO']QahP-;o:/CVGVCZi%(@%c+Br9ore&Zn,GlN!pNZ4i,(MKE%"Nes$>]ZrK2s%+i`FP6fdf[8gC4n(dTKZJH0I'D]@hY>D$.Ek?R?1+V'O.jRW7;o6%UsHW%#154#k/aBNBk74;QoN@]:9*JX@][=c2nPYY-Y,l7p.`_fpn>*?D,d,D)Cc*l/?5Y$kV8KBAMb?d^!;i_#>G\9_7C7=hXX@!iWt=S%c)1k&J;#H0ltqWS(4GFG,Ofi58P"Ago##+WMe/.&;9B-Vree2+F#oE(Hp!h-%U;.rRbaXZ^kkQI*p^E-R\L.tePGW-4?XT=]-)eq%F#-7>O"1W[C.ZpUFQPBcnd5uhLa:@_Q*d*$P%d+baMDQlkj'Ge_0nZ,%P\f86K"02lo[VMSQ34!OQddo-ttD2WPM@3:a6hmbj*f5%/RN$^Fq9rflKTS;ag/+7Hn<gd"jg-jVNVTU[g6=J),QKt;0K'B^b]FB)\hMlH1\_0=[An;p_haG(Oe+%CJ:1eXaPXSqWYe;hmSDG%XSYj"`W.at13>iHT48X)NAZT'+t*gq[j%GXe9a4@bWP.j=FDU#*>8[93Y=9/[uhP`8HB-,e,^DL-Xp;\1+Aao>n\RX`hgS%ida"b%b>/m!E+Y"BR:FJ1'Vuln>X0oZ6A:u)ET*>rkH^D=QUa"9k07l)k<IkAl>b:HA:f`KCBRk>QO&A6hu<^mN]+&sMLm)]Qk&'RPnAbt%1qL\gh+&g7&;JE4@<6_WcQe'*2u5/e8U?c`$p4fL!,P`&3TqKE1DmT[_9([<,JZ[e=4VSTYj9n%KSXH?9/&e9=27lb^+m\Vr3VfC%nN1:3':?Z\JU1(_,2PV(Pb/:(LA!R=%$h`L#JSH&H;sd(IFNF6l"'dCRFF3`M1o;$nsjAOO<V@`]^b;M6uLZaFPHL_OQc[#I[3;!%-[OnCGVWo7]k]!gJ`*o(W?kTt:s#l@Lg!Bdq0r/E_q<XBkk>[SLG?W5feI5\7f_I0;'*efa@sDmH;cG7B@67XI$AEYfFKfn]+1U4%&PY!Xc_a?aK9UNFYRu'#MNCIh_r"4t^d*Lg>r27=!MM_-.`o*`>%`\nnK<]/c:7#i-m&`d0p!hdNhaW"<XTNmJ_<40IpKch$!*%r%L*hh=3$B2Rl!os]LS&VO"[)oP%JhP[NEFf+k,1!-\YCkS/KDi8659AqA4jf5b=$(^T4u4Z8s=.i,j7*64Dkr?I$t7X29pFQOI)98%WC&Njk?nZIbU=2LqDjD[0TSOI"$=%HOjl$jk]'%oR4#_ZnacJk-l_)r_Z4F(R6H4C"uR&AS<Eqhb-`=Bd<73H,f$&-.uU?c/>OI#%7Y"gCZcfY,aT!mt!1,NnHnFlPqjtR/r>(Vi0Xoj+f'eG+]R"q,aMM/>:Q\!3""PN:khL:<5k-.656c.sl/%r38Nqbj),TFQeUAs3%?(sr7EBL3MMU<j\#jCVjpX'\=0n\cK%.A"KLL;N2<lc25V6DiXm0ir9@kc5jJat;2dl>CC,:(CP)nnb.BJGp*o8V]0U5m''gmp86%FOX"kSIRFe;'WbTQAsstV*eGX'@B,GJ`b<#QsnHcdD@NSM)h"7XFuj"jo&[G<@fm)?6+Y(f5e_JUQnoKVeih%o$q`!E`P*(ZTa,)%b)6Yr-07jFRL:!a<_GCVnOH5/9VXjr_TqG#'kP(n,M>!T1m?VdDlr%],b8>9G13DsI'a$$%agBm)#hY03`<dd9nCIG+^,ImH:HOm%'.3htD$iO6<maRQl+B;W2YBV;fX`N3L4rfM;nNggm9<B,bb+'ITu<Wt\(^a0hGr,!A)LNakJiN@iB89*hH>#Q[EM,Y#J4j/K_Dtl%rHk)F4b*qf<FN08n5^t(A%D32X*L)]`BEVE"D<I7ICj4&r=T2M#)b'KntmQNbenS[A\6&!s.Xi&79U&U")=2F,K6$k#hV@\0)+Qf%B[=tgb$0#/@ZR'(2(csrQ%JH9=uZo8)jE+?C0ZhcAD0a4eO44k=)Bo70f^#>QYqu&*DQ%^DNa)DQ']PePG!$sN4Z(\#PTj3j:Q=O%d0.S#s#@(+d?&.Of=.:Q4h.#k;mRai3IQBrM;rYK/pqRu36<+TqFR,S33h6n;>$t<lKkP*MpHcW@GbFS\L(/HGIRCsb:$_lE08-U%`Bi/n$7@2TEt)K^N2XT>c2tTgmW`bOKIn1/WG41YdU+tldlhDI:bS=X<F5#.cMOGnaEMp>RpS3hcond5q0M<rA/-@_M_,%$A/F9u%(@DT'.=7=fm=fU)?G@e2IG)I`9Js.4G#[GWW+Ge[;7de5pi%Z]j:_B@%ZSXsic6$V@8S([oU$@*/PUgiU*5Kej@J`I&-MKd-RhOT%m8#W'AI;MDE;fB]4ZrE2LN>,j,6T4uB7mb_.fo'"g7EPDC)6PDn])NB(U;MQbKec5A&".]Igm),0#XBT%AR,6f/XNtaqq=:\#,G-%eVjI(XO^DZQU[^LdUJU,;k/6J;)m?f5/=k1TJ8lco126DW?GO%E2AXIcR-F9,HO/>JcK)K\IWm:9"aZ+97N>N'mbGC#>lVZJ?*Oa%i\[mR&P9!1#2#FrNk._0[1hb0iXQ)mikX'3c9#,XRl5"Z6saG<0iXg@Q2Q8B:q((]VG\CH%1eY>`'VudjQ0PI?*f4]L'B4!o09b)%gG%`hd]X).jOFpUD>8>\8r`0QF#^)OrlQo#c\JmN8_>kg"=U/,c8+lnRAE,#qF].W5#>131:limUiejdW)ieqKSDT2`^)$/Wi5'h%o>(J^>1t_oTWeQd=C2oB2[CD'X0^Fe!'cA/='L[SZtu>!Il7><5Z_D)<Z"IjT+<!lai4H<JsZ1UNGk:i<U`lXr3!9:c>`1l`-X6i%.A3!:cRkMu`-`\(V?kJll1MD#o8Un"/H]NE*$@@rO^S>-:FBC-nb.ff*\Hf`adL$EWLbXli#X.u83;W3=:e>/AlCa!TlX/7L\*l^%Qbig^0f`o-l<0k3$BY@QPB$4G.hr],XAN*lNAgAZ]=<Y4=/ls#L+p*fNRM>X=O&+-^RlZ$"s5SrrJMmP<rGd7rde11rH%0r3]kE?%7u5.HJI(9eINApcI!od4^f)X8%@Tj-(2)`TQ4dQ"C0g_q;e&OW`S-+K?%i=T%^$dgTfh\3ZC$#;3/lM">5>D$:%-ZdpBJrPELW)!%?!V/<+7U2hX!eJdfJYt*`/2cUjqeGaUKE:gL.1Mp8V;rrJ`W1Z/:Q1mT?bP[hWDls(;`i?N!h`Uh>j.!,m6[+eHJ'>;El:6/6cdj%gt<*#:/qsH=Bt'TrZaOTml2j2p<D+FSJebk=j4J"f7F%!LIq!&DckAZ2-Hdu&'fC?Q?e[U\]T)^(`!K#P8=W8?S?O&C\J]fiV9*&%ND,]C&k@ZEXKU7['uW:hN)u74W5:miioA(N9.DJjbX8I*Vp%]Uip)6U1fKQBKZ07!C'WCJUZ5BWTXHO)jeYK&$4GKWk)!%Bb?_S"%!18Itbq4N^eIDsR0j#]/qgc3NVeZs\@NZb6XD<@:7+s>R../6#J\KFRc0<@"ZWV%H_EF%,klG"/`k$.nB7p=!#.21TgWt$D0_K$M%m#k,C6/Q24;?+<ks!7DLYPB_O6(@)J+rh(b4YEE3oi[r>.&]J43&U),j0Hue#;!an/gEbBY=kLf(\[JjE]H6G])ip>%2=7O)"dq<%4a,6?3OP2BFBdrAHig@<YKOI.GO0R%(T)n0q-qI]5u::R`UY%\IBftXMf_t[0q2h@Z)=.[')fnSN>:V8^n(7\XG%IWo``g(+oB;&%5:M8N(^VB]NgE=Q3A8[Yp)m)I1^<+FHf:BCIX\>$HsOk;"WU3L^&L,U2rH4BY2T.5:p15f=Ee&XE%h)h?Yqb:)1fm^/`8Fpol\:g%a:q,OY;6M1KfK?C6.8Dm$rr2<dC9f0o("m=-N48oRG"#3@#B[1DO^;si9P!O@8*UHa<M8c0t.!L4Dj?!G;TL:Y.%H]BZXbLMKCkX%B-;=3mjq:lrkTZ>pD(%N6U^0_Dg^MQI$MiPSg77l0n`//T?'T+"j<=@EW<rQo)KY&Kr3KmcE6B*HST8,_/^Uu]D[fk>6"dZj.i>u%F4*Y7aAM@T!J15HPsZ;OCS5>8[pnlM>;udh6h*Ma6#LMV35"6%?#WQ3W>ji-O-4K"3u)]25Zq`>,Zf*VUmc[j3#Th.OG=Rfo)I$#%n5`'jP)+N-7*c3Lbl4*IpWQ(qTDL5L%1o+lc#[*ZO&gk;jV0E5['N&6"K)R%;YQZ2?UVj'#L?aCNF,U*=:\!'du_a8lM-.nLHn5t%>9:c19C`0MRi4HTcra/o,X]ZLb+hAA:'"Q)F[@qUof+'<41m[%&Fitfp>-F-]mrh!fu]#nUU'Y(_SmeB1$)9hmBs4VIa+WUdep/E%V^%YtijqW_o]^r#UYGHL%jK1qq6Y^64c7f^+Yc<4G0-8$<,p6;7r).')L<*g1;ttA;0a4Z0QT-V?pLkXo;L.&Y3Fl2lejnJ<(<jB%IGQ5pe:I]r4iP=^UJdd#'4n9jbiDW@e+D9P4bodT`/83i;2r8+1Js?]'I.=B"5n/h4*f?-l".u^TR,]PO#h/X:gLYY;G0Y(<I8u?%Jd9R+->((DWXpjRpF*&<Zu>d8Ari*?4b9r#eCgTe]c*-Lf_"EMoI0Rr$e@H:=F*r-2DQ6&AW*=[7gZVkBr?iidA(Ar(DG/j1?a76%6-kPn!ia\hM`j[?7S54=D`"sMa?C2Y"VO2]'-X%[UQ=4]J5cXFm\>H:X.EYSmaA36Vutj2NAPhQ;:Q:dnqJ.q"O?&YjW_0pUAAei%F<WQ=CstQTSR+fW%Y/uW996PHpXQE+ZFu;kZPa(4c=UXjO.r@H%@O9Yl_AJC-?gOeEf04YF>tKgP*U/T0C:s'6f;N$hQQf)^8j?=%g.;'d+/Q!VinOsK<,;!W8,81Sg/CGOLu&W5bq1B4*255X<pE3B7t!o2U<]MZ*1hX\4mi2F72'!?aL"$FV7>*dJ>!Wk9.O'>UH/pF%^.c["r_[Q+S+QGFV0*P'=$qVZ+,07'qd4=;nfLm)=$X#74Ji(=ZH.<a5)KLH"BV@o^t8O.'VVJqXFYFj2mri9ZR)IZ'n7V`Uqh1[%b[,<V\<7!shs-r%mI`^::&C7u1"V`0&kMTnrL(?oQj,-[>]B\1W,5MZIY@H.LoKirVR*K<eZ4&AKWLe4[6b[;m:`Cse+r_I+/,Uf%:_JA9,kmmCL'_qQ0O`nTB;&75`Ag533Jm.Mc,3O3&WCrMhDmi["LKYQfO#FT*mIIF;nips*Wu>6M$(3X6i;)8C;-KkSX-Z)VK&g%%AD95`L!SdI=FKmRm=Wbe=tp8!IFUR?I^_"O$Zm#R@'kA79JI!-cB#oQJ_$#2>c(;g]U<F6WS#L?!\_3ML]Hn`88TG,+W;P:<7Wr7%aN<dE8B(hoB'X-*T+mEp&OW70]/T3qS;"drP#DY+bNOsQ@;/k(K+p*0T$I:u-*@j9.g!<njMdtgs1Jac3`Ng8j^'Mk`*f5CZ2;IR%>"D6h@@WQTi1\gNJ[?jhA-[lK9(`3$Z&TAJ/Cd$!RQe_X$?[FB1/YIO+8nTg^/L,b5Z!723Vd\b\RQfM2s)[A;.t5)h,t=cFf<5H%:gQ'YH7.6/oWuE;3C,FNn_^Hpb>e/t.FlhsCW>V"\,Z![gi:s#Zlc/#fN(O*N<@lIRCOphfu-B,Fnbo`[&K)':ru(8%ogaLUJ"$R%TfUKW^$Bi//0(<Df\s$]FI]*erF)G*UpMD5Np8;O'KL:q#8Ajja0tb4kBhI='^_"DBqbcOlLa_`.>6\KAKk_'m5!>>12T,\T=fp!%Kqr6bG42"W]XuZRqj(BE7T6>7Pr^05O^CCHPtR[SqRTJ+pdTKJcN:^OEiF,Gp?>S-h=EU(lB(N4'Ef(@!,F',^cm<"m43jK+kKVI%4ou9^aps??aG><N=H9<mmnctoIHjE@2N".B:$-r]Q9(Og&TnHA)cHu>jk(-a6^g%^$,A<<S(/X/_UQuiROg!L-Y%Z-E/^8I"QXP,%_42X:3[XTG@K*/iRQAF,!hh0@Uo)FhA@=V5`-kR^8p6I=kLSQ9,;!J8r)!%8&V&LD(r.i)CZ2C[L<%Q_[1l.&e=jg5U^c<.`_6#(%-RDa9%a#)L:*$Vr=(dL`i7&XB"_s0GSd&C@H#`3[XDJ>+r&eLglB!?Ue4`Ka8KB&Kd8CB*HYWL@IG+Z6,jLlJ)$lEq\FT_R&;3\5%%845K)h^>ELYTgqj=mAhcoA910u8f7+'8qNHF`8bK,U*--VZQd0kB^:e0]S''@M+p[u3Op?hq^<;PRY8RWo*+V,d'FJB1*U5M!uT%"%K"q;a=g&_n4+5&i/,t0,ls):/j+Y=l+6)4]#i'a5Ol%h_jI_Q2qaIYu=Oh*hN@g^IT?7@%+(s#">)[>r<p`%L7>dU/pt1`)Cq_%W/B`4kZ+.*MpmOA9],F+?0@M&qg4S,d!p#2Z#0%/3h8eaSW4En:?DgMr)?5ic`Ns;J!-0(@/'3Mc'N<o<;U:"-9\Ttr50f-kFXZ[%5YZPd7[W6W_$Q$p-ML[[alG="Y<]%qH&2Y<KPX=m^qI+NeMr3Y#3;"hW<KgD8'#9_.rnJ?X(R1W4J2>KSGPFZK/k;]^eo&Amllm!%6+ghA@WB=PLS1\5<f%Jt-aCESBAq,AKF;IcRUH&)mnM2-4pCf93X,$9@!ld7QgDoUQ]a()5^(.u:!cFY)i`$@Z)kTo*<hHC4ZrF?%'&R=dpkdtl;I-9)obQ?>UYm0(qR1)$T//%K?X6'2K[amuPa1r3X?rqQHe'M56tWNbG^Whu)Q^-5bnIZ-B?/$56Z,is8/b&R0Au_G%:]@13"M^\ZpB8"PcZnFR.abIP$T@0>K)V(^[/?'<c@ur`&26(gJ/[%mdAmEp5G&5I6Q(fm>N@eZ)P^'0$;ZGidJ/\tZCbUjp%#GF%!Qq^>C9p>oFd%hb@(ft_kJ[:m]XL#J/I`SOUIIk`aDQ*/9(si_WN';kK9otL^\!V9MnA@_ETjV&*hX<W2`]f+@\=k/gT3_DIMBuZ%U[`2T&d\_68s3tk[@`M=-6&R9Me*"F&MmWq9<7gK6qC0:dP-<+COU=XrtJboCi&'o)b4XT5!J\>SOPM)K_F(0W=b+k2EfSdS\d]l%bBt5dafY1+G=VUG/p`\#8!JN95>)ii8Dlf]8XcG+B3QVVH]+W=`,o`!:s9fR,g._&U?E?.<(DjW+L]8o.uLO%6CpmU-<ZJ^fQ+,p%Ic>9e>mh^_Z'2UYQl\./k*U4<I@<8(T=FD=LWZ<%qOplg/PB^fO;Db4KO-:.o&VVF[`#fdi3aE08M@b63(&AC^o1MV0/=*lOOYYO%P#G@d]PSS5BJ-WEO,6^!C88>aNGhR2(VRKc4H^GFH%2P#SKo<Ik]AEG1>,N_,uX:,FEfW&bFsLIb8R/c0GTGo[#[MIkjuAiAbn'K%KU\jlgQ/_meFP&up>r,5*!8pd)V.OcI[k03Ipg=g8,mN4&/tZ:2d_Y&T6Z,&X4c780,]s?.g+GZ>6YUU=*`]Ok._3ATFJnq*eXpE%L#RA':Nf<j6hQI5h<1o_MVqVN2<):_^%f5T>qY\Ebh6CjgU171U.-BP?S02V#.3(=M=N6g*sDpO)CrRJ3%,"e]i\9S>XCmd0\@3h%7$R=*d8@AU!-m;!5qsE/d!5omGSTiRJHoil3=@$-2GdXT7_o'/KFP$Bj;BHC3b7#dW5&,AUb$<S.DUlboUS/Ad!Gh%oBr!1Z]YlD%0EE4UUG;7gmn)lT,A=#SDrSI<>@Z07#iOsjWu?Ei+!3%r0r>f,l&EXC0ddn=Q+s/4PV=[:\@@*U.HM4?G9./HCZ+LFST6=23O!q%%3p]"r=16$.R6q#6W^I/r\,K@*(8IdM<>NuRL;pBS783Qb'\J0ldVog\Sa?U?A@7h*?ET'_M7);^Q1D1BMu?mUP#)]oj%]5r/E5%s%S@BR5Os$2!gSTBk!s$l8\+ki@&UEUVd0g%KCad$0E@CZrY-8(t#rSd."janH?Og4"Bm6k4G#o:8.00[=XWCWsi/"Q+`RQ@SREce[%Mm5qe5s(=`0Ygl?9j0,$g/WLH=D6O'G#uN8%57kfj#sV0nCj?[5mY]jHB*:f*TRiKAH((pA@_Bo]'[UPg6?a1CPSh`M2F4RiBK*r%SBbO+,AB?;-F4eR'DGWWrH4;O7qa*!E6g=F<0Ni,.=(teD3*n'a'IT!W-UYOnE.6r4j`*>iTnmiL/ut0E+50*iQHJRd+S31DS7i!%k?u=0[\Sb9CO]:P3I4-/-=(&#]e;aY3D!"Bh86r3Aa-a!QAig7Oh1Nk/Oi:Xfk:C*;!JgE-g:0eop7KC\>MJ2;SGf7Y]t<nWeV=,%2+eqSY*`4"'X[qhVD\PS%ZRI#?@*5V+0K#!g5WM>npS1'((`:oDtjNc;U`Ku8p\6R10?fJ3"4m$jTW0ZZ[dHN]l[/]Angel4aNU]%/cp8RU0)pp:BP(M>8j8H4f6m_)U6ud@F:"+atq!Dao^KSX!J;>+a7%=,3>?9:Si#*SO0N<nj.OGl@/Rk7W9sV6*[R3=aO/+U/`'I%ZM(dZ0r]VnhCra2&Za<-@mZ!l5i+q$ecm,8;8],=a&A,_+V3uTDriceerFZffK@S/_ZE*0`ho0ED-7`<l4/\Z-m0M+M//iIb(3ii%eR/DsH7L!9M1B&<&-H>[C".i8fB"6Ak_K]8B+GBVs8A%1[+JS2T,eF7r6p^YKJoR(9go8A:DIIE`sK<WR@0kY#0q/(j$rX,pD)1h%'qOP:Ma_8Y6>CTclBWi$F"Y%/<g+To*[<Y^]]0@_r)0(Ug-4HDqAG[(.]Wg<#:>9F>./(3<$aEEP*s.thdhaAj[S<^:jOV<k2=g[%$B$e(@2Jbq3-spQ%K=1(?,Z]e^lK$iPsO6"8&.]1("1%J6s*HXBF[1m%a:R?28ciUG;i_hF6/RM=.VC]LK<0Tqmc671VgD;`5nmY%2Kk^mpcGm]'Y+V=QQj$^L3k/+XjXmMe,rjdMdR>D':?n1a"9VQTZFBP-L3HB2[Y+#KX[aYNN47PrqGZ;UWfUP$P?Y=DsrR5O$u79%.W,c.h/>S7"dWS8iLD.U>r7LV3mX(b3WP&OG,5Or?%<b:TV,j,jR%aECpX\4@(8>L:V1Fh,O^HSdA!+i*[B>$Z23amYYq<`8,j>0%egeX-%mUG1G*,-1WfCP$foI0.dsn9F!_=9q8nCqF25AulK1Z;8#7B#?0O>dp`jIK!696bN2IH?WWrM*%C?3M,Not?(D6Zs#POB'#%gNAugX1,R&T>mr!_?I1i]NL(V[1.nUIKKL6JL<k&)ScB=W]Q-0NV!-5`p]YDfniohKYbc&R&<t"L-j)/\r'LFHNs-1e,[F\\hRUH%rKh<ib#7Z?Ot<\m/>-J-:qcKZlIcqY7*oPaYC@HC',q!#Xbu<)W39Z#=6Xn-_p?)i44!q9^,t'UnE=t4O>GPNhZEDIotAc8-7q/.%4;F`<o<;baWq.-XA\G]K%V,-4CL(`Yc:EB3<9#np-71<L-[b/3-'04N13)'f7fl>&*3uIDV!=l;+ibGf)8;0Z,YXqTEMtu'!`6!b%\5a7!D\%Oq>tJ`e=qHSJd7>t>,^#AS_L43g@q3Y9c&EK_4fRk9*fS[a=N/_*%_0n1WLIgfpAB#<X3oA'BrMFr"uBG.>ak:L<83uh%n5ia[d3KVLPg.r61%C:iI.#e\!:ga^-Us2%[+KKk;XU7_72F5QXE0?GG<.0kQ6,Aj/QJcUZiWdM2Zfmd]$mMu+ua9e0$SL#mSkSr%2h!N%1!c(IflSR;)P/R8MXpg>A:mR*K/G`P%Cq\g=_t9YO,l@T$UoU6d*3Wp&Eek"3%c8U>0gBkH_(BSqHKrF"7LV]-fi5VbI-[F%e#cnUm6T&,8dhYDXg<afnf:B#<5+A4DoPMarje"qkG)-\TS?Nslij66E7oSbb_?t7e4\]3Y7*[WOmjj3*\:c-[[Bkc!qhl7XSZ3Q%l\5nDVmXBW/3ZElI[:5u<IJ-,!:0^`$*0rn3c2R?16NMs]]PfRGl;js6N:q\n6)B!?\!`r$7l5p.!ag2riV>#73MX>bT_qWTh:Q/%L-0HMmYXH\Fpmdc9dUb(!s4!5d@7L%=<FK`Ddq6_XL)L-GZT(j0&7eOgYSW6=D\_,1ulR4W[2L,S+_$fna1m5SVhhFpDXSn8(]ps%;'gYe"k!&JN?Y+\"D70cOKZ`co/.C!Q-L^-eTaIHK:stkosNju3dMq\SS]2K;d'@k0Ut>D+,)jSOElH(C.!@Nlje><AKT`Re4:^$%Gdq_<e27QNmp2+`Bp)pcB;`hUR:$9kQ^77(n9C(uKRp;#BfD\5":4<s8fka`Tt76tB*KtORhc:59T?q1P4nU_?np_bUWf/cN-^*/%_tQeueL$qE]eT%tR5F`rkQ/RP8L,Vl5$,C8n02c>r4j-QM<c&CiTK2P\2Zri76e?IElRs6@q94,c_b;4A_UtQ6o5f0P)^YGm1riH%2,Xpb%LU&Zp+k"6_Sg[GeOFE66-r_GLos_(,Kf]T]HF<S^*Z0c)/IjNZC&'2ck$],A@K0]BP-t2<-=cR7li/+RR+Y$]DP,;4dA('%VuL"NnWn2j=QX22Hr4t[E(s'Z(VN0DD5fJ&>s*PV#6)EH/;ZmP77m8B>qc4ce,8jE+Ffb?/_!"-Rcj5Q7<*_WYle5\'<S,#lSP0N%op3k9Eo]NuB9PHOFQ",cbd/Qjf.Lu3k(!W>_Vn[8V$^.V;`[Wr/M19G%rAKSPe6#YEAd<3R3HcFUKWIfW00"9X4D9ZFm_=T/WV1K%!c/$+[8<7O:+u-l.NfbE'9*p9JNaVek6LGKJh%/nVC_T;?;FF_CcS=s(FBY=/0tlbF-5\9oU(6dD![IZ$27+GYb\TO9=!KkQPDoh%98h-o8jHTb\IQdik[`S+)cH[Lm5'U*C(.h:T.,1'k-"3;jc$,gTPp:HoDVR12+HTt,N5[q4Y"ZJ;jMmfD*YHQXeEIu7'WI/]/.HH%Ki8_+R4HepSP1k/r3K0/@QY!:jodKti>nFX71+I4Qn#ai4=>X+]*]3bhh:[mAC\5d1*0>Ab%G;ek7RC:l?W@ZS2pDE+NCHD4HCdD%aPu3]*f)*q$o\]bVL=u[11gVW59I5Pe*fE\&@Ko,<-3-kBepE*Ojb9CTGJLS%Hsfc-o5?2:[Kuta=UV1rpWi1@I7'\!m@ft(/q$i%M3McI1/s*D6H?<1,nf7&:(D(@R>#2pk5X@.(DS08m8%=Z\HYW8]1;i"B(;OJ3RganZoFSs_@eT%]Lm(%80N8Y2V8A`Fi*AC-JKJ2%IW"Xn-0U(NYaI+^70*Jpd#JE"\e@Ik@PN27*pQ-\"(:.[>.KA1+sJmOr`dWhTaVigaF&r8iMSbnjtkV_j.;Q7!^(Y1/.r_Bkcu)A%U2rYMp(O&&[\P>UI"fJtmVX4-;$V$sfE*ob\(r9%YQBAZh<&+K2q%%!42i2[bl^Dd.KHbf.0Y<k#;?9AX2UN!3<i-6lQ('NBAkg\%)S+3r5U6RmKlK)Y!HmhNZQo:m8^W%_S'3eh3=/YND%4Eh8QYeUBgE?dq4tChf"G_TMG/S#QA,hrq^KJr"J3EE:s=D.5Snc%h/lt4%f+\:qRJjTdr[R*jKF^\ciRM;"@b*t)$E[*/4I]L*MH*L[+)Chc>jV3I"\8Z,'N0`&:@Xlc)FTI$B.TDf'_,5hOtT$[4LlaB)i);;%?X&St9^8X6<btjM/qoN?W:%ZBQD^Adb0-le-nj__q80is2l[[WUgYX!jCaF>Q0b`lgJJIUQs7;-8,&><N8TIP.KTn/,Vf[&%+'.k%Ma>pY\Be1k&]9ZJe;kd3\3bmB<l]9&#S3a(_:402q'RZp.FV[^(;L&]OI"E],p<FC''taa.6eh9AikU@Sk*tN-nWi]9acW42-U-*%5i[V$rFQDGibous"V9l-2jUe`.BO1t!pt)DB'o55=?.lgm0BHurS"%/L!8AV9Er&#V/V%a%pG+P,SjVY*Tu_[7$+A]Mi&1G*u6W9%$8<OVm_hQ`PE@4@28jGc'N9oti\&9'5s/C9Nnm&Y_$44"0Ghd'oIYE]YH"8q(md^K/r3s!>5Z?.@LW.1Wa>sO0aUCQ8CbI4HZU.T%.eUGrdVf,aPe3KbPE'b"nbF90U=f!F)Pn8,niXWQ:LYG5C&+k:0Rq1lkZONn06D<u6!QNoV%)Og)JG8#2>-dDRS41p^K1jbmf0:,%Wpo5CS%dS^qA[KE>`LOWFqVtT@7MNDfu<(+`ZR6`=A7<%C`1ZHOF@2Qf3UUiK4$Zc$ZiBTGEU8FASK0WGNbia2+C5_FF^+CI`K\<%]%(10=C,Y<W"E+&$PCZ<lpc?^bm$Bg-=8#Jm7cOg08]u+?rAQJM(*ae8N9m]#OI\)%JpT.AFok\W\,Oq*dBtsZ40&U$$F9J*d->j%cN,nr:5beK'WHU"<FW:7$J)<XGcN@n<no)^W#@+f=:<ZF_S&jMR#m5K9/p5\-#^5+fh'=4?+p@*VRtq_%BG(`<f;,8["+FMFom/T%V?cSXVc5pDRlDJm#f+GVmLse+UAp7^8R>_[Y4gs9Ge<@2V=j72\So2*]#8=\Bi!GG,"Xtn%*Nsd-DtlAh!'AmolKNZ+H8aNR^'gf%_\6;C7:caq`X2EWCekG)PKI/]^.+@GZ50W;],a'sq(TD&51R&O3]pi^$kPTIOKCHer`II$UI"l[r@R<:WD#.dEntm'.&@12Xne6Q%'UF;mmqQrg_rE6+bm,q?#kY'l92_&E$Z<]1Q3_tD6oBG9aUS.b&Zq'8g_TTQjdPKrR`l2'Z(Fpkf'%&$a`UU0Afku?1s\=ZE?@H*%U(c1I-o8g\0,VD(HjLYDLcLP7Dut=CJZKrZT&(BmK`Ys'S=a/HWa"Wn)Z6oP<0/)f8!=a2<"^A'pl?>)8-31qf(hc/NarE@?ZIfE%Ulm7;,k2%sj>,Tj!)R-^I"@<b(^G13h)ZWCPa=lX_sL(*LIc(!e:Zm^USKcm@WYR<.PB!K!fg_q<6-U$&Yre3<c&VpKE!W1btS*+%+Lp`^'Q,Cppmd,#(U!pFi1MoBaWc&g.\,l.U*-pjg)^1hS4MuVU5e57T1nF]_s5>dF<A"3j3Wg7IRTehFNWO)2SYlo6g71Q'PlaM%m\$\spaET5Ig<d8%L0(^2GTDH"gX*c`h!Tf9tm>"b/n(oGuQZSiC#@;@LKWSA;"8HjA>_uakS;[+c-^S;/i'"g_Dsrf!n_<go,+i%`4:7c:3mKMQ#&t?*BuSTff:^b?Os>DQb5hQR6H)30!a"g,N(PB:)gXYlNZnNlmH.Rr"?0@r\o"Z+2.(mMFfGa]kW&nZjR]Z<D'p!%/PKfU\$7mg1YC*r\tKcJ7Crd+8pE9/gBmuN.W'3Q@?!G%X;JE3D5AB_DZ./HG=.SDN,#2#ddi4BS>Lt<$c5*g,qX&P(sIqXg[M.C%7kOp)]YO)Dam$9i>C0X;:CsmPrujb#SN8cSH9In0Lu/K[bH/tC)M*Tf^HhejF9A/)=g8/\Ds('+hR67A>:0rDd4B<EV6-[5DkUS_%!;fn]Y%jC&]EEAf=B0Dq=>9CLr?D,8_>f=/1*.L!af6n663p_MeSGUA<4rFu.YA@^&gJ2BBTW^(:8jj^6ltZrrC%i8XB7S?;)B6b%k+b$ghJKrZHl)1p*cAIBb4%2<##*l^d6NS9+]iZC!eiU&/:*D>\1Em$T7A:S#FuL4ZRSC<"R8>=G,,6J67E6k'J*/ll)D2bD5tUD%:OgSVA0*'3V;t(t'aYPm+J@_?@6YOh9g':4jT7rs8T$1.StJ844G+44cTL3<m*8k1;!lh_XCf%tAHPuq8QgS;Vb*@Q+a!/'k4t<q%b>-KHZ/BWQ/"!WPE9B[mEJt:c7kdZ-q"i!N,P+Yo-8X^5;EQ7Tf<_2AKZ\du6</SJ?$^L1rk0.,"tki'rl1kRJSC-\o-#(._i]Le%kF[hti%1_^Mu4\?/*GkMHn+tR=_^3(31gOP+^ofpD^h]Qh)D3M92jk5%7#nPI)fe]3@.rF-(qf&<YWLo:>)!ll;SedANsDD-rQGM%SsCVFl\dI,Hh&]oQiNF8X^@&ZK2V6$e\qE(6H=F$!hN+rNZjAZ!@/9Ze%ET'Ch+',F\!ofcQ=+V\GS/jXTa;m%g3AB<rir<H*YFG%n0MX=WHqQtI57O?I3e"Va(j9f^a_HY>QJQFfMCuT1DS&JU4Sp<U[AI*'BAMd62-U-[IV$a/$g2*Xbf\k]GkMG'71s-CU/joqh?b9%r(`'@V:%95]j"J3dBWM,'rq!cGhM=!>uF"c@AJ<[o'dD/O!L"-[i;3ELS_dMldTZ&3*@JEH4#E(_<Y+D5cBo;m*(/(#jcR-W]amV%b19KENn=K%A(:S][/sq(/'amb)2@`[GY8_d/D0kKhGi]X!WXuR+1R<6qO%GcY-@7nP/oaq[W$L/)VJW]E&r3a?hIG@(CB-CT=<!b%Ml>L+G*)1c7>kTB^0r<_^f"WpUOO3LF4t7Dh<;@&!F*"fck6#'fJ"IPQ:fir&EN$5`)%E!2?hUkJ%.hE-QZ\es&<_S`IeLf%)7%u%ed.DIYA02LhQ;nHEpY4Sa6[6>,J_.-pX`4acL\>ZM$eQ4dP06s$Efm2nMNWVU#6G8$3aF>:<9VF+)ueaLCcVMGAa"rR2bCt4)>K6%9'Kd'K."jN-Cu[aJ<YEG\rUQ!KSOuS$upqUUN"gA36>8h2W!GFbuS?Y[19pt-N3o1:_Dgee+)AK:c(3#qXM'ZXm-$;g"e2;jgANd%60cP>2G&:[?`$hh%p$1Td=Tm_^HJXbrE1!H%'^IcW'k1*>fAS9N@>-V\/u$%]7_Wfm'X_]POZsmC'XptDh1-5B#UY!_<08\d1tLB%e=[jj"R;[D5L5OkBS`<$B\Yp5Qi_,OQ&Vk&9m!]ErM'm_$-U$p;r]2t*r\M2lKgah;?NumDNU_KA*h89`CihP<h5/?Y>WFSk`&5,%7ZF!q\Q<c"X%iuq^:B?dFl.]-/4!*7LMA4H9Hnae>7Xl4Atl)=/MPfa%)O`>87ZWh]$jP^8Ur42@,e*%T1HOJe'WE!#":llCR8!A%1efa,H,1h0%6H7MNBV0[Lb4CR1\t-0"_oF)'U5W]3_7TZk6fsJ;]#@/e73![4CXJp@q,/qe.Lmli%U6VV/ZU`YM\39p^EYsj!B7i%b`GtHKsik3'cI[KTOkWMk:d.c%81c0)W#9]Jd,Ink%A,Y4\!:rC%5\e?m7b!Qj]"V<g@#g@3b"fe,VbSJc:NK5pU.\GdkC9]iWVt%o\6>s$I:ZA!2A_S%oSN]IdgKB2Kuf.?t*>j4"bnP9iP#)d)"Y`ZUJU:GdA+.LW!r&1_"hM>4UNB$Nf"l!qf$'(.#FK&\;)qKpQnM%:!=RumX8.>RZTG81b[iq%X?WCq23jcjB&;gEPdSh_d?X$jGR^tE3]V_:P,n%Kp/ZPG#EM9&c'1V-OFq*pe5ijIegdW):+@kM]u$$%B`?Fs(@'Eu)BGA8a+Q1FG'\k)F\FfXrlU5])B(5ejen<!B).fe2H'jfj[PS_Fbc_MX%>FQ>'C8BGeMFqQW8Iu#rq_-!1DuaEO,O+%\A[oKAn7L@(XFtV^9QUG"jk19$QSd]TkmuE;k@Ji!:-s*L:S]c;Ro&be2VN%Ri_dHmjAk7ZRBjUae@gK$MOjN]?CQeG/QT6Gh$p.%R;T+\im+s9XEctB-:KQk[(!sCTT.8f:4-oB8$`e.aqgA2q2JbiDUqp>=`[j-QV2sISk<5Bk6Tce!;6Eu.f)Amo*ad3Y'Wk_0tYr>%/@")2.<+P$B$KiZ8S>#s]t&ag6Wr!_^GX@\9`jDZVB_*FeiC[c(i4ufQX*QSj/j\_E)au"W73tgi^"m6*iLLLYSL@kJLui9*hHE/%;Tk,>7VG<8:F3Bp5>7,U\e,UTAVq'e.`m;6=Q\Nt;YFXNL3/PO-0L)h:;ugeWIt@AR+Pkh.adh1]Z#0s(pXL_Y83opQ-Oc%?e@[_%@e[>76T&Ib7-qY^g-Rr<To7_E6t'&-OVoK5=A$@s1AFIr!7XR.dSofanQ9#+%_L_fmT^MI3bp4]@``!XlqF!CVNg.b?'s+cR%jc/%Q;iOk<$J*Y!Vk&6T<12U74L.bd))]D.@l9)o,%jBg0!no7`F^,3^CP-`biS5(LUu?q4G7)=!\O+G";Vmi'EWo78]B%]Y\#q#AdBh%_V)D-"-6`Q9S&?i<[C\bIdT9[IoE1g.YS6F!o-j+cb&=cd#Gos)%fl+)Rp3"RSBB1P&3k$\Np<YY)'s]=@(<I@`9UndQZ"OlQCh`%<TsY<e7m_fn*+YpF:bBn;,ME557J%C4n8G65`GGE]rOc)?]tYJ!2KT;s/T](_2s71G2;R]Hj=Ku1b\VlT1!Ai%fQ.s.OEerkFf?#%$G*T)oIDB;Ht;?eG27tU#<ZJ71,0<F19M4+Bk!t8"abo:!W[e[pUt!BU'a1jPkq=O$H@Ze)A3HFgCFY_"`)BO;<b$(L:50[!4S#t%;ilf9on*r_d0>o;<G&W"n1M$d,9&9`>)7SfZ\&7E4)]SE_u+-O=4XYL)i13t"N]CqT#oH?2CThI<CU31M,BOuDTlVe'+(u9=eoHK%=L:d=Nc2EWb!DNFk'9bbTHTXE>(<$J?lBG%O[Km8T8cEpDJ73Z(se0H"-S%_R*CTG8fM:J!?I&eD@]`C`IA_l%mm*EYru[n4$cL>%<B.jar]Z(aI,GWGLC&'1d=.b=$WFf/&8fE<qN?<KTIkL5f'n9)\2@W,1V-MX9-ADrcO-0a%2mkZO(kGLU!<L'IZ;#l7)pC\5;!'0%&'c_^0TIMVUa(jni#+HLLgUUdHZ3-H_FP2]$)ntfY(q3s]l_%bfB@Mt+t&*->d!$`C5K_erHOcjCU%%u]t)pN5(L0`,u+`cf+)*s%,S(49N+qKR!"-4I<bh2.-6jPkOZh&,6GR0mhJTAJl)Ot;VC)`iS3XYsY^.49FZfYhZ*[e:eT(N(S["A+YUY:WD!f.Z"<>d>\Rdl8%cTORLPO$]"#s,rfg($/C/[+<XAIoPA/A;1:TY>uB=<k8L?']\WJR^!45Q*O9nKnSZp,Wo@f,N)"i+_tu&-nQ0%8No2kV/hX_/#^T%_mj@Q1>l,s`$))2r8?3c3/Qf[[bldSNNkH%#<ICg,rC'4qeq""rrh'-K(e\=Q@iT(g1%c]Jp/QZ54sLL_;_/j*uR]?\mQ,3)/XZi%1T&!?BFQ--G[.&\6F(LEQu[`0?nj/q;D_I7)cgtR.[..QLWPYP>+T]6>kks#1])qmgh";G!,"5^[>D#K*%[W=0St+$Ig)@4i=$^r%l1c!ZXt:.,p]/KEZ1]meAqTr,79,6I6)]C:iYB0uI@F.<O[`Y#9Cq=e??(GR*J:UFo*QtRgH=U&=G7M)6eke[NStm4>_0c%.qEc7%3o_$rmYYpnYHD6PKjF6*ad"@V.tY535AE&h==]]>FnQTK`R&A=Fc]#I6W%p&D5n>mobf#,QFg0WEI0_#\0U;Z-s/gS%?*n]@UrrK%p]m>,8^Upg3Y.'JkcfsHVPl2X3.[tBqhj*tVDp0#n>@#pIZB8lET,K5TG9'p^S<tC?o4l5!)C7=`Hu]seA_bEbDPBp;fj:qkX(?3%\2uW61S%^T_KKlMlQQ%KZf5<%7ums80SY=>l]T/1MoalT@6k-W.KCR]2(Jqjg1J<^ret)=Ml-lAB>pL-X![uRc>]3efke`Qbq#4t%%N\%R!ZnhpH<_@=*afPu3u[t]>3pmZc4l+E$o`]Us3kK7kqP<']hH:JlPNL2$b(,?#7a<?a+L_Y9W&tr>rjoGg;)Fd-cWeL#=Y6>%QM:[2_;$dh=1(f0+R9Wp_<mh2-;+7DUhmQAp\EF#L$$fZoi3]/?gPM4_Y,G9:Va)EV!gF3kt/1_M_@dX\Wq$e)(&7Y-&N5R]PQCt%7"haaE3N]<864YJF$pK(Rn3dD9Y&q'X!71+mmmH]m5ZOCX_2"HJJG_2oF[SW54Anq6,IDn_-I^q'@\*E^K*WN2>KgH)c"=!J7^kf%fX*npEnCZRNhIbFjk)mZUs[pP6#o5,RT-@F"7":b`T2<CJ`6&m_^)p<E<7,GjgCLW@^Y%k&sD:s@bQbQW\(EJ37^]'kd2+8q%A5>%&>Y2fXEn^Z+dTD3R>=F^P(VM`08j65@$1/;k/q=WI_48fhMdfR+<3:SSp^"E^>NFJYV.aum2He>:N&7[JhtE_G<'1>GsefCbA\%a%dt^%]R#Sp"<VKcr/,E$`jOlPMB@bFH_DIVG.@N'QIQ$jTO,$mnV/+7V+I@q[5q"M+d:BM5jh\JRNf<a8c@X>cdW\:O;6*bK6>35"%oVlba!o1/Tk.pBC7H8eTS8d=//A/E)o(0tuin_!_F#RR<]fF,W#9!do('3F\g=^k[33&b-;GAuSYP>:7H1i"0Shr2/h8f5)=M]#e%o(/!f<,P<H0kG%!`IQlF18BdL.M$QfXLf7omI]Th/kFFr&Ndd[$@da>DPb\jP!!VS+Zc0G7A`t\nH\CfJsEKV*XQZ^WE51kM*Sf\%cCd88kl*79OOXn&]S]nFoBM/2+4>a?`gn`26/9(iSiBt^O*s=UdbXA[?pX).UjTpfr6!A<^?jBoR)Z_LPL<4p7nTm08;t([#MQ,(%dA+@(YSIu1-j3"=jqng("0!Z9\\XP4UD+U"@/#&9LX"6`.*=X7'(o@q3umpdjA6.d<MIQClY'?&*<<SA7K`8?OQMc]E<J0FK0tFn%"Goj`e9L4]P8h@c6[r$6AVCsNm^&Ht36Na*nQmW%=C>i?VgN&<k]THO&j8[I$VBl^UO]gTjA7@/i/SincgM`:lL:)j!?!C+,2;>r%.7$PYXlD]e/kPc`$kFnNK*c!'d?lIMV#Q%u"N@>>JuX&XjVLGd.\,)V#f9\P4pl"SE!OP%_9%O\5g#7Zc?/OZ`MVQX%Su*YRtujc%@NMi,ksU>ucO8^@+l^meMd!H\^aFhIHTmf>o4TM2YY(c$,NVN_aiUYZQ?T^B.r8(('3HAT]-C^!S/lSV^`:gh)gi%eBhgRKp?t&f%34k-a3D>P``e>q;"jeMkkk(CO^kAB[lo6IhLkFcS_f+4nRdQT(#]?H#AKCB\ggrhfY>+cmFGg>!<YAsU<)7FoQWG#Z*QUJkc+mMQ%)t)Ma5,)3U&808FJLH;c>V^K+K08,ii9N#_V[;".ckhHH,uYB&P(ID%$E]ogO"sn<ilIl5_m(#f:>oa*fPiJ!Vl?edlV&`*]jdpN%Oa3UqI3p1iZBaGiS#^U,lZ@)B*mGFEbpPZ$`/1\&\mD_TaTX,Mrl)@),]Wl4??u0Ci7"5bcILk(ABpH!^*5j%!FgY)9T/Dte+1G7%nO1i2&n%q_.(^K8`l2>L<6OY[o$?9mH'rc;"W-r$M-KY)[3tdr:J2lVI98b7j85W/@"]P28p6@EQZWs*)NZl]f9LNMk2:WP`rogP%G?hp6B=*Z;.XZi-MYK$rEiF.mq.9Xf.,;I+Gndh/[t&@E6(Y^fPl.XDRQ*"1X$9n2H9m13F?q"jGFZ*dA@^NjS22)3%X@=S09UQt%36'c7;m]lTo<Hb1O!$e+,oKc,2H8-Ii8!2Fh2LUOL:u^43.b7O.17]UdaS@FRP#Eq1j>'O2<ALmrg,,WQYJBB6gm7\f>L-Eh`3Fd%NINt)\"H`kB\d;[AN+SQ4i[F-%[`(I96?Rbd.%#^K+D&GgLlU6,Rq`_Ojqeo_KWrQ.)<3meJ\.$&Wa1C_Y'4W^?AgQX*^QC5KVeq%;EAlFi5)1riBEsO8?Dtg["d/-Cmrcm1o4]$(3J@k9[S[=*E"k0TbVu:5\VkaQ,5@!K*g"q'?uFMFAd]eR.RZJqe:2tI<!A6^sVI%%9KM?qnWKg11G@g#/DFu[`LaMc,@W<=%gqG>9Q)oO@#JSb8"%V3eZ31(TQsQ-H.K2AGWo/PmSFud$0ss`(&$Nd`E=6boVP-kI7sl+%dVEpDPnjjhI$c>ekQ2N#:`Q%C<D:$Olj)&pme-ZEp]:<2*FC#*qFZ>QdXGh#?J6;QNs_M<Z%%u%S=aD5!3n.<U$sB)>iD"oX<k5-%Eoc(rX0iCC6$13I74.^_S+9A&VE[3NWTsk<;0JFC<sA3oZfd*aTl%reU^t`r5b93;8Cgh0Jr:("]M<-<[Q?n'Die>DGGpZq1AoRr%]9=D<$C@hJ'@pX)U-],6F5FmuPNjJ=Of8\!d:In5[MGt.CL4uYD@Q@h^e9m,@0E&.#/^Vo@o32WdJ[/l29S!FT*"sQ.TXaY>cffq%mo0n9VjFa%^+ZJ2=hG)_e6'>0&N$:(1E6:o=S1%9\4ZK>k"OQ6`$Mm,9-Keb?PKh(jJ&e#Kf9uWk^bgi)lrYPPE1&2$-\8"0TL>+%-YsY#)G_j<*I.]6>Bm/oBANV"!:mu[QuS$?_GUA0J#p1%%Y2<0e*`uu<%Qr!>tQn\5CPoSF%N\kE63iMRQ>&75p.I\fj,SI^^uDC%5Z[Z,9sAScd]Q.k!n("sLr9@j@bX7KaG0;41fORUZ!_"$Ej+e\:IMT$`@91[P#iiZRVYh1O_RR!?sO0Z\h*5j:!s#WXEnVfN%+D+%Eu6D(gb@@U,LQo295-p0YbI)Bf;)Q/j5POpF[k;Uk@mmTRZ[6,VIC2:&h5R>g<l^Ur+X=C\RC(1/RqM*@J:jdEi^11=4p'LlE)Wh%C1.+mYF+%M^P9l<L!p)sql4E46h)d#X2^@B,3>"VAT0/6$q(UgpcECJM&@7.=MK'.K>8[8Gs#PTiu[<B"]u"9UN<RUmeE`nBE3ls%YnLDBpj_:F33'1gJ&g.5a,J'Li3B[A0Xk/)'6u<?f5&_h56!oJ3iag"-"(Hh9]Dp/R0#?M&N9.<p9agGa%==LlK<s^Y.%G:%2DnB%Qn-&;nJ(V[q676^:S2oMQ62t`ct:o["#G-DNH^CI=<_)N^sse\Mq8hUU[jNn`4@j-a-^1_9C\k3rYJg';j*4iX^0q';'Y/5cn-#1%D[F(,O8BX^O`B+kF+7(,K_a$R.BBS(%+lBQXu+/"k$%n,`a%*51_BmS$-d*sqE+7,]6+m8#CAIsC(IsiG^.I+4?g=Tm[Y@"CFrr9%5M:-m?#EnU'G?)R$%CRJ?cg3:#VKN1cB1paXg#t:S5)>5N`?)[AS=&eSbhNWMY@46,M;_7T<XA_\`abTg!gY`Bo@fZY*'%0,\J>[%bf$H!Z2)cr$^6uF]a[#'Lp&[r&6#7n+Dp+CJ2uCo"Z00IC;u21P"ioLNkQ?k'1k22FpHhk$2q`Rq&XQ;$j')@Y@%>VclMXRKKK5b%i>Rn?q!1M62dI3KDbs5g2SIBFYm'BQ@g(^p`C/u_I&;e(4](p(O6$if]J\mXnZDOC,FgJJSKNO*61=Nb7Q^\4a0i]oPa$+j/ckl?%-fP%n)RPlkOL#/</Tkps$,]FI0Lg)Q(jdI]d+-Zj:nJG'!C(H=1-eHK&@;=]9-uTUlU:g#qcEI+b1)bS1adA!>'T:QSn+WRpBOO(%RYq/I&HJ9c*p?dCXgQ&8%6/K%-Wm'2,EVNNj8Mm;`MbA['OQ-U[D<Zu)(R`'CU?qtL)L,9Qj%C.n[\"OJ\`Sc!9[sI7rW"%CFW8L%a_hK`:.Vc^0fI%u)u+FR]8Ktb9+6V>QEPF07=q:=&57l!8XXiQqcr.H.dM?nq(O3D]>-gZK7c?WQL3UqLsgM=/.FRe8j6#,Q;MfL%]uJq@a3IFbPDRp?+$S7d-c'R72"V''!43Jo/<PHp=H/$4kTQBY;sRZM9+F7'[r6C@c3<@3/!Y`1N^P+4f$@f+53+US%>ZW`cd$R*%1<M/N%(@3p$m#'?T"$D;cIT1mdj[ls8k7B-GV&uW`92DW_>o+ekM6;co.1JMF\'oTQ6]YQY%):neg,29mi(E"1L2=<21NN(i"@7S%`C;=BQ&G2[0?LT"e==#B]2#^Tm:9'KAh^n/d8Oq9H?tgE\O*Wl7&[EFY1()pSlOT$XEE:pU!K(_cVU#QMRR_&FXe^62Gg/okDrt@%1B=oW_@0ohS5KX[ha8"<H,jI9aJJ-6&'>^=i(rm`aFcK8X\+/Tc@Z+K!!@oThFhi5PbXHai;3+3<]P[cqd`d=o1]"pn%FP]]&Nk\%"p1UhW)?be@n)W=JdS1lW5)79('H^C*AG<8p2"Kh2l*c\'/nhQQYNo,LR8/IIsB`'Mr"gn2GsoIU1QdA`\po7Q)"8Yg[QRI8:1FG%m-1r\)3Cj.n?M+n0u42?,RQRN+BLg8>lXGRkhr=W>qn5LWH\[02mKeJ*b%\A]=kf1RH.\-G\7!\JTV`AqlJ?%,V972[67-3%&2iH%s3S<uNh#:7F0oopcp:8kP3_$>p;F2:M(p;Rl)bVDad=<NOA#4)-V97dBu`sYM/$F?nT+1D)t,<Eogki_J\VqeH(9bkIt8chUsK1J%QWD!h9Q#QL+p`TK%/LHp=Ar?'H@BhM?q%u6]"\KplUYSBBHo6Y-++mILO7QiCAe8[q.J"7ZohEbcq%H\]6a%RHE2ZAHZPWP0-F\$%N)+?Wd]uZkE)u!Z#$O)k`BMtr`@."FBKf/h.k>[J7aOh6=Ccd(n63O/!*T&0M#t!JVW7s.a$>0Pd(XqCK%lHslWodSq+S@gU&9?]%pY*`NRb'tGcfN,46e/'?W5n99h7priBai1+&D*?8'&1d!biHr8)SAk56OVhX"E+`%Fh/qg4?:os!me0)U;G$n#0i?AZ-(R.s4[,+%jRL#gIdLDZ>]F(fk<F(+)\6fZ"/6RS_ZF8]i9+lqfEno-$!".l;9*GC_E:qfs)m#f9"n2QG?Jf*4Ce17BaJ27:#4VZ$.s;S)!tc&%#`NbjI5KtLQEk^,J:rF%!SY09fjDtV,)9#o(H'(0699IQ7ZD@5ni@&8hp]"d-@:p=PQKQj17?)cUXMdW][29!4c>'OOE`E]3^m#o%J[&%jW&8NRX+4+"-4kbaEHW)[=n29:b"4:$U:V;O*l>:OQ5B0YRp9VEA/rP<*?(DAl\;tEfg18Y,rXe07;j>p3i=)t!`3TM<^<$B%Kja/%H2p%tPr)Z4U[S`ps-*DWN#U9^6!e5p+@1HVoXe7E:Ef[u4qLTYGSfm$n<U-9kUUQMHcdti2EoJS`Q?Wh;]c5t*m"JX7ciXs%FLl*0kYB!i87S3D'k0pj'MS-KWC$&kU2Hb*G5JB_9hEKKI#*hN$EKRtQZF0;ZbrPqeCFCG7CCOW@llWMRPV7-`B6\i5n#;IY0knV%/n*9Y-WHLUae_b&;;:FQ&g6hQ9JqOEL/_7$cCY'Fm/qJsJaG;H%thl1jQBO^.`tegANoj'cJZRO'!^Jl[b)Y/SML5U.@oE5W:O.(%.o],I#8!cKf_S"6eHrP$4>_=E/ei<jkg>MNKWq.g<FU/[C^'oH!aGlAJD"u7=M#@jp.Zo5cW2?e7a4fCKa(+$k*Dt;>u/f#4&4[U%M77X`R,9?SL;I/%f-lpr)_W]Da0A%>G]B5i([kjecVs%dPL;:b1)e!.XqSTR%RH=s<qKCed/:0aWqMXuGorJ$DAWZGB*$*F>M;Va%esS73$nF.+^eYSpV^[*#'W+_jl#!.\88/W^UdpeGJ)r3ZO]1=TLk+HO92GQAgk%2bKS=U6It^4'iri<#*O(J>a4(b^1^GUk["%9<%/JBK%YU[_+(>%pF/S/GipmRXY?h!.(CH%h:T?K443Y@T/W#:'&4f<C@Fh1nKQK??D\dl%m&rSu`LHaBS)"d\8YbID@F1IYL:lIMW%31!7,)jAj8OGcBhRA"S_^kY^rp*I\0U+TMh:\=i28]O:d.X9Gp@B-J!Tl\4jG5k^1V>[Wq/FB*m)uLg_%;^l)(S;/M)FkULs0bab%$(J&,$cs5c%`j*4M!-=oK64Ya*rPM'`_)B)>2GddqiS.)87o!d#34>a"U+^l>Z\9^89uofULnBC/aZWfM(D?pP?8@mj,\I*1oH?o%[j=H>+%=H[O;,OGG#;;GLna/i%QmDak0'@#rMn(5qG?q:Yu3aSBEt[#)g<i-G?QL+_^tM-aH`opc<TkN"h['8-,^FHEG(>POj?Io%!+eL=n"OgXH]4/Q'I!SQnS8$.dEO`51a0,pL;VHMH^feo^$Zs1fBh-rD*KKRp'kIr@_"#@XGS(+]%mq+VD^eu:trX+fZUj0nG36,%Glm\N?/(d.Vqm!oFLS>gFfUmm.*ItYB3CeDfBIeLXiJtWF\Y'koG+gi3BO1fnkZW&1Ak.A7Mt>F0=7+I5AsL![Q$Q7RF^+I851Lp%=pRrM-)e]C]:bscO^saH(]FI6+9KZX$hc45p,`jfaaG+4l\<HG0`o=Qnp5pGQ1ecTq8k=lmHWHd58_o%6GnN$a4MV)>'-\/bXkp9%po(X;9U-6;P:c4*,[Xh2q!bRP@\?:1P+E060kW?Sr"O._L4oP-l?'$V?c`Y'h)bbJre\krmf;^I[I`C#,L^p:bFW7X>P9U@r4#Xq%Zfc^rb=s<`e8>#3:_8ceX=fEh=FNd?c2dfH;JBG!0_gFB21M;jP;Tl618AqrB97$6?-s'g/HA0\(i/0a=Emp,@@8dahUX*f\X[<g%E-8).jC>T5NLt/kN4^8%3s7nIppH9%Z4U?aK^P"Iqb2>,`G(/K)kc5XJ$t:i651ofE475nkM2ONPJ<M=<@*1;-<SIqdpFu]>,V4)%=$0[/?hp!;U$@Sfj.LTL$2K"kqHXoA5[8mf+reXl.tapfSR10IE^1DE(?4fT!kG6E;DN@WCCV/)fW?%9#RC.'I6@&+(t6nKG:(oq%SS[8Z)3XSKm9bQaB.Qc#'#rV%jQX^C^-3uQp(i&0C1cbQ\M0,+A/bdVC^4@eWhKBuC82(*TO;MYnf_=lm`-h7SWQ]3\c#[=cVrCi%,Xj>RW5&bQO$3hY6e[$2m!mD[m<,FA%f3>m\9ZI4:$H*r/0inp;glu+$p]885!:(t9E$?!_$J[V4n%G4)q6:O(m.)>6Q#1"0AX?3%@AHY-NBn2E@![W7X_\58FNm<]W#<q>%_=*#16$1\S=$7Q)Q"XYB1mb<q&T-!WaN$E&>rkAF#Zu(5a;BN+8,OW!I80X@Vi"+=(;Lp%lFB/RN2['L4<Npd71Ci,5cTU5.)Q`<*VYc=^O!+6iBb4hm<Rf,^Nr:_6KO3@bZR)9neim&$gF#NLjPBkP4eaG7d6UgR1WR4o`Z))%Q%b2lelLG4*jY?_GG3c;g)MrV7A7(0b&$YemT\^:AgL>X%ou]P'`i*9XoWI5OCLH4Nsb\P9MsBI"/5/+UmSQ]c'#)7lNm]A,%Mcp%AZN5.2;)/'U_$*l*-(%<)M7.-JJ=Sp!gq&5K4QFg_Rb>4$$2/F-V*?sHpbRg[?DjV*l7.hC[Ih>LO;ct)Gnl0XgV_Hf8Q"ho%?/-%5p6J3$blD3+a)TU3'D3tokpmF%f.\d@ip.=VK"cncWD]$Y;k6)RfCj[d"5Ol1kVYf4YUr2o(1qK!UfM01!31R\l:sgLJ7oSQ:baY%kG)Qq6T,NdcUHo4Z(>6U)caZUE^?a6Adpm)L(B7QXuZ(<b=:Gd"Y&F.rCnkW#US2;3`3fi:LlC+W@W1E(XTN+`]\:O-f?X&X;!^p%Wq!,q04,N8/i2/d,NCI[7NuDh@Z*tb^A?V)kY.0rjVMZVE0%NqqGpLHkW\uM(-s<qmuX2erilK*XBVl:LlITll,d!DJO*/Z1MAN[%%9u5X?!iK(+Ytg8K<m)nR8'Z:UtM!2T>$bReM5PRLN)mBaV1U*A\Ua:6GMa"lmG&W$b05FM,eTHSJXJ`%ffdgF"(u*^jcl^K+X#G%M=F])m)^DdZ^<m;V3dZ)aV#+]HWSmji4OgL(SuhVCj8T&G?ZgOi5J0^["S^;?gQ,%=_GQ;77DLFLZ>pLU&-(D%l0PmgjUo`Lj'Ll%2q\]cdb+L_N=$dY5k-%raQ_'Q2JAUj<f`>Nkn,cL@)+U^#;ik=;c?M8V64Bs+[10HGH]VQ@X!(jjO^ibIQmJD]V4-#G\\\5lfj>U%S6.l!jDTDJ`d`58P(OMJ\qSjHq#Zs;iEg)!6[Q9C3_:)N#?X^l^mq!uaj96Rf:7[]gs03NJm>dd%6>DG^eA1!JNZS*+g6aaL?&p/%<-BV=2K6nah76qH%URN7q4V;]9K*l]?NTZ>d"ZQ&iUCHFgJfNh.(GEnfM9Hmp2d+V@tM=Ap#/B!Yq=eS;#"Ej0gU"X!It4Q6n,QE%6&66Kf4b(5pm"N,)%?#qY;dRkU!Rp)5CG#j5G$QL_1Gj$Qm::VmC$/("4Ld.X430k,(Ei/%H-?9Ns9:Hnlhd/g'XH.<PAjC5k)@$%.S"7Xi9K%[mc>/AhJTEY1[qs#aRqi];HaLh5/)?WaE.Zhor6R#m1g9hASER&fr[]'"e\_AYsHhVO?&5:loMWD0(51RHXF[Cn:*ap%K#!5([V0[q?I1890:phrAs(hZ7BlIpm6uKg@)qo:PZBMZEf8f8N=UQI5!cur6rcVbF&%U0C..di8Rn\m9"sC=U)fFJ=:]mQnX612%HIAPNFemdC_*(5U=!K#m&5rQH0U_b]&u'L\IUR!7J.k7C0s[p9*!H_4*905;btXW<=Z%ZW^r##?h5<Q<gJ(Z:cgH'e#KDkpTI5Jh%[jo$dmgQAS5kml?<$^%iMCG5U[B.Y>Sp0.j"T%uXn#W4/6?<,s7\,6++f#s-lEIMClpTP-M?$KTO`XP]..)%;^MNGGmmN"4lEJum%&*r^7Fqmmp1VVk0Wf_aCot%#6\"N>'T[W?YNK$EB5?j$^3Ijqb<EC33>K@LY^GZm2?F-!"2jHp\+",MTnXp.%aWCd.>:BHn5kB#B%ifS\;a@2a!1Wn[q.UmQ++Fg+MI/UhUG$lW2jF`fXM?OeHHt(2]6icophX((_Hj]m)N[Rb4AmK^%40/SO7hTG#?BK!dA\#p7S,&((%H;NKX%G(f9,F*V0RIl):BkT%"p\9p7@tn@r.H89g;^G$iac]P8qhZlN_`3R@2?#%G3>i72pDd%_eLGt&Q1_-4^_+6=&O/*\d:!0"%f0Rkm*;mh'mtE]*;P2@0Fa'0/71]$UOQ"'nLj12D-UXlmbl\O)klmctDbIMI87e_:Biah'&c+/e)!%Y"6R"'!5Sf4sj\S<HIUh4M%I)=+I*%E;dc2.G"Qd)q'/d.O-f<TZOSeDD$B6R=rB4>^kG%WN#[EK#tcV99g$H]TerKK<m%YPBuh+])TiEV:YiQqBL2n',r0UHb$%Vg5Mr97dOP7Y_:-Xo^6ArBs7.2<E:O8\2!n0t\=PT)ROF!!f*7J67VfX/*\!`Ip0Es()j3f(S44GBdF:G-2[C.c2NT$7Qkf*GDG=%W09mLLCCPF]U_\?!MbhQ#S,(-1haQ^i$\=B18Nt#p17.Gj7$_b9aVkedi5#!;^(->Du7X*3RDV4F?p^uq>9U.iS,-K16/-Vko4Rf%o;549i,PSoD:QQ$KW#Wb,$>F%`\5mJ>[o?n,@CI1#eE7=BleUhA2)2-g3bc12eeuja0'O!+8aaL\@+FQ@C@)Repa_Eo;ub#):k!7%7BKLqYs-"ciUG/F,C,(h#OsbuiIl9$:#GCA^,Z,_#=2sCI&-cIK*8Yr,'T84KX[SQiFV.8ps&\&B"1'K/tkbVd&U+[E[2NB,`HEU%M=+X`^]iEPPHX`&<^i3BSrK?*,[f/,Rm5=2e3h7_*1?hs7E+QEh(U&,a8s@':EpDm8=ip2WFuIGCB'[XntoG[4a&oBE.baYSkIIq%B)glk=e5gP])q,r[G0=ILr[;bVoWjW=Q.^=Mdp2`W:EjJD5D,8MurN5!jVDPEo-f-!Y\4oOOKRZkpKYUL>ZXXrk#[W@,sGF.mg[E%-En\\9a:&/-*<M3jsmYsZ'RCUJaqqNFN_nGQ1@JWK%<&3k"),@>6`Eb\OaYd_NF1faZ\52STsbMh?*ojMfnD+B8C(/@`htRA[gfG%bb>u!G,o9A%S*5*LSB><g!IcU2ogl/ho\5S6Q[#3Fd;/l1um=qk"k6dWGZ3R$dDJiks=)P`KJUs_8juJ,Km[lgs-HV2M47C%f)<H%.53$N27SH.N<?WT2HH+2lHsfKnubX#G%\gESbsiG%\2Ik2J%Q.P4CO.)FcpQ-*q^W[nq@UMNrW5ODk.JG!m-dYP@X6'ocJd,,(q^%_'VQn\lhKQ9ra,a(%Np@$eMk34L0j8p*r\'5iSN#NJG).P.bVO5RKBPBKeaW[bdB7dG-%a>S6Ni&47[^^oP,+;/(".9)GPof7qRI%*&qn`*KrPC8t8,eQY/\MgT\OY%qn0+0/M[S1i]#CXDMKO9i,Zjf$7"(i4g-D3:N5$%[\0TGipS*ln,3FTqAK)m]RH3g-N61IOUH_%g^`*g<Yg,SX:aOQm1o0+:I#`K='Z/Y%Nqd6Xkr34T>bJD)[FSg]g#ENZ>Q3]BAG9:a<`@Em9J^%m[q%qJe+(MkD&O_!!nR5Vi8V9%@6ujPi1#YZJgGs1pQ;gjD`<6ZQq`s`qIGqk2e80iT\"K>[MFCflT[%1b^jchm"$N'6-In3@!uWdM\M3q(<+mu=I5*.b>SBaJBreU%`;gZM)2/Hj0fHJpd5m^Jq]/`Y`!$[ucp*5O)[*Hha"VRf,hMkA5/9@f\hnIj'S>u?e$Xfch0Vb#?;u56np$h).<s8G6f,hNU\RZ#%@&)/!eXo\bE.Ij-a.e8A=_;Y-01pS3V=*]\Es?S>R7-$;M<3iOT$8D*a9[-g,r3+Ra4NbW,!n#2,8@.E0J+FEYNPg^VVYVDpk>B\%,WN=Ec=Xh$mCC,CrQ$<F)T-W=HrG-nHmS?G/mb]NJscadF[JT$3Vh`M0[G<DlFWXT@BpNg.6G*S/W#.j?$#kuXb.?D9c3IdnA]\<%PR,X]+<i`elfWs^R8Hr<e(IA#!#VE5d0q+b9oZgo5$r7SI.`3]Ld,VLLEeNaI\^DCN.qGh-Rg'<<WJ2eU-&H-eX2fN;,df>Tq5$t%",[)_Hc!+STY+_o!IRkZK#2Sc,G&SG1eq&QBgjJOTM+QJ-!`KM5YfIUSJ4-rhfS9'b#Y-k3nHml!0^?2<P(%uH+WnP@962*W,qOZ%4Ld%I9tk*-YC'9#WRTO0<IES(;#-AdYs1L/9FKWOB^F#hQ,gHlSn!Or72MG?V@?Cu&-8Z94t,b`$\A0[:@B^$d55:7^S1/9Trl]*%Es#%`>*.KQ0m9Drdud/Od]/^4[m!L_4(:"m`(BcWiC09"M-uKI(B>DtE8i3J.+t+)9N"_NpIg`g'17W6%!#Xm9`2NT8)cCX.CkD]%Y)l)QXc+]fdrm31]Mm0A75a_kj(B\mBYL2IdGQT3\?>Wg5^q[F+]Wuq@6Ti3B/p2cCGJn*T4tIe;aghS[_$>tp`dOc0.Edr@0P?P%5N*=8Gi:+k,2221&r4Z7=po5^NHr8p?kRRC<1Em!6Edt8*<Zd2:#oo7_b!q/0%@cM6K,cDm/3:1@^f#S'_p,nFot9-btbR/OA9<G%kM#(ECPX$YEF#Aig*jDjlh3q8J4i99UO_,Q,*9+;@(E3_as6o=-q:$Qc8c_[)ClTLJr@7&\IjnaXE$/G='Rc&Gj9.&$Q*%sjH/Vr%Co7`@9:Vg%.H;!d$b->uW,K?dQp*+i%2K:?/IEuN.&8#Fo>j%BGK:2'pLOBJ-\FAe&TE:69oLhu%>HHR,^-uXa:u[Xi">)9"`XF8%oY%a9fOY(;Lm6<GoB#0,X]KFq4ij-ifBm;-!?%-BWI'WdLI!G,N8d/\a?^YrIgrl*7]0HtYc#6_0kUOgULQ]$dh?0Uam;-8N$b;n%<jp6\+9[rF1:b=%ln2*$pkFBT7D'aPM+Z>o;eD_9]UG4kZ1X^k6T.m+H;,^Vc9m7T/>AtJUp330>/;aMVBi.$<V5=\5*H-u"Xr/H%o$se=eBs32PC\$R!0BWJJ3f&Xe-kED)'2l]#F!b91;88[Dr*,aBAcHNFm`B:pLbZJr^Q6E3LQ)m?gil=BF-ig@2i#M^&rVMRV.q`%Nut5Git?ql.@^ND2U$ENr@5L*J<HKTB=SqOonLrlT8883*gj1:I_>CRH?K*Hqe<SOSjXd.@mWVjpsJd_2qBuCYq2c7Pm%f*756Xd%*Ki:[e&O<^-WZa43UcSP/C@&bFg.E#Y7J6rGP[p"</Xa:BN]c[fX&H^]f.6Pb[WDT,4SI$\A2dp9Fl+2f+q^4]T4cBl&unr[ttNk%6?S*NK.8$lqrsSl<2u2g/)Sa@G8KL:V7fc45.Na`:9iDg80.!%%WOkTN_)M`kh2JsU:tA0N:]1QEZ"=Y6b#P<TB^LV0AAL^qQ/(E%?K@:p;17Sf,Y&9QH[A10M[_Y6F0TBOOin3C,0'&50X&4L-iu<_*\1>tI3_p950"\h!pNR'91bGipg,_h3k[QjD)(DY`)[uN0ndI-%r3*j+ZH7At+Hk&lok?:2hpnTo"i&Z:@,RF%5n(=#,".k_KQ,e7:eN3?0M<l)dnp!4(9UjNi&Fa2LU;O'[9NhMDS,bJ52TCJVXfJA%0?5;gJ*rOII'^UHq5D$611nO$,MAUP,O*Gr;TR:GH.sm[J*Y1NIHmTFjl("(LSE8'TDD08#knP/+/_9p=gY!`QcDgK]Pe<(;7&_n%(2\W*d:=eAFe(>SXn/B;^fbMs/B!,&:'/_ZHIR9TO'OnfbFoJ)O2G$P"bicJ5V=^WX2cuNZS*>f1]Qa:/D1DP.AEie"3O$SKT",O%0l":G3fFnO-k.<A)$B\dpA_a$p/B#47gV^f68eRkeMEIEKCWGkojl[a]EF2fc,&q[H<dQ(T!=kj2a8nJ9cDSMTimFiF)Z@n;-U6^%J!B>4lWJb5GW=>A^@b)IT21#[I_j5?B"dla#$DVk6^XZ4G!/*LJ68R*cIVXi"n^2!Y+P<#8h(PLiL3PL<gaodhY"T0W-jUYCY.%?%o3PZ@$gN&1IdQel2VA%UPm%Z,'\CmBH8LCT4G1?/FJdHQaMFIHG+6E7j]DNP)Qr:T^!NrqcBMF`=rDA[qC6,(.&a76f(8=?T[U_`%mgXKLZ4Y=oo(]Me&,&UIT>DXBJF2<'@dcj'Vq7!CSo[Q*d&C3iNFQl=WN="__m(T<21)Ud3T(=dXP#sNTSm2'=H6nbP(O2Ec^/W@%J5c0mlI#\NP$O>9RU3llbs!k9%%J=Udhf@bUV:QtWrQ%A\#"&s_ldtGP"j.C"7Ke3rss'Ifu(%A[`l6dgd@-[8!d*HJehGO91\rc%(B?j"jgRp.SQkesMLUpbp4U0p#Fp-$q+dsb,fK%Y7cgnJ1RFd)`^i\p!l7;9,9=b&>+'B&W9IlJ2B^R5aZqB%gds>QYpVQI:g=:#%lPWQ'FRm]_bnptP>L+:IZ)*jU0W`A2EHIaLCFG[BD=>>pd1*//k>MmSZ+&(2jlc)n]rNX:#hS9C^S9e=_!u<FpdMUnW[QeXEG3gH%!ON?#0P^.G5LGS4SnnJGAg,N-&!E*J6DMSePOH5-IrS8FLBUi$g()mZSQ%Y#Dt=X^n_8%4!&h-\'k>+(h8p)A9>0_cj><.0-YQIR%qD]i6@_b[GY!"FHa;uN?DS-7c*@4Ei>U$rT(rHeB"e9+5&(I=62""9bfh-`&nR;drJ;.!L@Ga=;"j4/6!'U'.:-eS'kQ+$:>IFXb%c^U+.<#fhH*12HgNWkQj'`X3L$Gt*sn+Fq_MUoZK%K->JHRMj5EWTL9RW:OY_;dK/@2K>ndP6,8Q#b"!Ri>[IQ8;a#&eTaU-<&43%DKNYeanDNPl.4n^(QW0Ff@QZqPceO\2Z%h>-[QNXVPk;&f0jBC5Gp&4G"inPQQ5L&ZY>RcPMM1t*`kE_,<,>9"T+6t.E6_>\,HbS%ppG20c0OjplEm`$WCdg)1JL/5rghKPDa/>sb2jf?:n!U'oS=802@-4Y^M<BtEEtuma9YqrBloOroK>/SKY=A%[:il1SchNEDhBK?%c\7%BL:nffFU2!mm@;a`osZ7Qil$rQRZ<Sd4fh(NVM'J'D$CA<c+jbb[iM)aE0>CP.ck7-BRQ!.Y+u^'\D^h6@j9Aa5_`QHb<0h9%fmu;^CuktM!ll1#)Yf2c)MarkSbYYI$?NY_1gZLbMq>,i;.G`+UPt>.a6[51Y-=U,X!S'HUcn>($[ZY!gkfJ!'Gl+k_EYKF,PJuk%&W73IEBt"$R2E4FHaj(b!0.:op1a>ND4FQWKL?!q0Bj6EV!EY<_'"c#+SgP,ZB?%076M3/@m_+c:_PG^+4EK'n7XBBQ6kt8;mBE^%8pUCio/9uBHGSLg53!OUA+tMX=,5)UJ4RT1K@&+k!Up,gB/VsKd<It1M(^$40IB3JDCrgm>cmQcnIC%e-6.e.Ag\[mFkUMS%Hs9Z%0W3k-KK3pn%cn(2/(7--7nG4WQ&u4i"eC<4M;tbk4E>D%gbo*q@cYN5<O5hQ"9p/cd`0.VAbR=*78_GekE^(4;8NV,s7D;Vc.81:%_HD@h`I=0"%jdAeOXRbl</]-gjjI1QB&$jCeA3J\GmY7EJ9th>eG!COHu(qDZRm@9dTc14`$(n9:LM"0(-mX;!W))AC]2Lm`S6`g%%a\\J\!jPV%G&dgGfW@aXT)]fec`X92*&o?89<0L'>ZWi`#WbJ#KO0&"p+qB!<\P!H(`q&.=r\??S=01^^qSCqb9/-Nh2n18_Ss(%R$Ek,=9O;J(4HDr/;[X3\:XqHk_7"ZI,N&eVM<u,q[H^]LX7aKQnHd@bpkANm<Qhjd=MA5f#;bI@W:8mcFnnI>E>3^RW5;3oT1Vi%efk=2]ct',7p'.DfGK[N:k!Qti/2BMBuE<\J0L*HU9GGr_$:3QC@SOd99^%+S6[I2SpmF$4uVB+Mb*QGI].#D"la-n-f2p(f]\ul%qq%A/Zj`SMOtpl+RbS>ITpb[G9^-bgD\64Yeq5G.IUe5^]&BRe`"jU23CP$gCg!`H*i4\Dk2MqC$^4=S%+6!Vig?0T<Q>Ki-?A$e%'S-B6TtDkD8_Q[(5NXA8R%:gpk:pTRiriEr-@Z#(h/=g_("dEOJ;;1qinI:<ig1=Zb5fnc!pa^&1NYZIWGL*:?<_OeA!Y+uk;\LC%T(pZ@,m\,8ZA$/?^/_U4j%dSM)rBSCR+55DF==qt.;ng\`qaql$h9#X8;Y`E^?@d-R7ZkJ`BHl:XtBHS.SQ.;@-ceKou$g_HGdc,%AST8.7cppVc7j6a>tXUn#E0DF+[fEk<k*Y']lKEt/QIM(QJ5@GX(%%Ek&:6TPJdluMoi^.A=Fg6mu(GiRaj.C\7A(rac?%DL/e<m%ld-QB5+W)L`68P9BbkHb$X@0^V!93XCt3ISOYYr,iaF?&nnYA,s!f>CpQ./+db8WU'F$uE5Il]0J&F)g\Z6*#<PJ"\kd``P"8ihU%?>l]p7Ws*[q']K4=eV8gVTKhH>4HB](EI_S`aqN%D"s^jY(-iO:3L2_^%DpnF0J5=nZGkpC4)ZC7gpUr(=NC1s65L'?Z/HXon[:t%&,QBRoHl(n(BoI!-;Bo'1Q9[Q#rMb2eJhSoXZ_(BAc(G_Nc(ut[<c\N,;Fa's+)/]T'Kn3P>N?'Ka:W4rTMQI;It,e"sPlgRQEa.%5'Pt[#8'G`.[(&lLS<S`C"TsE#%#>(H,[!8EFW?clC>#-aCCS9MEq%cUa<D-[om6)'WNtZ>V1n)i?5X#]!R0$CDCL:_Wm;a^,@M`%Quo;p't.LqIs+L8:Aab!hj^f\>"_Y:'9VKbSNR%,!\!O6VEI5KGgITHGN?`-<Y)Pp=Y2ok=PTm#'2e_#@Z1FMG-FHcK4\V</UMb_%-(/<A2:D"ZQ7[`@=SC6aU#N!;1ajYkeE<*F<)@,,"JJ!;MWVFkFYCQJUiD\U8rD$?RZl]*l.sr$X&j$?lNsBc'']PX3Yl@>ie:=(%FHg58/]tr7`!%S"X=ZTaHHR2dP!%b"d8k,tjkqh'9F\8SJhWaE#0OWDi#)$*Bh)O<J9lQc9XM_3rf*5Is!bibl_+\H#"\E9O>.s%%1!G#B"eYFIQJI18`s*l=J]&'\Kdho['ZU$P8qC$\Lp-DQ\<j#c$cW[@5O'8P7^o-iaC?q\Z!C,";MIt0<Zj;>GfZdChusU>V2X"V%AadgnNYoisr'#:VFi7`&G04RCe?3(h7/iG,8*7`"gc54i3.U3U94*^'TR0Dd")gj$2Z)tgl'>Bp`UO_rMK0<%#?6o78h"r*1nJ[s%JZ"8Zd"#C$A-#igoYnDeVUDXnT.!X0VSH'=Z)fTj?9m,QQr;@.OniH9g7"$eWWKl,H8EeKWPX+#>V4Y8NB6m](Me7u^0a8c^iB:7%*Pode_&!KCVX>'K$%t8?K<"Bpchh;n]f!QgeLQZ`;MltS@Z5s=kp.01<C#8<,fL00L,%6P=CYV&A!3&?/%dge*\)*K.Q+$D`4&aK%BTNKfI5.#dio-`LTq7/#iV,="NJlZh-P2*#PEJd_LM+2.K>\"R+^ZV7g@la-BbWuofrIaIpgV*Z,.5P^T+jX#Z&/<EN4N!!MI-EO%4kX@R<rmB4e3DuDKYW3'#I:QXk?sXkr]^c=]dc[QH.V@)=CM<%o`4:Z7E5C#XZ.%::eal*+6/FW)YM=#)VT?`XX\@4bER\cCmt_G%N=%fL497bLB>)moaRQ`!'_E:"0k\2N(nHfZ7-G8L$eo\02'g/?i9;Z#m'6-)pK75PMj]:0<bHKA3m:ilKJ$mPj\CFoSaeH7YoEP_%/;gfko(9,ZBe6_9@lbjdX"ng@2\VL_9YDVpGFk7\nQchn`?`MN+hFAtTj_hP,3*R!jk'/e0;2fL#CU*+Z+7f`:=7`oO'48d]ftKl%e_Niod(MalNji&#1lEU.m//?Z)qB55YDmA26T97S(p5h)V)5A^jRJQ-htU\:R.BX7m$P!<6IAR'W7P.cF'MM$qAmaLEhZmgLQ1,L%-N9=%'jW^JU/Bs.*5Ch-?60cH1`DZ17P812/tiV%R68k*H>-"H+,Rq`8jt=58<#X;Ceb:Pq6m$%I,?T7rLNC2RZr)\Q47aZ5.4Q7%gGtj-!@D[OL@4D*fM'KJY7_j'b"Fo-qV@P%<sb@b;9Y))UT2sFSbp?;F`B2n<Zr7S7@!Gg&om]e8s!e0&Y&STo3pT2ZciTPVmWA,%i&P_;.\F#W6\sqYFEuZ/h3GL<ROr>fc=hVsW*AKj>Dpa%f[PG)X?uNC`.TVQCW.$P9Pj9^&fkhXTfG5-*L;j4h`hauS1VsIU*PaJ%;2Jg7$&M(!U/lW]bZ$p-<>T.Li_Cf_c*q/Z.^C00,KBa5j+L[#S$W&>\Z*lNFu6\d$6c+S'VoIMd81:n+kL)lpa<EGj,e6*8)r@>%W9>rh6q+D=#UHUHiLHE^lV?UO$`->*a2X[Kr\nTANtf"uc5X#c;k1h]AKb$P(ik#?.@#`BB9_$IdIH%,Kr9\0>Bj=N1"01ZB'>3Q%/O9T;R96;[XQI,,'D^`2A,M6p#Xp]0Yk`/Go%=jgoYu673BUX#:/W@,\dC3U>?u\]U.S$]G9iqEGX,q8oA4qG9+uFU]'O=NRj(pj%/BHs)a@qP%Cs89A?g@SAX0<>p0?SQ2\F=g%Z(ITJR]s@6h.u44S(Tg)/Eh+9TBNf`Q_Ds'JMZcFH*<*0T,4&Zr"Po++Y2-RDZ2,R%E$P[(kQqI$lh"Vu)<j_k8D%(HhfU@Sq=J9V8k?,*d>?DWB[pJC&.rQtiY&<tKUJ1EkVcm,fr5O]`^W'g@Q%[fRF`sQlh6$\lseSa%,+8uL`k.+m91f09.OiUR=_#H,lWp(<D`B9^nbP3pnu)tbbKo><Zf.feZEM@Z[d0JK;[op`_Qk_%P9G8cEB\SYRZSl%8pusF*1'!J%6q=Ke!<rhfi8EPO^lUg4!=0H#@"A?2Jd!&p^n;g$!CHnl"r'm!_1:JFK`qbm$5aC@5X@[:$jdUR3&ikt!'gU<!XB>\?iWOs$?\3C%&Yb-jRd4/albl3RUMa/XBZB2QC2/Jn7oRIb=GZa4]fJQA5XS!n`SK4>=Qq^k^P*\*Pf6nSeJqkq/F:M[pT$(;k[*(Oh"@m:73P`S%1e3k3;J`5u,I\6UkLBGi^>(hu?YqKkRNoEVPLAUK;2n=_*f!$oe;62t&fMuL7IQsPCj@q2"OC.m+_Tme]%XtN8]2:URIIVa=#7,N%=U8G(I*l`cc<!>A_=Ig`jN_R]ed4@g6I*!Z6ZXgt?*E=8jh'fCD`U8+L0i7*g8g8E?Z1M0qWBB.(HgF]T&9('#VY7NUc'#O3]+o8%I%K@ph2pEQZl"qN8Mh)[5L,7gBOT%drV4>ISlbAr^Q3B0$[PN2;=bjTFH3Y);28qc,KT/KQ>/mP,g?A-&3pe?ic&!R((Q2`JeGg#%'0lRC.6.SU5S+.\,_eo:OAMZ"84f!,8\:5Hg`KrlT;I]:$?UJ,h&VFXEZGN(7&`L;OUgC=(Zu3b$*d&^R-j=Q#WnX*4f;m8n)a]D%$@JoIHVJPG#e/:jpJ=A-E4?Rh5&BX=L;8VLjG#M9p+K3d_OoN1<nf.3Re[6$+;n_n">'!;Rr@s_.]>qF0W9@XLL.q]"XMWr(JUo%%TQ\Ad3<7'h5tSh;(JoC^;8*fVM?Ig*&bL^3=eeSP52a6/X"tg#^9e>>&,j-ROX$^D)@ZC>J4ULqMpTK7";6s'+nYgWkR3a(fRkOR%hg/Rm89ITA9^E8>_dII$]%f!c)D,;Z!&IM2Uu&?8e3/$o,pa0NU<5sDo>U$G?Cei:XXX[$l!!I5*^Ib?3uCam0]Qq;]GXen+Q[m6%MJdG!5a#QcO.m^7W<mkb.':u/+is'[7.$4sg46]#IFMuHJ96pJd.&0"R8.LT)Xq78`M`.Jq*hN<a%fbKk`LAlU'OE+Le&oRBNHak%dkncY1n!p=&[f2YQ1-Iph7.`)`+[S9Ep,Nj"DD]TA)'G/[TG!S0i2FY*nJ`'T`>_k[g)mUap81AJC]E=KV0e/!+2Dq,;`<<rmA1V%r(9F)?lDb'fTeZ7TqR,G=EGWkrraD;cbYX_4RJcV@EfYk/!+<jaX83c&<W`m=+:;#_XF.:Qj]AL:IUnk-DV/[FWl)/7XY=h2FR)6%bXPDj:LJfDhg6!&p&q+946G\X2P.^#aZ4,[+FERCN5-V=fLTb'R/h4/%"`;s=dBl$82J;VG(PUCJ5p-Ve='>O;_KP*<e,)]";k]a%m<D"lcps0m^iZpu6(*g5,g'S[#FKXoFIC\K5OSWeFTRII9D#`.MsUWImDM04likKEQiYasM/C,OZ7a%^X5R?=n-#&TZ%LqA(\7cE%)HD%^Lg,R[:-aNeP+AH`_$Q3AZXFMPf-%fS0Yki:+d,6-)9=rCJbXbKmXbo^%S%nNq*&m9WEOHHn6*F&<%4Sld4-?b!#i$RSH&[S%06Z$qklf#Z,K(+Q+GPa5K1&XFEA@O)Ru1Xb`ICpZms10:S\T7si<`iq\iW!)cd?[Q2*^3nXs`_H=O;m,#.,ac?61^Xfp>UuG$8*`%6KqdK[M@L:Mcj?<\ruZLA;g1%\3T*]:_>V@FM9qc!_hE0&tAaIT0U.2ETa3V4TQKn)q)GK@[?#ja5n\AkDu!Kf=^n^i;&e['aSE.%oEg$tecr>>A:alADMY;@AMY,M%GhV9`+UN?2\$It"gXW^aBNl^"#Yt_MC+,b#&g-a/djI\W*d+amVGOTUO`(/G7V7QZG^;=RuH_.%-$2T0b-CfWmN4*b(!*kAX4$@96e/ufY-i<_HQBH4[6WJ=!Q1]KA3X4624sMf^t>b#_/qP8((>ilYLH$g8?*l`#I8C"b1]4$e3&hY%#k97fZYHR]$4&_'.G2l"ekM-@ah("qE5lLqPA3(m!m3gi@c"3BTHALO2!'fq8J`UmV]6*IiIp(W?FngLU:r*_MR7buUR(q-l=%e#%Imb1M[67Nh5%h<B/pGLC1WY'_f<HUW$T;L?RX_X;A*=@JJ;_XLLYhW6"^@Y0PIhf`2,(f=2^/ch&1/410[V1=9f1>R],Sc^B@PaS%hX;T[Vcej\F^T/*!ZW3pFjOg95U6p>_Uh%W*8F2/>8.SrZ?Yd9"(Dm!,]CM^;lEj%2BsCs:-6k<9#]YY3;U=-bRF.+;7XIWDLeQ.%2l#jM5":B*:g_%.c2tMNW(H-oh4Q=SU2M>hs-8TZ\@.ogJ@pDqO.-QMg3@[sh;Y_fS4u-Hk0OV6")]!`WRAjbR:3&1,*;*CZ:UjV%Q4Rfg-+#T/RtW4mQd_J.HdAuh=UI9CR]4/$01c5PAlt*-A\T/4G+hHpdNlf:%*M2$R6/A\jdKp)2S>ut$)9E#D^ns`9SN!>O)T.*%,8"O0NP`"6-Lo'ciX_qd5abj>d.<Ut3c:@0;JALP.OdBjS+X-Oke*FC<Qa_>0MonjE?UVO$5WS=]X;a':#o8PeFC#i90ka$r9lN=%+U!D6mEnbO6kj?UV#MU&;EfdM:5KR;(*:dMF^h\8A>*8ReHeMZ':LEN_-BFgMu^`0kU:gsa*B_O1liUMJ?!SsSulBfNGLEX!QJJm%`shVkkQIKPLi#=jb8<.]>bj4o[,pd;g,#<dG/fVD3]uTe5tdOT:Q#"96h)#AY8Ff]\ku4K2?FJN0i2JroFDVFJb/oukWpI!l@bor%)imQUL;&!T"rqCMV.4,J^fe`?q3_g=\Y;%DbV(X5qo'h^Lk7_tSggD"5a`P@+;_8fK;Lij(6;4N5[UtFYP6(D3\#DI9.U6HV81jV%Mb'=P_+Fc[WsIEZcshWI%94PXi;ec"5:C8U,Y/$2/8*3D*)IXl?;)(`"8tW/54Unh/(p"BLsSk;d7]^Ip[7b=`W5HO25eNegSP"L%jD6T;quS2T-jLj:RN-g9K$r.3=uoNC5bo(!`K-0;\$p`m7.RYY/ma,2]b`Bh(Q#>ol"2%mO7ONc&KadaU.Sn?r?C<!H0aZs_O4uN%rBimK\-r5]fB`RrR+lWI!6?Rd77O+JgYaJFVtu;IoFUg[";7AXr$PtlOBg!7'ZK@Srk1C"!7(d(7g@j5k!YPU"EsqqJ?2K_O^I5e%LC2]:SR(^Y.,ab`bccGY^1!$i]RkbQN)pMMo,?MCGs3Mqa#)r<>!X9T[O\>l@JT[)$6'lJ/FY@6;rXoEAp)C_`5K=,)]p=0q'BLa%(b'3\<$N1Md%-]BdH3bKk3'p=p(T^rk`<p)mf:=Kp;lR4!\2Gge``qIgcDmK]MW-el\L7Xej3=k`4SJe>%&e&W_&%-+ph_j3hi!C%ZRo%<OUee:0hSIZKp_&UZRLjmSi'Hd^Jk>5<ln1n[4+3B<`;s]djraO$tX=K)2fW!=c%<HpFO2<mnQ>`P22BYG&uCtgRKilVD@UE%GlfDcLeQ9'DrumIUkZ"Y90Hqrm0Zs*B02aU#tQ/kGoYN3G<RPf+l5BCh6s5^0OCe6^W,%^7of_:%t^^#0tI/N]8[:$kjg6a-2HY>%W!rp%7%iki:=Jn^)/:H6=WWAXP";cBC/b"sVW]*J(8S@[d*Y?O(EiM>r(]`oEX#2a\4]Z,4"WbOrek;=AsX7O%h5e!5jTW/Cc>t,%OgZ$&(cjV]@iu)<<$O)Hjd?Nc%J,:H:JNLS>ja9pK2]m-YHB5mF/Q5jDSc[OI&U/@H5G=KAKJR]\$/g-='Lj=IP3T*M9oF9>IE$j%dYGR9B(6,=iTugP^h2E;,YoeA9G0]\i;9W],6.FI.SAG+]AS(6;S0sI(!%KGifTjr9Be\A.9oNA7LEllK/M-7G7@aCf-m>dmN3<5%fq3cAATqt&aj_9;edI*\E-[j(.ChfVP9bU^Q('nukls-!`&FR_22OJ81csV!Q$gK3r]7.i)&q>+S'X*:"Yj9X4(:u;7.\i-1lP:0%U(-X.Ifq'Zrg9RhWMK7sMH*_3Fq)&Taa<2aV1[)P;W<u:XS1IBhOI5HKJ08dH&0NFEP@8"DI<X&Nq%#STfcY&>??`)>!lVl2699G%6a!1O6#&<V^8P9gMnN/Q+s;r6^T>_3h)E.75n\X#oB0?.-t>^K8?'aQF)rrj+1$G&W0Ec!;T#?`'LRPtfWd/S40hA*TFDIkQLo<3%dZ*l>71WTC-s/dOW8kI3f]"[RQ2Br.Qg?\1bqbgpI4u)4-NNlbbS679r$m<'&Kah[_VP;\Rn7Pf3Ad1\+SHLZlP8R(?-2._q/&%S%imSjp[VKI3`.X0k9DLW6'hFME=8TpFh/0F]nQ<J;`!rNJ&K)nuFTGT5kJ!$'$k$Yp`=L$uhl':'"Z\+F7m:NcBn+rG%qQ4YYq>A<%!UrcN)!S\r+c4s\A/lA<oiJjc7:kP(&CDDU:/iHonfo^2c^"CFfaS]EX<V&X'JkjIl/t'^f6\SqZcGB$kZ6#4hlV^if5e&3m`(T$%o6c>gQecr-hMg8<TZ*XF,4gUcN7^$qi;>FKEWJiY[MD7+G3:1Mr2ZJ\P\abL;;HAVQ]\h#ENNV[jsoPk[8qCO.u4-o#9j;b;,IeJ%[qRhP>2j.aS;q,U=\t;!12`CgYYY#kKT^mlTkeW6rPHn4WS@aBcb00h\N#H3lEg`h="FE=`(,r[A2]MQ#>o98;7PXe9k_Li_@Ke*%N1m:bZV')U+Z9dW#Q]j=3<S?F=\*-:s$&m3^3BZ6YJXf\Y+.*aeH"\$BGL2HmG_48Ub\1IB3Q$*?],e'dTEJN"VHt'_Riur(kUb0%p17h=:`SZQnZM(lBMd&q3p4I0;r0K,[5_5gH]I@dEaY?g@BcS2IIoBJ>%##THGn&a1Y=Sh@%8@6Ta5*.,DgJ%GWr'r)_,M?#af4e%3so.8;n%o'o?$"5N3't2%B)[6($d;g!30"n"JPj<Kbc^2TG"*TM/1^!:](i6a6QVHWBh3'-"!U9@'dp-&KH=FI\oUmhV3^)T3'#.%nSuo2Oq.4q^)3iXr&gL7=Wl3-2u,Eta^!857Q:u6`2=+MIcVc7qMk-eYmI0.=HX"OHnn?enF1`.NkS"Droc#9Aj]6t&fS%\OrtA$%F1(EWrHJcF2W*[G4H%^J^[hh68Gp:o.G/7cq'st:ki%g()[MZK&4%%o"[4k/qXgJq5QKueiNsTo0FJUOO7-=0Yi!G;ll;&)G!-I7%5*L:OJah<ac/s=%&!C2)@d0jK)C=%9c*gME<aPS9&hqs?[nn&;E6QgV`-5(l93`a(<JAj4Y:hbX3#U%-\>A/SRa8V!<R+oN:3#h]%1iPX*"Lf(i$Qn4Ncfn;@aH^99W=pGA0[VN:BV)Lti5n,Q8G,uWnC<Ug3s_73l.*dmo6GClW)+$a'1eZuSh`dX<XuOb7fe8s##jg1%4Vc!:;EtU]jCa2l)<,HJ_&iJ3aDC%OA*(R<"1AKO'gsicna*]?5"9>9\3/'CNm5*baJ%h"dCGBU2lObESFLd]$pNf39+FH>#FPpr%cFt8KZUiPSZ-N_3rgd);cGqV#Rsi\u;,;]"<^?Wu7?7lq%e*\5>cQS]B,kP"dN`7ShV`F_g;:n&I"pM"*[H"\]KAVcJSsc$[K;:1%rCAs^oo;nnO-=+.;7)qn(^:3R^eV$".]fo"85Al#P3q`u1L-CD<)D]m*h79!U;$_q](e+Oq/eM`#6gHf1LkQL08M!`3&"94lfn*q%?k6,/e-f)FaR#kB%0TBC:7rh4W!l*76te<>=2[C`)_>E2L(=qbF#M")kZj'eN2Q+DmS8]cJV&damWg64p$5/eXri@\&f`W'Q4`f"%_IXpoB<pcKB.jWIF+#0+Bo1H-R0)0R?nGmnr;Ra^T=BaN_/KDa;RX11l+(9X((W$)?Q0U"?mpH2]>l^2?fq`94[DI-iX8FmNR">h%=RcI`nn8%*"iL:HNh]@*d<^5q5cs*[L,(=c=3:gB-*&_DJ@K?G!*=H-NiNd7,eV,(8,f,Sl&FQCJ103uHE,C"iZSO#O8jNLokQ5E%((#h/h3G5O(AgMEp4FdT-p[F1&Phd!92#U)V$4R[h3LHq"bDB*^7!A"^c@D^-+%@Fk!EPrWrCNKk6BZYOq\n?<_R%5XBPtNooP\&%?j0IW?ja#VPG,&r4__.>oW.Pa2-a&ME-Y7Cr/ZB2'GZ(hl*9EM*>m,"dWB"RYe]8Pn%iG_e9I#Kg5Y_!?*F]>]/p,B+c3/<YnX7,%"qBbk#@T#EV<n.KC!#,"nVhCDYjY`/=s"s/#I@#c5%)&iE#uc.@aRdl5"iE]9?2s<8BWC#7YQ=WY[B+Umus8]JUV4tC"<DV4<q:V%EBR0p9*"J;V1?.>$MY;,Gh;GTpu2UNbn!YU24]MELu&ui[#?5733KU(B9#WpVFCA[Q1+Q^HITqSI<S?l2,Pu`Mmr;lIM&EaZY)FN%DMC%>@aA]1f"iAd"JTC>%tesFntJ8C=hP@GreNBuLBZD*gA;"\=OTEQCLKbIHH/(O`5nB#S=k<N/Pn;Q?'GILN=/JRaWM[NAdXpj%bLt)&Jm[K%X-?)k!4>-5;]c(GCM7FEd&QCW:lER#XjPD3.WE[hCl!j8ZTZ'6a!9/rI-_9gU</`e",WIm?r7=ohPmc&^cE%>Q&j?!%Y5]UZjIQW;l2tm2/-/9OZRsC(Dk.62>impc&ej\8c@7FQEl@R,EnJ?&7M1$5lMf:4AgjFR862HEEQ52S"/6c+_(aF#DANb<DTNGa%T?ecYW^Z#*\nl1mX[9F,F]J$TVhRV#Y3jac:r!ql!4&P2ad_liJj7>cY#h2[_H5jn)o%f(cpj>K7<-,QT$i]jJ41<.S%:;5aS1hb%9nSP*h*ZQ(LCkiQj$XDo<sDW35jE^~>%AI9_PrivateDataEnd