%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (Adobe Illustrator Artwork)
%%Creator: (Adobe Illustrator\(R\) 26.3)
%%For: (kyle Hamilton)
%%CreationDate: 6/30/22
%%BoundingBox: 0 0 1227 446
%%HiResBoundingBox: 0 0 1227 446
%%CropBox: 0 0 1227 446
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 26.3.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 26.3.1 x1103 R agm 5.512 ct 6.513%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 48 8%%BeginData: 9468 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDAAFF52527DFD33FFA87D527DFD45FFA87D52A8FD34FF527D7DFD%46FFA8FDF3FFA87D527D527D527D525252A8527D7D7D5252527D5252527D%52FD1FFFA87D527D527D527D5252527D7D527D5227527D7D277D52A8FD31%FF7DA87D7D7D527DA8527DA87D52FD047DA87D7D52A87D7DFD20FFFD047D%527D7D7D52A87D7D52A8FD047D527D527DA8FD26FFA8FD2BFFA8FFFFFFA8%FFFFFFA8FD33FFA8FD26FFA8FFFFA8FD08FFA8FFA8FFFFFFA8FD15FFA8A8%FD08FFA8FFFFFFA8A8FD04FFA8FFFFFFA8FD09FFA8FFFFFFA8FFFFFFA8FD%20FF7D7D27FD04527D52A82752527D7D5227FD0652A87D525252277D7D7D%527D52525227277D27A8FD0BFFA87D525252277D5252277D527DA852527D%52A8277D52525227527D527D7DFD04527D52522752527D527D52527DFD1E%FFA8A87DFD04A87DA87DA8A8A8FFFD04A87DA87DFD05A87D7DA8FF7DA8A8%A87DFF7DA8A87DA8FD0BFFA8A87DA8A87D7DA87DFD04A8FF7DFD09A87DA8%A87D7DFF7DA87DFD05A87DA87DFD05A8FD19FFA8FD0BFFA8FD23FFA8FFFF%FFA8FFFFFFA8FD2FFFA8FFFFFFA8FD21FF7DA8FFA8FFA8A87DA8A8A87DFF%A8FFA8A8A8FFA8FFA8FD25FFA8A8A8FFA8FFA8FFFD05A8FD37FFA8275227%522752272727525252275252272752275227527DFD24FFA852522727277D%5227275252277DFD38FFA8A8A8FFA8FFA8A8A8FFA8A8FFFFA8FFA8FFA8FF%A8FD27FFA8A8A8FFFFFFA8FFFFFF7DFD2CFFA8FFFFFFA8FFFFFFA8FD1FFF%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD13FFA8FF%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD60FF527D7DA87DA8A87D%7DA8A8FD74FFA87D52522727527D5252277DFD7EFFA8A8FD2AFFA8CBA8A8%A8CBA8A8A8CBA8A8A8CBA8A8A8CBA8A8A8CBA8A8A8CBA8A8A8CBA8A8A8CB%A8A8A8CBA8A8A8CBA8A8A8CBA8A8A8CBA8FFCFFFFFFFA8FFFFFFA8FFFFFF%A8FFFFFFA8FFFFFFA8FD0FFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF%FFFFA8FD13FF4C224C214C224C214C224C214C224C214C224C214C224C21%4C224C214C224C214C224C214C224C214C224C214C224C214C224CA8FFCF%FFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCA%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFD12FF21%222122212221222122212221222122212221222122212221222122212221%2221222122212221222122212221222122212221A8A8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD13FF4C214C2228214C2228%214C2228214C2228214C2228214C2228214C2228214C2228214C2228214C%2228214C2228214C2228214CA8FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF%A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FF%CFFFA8FFCFFFA8FFCFFFA8FFFFFF7D277D52A8527D7D7D27A85252A8FF21%222122212221222122212221222122212221222122212221222122212221%2221222122212221222122212221222122212221A8A8CFA8FFA8CFA8FFA8%CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FFA8FFA8CFA8FFA8FFA8FFA8CFA8%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8FD04FFFD067D52A8FD057DA8%FF4C214C224C214C224C214C224C214C224C214C22774C4C212221282122%214C224C214C224C214C224C214C224C214C224C214CA8FFCAFFCFFFCAFF%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFA8CAA8CAFD04FFA8FFCFFFCA%FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFD09FFA8A8FD07FF2222%21282122212821222128212221282122214CA27D777D53774C7D4C7D4C22%21222128212221282122212821222128212221A8CFFFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA87D4C7D777D7D7D7777A2FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD0AFF7D52527D525252FFFF4C%2128214C2228214C2228214C2228214C22224CA27D7E77A27DA977A87D7E%214C2228214C2228214C2228214C2228214C2128A2FFCFFFA8FFCFFFA8FF%CFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FF7777527D4C774C534CA8CFFFCFFF%A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFD09FFFD08A8FF21222122%2122212221222122212221222122214C52534C4C28774C4C4CA853212122%2122212221222122212221222122212221A8A8FFA8CFA8FFA8CFA8FFA8CF%A8FFA8CFA8FFA8CFA8FFA8CFA8A8A2A8A8A27D7D7DA8A2FFA8FFA8CFA8FF%A8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FD04FFA8A87DFD07A87DA87DA8FF4C%214C214C224C214C224C214C224C214C224C21222122214C2122214C4C4C%214C224C214C224C214C224C214C224C214C224CA8FFCFFFCAFFCFFFCAFF%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFFFFFCFFD07FFA8FFCFFFCAFFCFFF%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFFFA8525252277D2752277D525227%527DFF212221222128212221282122212821222128212221282122212821%222122212221282122212821222128212221282122212221A8A8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD10FFA8FFFF4C21%4C2228214C2228214C2228214C2228214C2228214C2228214C2228214C22%28214C2228214C2228214C2228214C2228214CA8FFA8FFCFFFA8FFCFFFA8%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FD12FF212100212121002121%210021212100212121002121210021212100212121002121210021212100%212121002121210021212100A8CFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8%FFCFFFA8FFCFFFA8FFCFFD13FF7D777D777D777D777D777D777D777D777D%777D777D777D777D777D777D777D777D777D777D777D777D777D777D777D%777D777D7DA27DA87DA27DA87DA27DA87DA27DA87DA27DA87DA27DA87DA2%7DA87DA27DA87DA27DA87DA27DA27DA27DA27DA27DA87DA27DA27DA27DA8%7DA27DFD12FFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFF%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCF532122%212221222122212221222122212221222122212221222122212221222122%212221222122212221222122212221222122212221222122214CFD13FFCF%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF4C222228214C2228214C22%28214C2228214C2228214C2228214C2228214C2228214C2228214C222821%4C2228214C2228214C2228214C222821284CFD12FFA8FFA8CFA8FFA8CFA8%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8%CFA8FFA8CFA8FFA8CFA8FFA8532122212221222122212221222122212221%222122212221222122212221222122212221222122212221222122212221%222122212221222122214CFD13FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF%CAFFCFFF4C22224C214C224C214C224C214C224C214C224C214C224C214C%224C214C224C214C224C214C224C214C224C214C224C214C224C214C224C%214C4CFD12FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCFFF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCA532128%212221282122212821222128212221282122212821222122212221222122%212221222128212221282122212821222128212221282122214CFD07FFA8%A8FFFFA8FFFFFFA8FFFFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCF%A87DA8A8FFCAFFA8A8A8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8%FF4C22214C2228214C2228214C2228214C2228214C2228214C217777534C%4C224C224C214C2228214C2228214C2228214C2228214C2228214C222228%FD07FFA827525252277D52527DFFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FF%A8CFA8FF7D534C7D527D7777527DA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CF%A8FFA8FFA853212221222122212221222122212221222122212221222122%53A253A27D77537E77777D4C212221222122212221222122212221222122%2122214CFD07FFA8A87DFFFD04A87DFFFFFFCAFFCFFFCAFFCFFFCAFFCFFF%CAFFCFFFCAFFFFA8537E77774C774C7777FFCFFFCAFFCFFFCAFFCFFFCAFF%CFFFCAFFCFFFCFFF4C22214C224C214C224C214C224C214C224C214C224C%214C21777EA27D7D77A87D7E7DA84C22214C224C214C224C214C224C214C%224C214C22284CFD12FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8A8A8FFFD07A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8532122%2128212221282122212821222128212221282122212222532253224C4C4C%22777E4C2122212821222128212221282122212821222128214CFD13FFCF%FFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFCAFFCFFFCFFFCFFFA8%FFCFFFA8FFCFFFA8FFCFFFA8FFCFFFA8FFCFFF4C222228214C2228214C22%28214C2228214C2228214C2228214C2122214C21222122224C214C222821%4C2228214C2228214C2228214C2228214C4CFD12FFA8FFA8CFA8FFA8CFA8%FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8CFA8FFA8%CFA8FFA8CFA8FFA8CFA8FFA8532122212221222122212221222122212221%222122212221222122212221222122212221222122212221222122212221%222122212221222122214CFD13FFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFF%CFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF%CAFFCFFF4C222228214C2228214C2228214C2228214C2228214C2228214C%2228214C2228214C2228214C2228214C2228214C2228214C2228214C2228%214C4CFD12FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCA53214C%2122214C2122214C2122214C2122214C2122214C2122214C2122214C2122%214C2122214C2122214C2122214C2122214C2122214C2122214CFD45FFA8%CBA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8CBA8FD7F%FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 7.1-c000 79.cb7c5a1, 2022/04/14-05:22:35        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:exif="http://ns.adobe.com/exif/1.0/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <exif:PixelXDimension>1227</exif:PixelXDimension>
         <exif:PixelYDimension>451</exif:PixelYDimension>
         <xmp:CreatorTool>Adobe Illustrator 26.3 (Macintosh)</xmp:CreatorTool>
         <xmp:ModifyDate>2022-06-30T08:54:45-07:00</xmp:ModifyDate>
         <xmp:CreateDate>2022-06-30T08:54:45-07:00</xmp:CreateDate>
         <xmp:MetadataDate>2022-06-30T08:54:45-07:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>96</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAYAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FWH+eF/MP69YN5Sb4OMouVlNt9W5lG9EzCRfrBQS8fU9JgeFaAtTFWS6Ob86TZHUQV1D0Iv&#xA;rgbhX1uA9Svp/B9qv2dvDFUXirsVdirsVdirQ6n5/wAMVbxV2KuxV2KuxV2KsFvk/NlfM7i1lt5P&#xA;Ly3kHpkJEsrWLnnc8uTE+rGSqRUABQOW+PicVZ1irsVdirsVdirsVdirsVdirsVdirq4q1yHv9xx&#xA;V3Ie/wBxxVLvMC6vLpE6aNL6Gotw9GVlDAAOpfZwVJ4cgK/hirC/T/O/1mUT6b9WDkI7KRMYgjcS&#xA;1FKCRnpyoCtKU7nFVNY/z6fTvUmn0ePUkkbjDCknosgX4ebSBm3Y7hePTriq8QfnUumaTNJcWc2r&#xA;BZf0nBGyx2vqNO7Js0DSPGsJVF4yIy05Hmdiqo3K/n9OgEcujWZ9VC/pCSRvSFGdVaRSvI8eO69z&#xA;02OKtahZ/n5HpwttMvtLlunajXl0p5qshJZlCoEqlfhBWn2djviqe6KPzSGq2H6WfTjpShxqPpLJ&#xA;67VhPAodlFJAvLbu1NuOKsxqPf7sVa5D3+44q7kPf7jirQYVbr18D4DFW+Q9/uOKu5D3+44q7kPf&#xA;7jiqX69+mDppOjFfryTW7hZPhV4knRriPkVfiZIQ6A02J7dcVYTDb/ntDbcDeaPc3AhCepKkiqZF&#xA;Rm9SkarUs6qpGwoxYAcaFVQ1JP8AnINrPjZTaGlzMsfNwsoELHmJfT5hw/EcWUuvXqCK4qukj/Pa&#xA;3sJobN9OuL0SKVub1+SFRGBJ6awQQEBpSWRXBKjYsa7Ku1Cx/Paa7jmtdS02GOMWz/VghETurOZ0&#xA;kJjeTgwZRVXB+HalTVVuVfz5a6WWKTSUgjVwICHpIWMfEv8ACWDKqyfZYDkd6ilFWZeWD5oFjKPM&#xA;jWz3vq1iazVwnpGNCQQ29VlLgeK074qnHIe/3HFXch7/AHHFXch7/ccVbqPf7jirsVdirsVdirqj&#xA;FUt1uLVpY7RtLljSWG4WSdJXZEkiCsGQsqyHqwPTtirBrTQfzyYxrfeadOVVaP1JLaCMOyh/3m0l&#xA;u6glDt7ge9VUTZ6d+blnq2lrPqttfadK0x1MKIlEXwsYuJeMSspNBQb1/wAkUxV2j6L+cKLaHWfM&#xA;djcMl7HJeLbxrGps45FYop9AMXdOSsKr+yQwowdVQufLX5xfpGyuLbzRaCC3j4TQSJUOWdeVQIvi&#xA;+CMULfFVmoRUUVVG0P8AOZVmC+Z7GT9+Bbkwxoxth/Owt3UTfCBULx3b4fs8VUX+h/zSbTYIpdcs&#xA;jqbRzpdXcYKJG3rJJbyRxekyyHirIwamx/a7qoSPy/8AnINUtnbzNZ/UDKg1ACJDK0C0Degpg4I5&#xA;FetQW36EKqqJvNC/NH6/cTWOvW0NqWmEMD0csj3E8sRLPBJ6TJFOkWwYfu1Y8h8OKoG50D88HtLp&#xA;ovM2nrf+o31ECJVgWJqmsoMDs7jYClB8z1VVtL0X83LS+0c3uv295aiRU1NURCBCrF248kjduSRL&#xA;HyqzBnJ6bqq9D5p/MPvxVpWSrbjr/AYqhdWjubjSryCynEF5NBLHazkkBJWQhGqKn4WodsVYK/l3&#xA;82heu9r5itrWxjtpI7a2ZvrLCZkUo8kk1uXceqhrU1CsQMVQ1po/57S6WiXWv6dFfq0od+CFWKEi&#xA;J1CQLRGKq3E70Lcq8gqKom08vfnEkkRm8y2nGTh9dkVVcii/H6KNb8FPL7P4hqjiqirzRPzHk1+4&#xA;vbXUoY7VJI2tYZJnWLitqglHoqkissstV+OhjpzWpagVU/8ADv5qy22nW03mK1RPrE8uqyxIwlaJ&#xA;5jLHHE/AEhVonw+nRa7nYqqhNS8t/nS3rLYearJI3uJ5IzLEAUiaYyQKtIWb4V+EhmIpt8QxVET6&#xA;b+b1qNL9DWLa9dr+NdTXhCEWy9QM8nxxo7HhzDIhH7PDiK4qpXWhfnO15eSW3mKxS2laR7SNgKox&#xA;YCL/AI9j8CqPsEt7sx+LFVa58v8A5puqTQa7axX/ANTiSacvI0JulgjWQi29L0whmV5A3Wh48adF&#xA;UNH5b/OWO9e5/wATWkg5yGGB6emI2+JVZRbjlvUDuu27BeLKqn6A/OQIfT8yWUbySB5XKiTiCVLI&#xA;ivBQdwvgOoJYFFWbeX01GPSo01NgbsPKacuZWJpWMKM/7bJEVVm7kVxVMeS+IxV2KuxV2KuxV1Ri&#xA;rXJfEYq7mviPvxVTuAZIJI45BHI6MqSdeJIoDQFTt8xirzWP8vvzLt9OtrG189Okcbj6zJLF60rx&#xA;mRmdBLIxkBKtQNUEdvsjFVO//Lr80L21SJ/P8sE4YNLJBEYg/FnIoEdCgAYAgGjU36YqqWX5e/mD&#xA;JYRW+qecJJZbU+jazqZkf0+BUzSNDJCZZeYWRBIWXaj8uuKt2HkX80f0NS688PHrUscTSTpEskcc&#xA;q8eahG+ArSoqFWp3xVUXyJ+Zxhigk86sY1EYcrEwdvTMfxBw3qfEI6tVjUs37J4hVkHlLQPOOmXH&#xA;q675k/TMZidHi9BIRzLIY5F49KASAj/KH8u6rKuQ8cVa5r4j78VdzT+YffirQZat8Q6/wGKt80/m&#xA;H34q7mviPvxV3NfEffiruS+IxVTuUaW3lijk9OR0ZVkHVSRQNt4Yq8yvPy//ADSNnbWFj52khtzC&#xA;ILmeQGWYEK/OVZWpIzSllWnIenx5Ka1xVF3Hkv8ANJ9MEUXnn0dRDnnc/VY2jZCWJHpt9k7jiQdv&#xA;fFVG68hfmQunn0POUst7AvK2X4owWVuaq7Fn5ciOrq3Wm67Yq9C0uK5t9NtIL25F1eRxIlzc0C+p&#xA;KFAd6CgHJqmmKormviPvxV3NfEffiruafzD78VdyXxGKt8l8RirsVdirsVdiqnNc20FPWlSLlXjz&#xA;YLWnWlcaVS/Sem/8tcP/ACMX+uGimnfpPTf+WuH/AJGL/XGitO/Sem/8tcP/ACMX+uNFad+k9N/5&#xA;a4f+Ri/1xorTv0npv/LXD/yMX+uNFad+k9N/5a4f+Ri/1xorTv0npv8Ay1w/8jF/rjRWnfpPTf8A&#xA;lrh/5GL/AFxorTv0npv/AC1w/wDIxf640Vp36T03/lrh/wCRi/1xorTv0npv/LXD/wAjF/rjRWnf&#xA;pPTf+WuH/kYv9caK0qwzwSqXikWRa/aVgRWg7jAhU5L4jFXcl8RiruS+IxV3JfEYq7kviMVYDrv5&#xA;aajfeY7rXNN80Xekz3cqPLFCoKiOOGCIRAhkJUtAXPKoqdgBz5qoTTfyv82W1wWuvP2p3luwUGFu&#xA;aEAChKOJiwJBpvXx+1Rgq3Y/lv5u03UrOe3823V7a/X0ur6G5knQCBH9RkiRJGRjIaq/McSGLGrK&#xA;tFXpHJfEYq7kviMVdyXxGKu5L4jFXcl8RiruS+IxVD6jqFpp2n3OoXjmO0s4nnuJArOVjjUs7cUD&#xA;MaKOgFcVSaw/MPyTftZpbaxbmTUIzLaRuxiZ1ADbrIFKmjD4WocVWx/mR5AkSOSPzFp7RSsVjkFz&#xA;HwZgA1A1ePRhiqnF+Z/5fzWNvfRa7aPa3Sq8Th6kI9aM605RqOJ5FwOPemKvEf8AnL64gubfyZcW&#xA;8iywTJfyQyoaqyOLUqykdQQcz9D1+Dl6Xq+ccz3LdirsVdirsVdirsVdirsVdirsVdir67/5xy/8&#xA;lbY/8xFz/wAnTmm1v944Of6np2YrS7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq5ftD54qml5Z2t7aTW&#xA;l3Es9tOhjmhcVVkYUIIy1iksH5feSYJVli0W1Ei9zGGrReG4aoO3j33674qwTWNOtvLWr6gugfl9&#xA;Fq+ncUhuPRYpIrBfrK+nH6coeN5JjXjQqwY/EWACqBuRNBBLb2X5Ux/V0BtrR5HJADKzMTF6I4oj&#xA;IAfjAYceLEccVYf/AM5bJapYeSEtIzFaLFfC3iKtGVjC2nBSjgMtF7EVGZ+h6/By9L1fOuZ7luxV&#xA;2KuxV6B+WcHlibTtSj1hdPDySRoLi9lhDxRenJyIhmeBnQtQlraT1gQKK1aGjKTYpqyX0TA+Xfy0&#xA;u50jV1iuZIUnjjj1W1hhYcLVTE0syOkUn7+aU826x8ONcHFMf2I4pIiHyH+W13NLbaXezajdWqRs&#xA;qx3tvEt2ZIC7EM0TC3WN1HIvXc8TQkYPEmOaOOXV595v0yz0rzbrel2TM9lYX91a2zsQzGKGZkQl&#xA;gACeKjfL4G4gltibAKUZJk7FXYq7FX13/wA45/8AkrLH/jPc/wDJ05ptb/eODn+p6dmK0uxV2Kux&#xA;V2KpR5sOpJ5fu59N9Rr21CXUUUNTJL9XkWZoVA3PrKhjp3rTJ464t2UebzqHU/zW06N5mt5rmSAR&#xA;nlNDPPGf0kouZaRQ0kk+qSxfV1p9lXr0rmSY4z+O79fNtqJa1Lzf+bE900Vro0ivGyTRQra3Maco&#xA;+IaN5yfTkR+ZP2hWm/HfGOPH3qIx73qmnSyTafazSFjJJDG7l42gYsygnlE3xRnxU7jpmJLm0lE4&#xA;EOxV2KuxVy/aHzxVE+YdNvdT0e4sbG+bTbmbhwvEDMyhXVmHwPE/xqCtVdSK1BrlrFhjflr5xa4g&#xA;n/x1fKUDCaMJJwffkjBfrFFYPVm6qfshQg44qhR+U/nBpbd7jz1eXIt90WWOfcgKRX07qPoyn4h8&#xA;dGI5/ZKqtzflV5vJeX/G97cyFmYpMskYkBRgYS8MylI2Ygngu1NhXfFXl/8AzldYvp+k+Q7B5muH&#xA;tLe8ga4evKQxpaIXapJq1K9cz9D1+Dl6Xq+ecz3LdirsVdirsVdiqrbXVzazLPbSvBMv2ZY2KMKi&#xA;hoy0OJCFMkkkk1J3JOKWsVdirsVdir67/wCcc/8AyVlj/wAZ7n/k6c02t/vHBz/U9OzFaXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXL9ofPFU6oPf7zlrF1B7/AH4q1xHv95xVug9/vxVj/mvyx5d1v6r+&#xA;mNMttR+r+p6H1qJJuHPjy48wacuIr8seOUeRpnGRHJj/APyrP8u/+pZ0z/pEh/5px8efeWXiS73f&#xA;8qz/AC7/AOpZ0z/pEh/5px8efeV8SXe7/lWf5d/9Szpn/SJD/wA04+PPvK+JLvd/yrP8u/8AqWdM&#xA;/wCkSH/mnHx595XxJd7v+VZ/l3/1LOmf9IkP/NOPjz7yviS73f8AKs/y7/6lnTP+kSH/AJpx8efe&#xA;V8SXe7/lWf5d/wDUs6Z/0iQ/804+PPvK+JLvd/yrP8u/+pZ0z/pEh/5px8efeV8SXe7/AJVn+Xf/&#xA;AFLOmf8ASJD/AM04+PPvK+JLvd/yrP8ALv8A6lnTP+kSH/mnHx595XxJd7v+VZ/l3/1LOmf9IkP/&#xA;ADTj48+8r4ku93/Ks/y7/wCpZ0z/AKRIf+acfHn3lfEl3vBPzo8za/5P86tovla9k0TSI7aKWOws&#xA;SIYQ8nIuwRAFqx65sNNAThchZcnFESFlgf8Aytj8yqU/xJf/API5syPy8O4Nnhx7nf8AK2fzK/6m&#xA;S+/5HNj+Xh3BfDj3O/5Wz+ZW3/OyX+3/ABc2P5eHcF8OPc7/AJWz+ZW//OyX+/8Axc2P5eHcF8OP&#xA;c7/lbP5lf9TJff8AI5sfy8O4L4ce53/K2PzKpT/El/8A8jmx/Lw7gvhx7nf8rZ/Mr/qZL7/kc2P5&#xA;eHcF8OPc7/lbP5lbf87Jf7f8XNj+Xh3BfDj3OP5r/mSf+mkv9/8Ai5sfy8O4L4ce5r/la/5k7f8A&#xA;OyX+3/FzY/l4dwXw49zv+Vr/AJk/9TJf/wDI9sfy8O4L4ce5v/la/wCZNa/4kv8A/kc2P5eHcF8O&#xA;Pc1/ytf8yf8AqZL/AP5Htj+Xh3BfDj3IjT/zU/Md7+3R/Md+yvKgYGZqEFgMTghXIKcce594Zp3W&#xA;qN9eQ2VlcXk1fRto3mlpueMalmp9AxVh9n+cnkO4thLJdzW8wZkns3t5pJ4GVihEywLMqfEpFa0r&#xA;t1qMVWwfnN5Cn0+0vku5hFdosgR7eVHRSoZiwZRUpyXkqcj8S0BDLVVk091Dd2tpdQEmC4jEsRZW&#xA;RirgMtVcKymh6EVyEkhD5FLsVdirsVSjzF5kstAt4bm+V/q0rSq8y04x+lby3JL1I2KwFR/lEZOE&#xA;DLkyjG0q078y/LV2IfXkayaZYQEnG6zSgF4W4cuLQl0WQtRQWUV3ycsEgyOMqx/MXyp9bjtluyzS&#xA;P6f93Irc24+mqoyh5PV5/AUBB3ODwZUjgLJsqYOxV2KuxV2Kvkr/AJyU/wDJmy/8wdv+ps3Gi/u3&#xA;NwfS8rzLb3Yq7FXYq7FU/wDJ3k+98039xaWkyQvbQG5eqTTOyh0TjHDAkssjfvKniuygntkJz4Qw&#xA;lKkbN+WHm1YUnghgu4HJX1ILiHZhPNAAVdkapNs7dNlFTSjUHixR4gUf+VbeduAcaW5BdUULJESe&#xA;TpGHAD1MfKaP94Pg+Jd6EY+LHvT4gSfWNF1PRrz6nqMPo3BjjmCh0kBjmQSRurxllIZGBBBycZA8&#xA;mQNoHCl2KuxV2KonTP8AjpWn/GaP/iQwHkg8n6NZonVNMqspVgGVhRlO4IPY4qldt5U8s23MW+lW&#xA;sauqoUWFAoRN1RVpxVQd+IFK79cVbj8qeV44/Sj0exSPj6fBbaELwBY8aBelXY09z44qqXsMUMUE&#xA;MKLHFGvCONAFVVUABVA2AAyEkhC5FLsVdirsVS7XdB03XLD6hqMZkt/Vim4g8TyhkEi7+BK0PiKj&#xA;JQmYmwyBpJbv8sPJ11N601oTJ9cnv2YOQTLctG0wJH7LGFOm4pQGmWDPIMhkKhaflP5PtHMkEUyy&#xA;gxvFL6h5xvEeUciNSodT+11P7VamqdRIqchZllLW7FXYq7FXYq+Sv+clP/Jmy/8AMHb/AKjm40X9&#xA;25uD6XleZbe7FXYq7FXYqmWha9daNcSTQQ29wsqhJIbqJZozRg6mjbqysoIZSD9FcjKNsTG06m/M&#xA;/wA1zGNpZIHkS4lupJDClZXna4aVZBTiyP8AXpgVp0amQ8KLHwwiLH81/MkGpQXc4ilgiiS1a2jR&#xA;Ih9VjmglWBKq6qo+pxoKqw4ihBqcThFKcYSTzd5iHmDWn1BLVbK3WGC2trRSrCOK2hSFBVEiUmiV&#xA;NFHyyUI8IplGNBJsmydirsVdiqJ0z/jpWn/GaP8A4kMB5IPJ+jWaJ1TsVdirsVULq2M3GjceNe1e&#xA;uAi0gqH6Nb/fg+7I8K279Gt/vwfdjwrbv0a3+/B92PCtu/Rrf78H3Y8K279Gt/vwfdjwrbv0a3+/&#xA;B92PCtu/Rrf78H3Y8K279Gt/vwfdjwrbv0a3+/B92PCtu/Rrf78H3Y8K279Gt/vwfdjwrbv0a3+/&#xA;B92PCtvH/wAzv+cdb3zr5pfW4tcjsUaGOH0Gt2kP7sHfkJF618MzcGo4I1Tfjz8IqmJ/9Ce6l/1M&#xA;8P8A0iN/1Vy786O5n+a8nf8AQnupf9TPD/0iN/1Vx/OjuX815O/6E91L/qZ4f+kRv+quP50dy/mv&#xA;J3/Qnupf9TPD/wBIjf8AVXH86O5fzXk7/oT3Uv8AqZ4f+kRv+quP50dy/mvJ3/Qnupf9TPD/ANIj&#xA;f9Vcfzo7l/NeTv8AoT3Uv+pnh/6RG/6q4/nR3L+a8nf9Ce6l/wBTPD/0iN/1Vx/OjuX815O/6E91&#xA;L/qZ4f8ApEb/AKq4/nR3L+a8nf8AQnupf9TPD/0iN/1Vx/OjuX815O/6E91L/qZ4f+kRv+quP50d&#xA;y/mvJ3/Qnupf9TPD/wBIjf8AVXH86O5fzXk7/oT3Uv8AqZ4f+kRv+quP50dy/mvJUtf+cQ9RguYZ&#xA;j5mhYROr8fqjCvE1p/e4DrR3KdT5P//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <dc:format>application/postscript</dc:format>
         <xmpMM:DocumentID>xmp.did:9444dda4-3141-440f-83fe-f4df829ab0b5</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:9444dda4-3141-440f-83fe-f4df829ab0b5</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:3c37d79f-53d0-47ad-821e-84c20b2a3538</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3c37d79f-53d0-47ad-821e-84c20b2a3538</stEvt:instanceID>
                  <stEvt:when>2022-02-24T16:23:02Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 26.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9444dda4-3141-440f-83fe-f4df829ab0b5</stEvt:instanceID>
                  <stEvt:when>2022-06-30T08:54:45-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 26.3 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:a1b8912c-d0be-40a7-8745-aea494dd13ed</stRef:instanceID>
            <stRef:documentID>xmp.did:3c37d79f-53d0-47ad-821e-84c20b2a3538</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:3c37d79f-53d0-47ad-821e-84c20b2a3538</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1366.000000</stDim:w>
            <stDim:h>768.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -446 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 446 li
1227 446 li
1227 0 li
cp
clp
665 313 mo
173 313 li
173 191 li
665 191 li
665 313 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.78967 1 .277378 .3346 cmyk
f
665 313 mo
1225.47 313 li
1225.47 191 li
665 191 li
665 313 li
cp
.0576486 .0486763 .100923 0 cmyk
f
665 313 mo
173 313 li
173 442 li
665 442 li
665 313 li
cp
f
665 313 mo
1225.47 313 li
1225.47 442 li
665 442 li
665 313 li
cp
.78967 1 .277378 .3346 cmyk
f
362.084 254.721 mo
365.301 254.439 li
365.453 255.729 365.808 256.786 366.364 257.612 cv
366.921 258.438 367.785 259.106 368.957 259.616 cv
370.129 260.126 371.447 260.381 372.912 260.381 cv
374.213 260.381 375.361 260.188 376.357 259.801 cv
377.354 259.414 378.095 258.884 378.581 258.21 cv
379.067 257.536 379.311 256.801 379.311 256.004 cv
379.311 255.195 379.076 254.489 378.607 253.886 cv
378.139 253.282 377.365 252.775 376.287 252.365 cv
375.596 252.096 374.066 251.677 371.699 251.108 cv
369.332 250.54 367.674 250.004 366.725 249.5 cv
365.494 248.855 364.577 248.056 363.974 247.101 cv
363.37 246.146 363.068 245.076 363.068 243.893 cv
363.068 242.592 363.437 241.376 364.176 240.245 cv
364.914 239.114 365.992 238.256 367.41 237.67 cv
368.828 237.084 370.404 236.791 372.139 236.791 cv
374.049 236.791 375.733 237.099 377.192 237.714 cv
378.651 238.329 379.773 239.234 380.559 240.43 cv
381.344 241.625 381.766 242.979 381.824 244.49 cv
378.555 244.736 li
378.379 243.107 377.784 241.877 376.771 241.045 cv
375.757 240.213 374.26 239.797 372.279 239.797 cv
370.217 239.797 368.714 240.175 367.771 240.931 cv
366.827 241.687 366.355 242.598 366.355 243.664 cv
366.355 244.59 366.689 245.352 367.357 245.949 cv
368.014 246.547 369.728 247.159 372.499 247.786 cv
375.271 248.413 377.172 248.961 378.203 249.43 cv
379.703 250.121 380.811 250.997 381.525 252.058 cv
382.24 253.118 382.598 254.34 382.598 255.723 cv
382.598 257.094 382.205 258.386 381.42 259.599 cv
380.635 260.812 379.507 261.755 378.036 262.429 cv
376.565 263.103 374.91 263.439 373.07 263.439 cv
370.738 263.439 368.784 263.1 367.208 262.42 cv
365.632 261.74 364.396 260.718 363.499 259.353 cv
362.603 257.987 362.131 256.443 362.084 254.721 cv
cp
0 0 0 0 cmyk
f
393.76 260.17 mo
394.217 262.965 li
393.326 263.152 392.529 263.246 391.826 263.246 cv
390.678 263.246 389.787 263.064 389.154 262.701 cv
388.521 262.338 388.076 261.86 387.818 261.269 cv
387.561 260.677 387.432 259.432 387.432 257.533 cv
387.432 246.793 li
385.111 246.793 li
385.111 244.332 li
387.432 244.332 li
387.432 239.709 li
390.578 237.811 li
390.578 244.332 li
393.76 244.332 li
393.76 246.793 li
390.578 246.793 li
390.578 257.709 li
390.578 258.611 390.634 259.191 390.745 259.449 cv
390.856 259.707 391.038 259.912 391.29 260.064 cv
391.542 260.217 391.902 260.293 392.371 260.293 cv
392.723 260.293 393.186 260.252 393.76 260.17 cv
cp
f
396.818 263 mo
396.818 244.332 li
399.666 244.332 li
399.666 247.162 li
400.393 245.838 401.063 244.965 401.679 244.543 cv
402.294 244.121 402.971 243.91 403.709 243.91 cv
404.775 243.91 405.859 244.25 406.961 244.93 cv
405.871 247.865 li
405.098 247.408 404.324 247.18 403.551 247.18 cv
402.859 247.18 402.238 247.388 401.687 247.804 cv
401.137 248.22 400.744 248.797 400.51 249.535 cv
400.158 250.66 399.982 251.891 399.982 253.227 cv
399.982 263 li
396.818 263 li
cp
f
410.916 253.666 mo
410.916 256.057 411.437 257.847 412.48 259.036 cv
413.523 260.226 414.836 260.82 416.418 260.82 cv
417.988 260.82 419.295 260.223 420.338 259.027 cv
421.381 257.832 421.902 256.01 421.902 253.561 cv
421.902 251.252 421.378 249.503 420.329 248.313 cv
419.28 247.124 417.977 246.529 416.418 246.529 cv
414.836 246.529 413.523 247.121 412.48 248.305 cv
411.437 249.488 410.916 251.275 410.916 253.666 cv
cp
407.664 253.666 mo
407.664 250.209 408.625 247.648 410.547 245.984 cv
412.152 244.602 414.109 243.91 416.418 243.91 cv
418.984 243.91 421.082 244.751 422.711 246.433 cv
424.34 248.114 425.154 250.438 425.154 253.402 cv
425.154 255.805 424.794 257.694 424.073 259.071 cv
423.353 260.448 422.304 261.518 420.927 262.279 cv
419.55 263.041 418.047 263.422 416.418 263.422 cv
413.805 263.422 411.692 262.584 410.081 260.908 cv
408.47 259.232 407.664 256.818 407.664 253.666 cv
cp
f
428.863 263 mo
428.863 244.332 li
431.711 244.332 li
431.711 246.986 li
433.082 244.936 435.062 243.91 437.652 243.91 cv
438.777 243.91 439.812 244.112 440.755 244.517 cv
441.698 244.921 442.404 245.451 442.873 246.107 cv
443.342 246.764 443.67 247.543 443.857 248.445 cv
443.975 249.031 444.033 250.057 444.033 251.521 cv
444.033 263 li
440.869 263 li
440.869 251.645 li
440.869 250.355 440.746 249.392 440.5 248.753 cv
440.254 248.114 439.817 247.604 439.19 247.224 cv
438.563 246.843 437.828 246.652 436.984 246.652 cv
435.637 246.652 434.474 247.08 433.495 247.936 cv
432.517 248.791 432.027 250.414 432.027 252.805 cv
432.027 263 li
428.863 263 li
cp
f
450.924 253.332 mo
450.924 255.781 451.41 257.568 452.383 258.693 cv
453.355 259.818 454.574 260.381 456.039 260.381 cv
457.492 260.381 458.711 259.821 459.695 258.702 cv
460.68 257.583 461.172 255.828 461.172 253.438 cv
461.172 251.152 460.665 249.43 459.651 248.27 cv
458.638 247.109 457.416 246.529 455.986 246.529 cv
454.58 246.529 453.385 247.101 452.4 248.243 cv
451.416 249.386 450.924 251.082 450.924 253.332 cv
cp
448.305 264.547 mo
451.381 265.004 li
451.51 265.953 451.867 266.645 452.453 267.078 cv
453.238 267.664 454.311 267.957 455.67 267.957 cv
457.135 267.957 458.266 267.664 459.062 267.078 cv
459.859 266.492 460.398 265.672 460.68 264.617 cv
460.844 263.973 460.92 262.619 460.908 260.557 cv
459.525 262.186 457.803 263 455.74 263 cv
453.174 263 451.187 262.074 449.781 260.223 cv
448.375 258.371 447.672 256.15 447.672 253.561 cv
447.672 251.779 447.994 250.136 448.639 248.63 cv
449.283 247.124 450.218 245.961 451.442 245.141 cv
452.667 244.32 454.105 243.91 455.758 243.91 cv
457.961 243.91 459.777 244.801 461.207 246.582 cv
461.207 244.332 li
464.125 244.332 li
464.125 260.469 li
464.125 263.375 463.829 265.435 463.237 266.647 cv
462.646 267.86 461.708 268.818 460.425 269.521 cv
459.142 270.225 457.562 270.576 455.687 270.576 cv
453.461 270.576 451.662 270.075 450.291 269.073 cv
448.92 268.071 448.258 266.563 448.305 264.547 cv
cp
f
904.584 386.221 mo
907.801 385.939 li
907.953 387.229 908.308 388.286 908.864 389.112 cv
909.421 389.938 910.285 390.606 911.457 391.116 cv
912.629 391.626 913.947 391.881 915.412 391.881 cv
916.713 391.881 917.861 391.688 918.857 391.301 cv
919.854 390.914 920.595 390.384 921.081 389.71 cv
921.567 389.036 921.811 388.301 921.811 387.504 cv
921.811 386.695 921.576 385.989 921.107 385.386 cv
920.639 384.782 919.865 384.275 918.787 383.865 cv
918.096 383.596 916.566 383.177 914.199 382.608 cv
911.832 382.04 910.174 381.504 909.225 381 cv
907.994 380.355 907.077 379.556 906.474 378.601 cv
905.87 377.646 905.568 376.576 905.568 375.393 cv
905.568 374.092 905.938 372.876 906.676 371.745 cv
907.414 370.614 908.492 369.756 909.91 369.17 cv
911.328 368.584 912.904 368.291 914.639 368.291 cv
916.549 368.291 918.233 368.599 919.692 369.214 cv
921.151 369.829 922.273 370.734 923.059 371.93 cv
923.844 373.125 924.266 374.479 924.324 375.99 cv
921.055 376.236 li
920.879 374.607 920.284 373.377 919.271 372.545 cv
918.257 371.713 916.76 371.297 914.779 371.297 cv
912.717 371.297 911.214 371.675 910.271 372.431 cv
909.327 373.187 908.855 374.098 908.855 375.164 cv
908.855 376.09 909.189 376.852 909.857 377.449 cv
910.514 378.047 912.228 378.659 914.999 379.286 cv
917.771 379.913 919.672 380.461 920.703 380.93 cv
922.203 381.621 923.311 382.497 924.025 383.558 cv
924.74 384.618 925.098 385.84 925.098 387.223 cv
925.098 388.594 924.705 389.886 923.92 391.099 cv
923.135 392.312 922.007 393.255 920.536 393.929 cv
919.065 394.603 917.41 394.939 915.57 394.939 cv
913.238 394.939 911.284 394.6 909.708 393.92 cv
908.132 393.24 906.896 392.218 905.999 390.853 cv
905.103 389.487 904.631 387.943 904.584 386.221 cv
cp
f
936.26 391.67 mo
936.717 394.465 li
935.826 394.652 935.029 394.746 934.326 394.746 cv
933.178 394.746 932.287 394.564 931.654 394.201 cv
931.021 393.838 930.576 393.36 930.318 392.769 cv
930.061 392.177 929.932 390.932 929.932 389.033 cv
929.932 378.293 li
927.611 378.293 li
927.611 375.832 li
929.932 375.832 li
929.932 371.209 li
933.078 369.311 li
933.078 375.832 li
936.26 375.832 li
936.26 378.293 li
933.078 378.293 li
933.078 389.209 li
933.078 390.111 933.134 390.691 933.245 390.949 cv
933.356 391.207 933.538 391.412 933.79 391.564 cv
934.042 391.717 934.402 391.793 934.871 391.793 cv
935.223 391.793 935.686 391.752 936.26 391.67 cv
cp
f
939.318 394.5 mo
939.318 375.832 li
942.166 375.832 li
942.166 378.662 li
942.893 377.338 943.563 376.465 944.179 376.043 cv
944.794 375.621 945.471 375.41 946.209 375.41 cv
947.275 375.41 948.359 375.75 949.461 376.43 cv
948.371 379.365 li
947.598 378.908 946.824 378.68 946.051 378.68 cv
945.359 378.68 944.738 378.888 944.188 379.304 cv
943.637 379.72 943.244 380.297 943.01 381.035 cv
942.658 382.16 942.482 383.391 942.482 384.727 cv
942.482 394.5 li
939.318 394.5 li
cp
f
953.416 385.166 mo
953.416 387.557 953.938 389.347 954.98 390.536 cv
956.023 391.726 957.336 392.32 958.918 392.32 cv
960.488 392.32 961.795 391.723 962.838 390.527 cv
963.881 389.332 964.402 387.51 964.402 385.061 cv
964.402 382.752 963.878 381.003 962.829 379.813 cv
961.78 378.624 960.477 378.029 958.918 378.029 cv
957.336 378.029 956.023 378.621 954.98 379.805 cv
953.938 380.988 953.416 382.775 953.416 385.166 cv
cp
950.164 385.166 mo
950.164 381.709 951.125 379.148 953.047 377.484 cv
954.652 376.102 956.609 375.41 958.918 375.41 cv
961.484 375.41 963.582 376.251 965.211 377.933 cv
966.84 379.614 967.654 381.938 967.654 384.902 cv
967.654 387.305 967.294 389.194 966.573 390.571 cv
965.853 391.948 964.804 393.018 963.427 393.779 cv
962.05 394.541 960.547 394.922 958.918 394.922 cv
956.305 394.922 954.192 394.084 952.581 392.408 cv
950.97 390.732 950.164 388.318 950.164 385.166 cv
cp
f
971.363 394.5 mo
971.363 375.832 li
974.211 375.832 li
974.211 378.486 li
975.582 376.436 977.563 375.41 980.152 375.41 cv
981.277 375.41 982.312 375.612 983.255 376.017 cv
984.198 376.421 984.904 376.951 985.373 377.607 cv
985.842 378.264 986.17 379.043 986.357 379.945 cv
986.475 380.531 986.533 381.557 986.533 383.021 cv
986.533 394.5 li
983.369 394.5 li
983.369 383.145 li
983.369 381.855 983.246 380.892 983 380.253 cv
982.754 379.614 982.317 379.104 981.69 378.724 cv
981.063 378.343 980.328 378.152 979.484 378.152 cv
978.137 378.152 976.974 378.58 975.995 379.436 cv
975.017 380.291 974.527 381.914 974.527 384.305 cv
974.527 394.5 li
971.363 394.5 li
cp
f
993.424 384.832 mo
993.424 387.281 993.91 389.068 994.883 390.193 cv
995.855 391.318 997.074 391.881 998.539 391.881 cv
999.992 391.881 1001.21 391.321 1002.2 390.202 cv
1003.18 389.083 1003.67 387.328 1003.67 384.938 cv
1003.67 382.652 1003.17 380.93 1002.15 379.77 cv
1001.14 378.609 999.916 378.029 998.486 378.029 cv
997.08 378.029 995.885 378.601 994.9 379.743 cv
993.916 380.886 993.424 382.582 993.424 384.832 cv
cp
990.805 396.047 mo
993.881 396.504 li
994.01 397.453 994.367 398.145 994.953 398.578 cv
995.738 399.164 996.811 399.457 998.17 399.457 cv
999.635 399.457 1000.77 399.164 1001.56 398.578 cv
1002.36 397.992 1002.9 397.172 1003.18 396.117 cv
1003.34 395.473 1003.42 394.119 1003.41 392.057 cv
1002.03 393.686 1000.3 394.5 998.24 394.5 cv
995.674 394.5 993.688 393.574 992.281 391.723 cv
990.875 389.871 990.172 387.65 990.172 385.061 cv
990.172 383.279 990.494 381.636 991.139 380.13 cv
991.783 378.624 992.718 377.461 993.942 376.641 cv
995.167 375.82 996.605 375.41 998.258 375.41 cv
1000.46 375.41 1002.28 376.301 1003.71 378.082 cv
1003.71 375.832 li
1006.63 375.832 li
1006.63 391.969 li
1006.63 394.875 1006.33 396.935 1005.74 398.147 cv
1005.15 399.36 1004.21 400.318 1002.92 401.021 cv
1001.64 401.725 1000.06 402.076 998.188 402.076 cv
995.961 402.076 994.162 401.575 992.791 400.573 cv
991.42 399.571 990.758 398.063 990.805 396.047 cv
cp
f
917.592 263 mo
910.754 237.23 li
914.252 237.23 li
918.172 254.123 li
918.594 255.893 918.957 257.65 919.262 259.396 cv
919.918 256.643 920.305 255.055 920.422 254.633 cv
925.326 237.23 li
929.439 237.23 li
933.131 250.273 li
934.057 253.508 934.725 256.549 935.135 259.396 cv
935.463 257.768 935.891 255.898 936.418 253.789 cv
940.461 237.23 li
943.889 237.23 li
936.822 263 li
933.535 263 li
928.104 243.365 li
927.646 241.725 927.377 240.717 927.295 240.342 cv
927.025 241.525 926.773 242.533 926.539 243.365 cv
921.072 263 li
917.592 263 li
cp
.78967 1 .277378 .3346 cmyk
f
948.406 251.873 mo
958.83 251.873 li
958.689 250.303 958.291 249.125 957.635 248.34 cv
956.627 247.121 955.32 246.512 953.715 246.512 cv
952.262 246.512 951.04 246.998 950.05 247.971 cv
949.06 248.943 948.512 250.244 948.406 251.873 cv
cp
958.795 256.988 mo
962.064 257.393 li
961.549 259.303 960.594 260.785 959.199 261.84 cv
957.805 262.895 956.023 263.422 953.855 263.422 cv
951.125 263.422 948.96 262.581 947.36 260.899 cv
945.761 259.218 944.961 256.859 944.961 253.824 cv
944.961 250.684 945.77 248.246 947.387 246.512 cv
949.004 244.777 951.102 243.91 953.68 243.91 cv
956.176 243.91 958.215 244.76 959.797 246.459 cv
961.379 248.158 962.17 250.549 962.17 253.631 cv
962.17 253.818 962.164 254.1 962.152 254.475 cv
948.23 254.475 li
948.348 256.525 948.928 258.096 949.971 259.186 cv
951.014 260.275 952.314 260.82 953.873 260.82 cv
955.033 260.82 956.023 260.516 956.844 259.906 cv
957.664 259.297 958.314 258.324 958.795 256.988 cv
cp
f
977.955 253.631 mo
976.807 254.1 975.084 254.498 972.787 254.826 cv
971.486 255.014 970.566 255.225 970.027 255.459 cv
969.488 255.693 969.072 256.036 968.779 256.487 cv
968.486 256.938 968.34 257.439 968.34 257.99 cv
968.34 258.834 968.659 259.537 969.298 260.1 cv
969.937 260.662 970.871 260.943 972.102 260.943 cv
973.32 260.943 974.404 260.677 975.354 260.144 cv
976.303 259.61 977 258.881 977.445 257.955 cv
977.785 257.24 977.955 256.186 977.955 254.791 cv
977.955 253.631 li
cp
978.219 260.697 mo
977.047 261.693 975.919 262.396 974.835 262.807 cv
973.751 263.217 972.588 263.422 971.346 263.422 cv
969.295 263.422 967.719 262.921 966.617 261.919 cv
965.516 260.917 964.965 259.637 964.965 258.078 cv
964.965 257.164 965.173 256.329 965.589 255.573 cv
966.005 254.817 966.55 254.211 967.224 253.754 cv
967.897 253.297 968.656 252.951 969.5 252.717 cv
970.121 252.553 971.059 252.395 972.313 252.242 cv
974.867 251.938 976.748 251.574 977.955 251.152 cv
977.967 250.719 977.973 250.443 977.973 250.326 cv
977.973 249.037 977.674 248.129 977.076 247.602 cv
976.268 246.887 975.066 246.529 973.473 246.529 cv
971.984 246.529 970.886 246.79 970.177 247.312 cv
969.468 247.833 968.943 248.756 968.604 250.08 cv
965.51 249.658 li
965.791 248.334 966.254 247.265 966.898 246.45 cv
967.543 245.636 968.475 245.009 969.693 244.569 cv
970.912 244.13 972.324 243.91 973.93 243.91 cv
975.523 243.91 976.818 244.098 977.814 244.473 cv
978.811 244.848 979.543 245.319 980.012 245.888 cv
980.48 246.456 980.809 247.174 980.996 248.041 cv
981.102 248.58 981.154 249.553 981.154 250.959 cv
981.154 255.178 li
981.154 258.119 981.222 259.979 981.356 260.759 cv
981.491 261.538 981.758 262.285 982.156 263 cv
978.852 263 li
978.523 262.344 978.313 261.576 978.219 260.697 cv
cp
f
986.076 263 mo
986.076 237.23 li
989.24 237.23 li
989.24 251.926 li
996.729 244.332 li
1000.82 244.332 li
993.688 251.258 li
1001.54 263 li
997.643 263 li
991.473 253.455 li
989.24 255.6 li
989.24 263 li
986.076 263 li
cp
f
375.092 394.5 mo
368.254 368.73 li
371.752 368.73 li
375.672 385.623 li
376.094 387.393 376.457 389.15 376.762 390.896 cv
377.418 388.143 377.805 386.555 377.922 386.133 cv
382.826 368.73 li
386.939 368.73 li
390.631 381.773 li
391.557 385.008 392.225 388.049 392.635 390.896 cv
392.963 389.268 393.391 387.398 393.918 385.289 cv
397.961 368.73 li
401.389 368.73 li
394.322 394.5 li
391.035 394.5 li
385.604 374.865 li
385.146 373.225 384.877 372.217 384.795 371.842 cv
384.525 373.025 384.273 374.033 384.039 374.865 cv
378.572 394.5 li
375.092 394.5 li
cp
f
405.906 383.373 mo
416.33 383.373 li
416.189 381.803 415.791 380.625 415.135 379.84 cv
414.127 378.621 412.82 378.012 411.215 378.012 cv
409.762 378.012 408.54 378.498 407.55 379.471 cv
406.56 380.443 406.012 381.744 405.906 383.373 cv
cp
416.295 388.488 mo
419.564 388.893 li
419.049 390.803 418.094 392.285 416.699 393.34 cv
415.305 394.395 413.523 394.922 411.355 394.922 cv
408.625 394.922 406.46 394.081 404.86 392.399 cv
403.261 390.718 402.461 388.359 402.461 385.324 cv
402.461 382.184 403.27 379.746 404.887 378.012 cv
406.504 376.277 408.602 375.41 411.18 375.41 cv
413.676 375.41 415.715 376.26 417.297 377.959 cv
418.879 379.658 419.67 382.049 419.67 385.131 cv
419.67 385.318 419.664 385.6 419.652 385.975 cv
405.73 385.975 li
405.848 388.025 406.428 389.596 407.471 390.686 cv
408.514 391.775 409.814 392.32 411.373 392.32 cv
412.533 392.32 413.523 392.016 414.344 391.406 cv
415.164 390.797 415.814 389.824 416.295 388.488 cv
cp
f
435.455 385.131 mo
434.307 385.6 432.584 385.998 430.287 386.326 cv
428.986 386.514 428.066 386.725 427.527 386.959 cv
426.988 387.193 426.572 387.536 426.279 387.987 cv
425.986 388.438 425.84 388.939 425.84 389.49 cv
425.84 390.334 426.159 391.037 426.798 391.6 cv
427.437 392.162 428.371 392.443 429.602 392.443 cv
430.82 392.443 431.904 392.177 432.854 391.644 cv
433.803 391.11 434.5 390.381 434.945 389.455 cv
435.285 388.74 435.455 387.686 435.455 386.291 cv
435.455 385.131 li
cp
435.719 392.197 mo
434.547 393.193 433.419 393.896 432.335 394.307 cv
431.251 394.717 430.088 394.922 428.846 394.922 cv
426.795 394.922 425.219 394.421 424.117 393.419 cv
423.016 392.417 422.465 391.137 422.465 389.578 cv
422.465 388.664 422.673 387.829 423.089 387.073 cv
423.505 386.317 424.05 385.711 424.724 385.254 cv
425.397 384.797 426.156 384.451 427 384.217 cv
427.621 384.053 428.559 383.895 429.812 383.742 cv
432.367 383.438 434.248 383.074 435.455 382.652 cv
435.467 382.219 435.473 381.943 435.473 381.826 cv
435.473 380.537 435.174 379.629 434.576 379.102 cv
433.768 378.387 432.566 378.029 430.973 378.029 cv
429.484 378.029 428.386 378.29 427.677 378.812 cv
426.968 379.333 426.443 380.256 426.104 381.58 cv
423.01 381.158 li
423.291 379.834 423.754 378.765 424.398 377.95 cv
425.043 377.136 425.975 376.509 427.193 376.069 cv
428.412 375.63 429.824 375.41 431.43 375.41 cv
433.023 375.41 434.318 375.598 435.314 375.973 cv
436.311 376.348 437.043 376.819 437.512 377.388 cv
437.98 377.956 438.309 378.674 438.496 379.541 cv
438.602 380.08 438.654 381.053 438.654 382.459 cv
438.654 386.678 li
438.654 389.619 438.722 391.479 438.856 392.259 cv
438.991 393.038 439.258 393.785 439.656 394.5 cv
436.352 394.5 li
436.023 393.844 435.812 393.076 435.719 392.197 cv
cp
f
443.576 394.5 mo
443.576 368.73 li
446.74 368.73 li
446.74 383.426 li
454.229 375.832 li
458.324 375.832 li
451.187 382.758 li
459.045 394.5 li
455.143 394.5 li
448.973 384.955 li
446.74 387.1 li
446.74 394.5 li
443.576 394.5 li
cp
f
411.872 11.9678 mo
411.872 27 li
401.003 27 li
401.003 25.2261 li
409.883 25.2261 li
409.883 20.6221 li
401.567 20.6221 li
401.567 18.8584 li
409.883 18.8584 li
409.883 13.7417 li
400.654 13.7417 li
400.654 11.9678 li
411.872 11.9678 li
cp
.749721 .679194 .670497 .901457 cmyk
f
413.092 27 mo
418.906 19.166 li
413.779 11.9678 li
416.148 11.9678 li
418.875 15.8232 li
419.443 16.623 419.846 17.2383 420.085 17.6689 cv
420.42 17.1221 420.817 16.5513 421.275 15.9565 cv
424.3 11.9678 li
426.463 11.9678 li
421.183 19.0532 li
426.874 27 li
424.413 27 li
420.629 21.6372 li
420.417 21.3296 420.198 20.9946 419.973 20.6323 cv
419.638 21.1792 419.398 21.5552 419.255 21.7603 cv
415.481 27 li
413.092 27 li
cp
f
299.684 63 mo
299.684 47.9678 li
310.553 47.9678 li
310.553 49.7417 li
301.673 49.7417 li
301.673 54.3457 li
309.989 54.3457 li
309.989 56.1094 li
301.673 56.1094 li
301.673 61.2261 li
310.902 61.2261 li
310.902 63 li
299.684 63 li
cp
f
312.184 63 mo
316.162 57.3398 li
312.481 52.1104 li
314.788 52.1104 li
316.459 54.6636 li
316.774 55.1489 317.027 55.5557 317.218 55.8838 cv
317.519 55.4326 317.796 55.0327 318.049 54.6841 cv
319.884 52.1104 li
322.089 52.1104 li
318.326 57.2373 li
322.376 63 li
320.11 63 li
317.875 59.6162 li
317.28 58.7036 li
314.419 63 li
312.184 63 li
cp
f
323.924 63 mo
323.924 52.1104 li
325.77 52.1104 li
325.77 63 li
323.924 63 li
cp
323.924 50.0903 mo
323.924 47.9678 li
325.77 47.9678 li
325.77 50.0903 li
323.924 50.0903 li
cp
f
327.841 59.7495 mo
329.667 59.4624 li
329.769 60.1938 330.054 60.7544 330.522 61.144 cv
330.991 61.5337 331.646 61.7285 332.486 61.7285 cv
333.334 61.7285 333.963 61.5562 334.373 61.2109 cv
334.783 60.8657 334.988 60.4604 334.988 59.9956 cv
334.988 59.5786 334.807 59.2505 334.445 59.0112 cv
334.192 58.8472 333.563 58.6387 332.558 58.3857 cv
331.205 58.0439 330.267 57.7485 329.743 57.499 cv
329.221 57.2495 328.824 56.9043 328.554 56.4629 cv
328.284 56.0225 328.149 55.5352 328.149 55.002 cv
328.149 54.5166 328.26 54.0674 328.482 53.6533 cv
328.704 53.2402 329.007 52.8965 329.39 52.623 cv
329.677 52.4111 330.068 52.2319 330.563 52.085 cv
331.059 51.938 331.591 51.8643 332.158 51.8643 cv
333.013 51.8643 333.763 51.9873 334.409 52.2334 cv
335.055 52.4795 335.532 52.8125 335.839 53.2334 cv
336.147 53.6533 336.359 54.2158 336.475 54.9199 cv
334.67 55.166 li
334.588 54.6055 334.351 54.168 333.958 53.8535 cv
333.564 53.5391 333.009 53.3818 332.292 53.3818 cv
331.444 53.3818 330.839 53.522 330.477 53.8022 cv
330.114 54.0825 329.933 54.4106 329.933 54.7866 cv
329.933 55.0259 330.008 55.2412 330.159 55.4326 cv
330.309 55.6309 330.545 55.7949 330.866 55.9248 cv
331.051 55.9932 331.594 56.1504 332.497 56.3965 cv
333.802 56.7451 334.713 57.0308 335.229 57.2529 cv
335.745 57.4751 336.15 57.7979 336.444 58.2217 cv
336.738 58.6455 336.885 59.1719 336.885 59.8008 cv
336.885 60.416 336.706 60.9951 336.347 61.5391 cv
335.988 62.082 335.47 62.5029 334.793 62.7998 cv
334.117 63.0977 333.351 63.2461 332.497 63.2461 cv
331.082 63.2461 330.003 62.9521 329.262 62.3643 cv
328.52 61.7764 328.046 60.9048 327.841 59.7495 cv
cp
f
343.109 61.3491 mo
343.376 62.9795 li
342.856 63.0889 342.392 63.1436 341.981 63.1436 cv
341.312 63.1436 340.792 63.0376 340.423 62.8257 cv
340.054 62.6138 339.794 62.3354 339.644 61.9902 cv
339.493 61.645 339.418 60.9185 339.418 59.811 cv
339.418 53.5459 li
338.064 53.5459 li
338.064 52.1104 li
339.418 52.1104 li
339.418 49.4136 li
341.253 48.3062 li
341.253 52.1104 li
343.109 52.1104 li
343.109 53.5459 li
341.253 53.5459 li
341.253 59.9136 li
341.253 60.4399 341.286 60.7783 341.351 60.9287 cv
341.416 61.0791 341.521 61.1987 341.669 61.2876 cv
341.815 61.3765 342.026 61.4209 342.299 61.4209 cv
342.504 61.4209 342.774 61.397 343.109 61.3491 cv
cp
f
346.309 56.5093 mo
352.389 56.5093 li
352.307 55.5933 352.075 54.9063 351.692 54.4482 cv
351.104 53.7373 350.342 53.3818 349.405 53.3818 cv
348.558 53.3818 347.845 53.6655 347.267 54.2329 cv
346.689 54.8003 346.37 55.5591 346.309 56.5093 cv
cp
352.369 59.4932 mo
354.276 59.729 li
353.975 60.8433 353.418 61.708 352.604 62.3232 cv
351.791 62.9385 350.752 63.2461 349.487 63.2461 cv
347.895 63.2461 346.631 62.7559 345.699 61.7744 cv
344.765 60.7939 344.299 59.418 344.299 57.6475 cv
344.299 55.8154 344.771 54.3936 345.714 53.3818 cv
346.657 52.3701 347.881 51.8643 349.385 51.8643 cv
350.841 51.8643 352.03 52.3599 352.953 53.3511 cv
353.876 54.3423 354.337 55.7368 354.337 57.5347 cv
354.337 57.644 354.334 57.8081 354.327 58.0269 cv
346.206 58.0269 li
346.274 59.2231 346.613 60.1392 347.221 60.7749 cv
347.83 61.4106 348.588 61.7285 349.498 61.7285 cv
350.174 61.7285 350.752 61.5508 351.23 61.1953 cv
351.709 60.8398 352.088 60.2725 352.369 59.4932 cv
cp
f
356.593 63 mo
356.593 52.1104 li
358.254 52.1104 li
358.254 53.6587 li
359.054 52.4624 360.209 51.8643 361.72 51.8643 cv
362.376 51.8643 362.979 51.9824 363.53 52.2178 cv
364.08 52.4541 364.492 52.7632 364.766 53.146 cv
365.039 53.5288 365.23 53.9834 365.34 54.5098 cv
365.408 54.8516 365.442 55.4497 365.442 56.3042 cv
365.442 63 li
363.597 63 li
363.597 56.376 li
363.597 55.624 363.525 55.062 363.381 54.6895 cv
363.238 54.3169 362.983 54.0195 362.617 53.7969 cv
362.251 53.5752 361.823 53.4639 361.331 53.4639 cv
360.544 53.4639 359.866 53.7134 359.295 54.2124 cv
358.724 54.7114 358.439 55.6582 358.439 57.0527 cv
358.439 63 li
356.593 63 li
cp
f
372.302 61.3491 mo
372.569 62.9795 li
372.049 63.0889 371.584 63.1436 371.174 63.1436 cv
370.504 63.1436 369.985 63.0376 369.616 62.8257 cv
369.247 62.6138 368.987 62.3354 368.836 61.9902 cv
368.686 61.645 368.611 60.9185 368.611 59.811 cv
368.611 53.5459 li
367.257 53.5459 li
367.257 52.1104 li
368.611 52.1104 li
368.611 49.4136 li
370.446 48.3062 li
370.446 52.1104 li
372.302 52.1104 li
372.302 53.5459 li
370.446 53.5459 li
370.446 59.9136 li
370.446 60.4399 370.479 60.7783 370.543 60.9287 cv
370.608 61.0791 370.714 61.1987 370.862 61.2876 cv
371.008 61.3765 371.219 61.4209 371.492 61.4209 cv
371.697 61.4209 371.967 61.397 372.302 61.3491 cv
cp
f
374.117 63 mo
374.117 52.1104 li
375.963 52.1104 li
375.963 63 li
374.117 63 li
cp
374.117 50.0903 mo
374.117 47.9678 li
375.963 47.9678 li
375.963 50.0903 li
374.117 50.0903 li
cp
f
385.725 57.5347 mo
385.055 57.8081 384.05 58.0405 382.71 58.2319 cv
381.951 58.3413 381.415 58.4644 381.1 58.6011 cv
380.786 58.7378 380.543 58.938 380.372 59.2012 cv
380.201 59.4644 380.116 59.7563 380.116 60.0776 cv
380.116 60.5698 380.302 60.98 380.674 61.3081 cv
381.047 61.6362 381.592 61.8003 382.31 61.8003 cv
383.021 61.8003 383.653 61.645 384.207 61.334 cv
384.761 61.0229 385.167 60.5972 385.427 60.0571 cv
385.625 59.6401 385.725 59.0249 385.725 58.2114 cv
385.725 57.5347 li
cp
385.878 61.6567 mo
385.195 62.2378 384.537 62.6479 383.905 62.8872 cv
383.272 63.1265 382.594 63.2461 381.869 63.2461 cv
380.673 63.2461 379.753 62.9541 379.111 62.3691 cv
378.468 61.7852 378.147 61.0381 378.147 60.1289 cv
378.147 59.5957 378.268 59.1084 378.511 58.668 cv
378.753 58.2266 379.071 57.873 379.464 57.6064 cv
379.857 57.3398 380.3 57.1382 380.792 57.0015 cv
381.155 56.9058 381.702 56.8135 382.433 56.7246 cv
383.923 56.5469 385.021 56.335 385.725 56.0889 cv
385.731 55.8359 385.735 55.6753 385.735 55.6069 cv
385.735 54.855 385.561 54.3252 385.212 54.0176 cv
384.74 53.6006 384.04 53.3921 383.11 53.3921 cv
382.242 53.3921 381.601 53.5444 381.187 53.8486 cv
380.773 54.1528 380.468 54.6909 380.27 55.4634 cv
378.465 55.2173 li
378.629 54.4448 378.899 53.8213 379.275 53.3457 cv
379.651 52.8711 380.194 52.5049 380.905 52.249 cv
381.616 51.9922 382.44 51.8643 383.376 51.8643 cv
384.306 51.8643 385.062 51.9736 385.643 52.1924 cv
386.224 52.4111 386.651 52.6865 386.924 53.0176 cv
387.198 53.3496 387.389 53.7681 387.499 54.2739 cv
387.56 54.5884 387.591 55.1558 387.591 55.9761 cv
387.591 58.437 li
387.591 60.1528 387.63 61.2383 387.708 61.6924 cv
387.787 62.1475 387.943 62.583 388.175 63 cv
386.248 63 li
386.056 62.6172 385.933 62.1694 385.878 61.6567 cv
cp
f
390.411 63 mo
390.411 47.9678 li
392.256 47.9678 li
392.256 63 li
390.411 63 li
cp
f
408.201 58.8472 mo
409.35 59.1685 410.296 59.647 411.042 60.2827 cv
412.21 59.2163 412.795 57.6133 412.795 55.4736 cv
412.795 54.2568 412.588 53.1938 412.175 52.2847 cv
411.761 51.3755 411.156 50.6699 410.359 50.167 cv
409.563 49.665 408.669 49.4136 407.678 49.4136 cv
406.195 49.4136 404.964 49.9209 403.987 50.9365 cv
403.009 51.9512 402.521 53.4673 402.521 55.4839 cv
402.521 57.439 403.004 58.9395 403.972 59.9854 cv
404.938 61.0313 406.174 61.5542 407.678 61.5542 cv
408.389 61.5542 409.059 61.4209 409.688 61.1543 cv
409.066 60.751 408.41 60.4639 407.719 60.293 cv
408.201 58.8472 li
cp
412.58 61.3901 mo
413.502 62.0259 414.354 62.4907 415.133 62.7847 cv
414.548 64.1689 li
413.468 63.7793 412.392 63.1641 411.318 62.3232 cv
410.204 62.9453 408.974 63.2563 407.627 63.2563 cv
406.267 63.2563 405.033 62.9282 403.925 62.272 cv
402.818 61.6157 401.965 60.6929 401.367 59.5034 cv
400.769 58.314 400.47 56.9741 400.47 55.4839 cv
400.47 54.0005 400.771 52.6504 401.372 51.4336 cv
401.974 50.2168 402.83 49.2905 403.94 48.6548 cv
405.051 48.019 406.294 47.7012 407.668 47.7012 cv
409.056 47.7012 410.307 48.0313 411.421 48.6904 cv
412.535 49.3506 413.385 50.2734 413.969 51.459 cv
414.554 52.6455 414.846 53.9834 414.846 55.4736 cv
414.846 56.7109 414.658 57.8237 414.282 58.8115 cv
413.906 59.7993 413.338 60.6587 412.58 61.3901 cv
cp
f
424.423 63 mo
424.423 61.4004 li
423.575 62.6309 422.423 63.2461 420.967 63.2461 cv
420.325 63.2461 419.725 63.123 419.167 62.877 cv
418.61 62.6309 418.197 62.3218 417.927 61.9492 cv
417.657 61.5767 417.467 61.1201 417.358 60.5801 cv
417.283 60.2178 417.245 59.6436 417.245 58.8574 cv
417.245 52.1104 li
419.091 52.1104 li
419.091 58.1499 li
419.091 59.1138 419.128 59.7632 419.204 60.0981 cv
419.32 60.5835 419.566 60.9648 419.942 61.2412 cv
420.318 61.5186 420.783 61.6567 421.336 61.6567 cv
421.89 61.6567 422.41 61.5151 422.895 61.2314 cv
423.38 60.9478 423.724 60.5615 423.925 60.0723 cv
424.127 59.584 424.228 58.8745 424.228 57.9448 cv
424.228 52.1104 li
426.074 52.1104 li
426.074 63 li
424.423 63 li
cp
f
435.917 57.5347 mo
435.248 57.8081 434.243 58.0405 432.903 58.2319 cv
432.144 58.3413 431.607 58.4644 431.293 58.6011 cv
430.979 58.7378 430.736 58.938 430.565 59.2012 cv
430.394 59.4644 430.309 59.7563 430.309 60.0776 cv
430.309 60.5698 430.495 60.98 430.867 61.3081 cv
431.24 61.6362 431.785 61.8003 432.503 61.8003 cv
433.214 61.8003 433.846 61.645 434.4 61.334 cv
434.954 61.0229 435.36 60.5972 435.62 60.0571 cv
435.818 59.6401 435.917 59.0249 435.917 58.2114 cv
435.917 57.5347 li
cp
436.071 61.6567 mo
435.388 62.2378 434.729 62.6479 434.098 62.8872 cv
433.465 63.1265 432.787 63.2461 432.062 63.2461 cv
430.866 63.2461 429.946 62.9541 429.304 62.3691 cv
428.661 61.7852 428.34 61.0381 428.34 60.1289 cv
428.34 59.5957 428.461 59.1084 428.704 58.668 cv
428.946 58.2266 429.264 57.873 429.657 57.6064 cv
430.05 57.3398 430.493 57.1382 430.985 57.0015 cv
431.348 56.9058 431.895 56.8135 432.626 56.7246 cv
434.116 56.5469 435.213 56.335 435.917 56.0889 cv
435.924 55.8359 435.928 55.6753 435.928 55.6069 cv
435.928 54.855 435.753 54.3252 435.405 54.0176 cv
434.933 53.6006 434.232 53.3921 433.303 53.3921 cv
432.435 53.3921 431.793 53.5444 431.38 53.8486 cv
430.966 54.1528 430.661 54.6909 430.462 55.4634 cv
428.658 55.2173 li
428.822 54.4448 429.092 53.8213 429.468 53.3457 cv
429.844 52.8711 430.387 52.5049 431.098 52.249 cv
431.809 51.9922 432.633 51.8643 433.569 51.8643 cv
434.499 51.8643 435.254 51.9736 435.835 52.1924 cv
436.417 52.4111 436.844 52.6865 437.117 53.0176 cv
437.391 53.3496 437.582 53.7681 437.691 54.2739 cv
437.753 54.5884 437.784 55.1558 437.784 55.9761 cv
437.784 58.437 li
437.784 60.1528 437.823 61.2383 437.901 61.6924 cv
437.98 62.1475 438.136 62.583 438.368 63 cv
436.44 63 li
436.249 62.6172 436.126 62.1694 436.071 61.6567 cv
cp
f
440.645 63 mo
440.645 52.1104 li
442.306 52.1104 li
442.306 53.6587 li
443.105 52.4624 444.261 51.8643 445.771 51.8643 cv
446.428 51.8643 447.031 51.9824 447.582 52.2178 cv
448.131 52.4541 448.543 52.7632 448.817 53.146 cv
449.09 53.5288 449.282 53.9834 449.391 54.5098 cv
449.459 54.8516 449.494 55.4497 449.494 56.3042 cv
449.494 63 li
447.648 63 li
447.648 56.376 li
447.648 55.624 447.576 55.062 447.433 54.6895 cv
447.289 54.3169 447.034 54.0195 446.668 53.7969 cv
446.303 53.5752 445.874 53.4639 445.382 53.4639 cv
444.596 53.4639 443.917 53.7134 443.346 54.2124 cv
442.775 54.7114 442.49 55.6582 442.49 57.0527 cv
442.49 63 li
440.645 63 li
cp
f
456.354 61.3491 mo
456.62 62.9795 li
456.101 63.0889 455.636 63.1436 455.226 63.1436 cv
454.556 63.1436 454.036 63.0376 453.667 62.8257 cv
453.298 62.6138 453.038 62.3354 452.888 61.9902 cv
452.737 61.645 452.662 60.9185 452.662 59.811 cv
452.662 53.5459 li
451.309 53.5459 li
451.309 52.1104 li
452.662 52.1104 li
452.662 49.4136 li
454.498 48.3062 li
454.498 52.1104 li
456.354 52.1104 li
456.354 53.5459 li
454.498 53.5459 li
454.498 59.9136 li
454.498 60.4399 454.53 60.7783 454.595 60.9287 cv
454.66 61.0791 454.766 61.1987 454.913 61.2876 cv
455.06 61.3765 455.27 61.4209 455.543 61.4209 cv
455.749 61.4209 456.019 61.397 456.354 61.3491 cv
cp
f
458.168 63 mo
458.168 52.1104 li
460.014 52.1104 li
460.014 63 li
458.168 63 li
cp
458.168 50.0903 mo
458.168 47.9678 li
460.014 47.9678 li
460.014 50.0903 li
458.168 50.0903 li
cp
f
463.265 63 mo
463.265 53.5459 li
461.634 53.5459 li
461.634 52.1104 li
463.265 52.1104 li
463.265 50.9517 li
463.265 50.2202 463.33 49.6768 463.459 49.3213 cv
463.637 48.8428 463.95 48.4551 464.397 48.1572 cv
464.845 47.8604 465.473 47.7114 466.279 47.7114 cv
466.799 47.7114 467.373 47.7729 468.002 47.896 cv
467.725 49.5059 li
467.342 49.4375 466.98 49.4033 466.638 49.4033 cv
466.078 49.4033 465.681 49.5229 465.449 49.7622 cv
465.216 50.0015 465.1 50.4492 465.1 51.1055 cv
465.1 52.1104 li
467.223 52.1104 li
467.223 53.5459 li
465.1 53.5459 li
465.1 63 li
463.265 63 li
cp
f
468.668 63 mo
468.668 52.1104 li
470.514 52.1104 li
470.514 63 li
468.668 63 li
cp
468.668 50.0903 mo
468.668 47.9678 li
470.514 47.9678 li
470.514 50.0903 li
468.668 50.0903 li
cp
f
480.43 59.0112 mo
482.245 59.2471 li
482.046 60.498 481.539 61.4775 480.722 62.1846 cv
479.905 62.8926 478.902 63.2461 477.712 63.2461 cv
476.222 63.2461 475.024 62.7588 474.118 61.7852 cv
473.212 60.8105 472.76 59.4146 472.76 57.5962 cv
472.76 56.4204 472.955 55.3916 473.344 54.5098 cv
473.734 53.6279 474.327 52.9668 475.123 52.5254 cv
475.919 52.085 476.786 51.8643 477.723 51.8643 cv
478.905 51.8643 479.873 52.1636 480.625 52.7617 cv
481.376 53.3599 481.858 54.209 482.07 55.3096 cv
480.276 55.5864 li
480.105 54.855 479.802 54.3047 479.368 53.9355 cv
478.934 53.5664 478.41 53.3818 477.794 53.3818 cv
476.865 53.3818 476.109 53.7148 475.528 54.3818 cv
474.947 55.0479 474.657 56.1025 474.657 57.5449 cv
474.657 59.0078 474.937 60.0708 475.498 60.7339 cv
476.058 61.397 476.79 61.7285 477.692 61.7285 cv
478.417 61.7285 479.021 61.5063 479.507 61.062 cv
479.992 60.6177 480.3 59.9341 480.43 59.0112 cv
cp
f
490.776 57.5347 mo
490.106 57.8081 489.101 58.0405 487.761 58.2319 cv
487.002 58.3413 486.466 58.4644 486.151 58.6011 cv
485.837 58.7378 485.594 58.938 485.423 59.2012 cv
485.252 59.4644 485.167 59.7563 485.167 60.0776 cv
485.167 60.5698 485.353 60.98 485.726 61.3081 cv
486.098 61.6362 486.644 61.8003 487.361 61.8003 cv
488.072 61.8003 488.705 61.645 489.258 61.334 cv
489.812 61.0229 490.219 60.5972 490.479 60.0571 cv
490.677 59.6401 490.776 59.0249 490.776 58.2114 cv
490.776 57.5347 li
cp
490.93 61.6567 mo
490.246 62.2378 489.588 62.6479 488.956 62.8872 cv
488.323 63.1265 487.645 63.2461 486.92 63.2461 cv
485.724 63.2461 484.805 62.9541 484.162 62.3691 cv
483.52 61.7852 483.198 61.0381 483.198 60.1289 cv
483.198 59.5957 483.319 59.1084 483.563 58.668 cv
483.805 58.2266 484.123 57.873 484.516 57.6064 cv
484.909 57.3398 485.352 57.1382 485.844 57.0015 cv
486.206 56.9058 486.753 56.8135 487.484 56.7246 cv
488.975 56.5469 490.072 56.335 490.776 56.0889 cv
490.783 55.8359 490.786 55.6753 490.786 55.6069 cv
490.786 54.855 490.612 54.3252 490.263 54.0176 cv
489.792 53.6006 489.091 53.3921 488.161 53.3921 cv
487.293 53.3921 486.652 53.5444 486.238 53.8486 cv
485.825 54.1528 485.519 54.6909 485.321 55.4634 cv
483.516 55.2173 li
483.68 54.4448 483.95 53.8213 484.326 53.3457 cv
484.702 52.8711 485.246 52.5049 485.957 52.249 cv
486.667 51.9922 487.491 51.8643 488.428 51.8643 cv
489.357 51.8643 490.113 51.9736 490.694 52.1924 cv
491.275 52.4111 491.702 52.6865 491.976 53.0176 cv
492.249 53.3496 492.44 53.7681 492.55 54.2739 cv
492.611 54.5884 492.642 55.1558 492.642 55.9761 cv
492.642 58.437 li
492.642 60.1528 492.681 61.2383 492.76 61.6924 cv
492.838 62.1475 492.994 62.583 493.227 63 cv
491.299 63 li
491.107 62.6172 490.984 62.1694 490.93 61.6567 cv
cp
f
499.533 61.3491 mo
499.799 62.9795 li
499.28 63.0889 498.815 63.1436 498.405 63.1436 cv
497.735 63.1436 497.215 63.0376 496.846 62.8257 cv
496.477 62.6138 496.217 62.3354 496.067 61.9902 cv
495.917 61.645 495.841 60.9185 495.841 59.811 cv
495.841 53.5459 li
494.488 53.5459 li
494.488 52.1104 li
495.841 52.1104 li
495.841 49.4136 li
497.677 48.3062 li
497.677 52.1104 li
499.533 52.1104 li
499.533 53.5459 li
497.677 53.5459 li
497.677 59.9136 li
497.677 60.4399 497.709 60.7783 497.774 60.9287 cv
497.839 61.0791 497.945 61.1987 498.092 61.2876 cv
498.239 61.3765 498.449 61.4209 498.723 61.4209 cv
498.928 61.4209 499.198 61.397 499.533 61.3491 cv
cp
f
501.348 63 mo
501.348 52.1104 li
503.193 52.1104 li
503.193 63 li
501.348 63 li
cp
501.348 50.0903 mo
501.348 47.9678 li
503.193 47.9678 li
503.193 50.0903 li
501.348 50.0903 li
cp
f
507.213 57.5552 mo
507.213 58.9497 507.517 59.9941 508.125 60.6875 cv
508.734 61.3818 509.5 61.7285 510.422 61.7285 cv
511.338 61.7285 512.101 61.3799 512.709 60.6826 cv
513.317 59.9854 513.622 58.9224 513.622 57.4937 cv
513.622 56.147 513.315 55.127 512.704 54.4326 cv
512.092 53.7393 511.332 53.3921 510.422 53.3921 cv
509.5 53.3921 508.734 53.7373 508.125 54.4277 cv
507.517 55.1182 507.213 56.1606 507.213 57.5552 cv
cp
505.316 57.5552 mo
505.316 55.5386 505.876 54.0449 506.998 53.0742 cv
507.934 52.2676 509.076 51.8643 510.422 51.8643 cv
511.919 51.8643 513.143 52.355 514.093 53.3359 cv
515.043 54.3169 515.519 55.6719 515.519 57.4014 cv
515.519 58.8027 515.308 59.9053 514.888 60.708 cv
514.467 61.5117 513.855 62.1353 513.052 62.5796 cv
512.249 63.0239 511.373 63.2461 510.422 63.2461 cv
508.898 63.2461 507.666 62.7573 506.726 61.7798 cv
505.786 60.8022 505.316 59.394 505.316 57.5552 cv
cp
f
517.682 63 mo
517.682 52.1104 li
519.343 52.1104 li
519.343 53.6587 li
520.143 52.4624 521.298 51.8643 522.809 51.8643 cv
523.465 51.8643 524.068 51.9824 524.619 52.2178 cv
525.169 52.4541 525.581 52.7632 525.854 53.146 cv
526.128 53.5288 526.319 53.9834 526.429 54.5098 cv
526.497 54.8516 526.531 55.4497 526.531 56.3042 cv
526.531 63 li
524.686 63 li
524.686 56.376 li
524.686 55.624 524.614 55.062 524.47 54.6895 cv
524.327 54.3169 524.072 54.0195 523.706 53.7969 cv
523.34 53.5752 522.912 53.4639 522.419 53.4639 cv
521.633 53.4639 520.955 53.7134 520.384 54.2124 cv
519.813 54.7114 519.528 55.6582 519.528 57.0527 cv
519.528 63 li
517.682 63 li
cp
f
219.001 99 mo
219.001 83.9678 li
220.99 83.9678 li
220.99 97.2261 li
228.394 97.2261 li
228.394 99 li
219.001 99 li
cp
f
231.921 92.5093 mo
238.001 92.5093 li
237.919 91.5933 237.687 90.9063 237.304 90.4482 cv
236.716 89.7373 235.954 89.3818 235.018 89.3818 cv
234.17 89.3818 233.457 89.6655 232.879 90.2329 cv
232.302 90.8003 231.982 91.5591 231.921 92.5093 cv
cp
237.981 95.4932 mo
239.888 95.729 li
239.587 96.8433 239.03 97.708 238.217 98.3232 cv
237.403 98.9385 236.364 99.2461 235.1 99.2461 cv
233.507 99.2461 232.244 98.7559 231.311 97.7744 cv
230.377 96.7939 229.911 95.418 229.911 93.6475 cv
229.911 91.8154 230.383 90.3936 231.326 89.3818 cv
232.27 88.3701 233.493 87.8643 234.997 87.8643 cv
236.453 87.8643 237.643 88.3599 238.565 89.3511 cv
239.488 90.3423 239.95 91.7368 239.95 93.5347 cv
239.95 93.644 239.946 93.8081 239.939 94.0269 cv
231.818 94.0269 li
231.887 95.2231 232.225 96.1392 232.833 96.7749 cv
233.442 97.4106 234.201 97.7285 235.11 97.7285 cv
235.787 97.7285 236.364 97.5508 236.843 97.1953 cv
237.321 96.8398 237.701 96.2725 237.981 95.4932 cv
cp
f
249.158 93.5347 mo
248.488 93.8081 247.483 94.0405 246.143 94.2319 cv
245.384 94.3413 244.848 94.4644 244.533 94.6011 cv
244.219 94.7378 243.976 94.938 243.805 95.2012 cv
243.634 95.4644 243.549 95.7563 243.549 96.0776 cv
243.549 96.5698 243.735 96.98 244.107 97.3081 cv
244.48 97.6362 245.025 97.8003 245.743 97.8003 cv
246.454 97.8003 247.086 97.645 247.64 97.334 cv
248.194 97.0229 248.601 96.5972 248.86 96.0571 cv
249.059 95.6401 249.158 95.0249 249.158 94.2114 cv
249.158 93.5347 li
cp
249.312 97.6567 mo
248.628 98.2378 247.97 98.6479 247.338 98.8872 cv
246.705 99.1265 246.027 99.2461 245.302 99.2461 cv
244.106 99.2461 243.187 98.9541 242.544 98.3691 cv
241.901 97.7852 241.58 97.0381 241.58 96.1289 cv
241.58 95.5957 241.701 95.1084 241.944 94.668 cv
242.187 94.2266 242.504 93.873 242.897 93.6064 cv
243.291 93.3398 243.733 93.1382 244.226 93.0015 cv
244.588 92.9058 245.135 92.8135 245.866 92.7246 cv
247.356 92.5469 248.454 92.335 249.158 92.0889 cv
249.165 91.8359 249.168 91.6753 249.168 91.6069 cv
249.168 90.855 248.994 90.3252 248.645 90.0176 cv
248.173 89.6006 247.473 89.3921 246.543 89.3921 cv
245.675 89.3921 245.034 89.5444 244.62 89.8486 cv
244.207 90.1528 243.901 90.6909 243.703 91.4634 cv
241.898 91.2173 li
242.062 90.4448 242.332 89.8213 242.708 89.3457 cv
243.084 88.8711 243.627 88.5049 244.338 88.249 cv
245.049 87.9922 245.873 87.8643 246.81 87.8643 cv
247.739 87.8643 248.495 87.9736 249.076 88.1924 cv
249.657 88.4111 250.084 88.6865 250.357 89.0176 cv
250.631 89.3496 250.822 89.7681 250.932 90.2739 cv
250.993 90.5884 251.024 91.1558 251.024 91.9761 cv
251.024 94.437 li
251.024 96.1528 251.063 97.2383 251.142 97.6924 cv
251.22 98.1475 251.376 98.583 251.608 99 cv
249.681 99 li
249.489 98.6172 249.366 98.1694 249.312 97.6567 cv
cp
f
253.864 99 mo
253.864 88.1104 li
255.525 88.1104 li
255.525 89.7612 li
255.949 88.9888 256.34 88.4795 256.7 88.2334 cv
257.058 87.9873 257.453 87.8643 257.884 87.8643 cv
258.506 87.8643 259.138 88.0625 259.781 88.459 cv
259.145 90.1714 li
258.694 89.9048 258.243 89.7715 257.792 89.7715 cv
257.388 89.7715 257.026 89.8931 256.705 90.1357 cv
256.383 90.3784 256.154 90.7148 256.018 91.1455 cv
255.812 91.8018 255.71 92.5195 255.71 93.2988 cv
255.71 99 li
253.864 99 li
cp
f
260.878 99 mo
260.878 88.1104 li
262.539 88.1104 li
262.539 89.6587 li
263.339 88.4624 264.494 87.8643 266.005 87.8643 cv
266.661 87.8643 267.264 87.9824 267.815 88.2178 cv
268.365 88.4541 268.777 88.7632 269.05 89.146 cv
269.324 89.5288 269.515 89.9834 269.625 90.5098 cv
269.693 90.8516 269.727 91.4497 269.727 92.3042 cv
269.727 99 li
267.881 99 li
267.881 92.376 li
267.881 91.624 267.81 91.062 267.666 90.6895 cv
267.522 90.3169 267.268 90.0195 266.902 89.7969 cv
266.536 89.5752 266.107 89.4639 265.615 89.4639 cv
264.829 89.4639 264.15 89.7134 263.58 90.2124 cv
263.009 90.7114 262.724 91.6582 262.724 93.0527 cv
262.724 99 li
260.878 99 li
cp
f
272.567 99 mo
272.567 88.1104 li
274.413 88.1104 li
274.413 99 li
272.567 99 li
cp
272.567 86.0903 mo
272.567 83.9678 li
274.413 83.9678 li
274.413 86.0903 li
272.567 86.0903 li
cp
f
277.223 99 mo
277.223 88.1104 li
278.884 88.1104 li
278.884 89.6587 li
279.684 88.4624 280.839 87.8643 282.35 87.8643 cv
283.006 87.8643 283.609 87.9824 284.16 88.2178 cv
284.709 88.4541 285.122 88.7632 285.395 89.146 cv
285.668 89.5288 285.86 89.9834 285.969 90.5098 cv
286.038 90.8516 286.072 91.4497 286.072 92.3042 cv
286.072 99 li
284.226 99 li
284.226 92.376 li
284.226 91.624 284.154 91.062 284.011 90.6895 cv
283.867 90.3169 283.612 90.0195 283.247 89.7969 cv
282.881 89.5752 282.452 89.4639 281.96 89.4639 cv
281.174 89.4639 280.495 89.7134 279.924 90.2124 cv
279.354 90.7114 279.068 91.6582 279.068 93.0527 cv
279.068 99 li
277.223 99 li
cp
f
290.091 93.3604 mo
290.091 94.7891 290.375 95.8315 290.942 96.4878 cv
291.51 97.144 292.221 97.4722 293.075 97.4722 cv
293.923 97.4722 294.634 97.146 295.208 96.4932 cv
295.782 95.8403 296.069 94.8164 296.069 93.4219 cv
296.069 92.0889 295.773 91.084 295.183 90.4072 cv
294.591 89.7305 293.878 89.3921 293.044 89.3921 cv
292.224 89.3921 291.527 89.7256 290.953 90.3916 cv
290.378 91.0586 290.091 92.0479 290.091 93.3604 cv
cp
288.563 99.9023 mo
290.358 100.169 li
290.433 100.723 290.642 101.126 290.983 101.379 cv
291.441 101.721 292.067 101.892 292.86 101.892 cv
293.714 101.892 294.374 101.721 294.839 101.379 cv
295.304 101.037 295.618 100.559 295.782 99.9434 cv
295.878 99.5674 295.922 98.7778 295.916 97.5747 cv
295.109 98.5249 294.104 99 292.901 99 cv
291.404 99 290.245 98.46 289.425 97.3799 cv
288.604 96.2998 288.194 95.0044 288.194 93.4937 cv
288.194 92.4546 288.382 91.4961 288.758 90.6172 cv
289.134 89.7393 289.679 89.0605 290.394 88.582 cv
291.108 88.1035 291.947 87.8643 292.911 87.8643 cv
294.196 87.8643 295.256 88.3838 296.09 89.4229 cv
296.09 88.1104 li
297.792 88.1104 li
297.792 97.5234 li
297.792 99.2188 297.619 100.42 297.274 101.128 cv
296.929 101.835 296.382 102.394 295.634 102.804 cv
294.885 103.214 293.964 103.419 292.87 103.419 cv
291.571 103.419 290.522 103.127 289.722 102.543 cv
288.922 101.958 288.536 101.078 288.563 99.9023 cv
cp
f
313.368 93.5347 mo
312.698 93.8081 311.693 94.0405 310.353 94.2319 cv
309.594 94.3413 309.058 94.4644 308.743 94.6011 cv
308.429 94.7378 308.186 94.938 308.015 95.2012 cv
307.844 95.4644 307.759 95.7563 307.759 96.0776 cv
307.759 96.5698 307.945 96.98 308.317 97.3081 cv
308.69 97.6362 309.235 97.8003 309.953 97.8003 cv
310.664 97.8003 311.296 97.645 311.85 97.334 cv
312.404 97.0229 312.811 96.5972 313.07 96.0571 cv
313.269 95.6401 313.368 95.0249 313.368 94.2114 cv
313.368 93.5347 li
cp
313.521 97.6567 mo
312.838 98.2378 312.18 98.6479 311.548 98.8872 cv
310.915 99.1265 310.237 99.2461 309.512 99.2461 cv
308.316 99.2461 307.396 98.9541 306.754 98.3691 cv
306.111 97.7852 305.79 97.0381 305.79 96.1289 cv
305.79 95.5957 305.911 95.1084 306.154 94.668 cv
306.396 94.2266 306.714 93.873 307.107 93.6064 cv
307.5 93.3398 307.943 93.1382 308.436 93.0015 cv
308.798 92.9058 309.345 92.8135 310.076 92.7246 cv
311.566 92.5469 312.664 92.335 313.368 92.0889 cv
313.375 91.8359 313.378 91.6753 313.378 91.6069 cv
313.378 90.855 313.204 90.3252 312.855 90.0176 cv
312.383 89.6006 311.683 89.3921 310.753 89.3921 cv
309.885 89.3921 309.244 89.5444 308.83 89.8486 cv
308.417 90.1528 308.111 90.6909 307.913 91.4634 cv
306.108 91.2173 li
306.272 90.4448 306.542 89.8213 306.918 89.3457 cv
307.294 88.8711 307.837 88.5049 308.548 88.249 cv
309.259 87.9922 310.083 87.8643 311.02 87.8643 cv
311.949 87.8643 312.705 87.9736 313.286 88.1924 cv
313.867 88.4111 314.294 88.6865 314.567 89.0176 cv
314.841 89.3496 315.032 89.7681 315.142 90.2739 cv
315.203 90.5884 315.234 91.1558 315.234 91.9761 cv
315.234 94.437 li
315.234 96.1528 315.273 97.2383 315.352 97.6924 cv
315.43 98.1475 315.586 98.583 315.818 99 cv
313.891 99 li
313.699 98.6172 313.576 98.1694 313.521 97.6567 cv
cp
f
318.095 99 mo
318.095 88.1104 li
319.756 88.1104 li
319.756 89.6587 li
320.556 88.4624 321.711 87.8643 323.222 87.8643 cv
323.878 87.8643 324.481 87.9824 325.032 88.2178 cv
325.582 88.4541 325.994 88.7632 326.267 89.146 cv
326.541 89.5288 326.732 89.9834 326.841 90.5098 cv
326.91 90.8516 326.944 91.4497 326.944 92.3042 cv
326.944 99 li
325.098 99 li
325.098 92.376 li
325.098 91.624 325.026 91.062 324.883 90.6895 cv
324.739 90.3169 324.484 90.0195 324.119 89.7969 cv
323.753 89.5752 323.324 89.4639 322.832 89.4639 cv
322.046 89.4639 321.367 89.7134 320.796 90.2124 cv
320.226 90.7114 319.94 91.6582 319.94 93.0527 cv
319.94 99 li
318.095 99 li
cp
f
331.004 93.5654 mo
331.004 94.96 331.298 96.0024 331.886 96.6929 cv
332.474 97.3833 333.168 97.7285 333.968 97.7285 cv
334.774 97.7285 335.46 97.3989 336.023 96.7393 cv
336.588 96.0796 336.87 95.0728 336.87 93.7192 cv
336.87 92.229 336.583 91.1353 336.008 90.438 cv
335.434 89.7407 334.727 89.3921 333.886 89.3921 cv
333.065 89.3921 332.38 89.7271 331.83 90.397 cv
331.279 91.0669 331.004 92.123 331.004 93.5654 cv
cp
336.839 99 mo
336.839 97.626 li
336.148 98.7061 335.133 99.2461 333.793 99.2461 cv
332.925 99.2461 332.127 99.0068 331.399 98.5283 cv
330.671 98.0498 330.107 97.3818 329.707 96.5234 cv
329.308 95.666 329.107 94.6797 329.107 93.5654 cv
329.107 92.4785 329.289 91.4927 329.651 90.6074 cv
330.013 89.7222 330.557 89.0435 331.281 88.5718 cv
332.006 88.1001 332.816 87.8643 333.711 87.8643 cv
334.368 87.8643 334.952 88.0029 335.465 88.2793 cv
335.978 88.5566 336.395 88.917 336.716 89.3613 cv
336.716 83.9678 li
338.551 83.9678 li
338.551 99 li
336.839 99 li
cp
f
347.862 99 mo
347.862 83.9678 li
349.851 83.9678 li
349.851 99 li
347.862 99 li
cp
f
353.122 99 mo
353.122 88.1104 li
354.783 88.1104 li
354.783 89.6587 li
355.583 88.4624 356.738 87.8643 358.249 87.8643 cv
358.905 87.8643 359.508 87.9824 360.059 88.2178 cv
360.609 88.4541 361.021 88.7632 361.294 89.146 cv
361.568 89.5288 361.759 89.9834 361.869 90.5098 cv
361.937 90.8516 361.971 91.4497 361.971 92.3042 cv
361.971 99 li
360.125 99 li
360.125 92.376 li
360.125 91.624 360.054 91.062 359.91 90.6895 cv
359.767 90.3169 359.512 90.0195 359.146 89.7969 cv
358.78 89.5752 358.352 89.4639 357.859 89.4639 cv
357.073 89.4639 356.395 89.7134 355.824 90.2124 cv
355.253 90.7114 354.968 91.6582 354.968 93.0527 cv
354.968 99 li
353.122 99 li
cp
f
365.242 99 mo
365.242 89.5459 li
363.612 89.5459 li
363.612 88.1104 li
365.242 88.1104 li
365.242 86.9517 li
365.242 86.2202 365.307 85.6768 365.437 85.3213 cv
365.615 84.8428 365.927 84.4551 366.375 84.1572 cv
366.823 83.8604 367.45 83.7114 368.257 83.7114 cv
368.776 83.7114 369.351 83.7729 369.979 83.896 cv
369.703 85.5059 li
369.32 85.4375 368.958 85.4033 368.616 85.4033 cv
368.055 85.4033 367.659 85.5229 367.426 85.7622 cv
367.194 86.0015 367.078 86.4492 367.078 87.1055 cv
367.078 88.1104 li
369.2 88.1104 li
369.2 89.5459 li
367.078 89.5459 li
367.078 99 li
365.242 99 li
cp
f
372.03 92.5093 mo
378.111 92.5093 li
378.029 91.5933 377.796 90.9063 377.414 90.4482 cv
376.826 89.7373 376.063 89.3818 375.127 89.3818 cv
374.279 89.3818 373.566 89.6655 372.989 90.2329 cv
372.411 90.8003 372.092 91.5591 372.03 92.5093 cv
cp
378.09 95.4932 mo
379.998 95.729 li
379.697 96.8433 379.14 97.708 378.326 98.3232 cv
377.513 98.9385 376.474 99.2461 375.209 99.2461 cv
373.616 99.2461 372.353 98.7559 371.42 97.7744 cv
370.487 96.7939 370.021 95.418 370.021 93.6475 cv
370.021 91.8154 370.492 90.3936 371.436 89.3818 cv
372.379 88.3701 373.603 87.8643 375.106 87.8643 cv
376.563 87.8643 377.752 88.3599 378.675 89.3511 cv
379.598 90.3423 380.059 91.7368 380.059 93.5347 cv
380.059 93.644 380.056 93.8081 380.049 94.0269 cv
371.928 94.0269 li
371.996 95.2231 372.334 96.1392 372.943 96.7749 cv
373.551 97.4106 374.31 97.7285 375.219 97.7285 cv
375.896 97.7285 376.474 97.5508 376.952 97.1953 cv
377.431 96.8398 377.81 96.2725 378.09 95.4932 cv
cp
f
382.294 99 mo
382.294 88.1104 li
383.956 88.1104 li
383.956 89.7612 li
384.379 88.9888 384.771 88.4795 385.13 88.2334 cv
385.488 87.9873 385.883 87.8643 386.314 87.8643 cv
386.936 87.8643 387.568 88.0625 388.211 88.459 cv
387.575 90.1714 li
387.124 89.9048 386.673 89.7715 386.222 89.7715 cv
385.818 89.7715 385.456 89.8931 385.135 90.1357 cv
384.813 90.3784 384.584 90.7148 384.448 91.1455 cv
384.243 91.8018 384.14 92.5195 384.14 93.2988 cv
384.14 99 li
382.294 99 li
cp
f
390.703 92.5093 mo
396.783 92.5093 li
396.701 91.5933 396.469 90.9063 396.086 90.4482 cv
395.498 89.7373 394.736 89.3818 393.799 89.3818 cv
392.952 89.3818 392.239 89.6655 391.661 90.2329 cv
391.083 90.8003 390.764 91.5591 390.703 92.5093 cv
cp
396.763 95.4932 mo
398.67 95.729 li
398.369 96.8433 397.812 97.708 396.999 98.3232 cv
396.185 98.9385 395.146 99.2461 393.881 99.2461 cv
392.289 99.2461 391.025 98.7559 390.093 97.7744 cv
389.159 96.7939 388.693 95.418 388.693 93.6475 cv
388.693 91.8154 389.165 90.3936 390.108 89.3818 cv
391.051 88.3701 392.275 87.8643 393.779 87.8643 cv
395.235 87.8643 396.424 88.3599 397.347 89.3511 cv
398.27 90.3423 398.731 91.7368 398.731 93.5347 cv
398.731 93.644 398.728 93.8081 398.721 94.0269 cv
390.6 94.0269 li
390.668 95.2231 391.007 96.1392 391.615 96.7749 cv
392.224 97.4106 392.982 97.7285 393.892 97.7285 cv
394.568 97.7285 395.146 97.5508 395.625 97.1953 cv
396.103 96.8398 396.482 96.2725 396.763 95.4932 cv
cp
f
400.987 99 mo
400.987 88.1104 li
402.648 88.1104 li
402.648 89.6587 li
403.448 88.4624 404.604 87.8643 406.114 87.8643 cv
406.771 87.8643 407.374 87.9824 407.924 88.2178 cv
408.474 88.4541 408.886 88.7632 409.16 89.146 cv
409.433 89.5288 409.625 89.9834 409.734 90.5098 cv
409.802 90.8516 409.836 91.4497 409.836 92.3042 cv
409.836 99 li
407.991 99 li
407.991 92.376 li
407.991 91.624 407.919 91.062 407.775 90.6895 cv
407.632 90.3169 407.377 90.0195 407.011 89.7969 cv
406.646 89.5752 406.217 89.4639 405.725 89.4639 cv
404.938 89.4639 404.26 89.7134 403.689 90.2124 cv
403.118 90.7114 402.833 91.6582 402.833 93.0527 cv
402.833 99 li
400.987 99 li
cp
f
419.772 95.0112 mo
421.587 95.2471 li
421.389 96.498 420.881 97.4775 420.064 98.1846 cv
419.248 98.8926 418.245 99.2461 417.055 99.2461 cv
415.565 99.2461 414.367 98.7588 413.461 97.7852 cv
412.555 96.8105 412.103 95.4146 412.103 93.5962 cv
412.103 92.4204 412.297 91.3916 412.687 90.5098 cv
413.077 89.6279 413.669 88.9668 414.466 88.5254 cv
415.262 88.085 416.129 87.8643 417.065 87.8643 cv
418.248 87.8643 419.215 88.1636 419.967 88.7617 cv
420.719 89.3599 421.201 90.209 421.413 91.3096 cv
419.619 91.5864 li
419.448 90.855 419.145 90.3047 418.711 89.9355 cv
418.277 89.5664 417.752 89.3818 417.137 89.3818 cv
416.208 89.3818 415.452 89.7148 414.871 90.3818 cv
414.29 91.0479 414 92.1025 414 93.5449 cv
414 95.0078 414.28 96.0708 414.84 96.7339 cv
415.401 97.397 416.132 97.7285 417.035 97.7285 cv
417.759 97.7285 418.364 97.5063 418.85 97.062 cv
419.335 96.6177 419.643 95.9341 419.772 95.0112 cv
cp
f
424.561 92.5093 mo
430.642 92.5093 li
430.56 91.5933 430.327 90.9063 429.944 90.4482 cv
429.356 89.7373 428.594 89.3818 427.658 89.3818 cv
426.81 89.3818 426.097 89.6655 425.52 90.2329 cv
424.942 90.8003 424.623 91.5591 424.561 92.5093 cv
cp
430.621 95.4932 mo
432.528 95.729 li
432.228 96.8433 431.67 97.708 430.857 98.3232 cv
430.043 98.9385 429.004 99.2461 427.74 99.2461 cv
426.147 99.2461 424.884 98.7559 423.951 97.7744 cv
423.018 96.7939 422.551 95.418 422.551 93.6475 cv
422.551 91.8154 423.023 90.3936 423.966 89.3818 cv
424.91 88.3701 426.133 87.8643 427.637 87.8643 cv
429.093 87.8643 430.283 88.3599 431.206 89.3511 cv
432.128 90.3423 432.59 91.7368 432.59 93.5347 cv
432.59 93.644 432.586 93.8081 432.58 94.0269 cv
424.458 94.0269 li
424.527 95.2231 424.865 96.1392 425.474 96.7749 cv
426.082 97.4106 426.841 97.7285 427.75 97.7285 cv
428.427 97.7285 429.004 97.5508 429.483 97.1953 cv
429.961 96.8398 430.341 96.2725 430.621 95.4932 cv
cp
f
450.78 83.9678 mo
452.77 83.9678 li
452.77 92.6528 li
452.77 94.1636 452.599 95.3633 452.257 96.252 cv
451.915 97.1406 451.298 97.8638 450.406 98.4209 cv
449.514 98.978 448.343 99.2563 446.894 99.2563 cv
445.486 99.2563 444.334 99.0137 443.438 98.5283 cv
442.543 98.043 441.904 97.3408 441.521 96.4209 cv
441.138 95.502 440.947 94.2456 440.947 92.6528 cv
440.947 83.9678 li
442.936 83.9678 li
442.936 92.6426 li
442.936 93.9482 443.057 94.9106 443.3 95.5293 cv
443.542 96.1479 443.959 96.6245 444.551 96.9595 cv
445.142 97.2944 445.865 97.4619 446.72 97.4619 cv
448.183 97.4619 449.225 97.1304 449.847 96.4673 cv
450.469 95.8042 450.78 94.5293 450.78 92.6426 cv
450.78 83.9678 li
cp
f
455.846 99 mo
455.846 88.1104 li
457.507 88.1104 li
457.507 89.6587 li
458.307 88.4624 459.462 87.8643 460.973 87.8643 cv
461.629 87.8643 462.232 87.9824 462.783 88.2178 cv
463.333 88.4541 463.745 88.7632 464.018 89.146 cv
464.292 89.5288 464.483 89.9834 464.592 90.5098 cv
464.661 90.8516 464.695 91.4497 464.695 92.3042 cv
464.695 99 li
462.849 99 li
462.849 92.376 li
462.849 91.624 462.777 91.062 462.634 90.6895 cv
462.49 90.3169 462.235 90.0195 461.87 89.7969 cv
461.504 89.5752 461.075 89.4639 460.583 89.4639 cv
459.797 89.4639 459.118 89.7134 458.547 90.2124 cv
457.977 90.7114 457.691 91.6582 457.691 93.0527 cv
457.691 99 li
455.846 99 li
cp
f
468.755 93.5654 mo
468.755 94.96 469.049 96.0024 469.637 96.6929 cv
470.225 97.3833 470.919 97.7285 471.719 97.7285 cv
472.525 97.7285 473.211 97.3989 473.774 96.7393 cv
474.339 96.0796 474.621 95.0728 474.621 93.7192 cv
474.621 92.229 474.333 91.1353 473.759 90.438 cv
473.185 89.7407 472.478 89.3921 471.637 89.3921 cv
470.816 89.3921 470.131 89.7271 469.581 90.397 cv
469.03 91.0669 468.755 92.123 468.755 93.5654 cv
cp
474.59 99 mo
474.59 97.626 li
473.899 98.7061 472.884 99.2461 471.544 99.2461 cv
470.676 99.2461 469.878 99.0068 469.15 98.5283 cv
468.422 98.0498 467.858 97.3818 467.458 96.5234 cv
467.059 95.666 466.858 94.6797 466.858 93.5654 cv
466.858 92.4785 467.04 91.4927 467.402 90.6074 cv
467.764 89.7222 468.308 89.0435 469.032 88.5718 cv
469.757 88.1001 470.567 87.8643 471.462 87.8643 cv
472.119 87.8643 472.703 88.0029 473.216 88.2793 cv
473.729 88.5566 474.146 88.917 474.467 89.3613 cv
474.467 83.9678 li
476.302 83.9678 li
476.302 99 li
474.59 99 li
cp
f
480.599 92.5093 mo
486.679 92.5093 li
486.597 91.5933 486.365 90.9063 485.982 90.4482 cv
485.394 89.7373 484.632 89.3818 483.695 89.3818 cv
482.848 89.3818 482.135 89.6655 481.557 90.2329 cv
480.979 90.8003 480.66 91.5591 480.599 92.5093 cv
cp
486.659 95.4932 mo
488.566 95.729 li
488.265 96.8433 487.708 97.708 486.895 98.3232 cv
486.081 98.9385 485.042 99.2461 483.777 99.2461 cv
482.185 99.2461 480.921 98.7559 479.989 97.7744 cv
479.055 96.7939 478.589 95.418 478.589 93.6475 cv
478.589 91.8154 479.061 90.3936 480.004 89.3818 cv
480.947 88.3701 482.171 87.8643 483.675 87.8643 cv
485.131 87.8643 486.32 88.3599 487.243 89.3511 cv
488.166 90.3423 488.627 91.7368 488.627 93.5347 cv
488.627 93.644 488.624 93.8081 488.617 94.0269 cv
480.496 94.0269 li
480.564 95.2231 480.903 96.1392 481.511 96.7749 cv
482.12 97.4106 482.878 97.7285 483.788 97.7285 cv
484.464 97.7285 485.042 97.5508 485.521 97.1953 cv
485.999 96.8398 486.378 96.2725 486.659 95.4932 cv
cp
f
490.863 99 mo
490.863 88.1104 li
492.524 88.1104 li
492.524 89.7612 li
492.948 88.9888 493.339 88.4795 493.698 88.2334 cv
494.057 87.9873 494.452 87.8643 494.882 87.8643 cv
495.504 87.8643 496.137 88.0625 496.779 88.459 cv
496.144 90.1714 li
495.692 89.9048 495.241 89.7715 494.79 89.7715 cv
494.387 89.7715 494.024 89.8931 493.703 90.1357 cv
493.382 90.3784 493.153 90.7148 493.016 91.1455 cv
492.811 91.8018 492.708 92.5195 492.708 93.2988 cv
492.708 99 li
490.863 99 li
cp
f
513.811 83.9678 mo
515.8 83.9678 li
515.8 92.6528 li
515.8 94.1636 515.629 95.3633 515.288 96.252 cv
514.946 97.1406 514.329 97.8638 513.437 98.4209 cv
512.544 98.978 511.374 99.2563 509.925 99.2563 cv
508.517 99.2563 507.365 99.0137 506.469 98.5283 cv
505.574 98.043 504.935 97.3408 504.552 96.4209 cv
504.169 95.502 503.978 94.2456 503.978 92.6528 cv
503.978 83.9678 li
505.967 83.9678 li
505.967 92.6426 li
505.967 93.9482 506.088 94.9106 506.331 95.5293 cv
506.573 96.1479 506.99 96.6245 507.582 96.9595 cv
508.173 97.2944 508.896 97.4619 509.75 97.4619 cv
511.213 97.4619 512.256 97.1304 512.878 96.4673 cv
513.5 95.8042 513.811 94.5293 513.811 92.6426 cv
513.811 83.9678 li
cp
f
518.876 99 mo
518.876 88.1104 li
520.538 88.1104 li
520.538 89.6587 li
521.337 88.4624 522.493 87.8643 524.003 87.8643 cv
524.66 87.8643 525.263 87.9824 525.813 88.2178 cv
526.363 88.4541 526.775 88.7632 527.049 89.146 cv
527.322 89.5288 527.514 89.9834 527.623 90.5098 cv
527.691 90.8516 527.726 91.4497 527.726 92.3042 cv
527.726 99 li
525.88 99 li
525.88 92.376 li
525.88 91.624 525.808 91.062 525.665 90.6895 cv
525.521 90.3169 525.266 90.0195 524.9 89.7969 cv
524.535 89.5752 524.106 89.4639 523.614 89.4639 cv
522.828 89.4639 522.149 89.7134 521.578 90.2124 cv
521.007 90.7114 520.722 91.6582 520.722 93.0527 cv
520.722 99 li
518.876 99 li
cp
f
537.662 95.0112 mo
539.477 95.2471 li
539.278 96.498 538.771 97.4775 537.954 98.1846 cv
537.137 98.8926 536.134 99.2461 534.944 99.2461 cv
533.454 99.2461 532.256 98.7588 531.35 97.7852 cv
530.444 96.8105 529.992 95.4146 529.992 93.5962 cv
529.992 92.4204 530.187 91.3916 530.576 90.5098 cv
530.966 89.6279 531.559 88.9668 532.355 88.5254 cv
533.151 88.085 534.018 87.8643 534.955 87.8643 cv
536.137 87.8643 537.104 88.1636 537.856 88.7617 cv
538.608 89.3599 539.09 90.209 539.302 91.3096 cv
537.508 91.5864 li
537.337 90.855 537.034 90.3047 536.6 89.9355 cv
536.166 89.5664 535.642 89.3818 535.026 89.3818 cv
534.097 89.3818 533.341 89.7148 532.76 90.3818 cv
532.179 91.0479 531.889 92.1025 531.889 93.5449 cv
531.889 95.0078 532.169 96.0708 532.729 96.7339 cv
533.29 97.397 534.021 97.7285 534.924 97.7285 cv
535.648 97.7285 536.253 97.5063 536.739 97.062 cv
537.224 96.6177 537.532 95.9341 537.662 95.0112 cv
cp
f
542.45 92.5093 mo
548.531 92.5093 li
548.449 91.5933 548.216 90.9063 547.833 90.4482 cv
547.246 89.7373 546.483 89.3818 545.547 89.3818 cv
544.699 89.3818 543.986 89.6655 543.409 90.2329 cv
542.831 90.8003 542.512 91.5591 542.45 92.5093 cv
cp
548.51 95.4932 mo
550.417 95.729 li
550.117 96.8433 549.56 97.708 548.746 98.3232 cv
547.933 98.9385 546.894 99.2461 545.629 99.2461 cv
544.036 99.2461 542.773 98.7559 541.84 97.7744 cv
540.907 96.7939 540.44 95.418 540.44 93.6475 cv
540.44 91.8154 540.912 90.3936 541.855 89.3818 cv
542.799 88.3701 544.022 87.8643 545.526 87.8643 cv
546.982 87.8643 548.172 88.3599 549.095 89.3511 cv
550.018 90.3423 550.479 91.7368 550.479 93.5347 cv
550.479 93.644 550.476 93.8081 550.469 94.0269 cv
542.348 94.0269 li
542.416 95.2231 542.754 96.1392 543.363 96.7749 cv
543.971 97.4106 544.73 97.7285 545.639 97.7285 cv
546.316 97.7285 546.894 97.5508 547.372 97.1953 cv
547.851 96.8398 548.23 96.2725 548.51 95.4932 cv
cp
f
552.714 99 mo
552.714 88.1104 li
554.375 88.1104 li
554.375 89.7612 li
554.799 88.9888 555.19 88.4795 555.55 88.2334 cv
555.908 87.9873 556.303 87.8643 556.734 87.8643 cv
557.356 87.8643 557.988 88.0625 558.631 88.459 cv
557.995 90.1714 li
557.544 89.9048 557.093 89.7715 556.642 89.7715 cv
556.238 89.7715 555.876 89.8931 555.555 90.1357 cv
555.233 90.3784 555.004 90.7148 554.868 91.1455 cv
554.663 91.8018 554.56 92.5195 554.56 93.2988 cv
554.56 99 li
552.714 99 li
cp
f
563.758 97.3491 mo
564.024 98.9795 li
563.505 99.0889 563.04 99.1436 562.63 99.1436 cv
561.96 99.1436 561.44 99.0376 561.071 98.8257 cv
560.702 98.6138 560.442 98.3354 560.292 97.9902 cv
560.142 97.645 560.066 96.9185 560.066 95.811 cv
560.066 89.5459 li
558.713 89.5459 li
558.713 88.1104 li
560.066 88.1104 li
560.066 85.4136 li
561.902 84.3062 li
561.902 88.1104 li
563.758 88.1104 li
563.758 89.5459 li
561.902 89.5459 li
561.902 95.9136 li
561.902 96.4399 561.934 96.7783 561.999 96.9287 cv
562.064 97.0791 562.17 97.1987 562.317 97.2876 cv
562.464 97.3765 562.674 97.4209 562.948 97.4209 cv
563.153 97.4209 563.423 97.397 563.758 97.3491 cv
cp
f
572.515 93.5347 mo
571.845 93.8081 570.84 94.0405 569.5 94.2319 cv
568.741 94.3413 568.205 94.4644 567.89 94.6011 cv
567.576 94.7378 567.333 94.938 567.162 95.2012 cv
566.991 95.4644 566.906 95.7563 566.906 96.0776 cv
566.906 96.5698 567.092 96.98 567.464 97.3081 cv
567.837 97.6362 568.382 97.8003 569.1 97.8003 cv
569.811 97.8003 570.443 97.645 570.997 97.334 cv
571.551 97.0229 571.958 96.5972 572.217 96.0571 cv
572.416 95.6401 572.515 95.0249 572.515 94.2114 cv
572.515 93.5347 li
cp
572.668 97.6567 mo
571.985 98.2378 571.327 98.6479 570.695 98.8872 cv
570.062 99.1265 569.384 99.2461 568.659 99.2461 cv
567.463 99.2461 566.543 98.9541 565.901 98.3691 cv
565.258 97.7852 564.937 97.0381 564.937 96.1289 cv
564.937 95.5957 565.058 95.1084 565.301 94.668 cv
565.543 94.2266 565.861 93.873 566.254 93.6064 cv
566.647 93.3398 567.09 93.1382 567.583 93.0015 cv
567.945 92.9058 568.492 92.8135 569.223 92.7246 cv
570.713 92.5469 571.811 92.335 572.515 92.0889 cv
572.521 91.8359 572.525 91.6753 572.525 91.6069 cv
572.525 90.855 572.351 90.3252 572.002 90.0176 cv
571.53 89.6006 570.83 89.3921 569.9 89.3921 cv
569.032 89.3921 568.391 89.5444 567.977 89.8486 cv
567.563 90.1528 567.258 90.6909 567.06 91.4634 cv
565.255 91.2173 li
565.419 90.4448 565.689 89.8213 566.065 89.3457 cv
566.441 88.8711 566.984 88.5049 567.695 88.249 cv
568.406 87.9922 569.23 87.8643 570.167 87.8643 cv
571.096 87.8643 571.852 87.9736 572.433 88.1924 cv
573.014 88.4111 573.441 88.6865 573.714 89.0176 cv
573.988 89.3496 574.179 89.7681 574.289 90.2739 cv
574.35 90.5884 574.381 91.1558 574.381 91.9761 cv
574.381 94.437 li
574.381 96.1528 574.42 97.2383 574.499 97.6924 cv
574.577 98.1475 574.733 98.583 574.965 99 cv
573.038 99 li
572.846 98.6172 572.723 98.1694 572.668 97.6567 cv
cp
f
577.252 99 mo
577.252 88.1104 li
579.098 88.1104 li
579.098 99 li
577.252 99 li
cp
577.252 86.0903 mo
577.252 83.9678 li
579.098 83.9678 li
579.098 86.0903 li
577.252 86.0903 li
cp
f
581.907 99 mo
581.907 88.1104 li
583.568 88.1104 li
583.568 89.6587 li
584.368 88.4624 585.523 87.8643 587.034 87.8643 cv
587.69 87.8643 588.293 87.9824 588.844 88.2178 cv
589.394 88.4541 589.806 88.7632 590.08 89.146 cv
590.353 89.5288 590.544 89.9834 590.654 90.5098 cv
590.722 90.8516 590.756 91.4497 590.756 92.3042 cv
590.756 99 li
588.911 99 li
588.911 92.376 li
588.911 91.624 588.839 91.062 588.695 90.6895 cv
588.552 90.3169 588.297 90.0195 587.931 89.7969 cv
587.565 89.5752 587.137 89.4639 586.645 89.4639 cv
585.858 89.4639 585.18 89.7134 584.609 90.2124 cv
584.038 90.7114 583.753 91.6582 583.753 93.0527 cv
583.753 99 li
581.907 99 li
cp
f
597.616 97.3491 mo
597.883 98.9795 li
597.363 99.0889 596.898 99.1436 596.488 99.1436 cv
595.818 99.1436 595.299 99.0376 594.93 98.8257 cv
594.561 98.6138 594.301 98.3354 594.15 97.9902 cv
594 97.645 593.925 96.9185 593.925 95.811 cv
593.925 89.5459 li
592.571 89.5459 li
592.571 88.1104 li
593.925 88.1104 li
593.925 85.4136 li
595.76 84.3062 li
595.76 88.1104 li
597.616 88.1104 li
597.616 89.5459 li
595.76 89.5459 li
595.76 95.9136 li
595.76 96.4399 595.792 96.7783 595.857 96.9287 cv
595.922 97.0791 596.028 97.1987 596.176 97.2876 cv
596.322 97.3765 596.533 97.4209 596.806 97.4209 cv
597.011 97.4209 597.281 97.397 597.616 97.3491 cv
cp
f
599.339 103.194 mo
599.134 101.461 li
599.537 101.57 599.889 101.625 600.19 101.625 cv
600.6 101.625 600.928 101.557 601.174 101.42 cv
601.42 101.283 601.622 101.092 601.779 100.846 cv
601.896 100.661 602.083 100.203 602.343 99.4717 cv
602.377 99.3691 602.432 99.2188 602.507 99.0205 cv
598.375 88.1104 li
600.364 88.1104 li
602.63 94.4165 li
602.924 95.2163 603.188 96.0571 603.42 96.939 cv
603.632 96.0913 603.885 95.2642 604.179 94.4575 cv
606.506 88.1104 li
608.352 88.1104 li
604.209 99.1846 li
603.765 100.381 603.42 101.205 603.174 101.656 cv
602.846 102.264 602.47 102.71 602.046 102.994 cv
601.622 103.277 601.116 103.419 600.528 103.419 cv
600.173 103.419 599.776 103.344 599.339 103.194 cv
cp
f
305.4 130.17 mo
307.277 130.006 li
307.366 130.758 307.572 131.375 307.897 131.857 cv
308.222 132.339 308.726 132.729 309.41 133.026 cv
310.093 133.323 310.862 133.472 311.717 133.472 cv
312.476 133.472 313.146 133.359 313.727 133.134 cv
314.308 132.908 314.74 132.599 315.023 132.206 cv
315.307 131.813 315.449 131.384 315.449 130.919 cv
315.449 130.447 315.313 130.036 315.039 129.684 cv
314.766 129.332 314.314 129.036 313.686 128.796 cv
313.282 128.639 312.39 128.395 311.009 128.063 cv
309.628 127.732 308.661 127.419 308.107 127.125 cv
307.39 126.749 306.854 126.283 306.503 125.726 cv
306.15 125.168 305.975 124.544 305.975 123.854 cv
305.975 123.095 306.19 122.386 306.621 121.727 cv
307.051 121.067 307.68 120.566 308.507 120.224 cv
309.334 119.882 310.254 119.711 311.266 119.711 cv
312.38 119.711 313.362 119.891 314.214 120.25 cv
315.064 120.608 315.719 121.137 316.177 121.834 cv
316.635 122.531 316.881 123.321 316.916 124.203 cv
315.008 124.346 li
314.906 123.396 314.559 122.678 313.968 122.193 cv
313.376 121.708 312.503 121.465 311.348 121.465 cv
310.145 121.465 309.268 121.686 308.718 122.126 cv
308.167 122.567 307.892 123.099 307.892 123.721 cv
307.892 124.261 308.087 124.705 308.477 125.054 cv
308.859 125.402 309.859 125.76 311.476 126.125 cv
313.092 126.491 314.202 126.811 314.803 127.084 cv
315.678 127.487 316.324 127.999 316.741 128.617 cv
317.158 129.236 317.367 129.948 317.367 130.755 cv
317.367 131.555 317.138 132.309 316.68 133.016 cv
316.222 133.724 315.563 134.274 314.706 134.667 cv
313.848 135.06 312.882 135.256 311.809 135.256 cv
310.449 135.256 309.309 135.058 308.39 134.662 cv
307.47 134.265 306.749 133.669 306.226 132.872 cv
305.703 132.076 305.428 131.175 305.4 130.17 cv
cp
f
326.954 131.011 mo
328.769 131.247 li
328.571 132.498 328.063 133.478 327.246 134.185 cv
326.429 134.893 325.426 135.246 324.237 135.246 cv
322.747 135.246 321.548 134.759 320.643 133.785 cv
319.737 132.811 319.284 131.415 319.284 129.596 cv
319.284 128.42 319.479 127.392 319.869 126.51 cv
320.258 125.628 320.851 124.967 321.647 124.525 cv
322.444 124.085 323.311 123.864 324.247 123.864 cv
325.43 123.864 326.397 124.164 327.149 124.762 cv
327.901 125.36 328.383 126.209 328.595 127.31 cv
326.8 127.586 li
326.629 126.855 326.327 126.305 325.893 125.936 cv
325.458 125.566 324.934 125.382 324.319 125.382 cv
323.389 125.382 322.634 125.715 322.053 126.382 cv
321.472 127.048 321.181 128.103 321.181 129.545 cv
321.181 131.008 321.461 132.071 322.022 132.734 cv
322.583 133.397 323.314 133.729 324.216 133.729 cv
324.941 133.729 325.546 133.506 326.031 133.062 cv
326.517 132.618 326.824 131.934 326.954 131.011 cv
cp
f
337.3 129.535 mo
336.63 129.808 335.625 130.041 334.286 130.232 cv
333.527 130.341 332.99 130.464 332.676 130.601 cv
332.361 130.738 332.119 130.938 331.948 131.201 cv
331.777 131.464 331.691 131.756 331.691 132.078 cv
331.691 132.57 331.877 132.98 332.25 133.308 cv
332.623 133.636 333.168 133.8 333.886 133.8 cv
334.597 133.8 335.229 133.645 335.783 133.334 cv
336.336 133.023 336.743 132.597 337.003 132.057 cv
337.201 131.64 337.3 131.025 337.3 130.211 cv
337.3 129.535 li
cp
337.454 133.657 mo
336.771 134.238 336.112 134.648 335.48 134.887 cv
334.848 135.126 334.169 135.246 333.445 135.246 cv
332.249 135.246 331.329 134.954 330.687 134.369 cv
330.044 133.785 329.723 133.038 329.723 132.129 cv
329.723 131.596 329.844 131.108 330.087 130.668 cv
330.329 130.227 330.647 129.873 331.04 129.606 cv
331.433 129.34 331.876 129.138 332.368 129.001 cv
332.73 128.906 333.277 128.813 334.009 128.725 cv
335.499 128.547 336.596 128.335 337.3 128.089 cv
337.307 127.836 337.311 127.675 337.311 127.607 cv
337.311 126.855 337.136 126.325 336.788 126.018 cv
336.316 125.601 335.615 125.392 334.686 125.392 cv
333.817 125.392 333.176 125.544 332.763 125.849 cv
332.349 126.153 332.043 126.691 331.845 127.463 cv
330.041 127.217 li
330.205 126.445 330.475 125.821 330.851 125.346 cv
331.227 124.871 331.77 124.505 332.481 124.249 cv
333.192 123.992 334.016 123.864 334.952 123.864 cv
335.882 123.864 336.637 123.974 337.218 124.192 cv
337.799 124.411 338.227 124.687 338.5 125.018 cv
338.773 125.35 338.965 125.768 339.074 126.274 cv
339.136 126.588 339.167 127.156 339.167 127.976 cv
339.167 130.437 li
339.167 132.153 339.206 133.238 339.284 133.692 cv
339.363 134.147 339.519 134.583 339.751 135 cv
337.823 135 li
337.632 134.617 337.509 134.169 337.454 133.657 cv
cp
f
341.986 135 mo
341.986 119.968 li
343.832 119.968 li
343.832 135 li
341.986 135 li
cp
f
353.645 129.535 mo
352.975 129.808 351.97 130.041 350.63 130.232 cv
349.872 130.341 349.335 130.464 349.021 130.601 cv
348.706 130.738 348.463 130.938 348.292 131.201 cv
348.122 131.464 348.036 131.756 348.036 132.078 cv
348.036 132.57 348.222 132.98 348.595 133.308 cv
348.967 133.636 349.513 133.8 350.23 133.8 cv
350.941 133.8 351.574 133.645 352.127 133.334 cv
352.681 133.023 353.088 132.597 353.348 132.057 cv
353.546 131.64 353.645 131.025 353.645 130.211 cv
353.645 129.535 li
cp
353.799 133.657 mo
353.115 134.238 352.457 134.648 351.825 134.887 cv
351.192 135.126 350.514 135.246 349.79 135.246 cv
348.593 135.246 347.674 134.954 347.031 134.369 cv
346.389 133.785 346.067 133.038 346.067 132.129 cv
346.067 131.596 346.188 131.108 346.432 130.668 cv
346.674 130.227 346.992 129.873 347.385 129.606 cv
347.778 129.34 348.221 129.138 348.713 129.001 cv
349.075 128.906 349.622 128.813 350.354 128.725 cv
351.844 128.547 352.941 128.335 353.645 128.089 cv
353.652 127.836 353.655 127.675 353.655 127.607 cv
353.655 126.855 353.481 126.325 353.132 126.018 cv
352.661 125.601 351.96 125.392 351.03 125.392 cv
350.162 125.392 349.521 125.544 349.107 125.849 cv
348.694 126.153 348.388 126.691 348.19 127.463 cv
346.385 127.217 li
346.549 126.445 346.819 125.821 347.195 125.346 cv
347.571 124.871 348.115 124.505 348.826 124.249 cv
349.537 123.992 350.36 123.864 351.297 123.864 cv
352.227 123.864 352.982 123.974 353.563 124.192 cv
354.144 124.411 354.571 124.687 354.845 125.018 cv
355.118 125.35 355.31 125.768 355.419 126.274 cv
355.48 126.588 355.511 127.156 355.511 127.976 cv
355.511 130.437 li
355.511 132.153 355.55 133.238 355.629 133.692 cv
355.708 134.147 355.863 134.583 356.096 135 cv
354.168 135 li
353.977 134.617 353.854 134.169 353.799 133.657 cv
cp
f
360.054 129.473 mo
360.054 130.779 360.231 131.722 360.587 132.303 cv
361.168 133.253 361.954 133.729 362.945 133.729 cv
363.752 133.729 364.449 133.378 365.037 132.678 cv
365.625 131.977 365.919 130.933 365.919 129.545 cv
365.919 128.123 365.637 127.074 365.073 126.397 cv
364.509 125.72 363.827 125.382 363.027 125.382 cv
362.221 125.382 361.523 125.732 360.936 126.433 cv
360.348 127.134 360.054 128.147 360.054 129.473 cv
cp
360.074 135 mo
358.362 135 li
358.362 119.968 li
360.208 119.968 li
360.208 125.331 li
360.987 124.353 361.981 123.864 363.191 123.864 cv
363.861 123.864 364.495 124 365.093 124.27 cv
365.691 124.54 366.184 124.919 366.57 125.407 cv
366.956 125.896 367.259 126.486 367.478 127.176 cv
367.696 127.867 367.806 128.605 367.806 129.391 cv
367.806 131.257 367.344 132.7 366.421 133.718 cv
365.499 134.737 364.391 135.246 363.099 135.246 cv
361.814 135.246 360.806 134.709 360.074 133.636 cv
360.074 135 li
cp
f
370.062 135 mo
370.062 124.11 li
371.907 124.11 li
371.907 135 li
370.062 135 li
cp
370.062 122.09 mo
370.062 119.968 li
371.907 119.968 li
371.907 122.09 li
370.062 122.09 li
cp
f
374.676 135 mo
374.676 119.968 li
376.521 119.968 li
376.521 135 li
374.676 135 li
cp
f
379.393 135 mo
379.393 124.11 li
381.238 124.11 li
381.238 135 li
379.393 135 li
cp
379.393 122.09 mo
379.393 119.968 li
381.238 119.968 li
381.238 122.09 li
379.393 122.09 li
cp
f
388.078 133.349 mo
388.344 134.979 li
387.825 135.089 387.36 135.144 386.95 135.144 cv
386.28 135.144 385.76 135.038 385.391 134.826 cv
385.022 134.614 384.762 134.335 384.612 133.99 cv
384.461 133.645 384.386 132.918 384.386 131.811 cv
384.386 125.546 li
383.033 125.546 li
383.033 124.11 li
384.386 124.11 li
384.386 121.414 li
386.222 120.306 li
386.222 124.11 li
388.078 124.11 li
388.078 125.546 li
386.222 125.546 li
386.222 131.914 li
386.222 132.44 386.254 132.778 386.319 132.929 cv
386.384 133.079 386.49 133.199 386.637 133.288 cv
386.784 133.376 386.994 133.421 387.268 133.421 cv
387.473 133.421 387.743 133.397 388.078 133.349 cv
cp
f
389.8 139.194 mo
389.595 137.461 li
389.999 137.57 390.351 137.625 390.651 137.625 cv
391.062 137.625 391.39 137.557 391.636 137.42 cv
391.882 137.283 392.083 137.092 392.241 136.846 cv
392.357 136.661 392.545 136.203 392.805 135.472 cv
392.839 135.369 392.894 135.219 392.969 135.021 cv
388.836 124.11 li
390.826 124.11 li
393.092 130.417 li
393.386 131.216 393.649 132.057 393.881 132.939 cv
394.093 132.091 394.346 131.264 394.64 130.458 cv
396.968 124.11 li
398.813 124.11 li
394.671 135.185 li
394.227 136.381 393.881 137.205 393.635 137.656 cv
393.307 138.264 392.931 138.71 392.507 138.994 cv
392.083 139.277 391.578 139.419 390.99 139.419 cv
390.634 139.419 390.238 139.344 389.8 139.194 cv
cp
f
398.998 135.256 mo
403.356 119.711 li
404.833 119.711 li
400.485 135.256 li
398.998 135.256 li
cp
f
407.898 127.709 mo
407.898 129.521 408.385 130.948 409.36 131.99 cv
410.333 133.033 411.556 133.554 413.025 133.554 cv
414.522 133.554 415.754 133.028 416.722 131.975 cv
417.689 130.922 418.173 129.429 418.173 127.494 cv
418.173 126.271 417.966 125.202 417.552 124.29 cv
417.139 123.377 416.534 122.67 415.738 122.167 cv
414.941 121.665 414.047 121.414 413.056 121.414 cv
411.648 121.414 410.436 121.897 409.421 122.864 cv
408.406 123.832 407.898 125.447 407.898 127.709 cv
cp
405.848 127.679 mo
405.848 125.184 406.518 123.23 407.857 121.818 cv
409.197 120.407 410.927 119.701 413.046 119.701 cv
414.434 119.701 415.685 120.033 416.799 120.696 cv
417.913 121.359 418.762 122.284 419.347 123.47 cv
419.931 124.656 420.224 126 420.224 127.504 cv
420.224 129.029 419.916 130.393 419.301 131.596 cv
418.686 132.799 417.814 133.71 416.686 134.328 cv
415.558 134.947 414.341 135.256 413.036 135.256 cv
411.621 135.256 410.356 134.915 409.242 134.231 cv
408.127 133.547 407.283 132.614 406.709 131.432 cv
406.135 130.249 405.848 128.998 405.848 127.679 cv
cp
f
424.223 129.617 mo
424.223 131.018 424.506 132.054 425.074 132.724 cv
425.641 133.394 426.328 133.729 427.135 133.729 cv
427.955 133.729 428.657 133.382 429.242 132.688 cv
429.826 131.994 430.119 130.919 430.119 129.463 cv
430.119 128.075 429.833 127.036 429.263 126.346 cv
428.691 125.655 428.01 125.31 427.217 125.31 cv
426.431 125.31 425.735 125.678 425.13 126.412 cv
424.525 127.147 424.223 128.215 424.223 129.617 cv
cp
422.551 139.173 mo
422.551 124.11 li
424.233 124.11 li
424.233 125.525 li
424.629 124.972 425.077 124.557 425.576 124.279 cv
426.075 124.003 426.68 123.864 427.391 123.864 cv
428.321 123.864 429.141 124.104 429.852 124.582 cv
430.563 125.061 431.1 125.735 431.462 126.607 cv
431.824 127.479 432.005 128.434 432.005 129.473 cv
432.005 130.587 431.806 131.591 431.405 132.482 cv
431.006 133.375 430.424 134.059 429.662 134.533 cv
428.9 135.008 428.099 135.246 427.258 135.246 cv
426.643 135.246 426.09 135.116 425.602 134.856 cv
425.113 134.597 424.711 134.269 424.397 133.872 cv
424.397 139.173 li
422.551 139.173 li
cp
f
438.26 133.349 mo
438.527 134.979 li
438.007 135.089 437.542 135.144 437.132 135.144 cv
436.462 135.144 435.943 135.038 435.574 134.826 cv
435.205 134.614 434.945 134.335 434.794 133.99 cv
434.644 133.645 434.569 132.918 434.569 131.811 cv
434.569 125.546 li
433.215 125.546 li
433.215 124.11 li
434.569 124.11 li
434.569 121.414 li
436.404 120.306 li
436.404 124.11 li
438.26 124.11 li
438.26 125.546 li
436.404 125.546 li
436.404 131.914 li
436.404 132.44 436.437 132.778 436.501 132.929 cv
436.566 133.079 436.672 133.199 436.82 133.288 cv
436.966 133.376 437.177 133.421 437.45 133.421 cv
437.655 133.421 437.925 133.397 438.26 133.349 cv
cp
f
440.075 135 mo
440.075 124.11 li
441.921 124.11 li
441.921 135 li
440.075 135 li
cp
440.075 122.09 mo
440.075 119.968 li
441.921 119.968 li
441.921 122.09 li
440.075 122.09 li
cp
f
444.73 135 mo
444.73 124.11 li
446.381 124.11 li
446.381 125.638 li
446.723 125.105 447.178 124.676 447.745 124.352 cv
448.313 124.027 448.958 123.864 449.683 123.864 cv
450.49 123.864 451.151 124.032 451.667 124.367 cv
452.183 124.702 452.547 125.17 452.759 125.771 cv
453.621 124.5 454.742 123.864 456.123 123.864 cv
457.203 123.864 458.033 124.164 458.614 124.762 cv
459.195 125.36 459.486 126.281 459.486 127.525 cv
459.486 135 li
457.65 135 li
457.65 128.14 li
457.65 127.402 457.59 126.871 457.471 126.546 cv
457.351 126.221 457.134 125.959 456.82 125.761 cv
456.505 125.563 456.136 125.464 455.712 125.464 cv
454.947 125.464 454.311 125.719 453.805 126.228 cv
453.299 126.737 453.046 127.552 453.046 128.673 cv
453.046 135 li
451.201 135 li
451.201 127.925 li
451.201 127.104 451.05 126.489 450.75 126.079 cv
450.449 125.669 449.957 125.464 449.273 125.464 cv
448.753 125.464 448.273 125.601 447.833 125.874 cv
447.391 126.147 447.072 126.547 446.874 127.074 cv
446.675 127.6 446.576 128.359 446.576 129.35 cv
446.576 135 li
444.73 135 li
cp
f
462.234 135 mo
462.234 124.11 li
464.08 124.11 li
464.08 135 li
462.234 135 li
cp
462.234 122.09 mo
462.234 119.968 li
464.08 119.968 li
464.08 122.09 li
462.234 122.09 li
cp
f
465.915 135 mo
465.915 133.503 li
472.847 125.546 li
472.061 125.587 471.367 125.607 470.765 125.607 cv
466.325 125.607 li
466.325 124.11 li
475.226 124.11 li
475.226 125.331 li
469.33 132.242 li
468.191 133.503 li
469.019 133.441 469.794 133.411 470.519 133.411 cv
475.554 133.411 li
475.554 135 li
465.915 135 li
cp
f
484.341 129.535 mo
483.671 129.808 482.667 130.041 481.327 130.232 cv
480.568 130.341 480.031 130.464 479.717 130.601 cv
479.402 130.738 479.16 130.938 478.989 131.201 cv
478.818 131.464 478.732 131.756 478.732 132.078 cv
478.732 132.57 478.918 132.98 479.291 133.308 cv
479.664 133.636 480.209 133.8 480.927 133.8 cv
481.638 133.8 482.27 133.645 482.824 133.334 cv
483.377 133.023 483.784 132.597 484.044 132.057 cv
484.242 131.64 484.341 131.025 484.341 130.211 cv
484.341 129.535 li
cp
484.495 133.657 mo
483.812 134.238 483.153 134.648 482.521 134.887 cv
481.889 135.126 481.21 135.246 480.486 135.246 cv
479.29 135.246 478.37 134.954 477.728 134.369 cv
477.085 133.785 476.764 133.038 476.764 132.129 cv
476.764 131.596 476.885 131.108 477.128 130.668 cv
477.37 130.227 477.688 129.873 478.081 129.606 cv
478.474 129.34 478.917 129.138 479.409 129.001 cv
479.771 128.906 480.318 128.813 481.05 128.725 cv
482.54 128.547 483.637 128.335 484.341 128.089 cv
484.348 127.836 484.352 127.675 484.352 127.607 cv
484.352 126.855 484.177 126.325 483.829 126.018 cv
483.357 125.601 482.656 125.392 481.727 125.392 cv
480.858 125.392 480.217 125.544 479.804 125.849 cv
479.39 126.153 479.084 126.691 478.886 127.463 cv
477.082 127.217 li
477.246 126.445 477.516 125.821 477.892 125.346 cv
478.268 124.871 478.811 124.505 479.522 124.249 cv
480.233 123.992 481.057 123.864 481.993 123.864 cv
482.923 123.864 483.678 123.974 484.259 124.192 cv
484.84 124.411 485.268 124.687 485.541 125.018 cv
485.814 125.35 486.006 125.768 486.115 126.274 cv
486.177 126.588 486.208 127.156 486.208 127.976 cv
486.208 130.437 li
486.208 132.153 486.247 133.238 486.325 133.692 cv
486.404 134.147 486.56 134.583 486.792 135 cv
484.864 135 li
484.673 134.617 484.55 134.169 484.495 133.657 cv
cp
f
493.098 133.349 mo
493.365 134.979 li
492.845 135.089 492.38 135.144 491.97 135.144 cv
491.3 135.144 490.781 135.038 490.412 134.826 cv
490.042 134.614 489.783 134.335 489.632 133.99 cv
489.482 133.645 489.407 132.918 489.407 131.811 cv
489.407 125.546 li
488.053 125.546 li
488.053 124.11 li
489.407 124.11 li
489.407 121.414 li
491.242 120.306 li
491.242 124.11 li
493.098 124.11 li
493.098 125.546 li
491.242 125.546 li
491.242 131.914 li
491.242 132.44 491.274 132.778 491.339 132.929 cv
491.404 133.079 491.51 133.199 491.658 133.288 cv
491.804 133.376 492.015 133.421 492.288 133.421 cv
492.493 133.421 492.763 133.397 493.098 133.349 cv
cp
f
494.913 135 mo
494.913 124.11 li
496.759 124.11 li
496.759 135 li
494.913 135 li
cp
494.913 122.09 mo
494.913 119.968 li
496.759 119.968 li
496.759 122.09 li
494.913 122.09 li
cp
f
500.778 129.555 mo
500.778 130.95 501.083 131.994 501.691 132.688 cv
502.299 133.382 503.065 133.729 503.988 133.729 cv
504.904 133.729 505.666 133.38 506.274 132.683 cv
506.883 131.985 507.187 130.922 507.187 129.494 cv
507.187 128.147 506.881 127.127 506.269 126.433 cv
505.657 125.739 504.897 125.392 503.988 125.392 cv
503.065 125.392 502.299 125.737 501.691 126.428 cv
501.083 127.118 500.778 128.161 500.778 129.555 cv
cp
498.881 129.555 mo
498.881 127.539 499.442 126.045 500.563 125.074 cv
501.5 124.268 502.641 123.864 503.988 123.864 cv
505.485 123.864 506.708 124.355 507.659 125.336 cv
508.609 126.317 509.084 127.672 509.084 129.401 cv
509.084 130.803 508.874 131.905 508.454 132.708 cv
508.033 133.512 507.421 134.135 506.618 134.58 cv
505.814 135.024 504.938 135.246 503.988 135.246 cv
502.463 135.246 501.231 134.757 500.292 133.78 cv
499.351 132.802 498.881 131.394 498.881 129.555 cv
cp
f
511.248 135 mo
511.248 124.11 li
512.909 124.11 li
512.909 125.659 li
513.708 124.462 514.864 123.864 516.375 123.864 cv
517.031 123.864 517.634 123.982 518.185 124.218 cv
518.734 124.454 519.146 124.763 519.42 125.146 cv
519.693 125.529 519.885 125.983 519.994 126.51 cv
520.063 126.852 520.097 127.45 520.097 128.304 cv
520.097 135 li
518.251 135 li
518.251 128.376 li
518.251 127.624 518.179 127.062 518.036 126.689 cv
517.892 126.317 517.637 126.02 517.271 125.797 cv
516.906 125.575 516.477 125.464 515.985 125.464 cv
515.199 125.464 514.52 125.713 513.949 126.212 cv
513.378 126.711 513.093 127.658 513.093 129.053 cv
513.093 135 li
511.248 135 li
cp
f
936.694 18.1406 mo
931.598 18.1406 li
933.167 22.3037 li
933.646 23.5684 934.001 24.6074 934.233 25.4209 cv
934.425 24.457 934.695 23.5 935.043 22.5498 cv
936.694 18.1406 li
cp
941.031 11.9678 mo
935.259 27 li
933.115 27 li
926.963 11.9678 li
929.229 11.9678 li
930.982 16.5205 li
937.269 16.5205 li
938.92 11.9678 li
941.031 11.9678 li
cp
f
941.092 27 mo
946.906 19.166 li
941.779 11.9678 li
944.148 11.9678 li
946.875 15.8232 li
947.443 16.623 947.846 17.2383 948.086 17.6689 cv
948.42 17.1221 948.816 16.5513 949.275 15.9565 cv
952.3 11.9678 li
954.463 11.9678 li
949.183 19.0532 li
954.873 27 li
952.412 27 li
948.629 21.6372 li
948.417 21.3296 948.198 20.9946 947.973 20.6323 cv
947.638 21.1792 947.398 21.5552 947.255 21.7603 cv
943.481 27 li
941.092 27 li
cp
f
844.516 47.9678 mo
846.505 47.9678 li
846.505 56.6528 li
846.505 58.1636 846.334 59.3633 845.992 60.252 cv
845.65 61.1406 845.033 61.8638 844.142 62.4209 cv
843.249 62.978 842.078 63.2563 840.629 63.2563 cv
839.221 63.2563 838.069 63.0137 837.174 62.5283 cv
836.278 62.043 835.639 61.3408 835.256 60.4209 cv
834.873 59.502 834.682 58.2456 834.682 56.6528 cv
834.682 47.9678 li
836.672 47.9678 li
836.672 56.6426 li
836.672 57.9482 836.793 58.9106 837.035 59.5293 cv
837.277 60.1479 837.695 60.6245 838.286 60.9595 cv
838.877 61.2944 839.601 61.4619 840.455 61.4619 cv
841.918 61.4619 842.961 61.1304 843.582 60.4673 cv
844.205 59.8042 844.516 58.5293 844.516 56.6426 cv
844.516 47.9678 li
cp
f
849.581 63 mo
849.581 52.1104 li
851.242 52.1104 li
851.242 53.6587 li
852.042 52.4624 853.197 51.8643 854.708 51.8643 cv
855.364 51.8643 855.967 51.9824 856.518 52.2178 cv
857.068 52.4541 857.48 52.7632 857.754 53.146 cv
858.027 53.5288 858.219 53.9834 858.328 54.5098 cv
858.396 54.8516 858.43 55.4497 858.43 56.3042 cv
858.43 63 li
856.584 63 li
856.584 56.376 li
856.584 55.624 856.513 55.062 856.369 54.6895 cv
856.226 54.3169 855.971 54.0195 855.605 53.7969 cv
855.239 53.5752 854.811 53.4639 854.318 53.4639 cv
853.532 53.4639 852.854 53.7134 852.283 54.2124 cv
851.712 54.7114 851.427 55.6582 851.427 57.0527 cv
851.427 63 li
849.581 63 li
cp
f
861.271 63 mo
861.271 52.1104 li
863.116 52.1104 li
863.116 63 li
861.271 63 li
cp
861.271 50.0903 mo
861.271 47.9678 li
863.116 47.9678 li
863.116 50.0903 li
861.271 50.0903 li
cp
f
868.951 63 mo
864.809 52.1104 li
866.756 52.1104 li
869.094 58.6318 li
869.348 59.3359 869.58 60.0674 869.791 60.8262 cv
869.955 60.252 870.185 59.5615 870.479 58.7549 cv
872.898 52.1104 li
874.795 52.1104 li
870.674 63 li
868.951 63 li
cp
f
877.82 56.5093 mo
883.9 56.5093 li
883.818 55.5933 883.586 54.9063 883.203 54.4482 cv
882.615 53.7373 881.854 53.3818 880.917 53.3818 cv
880.069 53.3818 879.356 53.6655 878.779 54.2329 cv
878.201 54.8003 877.882 55.5591 877.82 56.5093 cv
cp
883.881 59.4932 mo
885.787 59.729 li
885.486 60.8433 884.93 61.708 884.116 62.3232 cv
883.303 62.9385 882.264 63.2461 880.999 63.2461 cv
879.406 63.2461 878.143 62.7559 877.211 61.7744 cv
876.277 60.7939 875.811 59.418 875.811 57.6475 cv
875.811 55.8154 876.282 54.3936 877.226 53.3818 cv
878.169 52.3701 879.393 51.8643 880.896 51.8643 cv
882.353 51.8643 883.542 52.3599 884.465 53.3511 cv
885.388 54.3423 885.85 55.7368 885.85 57.5347 cv
885.85 57.644 885.846 57.8081 885.839 58.0269 cv
877.718 58.0269 li
877.786 59.2231 878.125 60.1392 878.732 60.7749 cv
879.342 61.4106 880.1 61.7285 881.01 61.7285 cv
881.686 61.7285 882.264 61.5508 882.742 61.1953 cv
883.221 60.8398 883.6 60.2725 883.881 59.4932 cv
cp
f
888.084 63 mo
888.084 52.1104 li
889.746 52.1104 li
889.746 53.7612 li
890.17 52.9888 890.561 52.4795 890.92 52.2334 cv
891.278 51.9873 891.674 51.8643 892.104 51.8643 cv
892.727 51.8643 893.358 52.0625 894.001 52.459 cv
893.365 54.1714 li
892.914 53.9048 892.463 53.7715 892.012 53.7715 cv
891.608 53.7715 891.246 53.8931 890.925 54.1357 cv
890.604 54.3784 890.375 54.7148 890.238 55.1455 cv
890.033 55.8018 889.93 56.5195 889.93 57.2988 cv
889.93 63 li
888.084 63 li
cp
f
894.359 59.7495 mo
896.186 59.4624 li
896.287 60.1938 896.572 60.7544 897.041 61.144 cv
897.51 61.5337 898.164 61.7285 899.005 61.7285 cv
899.853 61.7285 900.481 61.5562 900.892 61.2109 cv
901.302 60.8657 901.507 60.4604 901.507 59.9956 cv
901.507 59.5786 901.326 59.2505 900.963 59.0112 cv
900.711 58.8472 900.082 58.6387 899.076 58.3857 cv
897.723 58.0439 896.785 57.7485 896.262 57.499 cv
895.739 57.2495 895.342 56.9043 895.072 56.4629 cv
894.803 56.0225 894.668 55.5352 894.668 55.002 cv
894.668 54.5166 894.778 54.0674 895.001 53.6533 cv
895.223 53.2402 895.525 52.8965 895.908 52.623 cv
896.195 52.4111 896.586 52.2319 897.082 52.085 cv
897.578 51.938 898.109 51.8643 898.677 51.8643 cv
899.531 51.8643 900.281 51.9873 900.928 52.2334 cv
901.573 52.4795 902.051 52.8125 902.357 53.2334 cv
902.666 53.6533 902.877 54.2158 902.994 54.9199 cv
901.189 55.166 li
901.107 54.6055 900.869 54.168 900.477 53.8535 cv
900.083 53.5391 899.527 53.3818 898.811 53.3818 cv
897.963 53.3818 897.357 53.522 896.995 53.8022 cv
896.633 54.0825 896.451 54.4106 896.451 54.7866 cv
896.451 55.0259 896.527 55.2412 896.678 55.4326 cv
896.828 55.6309 897.063 55.7949 897.385 55.9248 cv
897.569 55.9932 898.113 56.1504 899.016 56.3965 cv
900.32 56.7451 901.231 57.0308 901.748 57.2529 cv
902.264 57.4751 902.669 57.7979 902.963 58.2217 cv
903.257 58.6455 903.404 59.1719 903.404 59.8008 cv
903.404 60.416 903.225 60.9951 902.865 61.5391 cv
902.507 62.082 901.988 62.5029 901.313 62.7998 cv
900.635 63.0977 899.869 63.2461 899.016 63.2461 cv
897.6 63.2461 896.521 62.9521 895.78 62.3643 cv
895.038 61.7764 894.564 60.9048 894.359 59.7495 cv
cp
f
912.551 57.5347 mo
911.881 57.8081 910.875 58.0405 909.535 58.2319 cv
908.777 58.3413 908.24 58.4644 907.926 58.6011 cv
907.611 58.7378 907.369 58.938 907.197 59.2012 cv
907.027 59.4644 906.941 59.7563 906.941 60.0776 cv
906.941 60.5698 907.127 60.98 907.5 61.3081 cv
907.873 61.6362 908.418 61.8003 909.136 61.8003 cv
909.847 61.8003 910.479 61.645 911.033 61.334 cv
911.586 61.0229 911.993 60.5972 912.253 60.0571 cv
912.451 59.6401 912.551 59.0249 912.551 58.2114 cv
912.551 57.5347 li
cp
912.704 61.6567 mo
912.021 62.2378 911.362 62.6479 910.73 62.8872 cv
910.098 63.1265 909.42 63.2461 908.695 63.2461 cv
907.498 63.2461 906.579 62.9541 905.937 62.3691 cv
905.294 61.7852 904.973 61.0381 904.973 60.1289 cv
904.973 59.5957 905.094 59.1084 905.337 58.668 cv
905.579 58.2266 905.896 57.873 906.29 57.6064 cv
906.684 57.3398 907.126 57.1382 907.618 57.0015 cv
907.98 56.9058 908.527 56.8135 909.259 56.7246 cv
910.749 56.5469 911.846 56.335 912.551 56.0889 cv
912.557 55.8359 912.561 55.6753 912.561 55.6069 cv
912.561 54.855 912.387 54.3252 912.037 54.0176 cv
911.566 53.6006 910.865 53.3921 909.936 53.3921 cv
909.067 53.3921 908.426 53.5444 908.013 53.8486 cv
907.6 54.1528 907.293 54.6909 907.096 55.4634 cv
905.291 55.2173 li
905.455 54.4448 905.725 53.8213 906.101 53.3457 cv
906.477 52.8711 907.02 52.5049 907.73 52.249 cv
908.441 51.9922 909.266 51.8643 910.202 51.8643 cv
911.132 51.8643 911.887 51.9736 912.469 52.1924 cv
913.049 52.4111 913.477 52.6865 913.75 53.0176 cv
914.023 53.3496 914.215 53.7681 914.324 54.2739 cv
914.386 54.5884 914.416 55.1558 914.416 55.9761 cv
914.416 58.437 li
914.416 60.1528 914.455 61.2383 914.534 61.6924 cv
914.613 62.1475 914.769 62.583 915.001 63 cv
913.073 63 li
912.882 62.6172 912.759 62.1694 912.704 61.6567 cv
cp
f
917.236 63 mo
917.236 47.9678 li
919.082 47.9678 li
919.082 63 li
917.236 63 li
cp
f
929.192 58.8472 mo
930.341 59.1685 931.287 59.647 932.033 60.2827 cv
933.201 59.2163 933.786 57.6133 933.786 55.4736 cv
933.786 54.2568 933.579 53.1938 933.166 52.2847 cv
932.752 51.3755 932.146 50.6699 931.351 50.167 cv
930.555 49.665 929.66 49.4136 928.67 49.4136 cv
927.186 49.4136 925.955 49.9209 924.979 50.9365 cv
924 51.9512 923.512 53.4673 923.512 55.4839 cv
923.512 57.439 923.995 58.9395 924.963 59.9854 cv
925.93 61.0313 927.166 61.5542 928.67 61.5542 cv
929.381 61.5542 930.051 61.4209 930.68 61.1543 cv
930.057 60.751 929.4 60.4639 928.711 60.293 cv
929.192 58.8472 li
cp
933.57 61.3901 mo
934.494 62.0259 935.345 62.4907 936.124 62.7847 cv
935.539 64.1689 li
934.459 63.7793 933.383 63.1641 932.31 62.3232 cv
931.195 62.9453 929.965 63.2563 928.618 63.2563 cv
927.258 63.2563 926.023 62.9282 924.916 62.272 cv
923.809 61.6157 922.956 60.6929 922.358 59.5034 cv
921.76 58.314 921.461 56.9741 921.461 55.4839 cv
921.461 54.0005 921.762 52.6504 922.363 51.4336 cv
922.965 50.2168 923.82 49.2905 924.932 48.6548 cv
926.043 48.019 927.285 47.7012 928.659 47.7012 cv
930.047 47.7012 931.298 48.0313 932.412 48.6904 cv
933.526 49.3506 934.376 50.2734 934.96 51.459 cv
935.545 52.6455 935.837 53.9834 935.837 55.4736 cv
935.837 56.7109 935.648 57.8237 935.273 58.8115 cv
934.896 59.7993 934.33 60.6587 933.57 61.3901 cv
cp
f
945.414 63 mo
945.414 61.4004 li
944.566 62.6309 943.414 63.2461 941.959 63.2461 cv
941.316 63.2461 940.716 63.123 940.158 62.877 cv
939.602 62.6309 939.188 62.3218 938.918 61.9492 cv
938.648 61.5767 938.459 61.1201 938.35 60.5801 cv
938.273 60.2178 938.236 59.6436 938.236 58.8574 cv
938.236 52.1104 li
940.082 52.1104 li
940.082 58.1499 li
940.082 59.1138 940.119 59.7632 940.195 60.0981 cv
940.311 60.5835 940.557 60.9648 940.934 61.2412 cv
941.309 61.5186 941.773 61.6567 942.328 61.6567 cv
942.881 61.6567 943.4 61.5151 943.887 61.2314 cv
944.371 60.9478 944.715 60.5615 944.916 60.0723 cv
945.118 59.584 945.219 58.8745 945.219 57.9448 cv
945.219 52.1104 li
947.064 52.1104 li
947.064 63 li
945.414 63 li
cp
f
956.908 57.5347 mo
956.238 57.8081 955.234 58.0405 953.895 58.2319 cv
953.135 58.3413 952.599 58.4644 952.284 58.6011 cv
951.97 58.7378 951.727 58.938 951.557 59.2012 cv
951.385 59.4644 951.3 59.7563 951.3 60.0776 cv
951.3 60.5698 951.486 60.98 951.858 61.3081 cv
952.23 61.6362 952.776 61.8003 953.494 61.8003 cv
954.205 61.8003 954.838 61.645 955.391 61.334 cv
955.945 61.0229 956.352 60.5972 956.611 60.0571 cv
956.81 59.6401 956.908 59.0249 956.908 58.2114 cv
956.908 57.5347 li
cp
957.063 61.6567 mo
956.379 62.2378 955.721 62.6479 955.089 62.8872 cv
954.456 63.1265 953.777 63.2461 953.053 63.2461 cv
951.857 63.2461 950.938 62.9541 950.295 62.3691 cv
949.652 61.7852 949.331 61.0381 949.331 60.1289 cv
949.331 59.5957 949.452 59.1084 949.695 58.668 cv
949.938 58.2266 950.256 57.873 950.648 57.6064 cv
951.041 57.3398 951.484 57.1382 951.977 57.0015 cv
952.339 56.9058 952.886 56.8135 953.617 56.7246 cv
955.107 56.5469 956.205 56.335 956.908 56.0889 cv
956.916 55.8359 956.919 55.6753 956.919 55.6069 cv
956.919 54.855 956.744 54.3252 956.396 54.0176 cv
955.924 53.6006 955.224 53.3921 954.294 53.3921 cv
953.426 53.3921 952.785 53.5444 952.371 53.8486 cv
951.957 54.1528 951.652 54.6909 951.453 55.4634 cv
949.648 55.2173 li
949.813 54.4448 950.083 53.8213 950.459 53.3457 cv
950.835 52.8711 951.379 52.5049 952.09 52.249 cv
952.801 51.9922 953.624 51.8643 954.561 51.8643 cv
955.49 51.8643 956.246 51.9736 956.826 52.1924 cv
957.408 52.4111 957.835 52.6865 958.108 53.0176 cv
958.382 53.3496 958.573 53.7681 958.683 54.2739 cv
958.744 54.5884 958.775 55.1558 958.775 55.9761 cv
958.775 58.437 li
958.775 60.1528 958.814 61.2383 958.893 61.6924 cv
958.971 62.1475 959.127 62.583 959.359 63 cv
957.432 63 li
957.24 62.6172 957.117 62.1694 957.063 61.6567 cv
cp
f
961.636 63 mo
961.636 52.1104 li
963.297 52.1104 li
963.297 53.6587 li
964.097 52.4624 965.252 51.8643 966.763 51.8643 cv
967.419 51.8643 968.021 51.9824 968.572 52.2178 cv
969.123 52.4541 969.535 52.7632 969.809 53.146 cv
970.082 53.5288 970.273 53.9834 970.383 54.5098 cv
970.451 54.8516 970.484 55.4497 970.484 56.3042 cv
970.484 63 li
968.639 63 li
968.639 56.376 li
968.639 55.624 968.567 55.062 968.424 54.6895 cv
968.28 54.3169 968.025 54.0195 967.66 53.7969 cv
967.294 53.5752 966.865 53.4639 966.373 53.4639 cv
965.587 53.4639 964.908 53.7134 964.338 54.2124 cv
963.767 54.7114 963.481 55.6582 963.481 57.0527 cv
963.481 63 li
961.636 63 li
cp
f
977.345 61.3491 mo
977.611 62.9795 li
977.092 63.0889 976.627 63.1436 976.217 63.1436 cv
975.547 63.1436 975.027 63.0376 974.658 62.8257 cv
974.289 62.6138 974.029 62.3354 973.879 61.9902 cv
973.729 61.645 973.653 60.9185 973.653 59.811 cv
973.653 53.5459 li
972.3 53.5459 li
972.3 52.1104 li
973.653 52.1104 li
973.653 49.4136 li
975.488 48.3062 li
975.488 52.1104 li
977.345 52.1104 li
977.345 53.5459 li
975.488 53.5459 li
975.488 59.9136 li
975.488 60.4399 975.521 60.7783 975.586 60.9287 cv
975.65 61.0791 975.757 61.1987 975.904 61.2876 cv
976.051 61.3765 976.262 61.4209 976.535 61.4209 cv
976.74 61.4209 977.01 61.397 977.345 61.3491 cv
cp
f
979.16 63 mo
979.16 52.1104 li
981.006 52.1104 li
981.006 63 li
979.16 63 li
cp
979.16 50.0903 mo
979.16 47.9678 li
981.006 47.9678 li
981.006 50.0903 li
979.16 50.0903 li
cp
f
984.256 63 mo
984.256 53.5459 li
982.625 53.5459 li
982.625 52.1104 li
984.256 52.1104 li
984.256 50.9517 li
984.256 50.2202 984.32 49.6768 984.451 49.3213 cv
984.629 48.8428 984.941 48.4551 985.389 48.1572 cv
985.836 47.8604 986.464 47.7114 987.271 47.7114 cv
987.79 47.7114 988.364 47.7729 988.993 47.896 cv
988.717 49.5059 li
988.334 49.4375 987.971 49.4033 987.629 49.4033 cv
987.068 49.4033 986.672 49.5229 986.439 49.7622 cv
986.207 50.0015 986.092 50.4492 986.092 51.1055 cv
986.092 52.1104 li
988.214 52.1104 li
988.214 53.5459 li
986.092 53.5459 li
986.092 63 li
984.256 63 li
cp
f
989.66 63 mo
989.66 52.1104 li
991.506 52.1104 li
991.506 63 li
989.66 63 li
cp
989.66 50.0903 mo
989.66 47.9678 li
991.506 47.9678 li
991.506 50.0903 li
989.66 50.0903 li
cp
f
1001.42 59.0112 mo
1003.24 59.2471 li
1003.04 60.498 1002.53 61.4775 1001.71 62.1846 cv
1000.9 62.8926 999.893 63.2461 998.703 63.2461 cv
997.213 63.2461 996.016 62.7588 995.109 61.7852 cv
994.203 60.8105 993.751 59.4146 993.751 57.5962 cv
993.751 56.4204 993.945 55.3916 994.336 54.5098 cv
994.725 53.6279 995.318 52.9668 996.114 52.5254 cv
996.91 52.085 997.777 51.8643 998.714 51.8643 cv
999.896 51.8643 1000.86 52.1636 1001.62 52.7617 cv
1002.37 53.3599 1002.85 54.209 1003.06 55.3096 cv
1001.27 55.5864 li
1001.1 54.855 1000.79 54.3047 1000.36 53.9355 cv
999.926 53.5664 999.4 53.3818 998.785 53.3818 cv
997.855 53.3818 997.101 53.7148 996.52 54.3818 cv
995.938 55.0479 995.648 56.1025 995.648 57.5449 cv
995.648 59.0078 995.928 60.0708 996.488 60.7339 cv
997.049 61.397 997.781 61.7285 998.684 61.7285 cv
999.408 61.7285 1000.01 61.5063 1000.5 61.062 cv
1000.98 60.6177 1001.29 59.9341 1001.42 59.0112 cv
cp
f
1011.77 57.5347 mo
1011.1 57.8081 1010.09 58.0405 1008.75 58.2319 cv
1007.99 58.3413 1007.46 58.4644 1007.14 58.6011 cv
1006.83 58.7378 1006.59 58.938 1006.41 59.2012 cv
1006.24 59.4644 1006.16 59.7563 1006.16 60.0776 cv
1006.16 60.5698 1006.34 60.98 1006.72 61.3081 cv
1007.09 61.6362 1007.63 61.8003 1008.35 61.8003 cv
1009.06 61.8003 1009.7 61.645 1010.25 61.334 cv
1010.8 61.0229 1011.21 60.5972 1011.47 60.0571 cv
1011.67 59.6401 1011.77 59.0249 1011.77 58.2114 cv
1011.77 57.5347 li
cp
1011.92 61.6567 mo
1011.24 62.2378 1010.58 62.6479 1009.95 62.8872 cv
1009.31 63.1265 1008.64 63.2461 1007.91 63.2461 cv
1006.71 63.2461 1005.8 62.9541 1005.15 62.3691 cv
1004.51 61.7852 1004.19 61.0381 1004.19 60.1289 cv
1004.19 59.5957 1004.31 59.1084 1004.55 58.668 cv
1004.8 58.2266 1005.11 57.873 1005.51 57.6064 cv
1005.9 57.3398 1006.34 57.1382 1006.83 57.0015 cv
1007.2 56.9058 1007.74 56.8135 1008.48 56.7246 cv
1009.97 56.5469 1011.06 56.335 1011.77 56.0889 cv
1011.77 55.8359 1011.78 55.6753 1011.78 55.6069 cv
1011.78 54.855 1011.6 54.3252 1011.25 54.0176 cv
1010.78 53.6006 1010.08 53.3921 1009.15 53.3921 cv
1008.28 53.3921 1007.64 53.5444 1007.23 53.8486 cv
1006.82 54.1528 1006.51 54.6909 1006.31 55.4634 cv
1004.51 55.2173 li
1004.67 54.4448 1004.94 53.8213 1005.32 53.3457 cv
1005.69 52.8711 1006.24 52.5049 1006.95 52.249 cv
1007.66 51.9922 1008.48 51.8643 1009.42 51.8643 cv
1010.35 51.8643 1011.1 51.9736 1011.69 52.1924 cv
1012.27 52.4111 1012.69 52.6865 1012.97 53.0176 cv
1013.24 53.3496 1013.43 53.7681 1013.54 54.2739 cv
1013.6 54.5884 1013.63 55.1558 1013.63 55.9761 cv
1013.63 58.437 li
1013.63 60.1528 1013.67 61.2383 1013.75 61.6924 cv
1013.83 62.1475 1013.99 62.583 1014.22 63 cv
1012.29 63 li
1012.1 62.6172 1011.98 62.1694 1011.92 61.6567 cv
cp
f
1020.52 61.3491 mo
1020.79 62.9795 li
1020.27 63.0889 1019.81 63.1436 1019.4 63.1436 cv
1018.73 63.1436 1018.21 63.0376 1017.84 62.8257 cv
1017.47 62.6138 1017.21 62.3354 1017.06 61.9902 cv
1016.91 61.645 1016.83 60.9185 1016.83 59.811 cv
1016.83 53.5459 li
1015.48 53.5459 li
1015.48 52.1104 li
1016.83 52.1104 li
1016.83 49.4136 li
1018.67 48.3062 li
1018.67 52.1104 li
1020.52 52.1104 li
1020.52 53.5459 li
1018.67 53.5459 li
1018.67 59.9136 li
1018.67 60.4399 1018.7 60.7783 1018.77 60.9287 cv
1018.83 61.0791 1018.94 61.1987 1019.08 61.2876 cv
1019.23 61.3765 1019.44 61.4209 1019.71 61.4209 cv
1019.92 61.4209 1020.19 61.397 1020.52 61.3491 cv
cp
f
1022.34 63 mo
1022.34 52.1104 li
1024.18 52.1104 li
1024.18 63 li
1022.34 63 li
cp
1022.34 50.0903 mo
1022.34 47.9678 li
1024.18 47.9678 li
1024.18 50.0903 li
1022.34 50.0903 li
cp
f
1028.2 57.5552 mo
1028.2 58.9497 1028.51 59.9941 1029.12 60.6875 cv
1029.72 61.3818 1030.49 61.7285 1031.41 61.7285 cv
1032.33 61.7285 1033.09 61.3799 1033.7 60.6826 cv
1034.31 59.9854 1034.61 58.9224 1034.61 57.4937 cv
1034.61 56.147 1034.31 55.127 1033.7 54.4326 cv
1033.08 53.7393 1032.32 53.3921 1031.41 53.3921 cv
1030.49 53.3921 1029.72 53.7373 1029.12 54.4277 cv
1028.51 55.1182 1028.2 56.1606 1028.2 57.5552 cv
cp
1026.31 57.5552 mo
1026.31 55.5386 1026.87 54.0449 1027.99 53.0742 cv
1028.93 52.2676 1030.07 51.8643 1031.41 51.8643 cv
1032.91 51.8643 1034.13 52.355 1035.08 53.3359 cv
1036.04 54.3169 1036.51 55.6719 1036.51 57.4014 cv
1036.51 58.8027 1036.3 59.9053 1035.88 60.708 cv
1035.46 61.5117 1034.85 62.1353 1034.04 62.5796 cv
1033.24 63.0239 1032.36 63.2461 1031.41 63.2461 cv
1029.89 63.2461 1028.66 62.7573 1027.72 61.7798 cv
1026.78 60.8022 1026.31 59.394 1026.31 57.5552 cv
cp
f
1038.67 63 mo
1038.67 52.1104 li
1040.33 52.1104 li
1040.33 53.6587 li
1041.13 52.4624 1042.29 51.8643 1043.8 51.8643 cv
1044.46 51.8643 1045.06 51.9824 1045.61 52.2178 cv
1046.16 52.4541 1046.57 52.7632 1046.85 53.146 cv
1047.12 53.5288 1047.31 53.9834 1047.42 54.5098 cv
1047.49 54.8516 1047.52 55.4497 1047.52 56.3042 cv
1047.52 63 li
1045.68 63 li
1045.68 56.376 li
1045.68 55.624 1045.61 55.062 1045.46 54.6895 cv
1045.32 54.3169 1045.06 54.0195 1044.7 53.7969 cv
1044.33 53.5752 1043.9 53.4639 1043.41 53.4639 cv
1042.63 53.4639 1041.95 53.7134 1041.38 54.2124 cv
1040.8 54.7114 1040.52 55.6582 1040.52 57.0527 cv
1040.52 63 li
1038.67 63 li
cp
f
724.98 99 mo
724.98 83.9678 li
735.85 83.9678 li
735.85 85.7417 li
726.971 85.7417 li
726.971 90.3457 li
735.286 90.3457 li
735.286 92.1094 li
726.971 92.1094 li
726.971 97.2261 li
736.199 97.2261 li
736.199 99 li
724.98 99 li
cp
f
737.48 99 mo
741.459 93.3398 li
737.777 88.1104 li
740.085 88.1104 li
741.756 90.6636 li
742.07 91.1489 742.324 91.5557 742.516 91.8838 cv
742.816 91.4326 743.093 91.0327 743.346 90.6841 cv
745.182 88.1104 li
747.386 88.1104 li
743.623 93.2373 li
747.673 99 li
745.406 99 li
743.172 95.6162 li
742.576 94.7036 li
739.716 99 li
737.48 99 li
cp
f
753.24 97.3491 mo
753.508 98.9795 li
752.988 99.0889 752.523 99.1436 752.113 99.1436 cv
751.443 99.1436 750.924 99.0376 750.555 98.8257 cv
750.186 98.6138 749.926 98.3354 749.775 97.9902 cv
749.625 97.645 749.549 96.9185 749.549 95.811 cv
749.549 89.5459 li
748.195 89.5459 li
748.195 88.1104 li
749.549 88.1104 li
749.549 85.4136 li
751.385 84.3062 li
751.385 88.1104 li
753.24 88.1104 li
753.24 89.5459 li
751.385 89.5459 li
751.385 95.9136 li
751.385 96.4399 751.417 96.7783 751.482 96.9287 cv
751.547 97.0791 751.652 97.1987 751.801 97.2876 cv
751.947 97.3765 752.157 97.4209 752.431 97.4209 cv
752.636 97.4209 752.906 97.397 753.24 97.3491 cv
cp
f
755.025 99 mo
755.025 88.1104 li
756.686 88.1104 li
756.686 89.7612 li
757.109 88.9888 757.501 88.4795 757.86 88.2334 cv
758.219 87.9873 758.613 87.8643 759.045 87.8643 cv
759.666 87.8643 760.299 88.0625 760.941 88.459 cv
760.306 90.1714 li
759.854 89.9048 759.403 89.7715 758.952 89.7715 cv
758.549 89.7715 758.187 89.8931 757.865 90.1357 cv
757.544 90.3784 757.314 90.7148 757.178 91.1455 cv
756.973 91.8018 756.871 92.5195 756.871 93.2988 cv
756.871 99 li
755.025 99 li
cp
f
768.99 93.5347 mo
768.32 93.8081 767.316 94.0405 765.977 94.2319 cv
765.217 94.3413 764.681 94.4644 764.366 94.6011 cv
764.052 94.7378 763.809 94.938 763.639 95.2012 cv
763.467 95.4644 763.382 95.7563 763.382 96.0776 cv
763.382 96.5698 763.568 96.98 763.94 97.3081 cv
764.313 97.6362 764.858 97.8003 765.576 97.8003 cv
766.287 97.8003 766.92 97.645 767.473 97.334 cv
768.027 97.0229 768.434 96.5972 768.693 96.0571 cv
768.892 95.6401 768.99 95.0249 768.99 94.2114 cv
768.99 93.5347 li
cp
769.145 97.6567 mo
768.461 98.2378 767.803 98.6479 767.171 98.8872 cv
766.538 99.1265 765.859 99.2461 765.135 99.2461 cv
763.939 99.2461 763.02 98.9541 762.377 98.3691 cv
761.734 97.7852 761.413 97.0381 761.413 96.1289 cv
761.413 95.5957 761.534 95.1084 761.777 94.668 cv
762.02 94.2266 762.338 93.873 762.73 93.6064 cv
763.123 93.3398 763.566 93.1382 764.059 93.0015 cv
764.421 92.9058 764.968 92.8135 765.699 92.7246 cv
767.189 92.5469 768.287 92.335 768.99 92.0889 cv
768.998 91.8359 769.001 91.6753 769.001 91.6069 cv
769.001 90.855 768.826 90.3252 768.479 90.0176 cv
768.006 89.6006 767.306 89.3921 766.376 89.3921 cv
765.508 89.3921 764.867 89.5444 764.453 89.8486 cv
764.039 90.1528 763.734 90.6909 763.535 91.4634 cv
761.73 91.2173 li
761.895 90.4448 762.165 89.8213 762.541 89.3457 cv
762.917 88.8711 763.461 88.5049 764.172 88.249 cv
764.883 87.9922 765.706 87.8643 766.643 87.8643 cv
767.572 87.8643 768.328 87.9736 768.908 88.1924 cv
769.49 88.4111 769.917 88.6865 770.19 89.0176 cv
770.464 89.3496 770.655 89.7681 770.765 90.2739 cv
770.826 90.5884 770.857 91.1558 770.857 91.9761 cv
770.857 94.437 li
770.857 96.1528 770.896 97.2383 770.975 97.6924 cv
771.053 98.1475 771.209 98.583 771.441 99 cv
769.514 99 li
769.322 98.6172 769.199 98.1694 769.145 97.6567 cv
cp
f
775.389 93.6167 mo
775.389 95.0181 775.673 96.0537 776.24 96.7236 cv
776.808 97.3936 777.494 97.7285 778.301 97.7285 cv
779.121 97.7285 779.824 97.3818 780.408 96.6875 cv
780.992 95.9941 781.285 94.9189 781.285 93.4629 cv
781.285 92.0752 781 91.0361 780.43 90.3457 cv
779.857 89.6553 779.176 89.3101 778.383 89.3101 cv
777.598 89.3101 776.902 89.6777 776.297 90.4121 cv
775.691 91.1475 775.389 92.2153 775.389 93.6167 cv
cp
773.718 103.173 mo
773.718 88.1104 li
775.399 88.1104 li
775.399 89.5254 li
775.796 88.9717 776.244 88.5566 776.742 88.2793 cv
777.242 88.0029 777.847 87.8643 778.558 87.8643 cv
779.487 87.8643 780.308 88.1035 781.019 88.582 cv
781.729 89.0605 782.266 89.7354 782.629 90.6074 cv
782.99 91.4785 783.172 92.4341 783.172 93.4731 cv
783.172 94.5874 782.973 95.5908 782.572 96.4824 cv
782.172 97.375 781.591 98.0586 780.828 98.5332 cv
780.066 99.0083 779.266 99.2461 778.424 99.2461 cv
777.809 99.2461 777.257 99.1162 776.768 98.8564 cv
776.279 98.5967 775.878 98.2686 775.563 97.8721 cv
775.563 103.173 li
773.718 103.173 li
cp
f
786.607 93.5552 mo
786.607 94.9497 786.911 95.9941 787.52 96.6875 cv
788.128 97.3818 788.894 97.7285 789.816 97.7285 cv
790.732 97.7285 791.494 97.3799 792.104 96.6826 cv
792.711 95.9854 793.016 94.9224 793.016 93.4937 cv
793.016 92.147 792.709 91.127 792.098 90.4326 cv
791.486 89.7393 790.726 89.3921 789.816 89.3921 cv
788.894 89.3921 788.128 89.7373 787.52 90.4277 cv
786.911 91.1182 786.607 92.1606 786.607 93.5552 cv
cp
784.71 93.5552 mo
784.71 91.5386 785.271 90.0449 786.392 89.0742 cv
787.328 88.2676 788.47 87.8643 789.816 87.8643 cv
791.313 87.8643 792.537 88.355 793.487 89.3359 cv
794.438 90.3169 794.912 91.6719 794.912 93.4014 cv
794.912 94.8027 794.702 95.9053 794.282 96.708 cv
793.861 97.5117 793.25 98.1353 792.446 98.5796 cv
791.643 99.0239 790.767 99.2461 789.816 99.2461 cv
788.292 99.2461 787.06 98.7573 786.12 97.7798 cv
785.18 96.8022 784.71 95.394 784.71 93.5552 cv
cp
f
797.035 99 mo
797.035 83.9678 li
798.881 83.9678 li
798.881 99 li
797.035 99 li
cp
f
808.693 93.5347 mo
808.023 93.8081 807.02 94.0405 805.68 94.2319 cv
804.92 94.3413 804.384 94.4644 804.069 94.6011 cv
803.755 94.7378 803.512 94.938 803.342 95.2012 cv
803.17 95.4644 803.085 95.7563 803.085 96.0776 cv
803.085 96.5698 803.271 96.98 803.644 97.3081 cv
804.016 97.6362 804.562 97.8003 805.279 97.8003 cv
805.99 97.8003 806.623 97.645 807.176 97.334 cv
807.73 97.0229 808.137 96.5972 808.396 96.0571 cv
808.595 95.6401 808.693 95.0249 808.693 94.2114 cv
808.693 93.5347 li
cp
808.848 97.6567 mo
808.164 98.2378 807.506 98.6479 806.874 98.8872 cv
806.241 99.1265 805.563 99.2461 804.838 99.2461 cv
803.643 99.2461 802.723 98.9541 802.08 98.3691 cv
801.438 97.7852 801.116 97.0381 801.116 96.1289 cv
801.116 95.5957 801.237 95.1084 801.48 94.668 cv
801.723 94.2266 802.041 93.873 802.434 93.6064 cv
802.826 93.3398 803.27 93.1382 803.762 93.0015 cv
804.124 92.9058 804.671 92.8135 805.402 92.7246 cv
806.893 92.5469 807.99 92.335 808.693 92.0889 cv
808.701 91.8359 808.704 91.6753 808.704 91.6069 cv
808.704 90.855 808.529 90.3252 808.182 90.0176 cv
807.709 89.6006 807.009 89.3921 806.079 89.3921 cv
805.211 89.3921 804.57 89.5444 804.156 89.8486 cv
803.742 90.1528 803.438 90.6909 803.238 91.4634 cv
801.434 91.2173 li
801.598 90.4448 801.868 89.8213 802.244 89.3457 cv
802.62 88.8711 803.164 88.5049 803.875 88.249 cv
804.586 87.9922 805.409 87.8643 806.346 87.8643 cv
807.275 87.8643 808.031 87.9736 808.611 88.1924 cv
809.193 88.4111 809.62 88.6865 809.894 89.0176 cv
810.167 89.3496 810.358 89.7681 810.468 90.2739 cv
810.529 90.5884 810.561 91.1558 810.561 91.9761 cv
810.561 94.437 li
810.561 96.1528 810.6 97.2383 810.678 97.6924 cv
810.756 98.1475 810.912 98.583 811.145 99 cv
809.217 99 li
809.025 98.6172 808.902 98.1694 808.848 97.6567 cv
cp
f
817.451 97.3491 mo
817.717 98.9795 li
817.197 99.0889 816.732 99.1436 816.322 99.1436 cv
815.652 99.1436 815.133 99.0376 814.764 98.8257 cv
814.395 98.6138 814.135 98.3354 813.984 97.9902 cv
813.834 97.645 813.76 96.9185 813.76 95.811 cv
813.76 89.5459 li
812.406 89.5459 li
812.406 88.1104 li
813.76 88.1104 li
813.76 85.4136 li
815.595 84.3062 li
815.595 88.1104 li
817.451 88.1104 li
817.451 89.5459 li
815.595 89.5459 li
815.595 95.9136 li
815.595 96.4399 815.627 96.7783 815.691 96.9287 cv
815.757 97.0791 815.863 97.1987 816.01 97.2876 cv
816.156 97.3765 816.367 97.4209 816.641 97.4209 cv
816.846 97.4209 817.115 97.397 817.451 97.3491 cv
cp
f
819.266 99 mo
819.266 88.1104 li
821.111 88.1104 li
821.111 99 li
819.266 99 li
cp
819.266 86.0903 mo
819.266 83.9678 li
821.111 83.9678 li
821.111 86.0903 li
819.266 86.0903 li
cp
f
825.131 93.5552 mo
825.131 94.9497 825.436 95.9941 826.043 96.6875 cv
826.652 97.3818 827.418 97.7285 828.34 97.7285 cv
829.256 97.7285 830.019 97.3799 830.627 96.6826 cv
831.235 95.9854 831.539 94.9224 831.539 93.4937 cv
831.539 92.147 831.233 91.127 830.621 90.4326 cv
830.01 89.7393 829.25 89.3921 828.34 89.3921 cv
827.418 89.3921 826.652 89.7373 826.043 90.4277 cv
825.436 91.1182 825.131 92.1606 825.131 93.5552 cv
cp
823.234 93.5552 mo
823.234 91.5386 823.795 90.0449 824.916 89.0742 cv
825.852 88.2676 826.994 87.8643 828.34 87.8643 cv
829.838 87.8643 831.061 88.355 832.012 89.3359 cv
832.961 90.3169 833.437 91.6719 833.437 93.4014 cv
833.437 94.8027 833.227 95.9053 832.807 96.708 cv
832.385 97.5117 831.773 98.1353 830.971 98.5796 cv
830.167 99.0239 829.291 99.2461 828.34 99.2461 cv
826.816 99.2461 825.584 98.7573 824.645 97.7798 cv
823.703 96.8022 823.234 95.394 823.234 93.5552 cv
cp
f
835.6 99 mo
835.6 88.1104 li
837.262 88.1104 li
837.262 89.6587 li
838.061 88.4624 839.217 87.8643 840.727 87.8643 cv
841.383 87.8643 841.986 87.9824 842.537 88.2178 cv
843.087 88.4541 843.499 88.7632 843.772 89.146 cv
844.046 89.5288 844.237 89.9834 844.347 90.5098 cv
844.415 90.8516 844.449 91.4497 844.449 92.3042 cv
844.449 99 li
842.604 99 li
842.604 92.376 li
842.604 91.624 842.531 91.062 842.389 90.6895 cv
842.244 90.3169 841.99 90.0195 841.624 89.7969 cv
841.258 89.5752 840.83 89.4639 840.338 89.4639 cv
839.551 89.4639 838.873 89.7134 838.302 90.2124 cv
837.73 90.7114 837.445 91.6582 837.445 93.0527 cv
837.445 99 li
835.6 99 li
cp
f
856.641 103.419 mo
855.623 102.134 854.762 100.63 854.057 98.9077 cv
853.354 97.1851 853.001 95.4009 853.001 93.5552 cv
853.001 91.9282 853.264 90.3696 853.791 88.8794 cv
854.406 87.1499 855.355 85.4272 856.641 83.7114 cv
857.964 83.7114 li
857.137 85.1333 856.59 86.1484 856.323 86.7568 cv
855.906 87.7002 855.578 88.6846 855.339 89.71 cv
855.045 90.9883 854.898 92.2734 854.898 93.5654 cv
854.898 96.8535 855.92 100.138 857.964 103.419 cv
856.641 103.419 li
cp
f
861.789 91.7095 mo
861.789 93.521 862.275 94.9482 863.25 95.9902 cv
864.224 97.0332 865.445 97.5542 866.916 97.5542 cv
868.412 97.5542 869.645 97.0278 870.612 95.9751 cv
871.579 94.9224 872.063 93.4287 872.063 91.4941 cv
872.063 90.2705 871.855 89.2021 871.442 88.29 cv
871.029 87.377 870.424 86.6699 869.628 86.167 cv
868.831 85.665 867.938 85.4136 866.946 85.4136 cv
865.538 85.4136 864.326 85.8975 863.312 86.8643 cv
862.296 87.832 861.789 89.4468 861.789 91.7095 cv
cp
859.738 91.6787 mo
859.738 89.1836 860.408 87.2305 861.748 85.8184 cv
863.088 84.4072 864.816 83.7012 866.936 83.7012 cv
868.324 83.7012 869.574 84.0327 870.689 84.6958 cv
871.803 85.3589 872.652 86.2837 873.237 87.4697 cv
873.821 88.6558 874.113 90.0005 874.113 91.5044 cv
874.113 93.0288 873.807 94.3926 873.191 95.5957 cv
872.576 96.7988 871.704 97.71 870.576 98.3281 cv
869.448 98.9473 868.231 99.2563 866.926 99.2563 cv
865.511 99.2563 864.246 98.9146 863.132 98.231 cv
862.018 97.5474 861.174 96.6143 860.6 95.4316 cv
860.025 94.249 859.738 92.998 859.738 91.6787 cv
cp
f
883.578 99 mo
883.578 97.4004 li
882.73 98.6309 881.578 99.2461 880.123 99.2461 cv
879.48 99.2461 878.88 99.123 878.322 98.877 cv
877.766 98.6309 877.352 98.3218 877.082 97.9492 cv
876.813 97.5767 876.623 97.1201 876.514 96.5801 cv
876.438 96.2178 876.4 95.6436 876.4 94.8574 cv
876.4 88.1104 li
878.246 88.1104 li
878.246 94.1499 li
878.246 95.1138 878.283 95.7632 878.359 96.0981 cv
878.475 96.5835 878.721 96.9648 879.098 97.2412 cv
879.473 97.5186 879.938 97.6567 880.492 97.6567 cv
881.045 97.6567 881.564 97.5151 882.051 97.2314 cv
882.535 96.9478 882.879 96.5615 883.08 96.0723 cv
883.282 95.584 883.383 94.8745 883.383 93.9448 cv
883.383 88.1104 li
885.229 88.1104 li
885.229 99 li
883.578 99 li
cp
f
892.15 97.3491 mo
892.417 98.9795 li
891.897 99.0889 891.433 99.1436 891.022 99.1436 cv
890.353 99.1436 889.833 99.0376 889.464 98.8257 cv
889.095 98.6138 888.835 98.3354 888.685 97.9902 cv
888.534 97.645 888.459 96.9185 888.459 95.811 cv
888.459 89.5459 li
887.105 89.5459 li
887.105 88.1104 li
888.459 88.1104 li
888.459 85.4136 li
890.295 84.3062 li
890.295 88.1104 li
892.15 88.1104 li
892.15 89.5459 li
890.295 89.5459 li
890.295 95.9136 li
890.295 96.4399 890.326 96.7783 890.392 96.9287 cv
890.457 97.0791 890.563 97.1987 890.71 97.2876 cv
890.856 97.3765 891.066 97.4209 891.34 97.4209 cv
891.545 97.4209 891.815 97.397 892.15 97.3491 cv
cp
f
893.237 94.4883 mo
893.237 92.6323 li
898.908 92.6323 li
898.908 94.4883 li
893.237 94.4883 li
cp
f
902.158 93.5552 mo
902.158 94.9497 902.463 95.9941 903.07 96.6875 cv
903.68 97.3818 904.445 97.7285 905.367 97.7285 cv
906.283 97.7285 907.046 97.3799 907.654 96.6826 cv
908.263 95.9854 908.566 94.9224 908.566 93.4937 cv
908.566 92.147 908.261 91.127 907.648 90.4326 cv
907.037 89.7393 906.277 89.3921 905.367 89.3921 cv
904.445 89.3921 903.68 89.7373 903.07 90.4277 cv
902.463 91.1182 902.158 92.1606 902.158 93.5552 cv
cp
900.262 93.5552 mo
900.262 91.5386 900.822 90.0449 901.943 89.0742 cv
902.879 88.2676 904.021 87.8643 905.367 87.8643 cv
906.865 87.8643 908.088 88.355 909.039 89.3359 cv
909.988 90.3169 910.464 91.6719 910.464 93.4014 cv
910.464 94.8027 910.254 95.9053 909.834 96.708 cv
909.412 97.5117 908.801 98.1353 907.998 98.5796 cv
907.194 99.0239 906.318 99.2461 905.367 99.2461 cv
903.844 99.2461 902.611 98.7573 901.672 97.7798 cv
900.73 96.8022 900.262 95.394 900.262 93.5552 cv
cp
f
913.068 99 mo
913.068 89.5459 li
911.438 89.5459 li
911.438 88.1104 li
913.068 88.1104 li
913.068 86.9517 li
913.068 86.2202 913.133 85.6768 913.264 85.3213 cv
913.441 84.8428 913.754 84.4551 914.201 84.1572 cv
914.648 83.8604 915.276 83.7114 916.083 83.7114 cv
916.603 83.7114 917.177 83.7729 917.806 83.896 cv
917.529 85.5059 li
917.146 85.4375 916.783 85.4033 916.441 85.4033 cv
915.881 85.4033 915.484 85.5229 915.252 85.7622 cv
915.02 86.0015 914.904 86.4492 914.904 87.1055 cv
914.904 88.1104 li
917.026 88.1104 li
917.026 89.5459 li
914.904 89.5459 li
914.904 99 li
913.068 99 li
cp
f
917.744 94.4883 mo
917.744 92.6323 li
923.414 92.6323 li
923.414 94.4883 li
917.744 94.4883 li
cp
f
929.484 97.3491 mo
929.752 98.9795 li
929.232 99.0889 928.768 99.1436 928.357 99.1436 cv
927.688 99.1436 927.168 99.0376 926.799 98.8257 cv
926.43 98.6138 926.17 98.3354 926.02 97.9902 cv
925.869 97.645 925.793 96.9185 925.793 95.811 cv
925.793 89.5459 li
924.439 89.5459 li
924.439 88.1104 li
925.793 88.1104 li
925.793 85.4136 li
927.629 84.3062 li
927.629 88.1104 li
929.484 88.1104 li
929.484 89.5459 li
927.629 89.5459 li
927.629 95.9136 li
927.629 96.4399 927.661 96.7783 927.727 96.9287 cv
927.791 97.0791 927.896 97.1987 928.045 97.2876 cv
928.191 97.3765 928.401 97.4209 928.675 97.4209 cv
928.88 97.4209 929.15 97.397 929.484 97.3491 cv
cp
f
931.27 99 mo
931.27 88.1104 li
932.93 88.1104 li
932.93 89.7612 li
933.354 88.9888 933.745 88.4795 934.104 88.2334 cv
934.463 87.9873 934.857 87.8643 935.289 87.8643 cv
935.91 87.8643 936.543 88.0625 937.186 88.459 cv
936.55 90.1714 li
936.099 89.9048 935.647 89.7715 935.196 89.7715 cv
934.793 89.7715 934.431 89.8931 934.109 90.1357 cv
933.788 90.3784 933.559 90.7148 933.422 91.1455 cv
933.217 91.8018 933.115 92.5195 933.115 93.2988 cv
933.115 99 li
931.27 99 li
cp
f
945.234 93.5347 mo
944.564 93.8081 943.561 94.0405 942.221 94.2319 cv
941.461 94.3413 940.925 94.4644 940.61 94.6011 cv
940.296 94.7378 940.053 94.938 939.883 95.2012 cv
939.711 95.4644 939.626 95.7563 939.626 96.0776 cv
939.626 96.5698 939.813 96.98 940.185 97.3081 cv
940.557 97.6362 941.103 97.8003 941.82 97.8003 cv
942.531 97.8003 943.164 97.645 943.717 97.334 cv
944.271 97.0229 944.678 96.5972 944.938 96.0571 cv
945.136 95.6401 945.234 95.0249 945.234 94.2114 cv
945.234 93.5347 li
cp
945.389 97.6567 mo
944.705 98.2378 944.047 98.6479 943.415 98.8872 cv
942.782 99.1265 942.104 99.2461 941.379 99.2461 cv
940.184 99.2461 939.264 98.9541 938.621 98.3691 cv
937.979 97.7852 937.657 97.0381 937.657 96.1289 cv
937.657 95.5957 937.778 95.1084 938.021 94.668 cv
938.264 94.2266 938.582 93.873 938.975 93.6064 cv
939.367 93.3398 939.811 93.1382 940.303 93.0015 cv
940.665 92.9058 941.212 92.8135 941.943 92.7246 cv
943.434 92.5469 944.531 92.335 945.234 92.0889 cv
945.242 91.8359 945.245 91.6753 945.245 91.6069 cv
945.245 90.855 945.07 90.3252 944.723 90.0176 cv
944.25 89.6006 943.55 89.3921 942.62 89.3921 cv
941.752 89.3921 941.111 89.5444 940.697 89.8486 cv
940.283 90.1528 939.979 90.6909 939.779 91.4634 cv
937.975 91.2173 li
938.139 90.4448 938.409 89.8213 938.785 89.3457 cv
939.161 88.8711 939.705 88.5049 940.416 88.249 cv
941.127 87.9922 941.95 87.8643 942.887 87.8643 cv
943.816 87.8643 944.572 87.9736 945.152 88.1924 cv
945.734 88.4111 946.161 88.6865 946.435 89.0176 cv
946.708 89.3496 946.899 89.7681 947.009 90.2739 cv
947.07 90.5884 947.102 91.1558 947.102 91.9761 cv
947.102 94.437 li
947.102 96.1528 947.141 97.2383 947.219 97.6924 cv
947.297 98.1475 947.453 98.583 947.686 99 cv
945.758 99 li
945.566 98.6172 945.443 98.1694 945.389 97.6567 cv
cp
f
949.973 99 mo
949.973 88.1104 li
951.818 88.1104 li
951.818 99 li
949.973 99 li
cp
949.973 86.0903 mo
949.973 83.9678 li
951.818 83.9678 li
951.818 86.0903 li
949.973 86.0903 li
cp
f
954.627 99 mo
954.627 88.1104 li
956.289 88.1104 li
956.289 89.6587 li
957.088 88.4624 958.244 87.8643 959.754 87.8643 cv
960.41 87.8643 961.014 87.9824 961.564 88.2178 cv
962.114 88.4541 962.526 88.7632 962.8 89.146 cv
963.073 89.5288 963.265 89.9834 963.374 90.5098 cv
963.442 90.8516 963.477 91.4497 963.477 92.3042 cv
963.477 99 li
961.631 99 li
961.631 92.376 li
961.631 91.624 961.559 91.062 961.416 90.6895 cv
961.271 90.3169 961.018 90.0195 960.651 89.7969 cv
960.285 89.5752 959.857 89.4639 959.365 89.4639 cv
958.578 89.4639 957.9 89.7134 957.329 90.2124 cv
956.758 90.7114 956.473 91.6582 956.473 93.0527 cv
956.473 99 li
954.627 99 li
cp
f
966.316 99 mo
966.316 88.1104 li
968.162 88.1104 li
968.162 99 li
966.316 99 li
cp
966.316 86.0903 mo
966.316 83.9678 li
968.162 83.9678 li
968.162 86.0903 li
966.316 86.0903 li
cp
f
970.973 99 mo
970.973 88.1104 li
972.633 88.1104 li
972.633 89.6587 li
973.434 88.4624 974.588 87.8643 976.1 87.8643 cv
976.756 87.8643 977.358 87.9824 977.909 88.2178 cv
978.459 88.4541 978.871 88.7632 979.145 89.146 cv
979.418 89.5288 979.609 89.9834 979.719 90.5098 cv
979.787 90.8516 979.821 91.4497 979.821 92.3042 cv
979.821 99 li
977.976 99 li
977.976 92.376 li
977.976 91.624 977.904 91.062 977.76 90.6895 cv
977.617 90.3169 977.361 90.0195 976.996 89.7969 cv
976.631 89.5752 976.201 89.4639 975.709 89.4639 cv
974.924 89.4639 974.244 89.7134 973.674 90.2124 cv
973.104 90.7114 972.818 91.6582 972.818 93.0527 cv
972.818 99 li
970.973 99 li
cp
f
983.841 93.3604 mo
983.841 94.7891 984.125 95.8315 984.691 96.4878 cv
985.26 97.144 985.971 97.4722 986.824 97.4722 cv
987.672 97.4722 988.383 97.146 988.957 96.4932 cv
989.531 95.8403 989.818 94.8164 989.818 93.4219 cv
989.818 92.0889 989.523 91.084 988.932 90.4072 cv
988.34 89.7305 987.628 89.3921 986.794 89.3921 cv
985.974 89.3921 985.276 89.7256 984.702 90.3916 cv
984.128 91.0586 983.841 92.0479 983.841 93.3604 cv
cp
982.313 99.9023 mo
984.107 100.169 li
984.183 100.723 984.391 101.126 984.732 101.379 cv
985.191 101.721 985.816 101.892 986.609 101.892 cv
987.464 101.892 988.123 101.721 988.588 101.379 cv
989.053 101.037 989.367 100.559 989.531 99.9434 cv
989.627 99.5674 989.672 98.7778 989.665 97.5747 cv
988.858 98.5249 987.854 99 986.65 99 cv
985.153 99 983.994 98.46 983.174 97.3799 cv
982.354 96.2998 981.943 95.0044 981.943 93.4937 cv
981.943 92.4546 982.132 91.4961 982.508 90.6172 cv
982.884 89.7393 983.429 89.0605 984.143 88.582 cv
984.857 88.1035 985.697 87.8643 986.66 87.8643 cv
987.945 87.8643 989.006 88.3838 989.84 89.4229 cv
989.84 88.1104 li
991.541 88.1104 li
991.541 97.5234 li
991.541 99.2188 991.369 100.42 991.023 101.128 cv
990.678 101.835 990.131 102.394 989.383 102.804 cv
988.635 103.214 987.713 103.419 986.619 103.419 cv
985.32 103.419 984.271 103.127 983.472 102.543 cv
982.672 101.958 982.285 101.078 982.313 99.9023 cv
cp
f
993.613 94.4883 mo
993.613 92.6323 li
999.283 92.6323 li
999.283 94.4883 li
993.613 94.4883 li
cp
f
1002.55 93.5654 mo
1002.55 94.96 1002.85 96.0024 1003.44 96.6929 cv
1004.02 97.3833 1004.72 97.7285 1005.52 97.7285 cv
1006.32 97.7285 1007.01 97.3989 1007.57 96.7393 cv
1008.14 96.0796 1008.42 95.0728 1008.42 93.7192 cv
1008.42 92.229 1008.13 91.1353 1007.56 90.438 cv
1006.98 89.7407 1006.28 89.3921 1005.44 89.3921 cv
1004.62 89.3921 1003.93 89.7271 1003.38 90.397 cv
1002.83 91.0669 1002.55 92.123 1002.55 93.5654 cv
cp
1008.39 99 mo
1008.39 97.626 li
1007.7 98.7061 1006.68 99.2461 1005.34 99.2461 cv
1004.47 99.2461 1003.68 99.0068 1002.95 98.5283 cv
1002.22 98.0498 1001.66 97.3818 1001.26 96.5234 cv
1000.86 95.666 1000.66 94.6797 1000.66 93.5654 cv
1000.66 92.4785 1000.84 91.4927 1001.2 90.6074 cv
1001.56 89.7222 1002.11 89.0435 1002.83 88.5718 cv
1003.56 88.1001 1004.37 87.8643 1005.26 87.8643 cv
1005.92 87.8643 1006.5 88.0029 1007.01 88.2793 cv
1007.53 88.5566 1007.94 88.917 1008.27 89.3613 cv
1008.27 83.9678 li
1010.1 83.9678 li
1010.1 99 li
1008.39 99 li
cp
f
1019.96 93.5347 mo
1019.29 93.8081 1018.28 94.0405 1016.94 94.2319 cv
1016.18 94.3413 1015.64 94.4644 1015.33 94.6011 cv
1015.02 94.7378 1014.77 94.938 1014.6 95.2012 cv
1014.43 95.4644 1014.35 95.7563 1014.35 96.0776 cv
1014.35 96.5698 1014.53 96.98 1014.9 97.3081 cv
1015.28 97.6362 1015.82 97.8003 1016.54 97.8003 cv
1017.25 97.8003 1017.88 97.645 1018.44 97.334 cv
1018.99 97.0229 1019.4 96.5972 1019.66 96.0571 cv
1019.86 95.6401 1019.96 95.0249 1019.96 94.2114 cv
1019.96 93.5347 li
cp
1020.11 97.6567 mo
1019.43 98.2378 1018.77 98.6479 1018.13 98.8872 cv
1017.5 99.1265 1016.82 99.2461 1016.1 99.2461 cv
1014.9 99.2461 1013.98 98.9541 1013.34 98.3691 cv
1012.7 97.7852 1012.38 97.0381 1012.38 96.1289 cv
1012.38 95.5957 1012.5 95.1084 1012.74 94.668 cv
1012.98 94.2266 1013.3 93.873 1013.7 93.6064 cv
1014.09 93.3398 1014.53 93.1382 1015.02 93.0015 cv
1015.38 92.9058 1015.93 92.8135 1016.66 92.7246 cv
1018.15 92.5469 1019.25 92.335 1019.96 92.0889 cv
1019.96 91.8359 1019.96 91.6753 1019.96 91.6069 cv
1019.96 90.855 1019.79 90.3252 1019.44 90.0176 cv
1018.97 89.6006 1018.27 89.3921 1017.34 89.3921 cv
1016.47 89.3921 1015.83 89.5444 1015.42 89.8486 cv
1015 90.1528 1014.7 90.6909 1014.5 91.4634 cv
1012.7 91.2173 li
1012.86 90.4448 1013.13 89.8213 1013.51 89.3457 cv
1013.88 88.8711 1014.42 88.5049 1015.14 88.249 cv
1015.85 87.9922 1016.67 87.8643 1017.61 87.8643 cv
1018.54 87.8643 1019.29 87.9736 1019.87 88.1924 cv
1020.45 88.4111 1020.88 88.6865 1021.15 89.0176 cv
1021.43 89.3496 1021.62 89.7681 1021.73 90.2739 cv
1021.79 90.5884 1021.82 91.1558 1021.82 91.9761 cv
1021.82 94.437 li
1021.82 96.1528 1021.86 97.2383 1021.94 97.6924 cv
1022.02 98.1475 1022.17 98.583 1022.41 99 cv
1020.48 99 li
1020.29 98.6172 1020.16 98.1694 1020.11 97.6567 cv
cp
f
1028.71 97.3491 mo
1028.98 98.9795 li
1028.46 99.0889 1027.99 99.1436 1027.58 99.1436 cv
1026.91 99.1436 1026.39 99.0376 1026.03 98.8257 cv
1025.66 98.6138 1025.4 98.3354 1025.25 97.9902 cv
1025.1 97.645 1025.02 96.9185 1025.02 95.811 cv
1025.02 89.5459 li
1023.67 89.5459 li
1023.67 88.1104 li
1025.02 88.1104 li
1025.02 85.4136 li
1026.86 84.3062 li
1026.86 88.1104 li
1028.71 88.1104 li
1028.71 89.5459 li
1026.86 89.5459 li
1026.86 95.9136 li
1026.86 96.4399 1026.89 96.7783 1026.95 96.9287 cv
1027.02 97.0791 1027.12 97.1987 1027.27 97.2876 cv
1027.42 97.3765 1027.63 97.4209 1027.9 97.4209 cv
1028.11 97.4209 1028.38 97.397 1028.71 97.3491 cv
cp
f
1037.47 93.5347 mo
1036.8 93.8081 1035.79 94.0405 1034.45 94.2319 cv
1033.7 94.3413 1033.16 94.4644 1032.84 94.6011 cv
1032.53 94.7378 1032.29 94.938 1032.12 95.2012 cv
1031.95 95.4644 1031.86 95.7563 1031.86 96.0776 cv
1031.86 96.5698 1032.05 96.98 1032.42 97.3081 cv
1032.79 97.6362 1033.34 97.8003 1034.05 97.8003 cv
1034.77 97.8003 1035.4 97.645 1035.95 97.334 cv
1036.5 97.0229 1036.91 96.5972 1037.17 96.0571 cv
1037.37 95.6401 1037.47 95.0249 1037.47 94.2114 cv
1037.47 93.5347 li
cp
1037.62 97.6567 mo
1036.94 98.2378 1036.28 98.6479 1035.65 98.8872 cv
1035.02 99.1265 1034.34 99.2461 1033.61 99.2461 cv
1032.42 99.2461 1031.5 98.9541 1030.86 98.3691 cv
1030.21 97.7852 1029.89 97.0381 1029.89 96.1289 cv
1029.89 95.5957 1030.01 95.1084 1030.26 94.668 cv
1030.5 94.2266 1030.82 93.873 1031.21 93.6064 cv
1031.6 93.3398 1032.04 93.1382 1032.54 93.0015 cv
1032.9 92.9058 1033.45 92.8135 1034.18 92.7246 cv
1035.67 92.5469 1036.76 92.335 1037.47 92.0889 cv
1037.48 91.8359 1037.48 91.6753 1037.48 91.6069 cv
1037.48 90.855 1037.3 90.3252 1036.96 90.0176 cv
1036.48 89.6006 1035.78 89.3921 1034.85 89.3921 cv
1033.99 89.3921 1033.34 89.5444 1032.93 89.8486 cv
1032.52 90.1528 1032.21 90.6909 1032.01 91.4634 cv
1030.21 91.2173 li
1030.37 90.4448 1030.64 89.8213 1031.02 89.3457 cv
1031.39 88.8711 1031.94 88.5049 1032.65 88.249 cv
1033.36 87.9922 1034.18 87.8643 1035.12 87.8643 cv
1036.05 87.8643 1036.81 87.9736 1037.39 88.1924 cv
1037.97 88.4111 1038.39 88.6865 1038.67 89.0176 cv
1038.94 89.3496 1039.13 89.7681 1039.24 90.2739 cv
1039.3 90.5884 1039.33 91.1558 1039.33 91.9761 cv
1039.33 94.437 li
1039.33 96.1528 1039.37 97.2383 1039.45 97.6924 cv
1039.53 98.1475 1039.69 98.583 1039.92 99 cv
1037.99 99 li
1037.8 98.6172 1037.68 98.1694 1037.62 97.6567 cv
cp
f
1050.26 97.2261 mo
1053.46 97.2261 li
1054.46 97.2261 1055.23 97.1338 1055.8 96.9492 cv
1056.36 96.7646 1056.81 96.5049 1057.15 96.1699 cv
1057.62 95.6982 1057.98 95.0645 1058.25 94.2676 cv
1058.51 93.4717 1058.64 92.5059 1058.64 91.3711 cv
1058.64 89.7988 1058.38 88.5908 1057.87 87.7461 cv
1057.35 86.9023 1056.73 86.3364 1055.99 86.0493 cv
1055.45 85.8442 1054.6 85.7417 1053.41 85.7417 cv
1050.26 85.7417 li
1050.26 97.2261 li
cp
1048.27 99 mo
1048.27 83.9678 li
1053.44 83.9678 li
1054.61 83.9678 1055.51 84.0396 1056.12 84.1831 cv
1056.98 84.3813 1057.72 84.7402 1058.33 85.2598 cv
1059.12 85.9297 1059.71 86.7861 1060.1 87.8281 cv
1060.5 88.8711 1060.69 90.062 1060.69 91.4019 cv
1060.69 92.5435 1060.56 93.5552 1060.29 94.437 cv
1060.03 95.3188 1059.69 96.0488 1059.27 96.626 cv
1058.85 97.2041 1058.39 97.6587 1057.9 97.9902 cv
1057.4 98.3218 1056.81 98.5728 1056.11 98.7437 cv
1055.4 98.9146 1054.6 99 1053.69 99 cv
1048.27 99 li
cp
f
1063.21 99 mo
1063.21 88.1104 li
1065.05 88.1104 li
1065.05 99 li
1063.21 99 li
cp
1063.21 86.0903 mo
1063.21 83.9678 li
1065.05 83.9678 li
1065.05 86.0903 li
1063.21 86.0903 li
cp
f
1067.12 95.7495 mo
1068.95 95.4624 li
1069.05 96.1938 1069.34 96.7544 1069.8 97.144 cv
1070.27 97.5337 1070.93 97.7285 1071.77 97.7285 cv
1072.62 97.7285 1073.24 97.5562 1073.65 97.2109 cv
1074.06 96.8657 1074.27 96.4604 1074.27 95.9956 cv
1074.27 95.5786 1074.09 95.2505 1073.73 95.0112 cv
1073.47 94.8472 1072.84 94.6387 1071.84 94.3857 cv
1070.49 94.0439 1069.55 93.7485 1069.03 93.499 cv
1068.5 93.2495 1068.11 92.9043 1067.84 92.4629 cv
1067.57 92.0225 1067.43 91.5352 1067.43 91.002 cv
1067.43 90.5166 1067.54 90.0674 1067.76 89.6533 cv
1067.99 89.2402 1068.29 88.8965 1068.67 88.623 cv
1068.96 88.4111 1069.35 88.2319 1069.85 88.085 cv
1070.34 87.938 1070.87 87.8643 1071.44 87.8643 cv
1072.29 87.8643 1073.04 87.9873 1073.69 88.2334 cv
1074.34 88.4795 1074.81 88.8125 1075.12 89.2334 cv
1075.43 89.6533 1075.64 90.2158 1075.76 90.9199 cv
1073.95 91.166 li
1073.87 90.6055 1073.63 90.168 1073.24 89.8535 cv
1072.85 89.5391 1072.29 89.3818 1071.57 89.3818 cv
1070.73 89.3818 1070.12 89.522 1069.76 89.8022 cv
1069.4 90.0825 1069.21 90.4106 1069.21 90.7866 cv
1069.21 91.0259 1069.29 91.2412 1069.44 91.4326 cv
1069.59 91.6309 1069.83 91.7949 1070.15 91.9248 cv
1070.33 91.9932 1070.88 92.1504 1071.78 92.3965 cv
1073.08 92.7451 1073.99 93.0308 1074.51 93.2529 cv
1075.03 93.4751 1075.43 93.7979 1075.73 94.2217 cv
1076.02 94.6455 1076.17 95.1719 1076.17 95.8008 cv
1076.17 96.416 1075.99 96.9951 1075.63 97.5391 cv
1075.27 98.082 1074.75 98.5029 1074.08 98.7998 cv
1073.4 99.0977 1072.63 99.2461 1071.78 99.2461 cv
1070.36 99.2461 1069.29 98.9521 1068.54 98.3643 cv
1067.8 97.7764 1067.33 96.9048 1067.12 95.7495 cv
cp
f
1082.39 97.3491 mo
1082.66 98.9795 li
1082.14 99.0889 1081.67 99.1436 1081.26 99.1436 cv
1080.59 99.1436 1080.07 99.0376 1079.71 98.8257 cv
1079.34 98.6138 1079.08 98.3354 1078.93 97.9902 cv
1078.78 97.645 1078.7 96.9185 1078.7 95.811 cv
1078.7 89.5459 li
1077.35 89.5459 li
1077.35 88.1104 li
1078.7 88.1104 li
1078.7 85.4136 li
1080.54 84.3062 li
1080.54 88.1104 li
1082.39 88.1104 li
1082.39 89.5459 li
1080.54 89.5459 li
1080.54 95.9136 li
1080.54 96.4399 1080.57 96.7783 1080.63 96.9287 cv
1080.7 97.0791 1080.8 97.1987 1080.95 97.2876 cv
1081.1 97.3765 1081.31 97.4209 1081.58 97.4209 cv
1081.79 97.4209 1082.06 97.397 1082.39 97.3491 cv
cp
f
1084.18 99 mo
1084.18 88.1104 li
1085.84 88.1104 li
1085.84 89.7612 li
1086.26 88.9888 1086.65 88.4795 1087.01 88.2334 cv
1087.37 87.9873 1087.76 87.8643 1088.2 87.8643 cv
1088.82 87.8643 1089.45 88.0625 1090.09 88.459 cv
1089.46 90.1714 li
1089 89.9048 1088.55 89.7715 1088.1 89.7715 cv
1087.7 89.7715 1087.34 89.8931 1087.02 90.1357 cv
1086.69 90.3784 1086.46 90.7148 1086.33 91.1455 cv
1086.12 91.8018 1086.02 92.5195 1086.02 93.2988 cv
1086.02 99 li
1084.18 99 li
cp
f
1091.2 99 mo
1091.2 88.1104 li
1093.04 88.1104 li
1093.04 99 li
1091.2 99 li
cp
1091.2 86.0903 mo
1091.2 83.9678 li
1093.04 83.9678 li
1093.04 86.0903 li
1091.2 86.0903 li
cp
f
1097.54 93.4731 mo
1097.54 94.7788 1097.71 95.7222 1098.07 96.3032 cv
1098.65 97.2534 1099.44 97.7285 1100.43 97.7285 cv
1101.23 97.7285 1101.93 97.3784 1102.52 96.6777 cv
1103.11 95.9771 1103.4 94.9326 1103.4 93.5449 cv
1103.4 92.123 1103.12 91.0737 1102.55 90.397 cv
1101.99 89.7202 1101.31 89.3818 1100.51 89.3818 cv
1099.7 89.3818 1099.01 89.7324 1098.42 90.4326 cv
1097.83 91.1338 1097.54 92.147 1097.54 93.4731 cv
cp
1097.56 99 mo
1095.84 99 li
1095.84 83.9678 li
1097.69 83.9678 li
1097.69 89.3306 li
1098.47 88.353 1099.46 87.8643 1100.67 87.8643 cv
1101.34 87.8643 1101.98 87.9995 1102.58 88.2695 cv
1103.17 88.5396 1103.67 88.9189 1104.05 89.4072 cv
1104.44 89.8965 1104.74 90.4858 1104.96 91.1763 cv
1105.18 91.8667 1105.29 92.605 1105.29 93.3911 cv
1105.29 95.2573 1104.83 96.6997 1103.9 97.7183 cv
1102.98 98.7368 1101.87 99.2461 1100.58 99.2461 cv
1099.3 99.2461 1098.29 98.7095 1097.56 97.6362 cv
1097.56 99 li
cp
f
1114.67 99 mo
1114.67 97.4004 li
1113.82 98.6309 1112.67 99.2461 1111.21 99.2461 cv
1110.57 99.2461 1109.97 99.123 1109.42 98.877 cv
1108.86 98.6309 1108.44 98.3218 1108.17 97.9492 cv
1107.9 97.5767 1107.71 97.1201 1107.61 96.5801 cv
1107.53 96.2178 1107.49 95.6436 1107.49 94.8574 cv
1107.49 88.1104 li
1109.34 88.1104 li
1109.34 94.1499 li
1109.34 95.1138 1109.38 95.7632 1109.45 96.0981 cv
1109.57 96.5835 1109.81 96.9648 1110.19 97.2412 cv
1110.57 97.5186 1111.03 97.6567 1111.58 97.6567 cv
1112.14 97.6567 1112.66 97.5151 1113.14 97.2314 cv
1113.63 96.9478 1113.97 96.5615 1114.17 96.0723 cv
1114.38 95.584 1114.48 94.8745 1114.48 93.9448 cv
1114.48 88.1104 li
1116.32 88.1104 li
1116.32 99 li
1114.67 99 li
cp
f
1123.24 97.3491 mo
1123.51 98.9795 li
1122.99 99.0889 1122.53 99.1436 1122.12 99.1436 cv
1121.45 99.1436 1120.93 99.0376 1120.56 98.8257 cv
1120.19 98.6138 1119.93 98.3354 1119.78 97.9902 cv
1119.63 97.645 1119.55 96.9185 1119.55 95.811 cv
1119.55 89.5459 li
1118.2 89.5459 li
1118.2 88.1104 li
1119.55 88.1104 li
1119.55 85.4136 li
1121.39 84.3062 li
1121.39 88.1104 li
1123.24 88.1104 li
1123.24 89.5459 li
1121.39 89.5459 li
1121.39 95.9136 li
1121.39 96.4399 1121.42 96.7783 1121.48 96.9287 cv
1121.55 97.0791 1121.65 97.1987 1121.8 97.2876 cv
1121.95 97.3765 1122.16 97.4209 1122.43 97.4209 cv
1122.64 97.4209 1122.91 97.397 1123.24 97.3491 cv
cp
f
1125.06 99 mo
1125.06 88.1104 li
1126.9 88.1104 li
1126.9 99 li
1125.06 99 li
cp
1125.06 86.0903 mo
1125.06 83.9678 li
1126.9 83.9678 li
1126.9 86.0903 li
1125.06 86.0903 li
cp
f
1130.92 93.5552 mo
1130.92 94.9497 1131.23 95.9941 1131.84 96.6875 cv
1132.44 97.3818 1133.21 97.7285 1134.13 97.7285 cv
1135.05 97.7285 1135.81 97.3799 1136.42 96.6826 cv
1137.03 95.9854 1137.33 94.9224 1137.33 93.4937 cv
1137.33 92.147 1137.03 91.127 1136.41 90.4326 cv
1135.8 89.7393 1135.04 89.3921 1134.13 89.3921 cv
1133.21 89.3921 1132.44 89.7373 1131.84 90.4277 cv
1131.23 91.1182 1130.92 92.1606 1130.92 93.5552 cv
cp
1129.03 93.5552 mo
1129.03 91.5386 1129.59 90.0449 1130.71 89.0742 cv
1131.64 88.2676 1132.79 87.8643 1134.13 87.8643 cv
1135.63 87.8643 1136.85 88.355 1137.8 89.3359 cv
1138.75 90.3169 1139.23 91.6719 1139.23 93.4014 cv
1139.23 94.8027 1139.02 95.9053 1138.6 96.708 cv
1138.18 97.5117 1137.57 98.1353 1136.76 98.5796 cv
1135.96 99.0239 1135.08 99.2461 1134.13 99.2461 cv
1132.61 99.2461 1131.38 98.7573 1130.44 97.7798 cv
1129.5 96.8022 1129.03 95.394 1129.03 93.5552 cv
cp
f
1141.39 99 mo
1141.39 88.1104 li
1143.05 88.1104 li
1143.05 89.6587 li
1143.85 88.4624 1145.01 87.8643 1146.52 87.8643 cv
1147.18 87.8643 1147.78 87.9824 1148.33 88.2178 cv
1148.88 88.4541 1149.29 88.7632 1149.56 89.146 cv
1149.84 89.5288 1150.03 89.9834 1150.14 90.5098 cv
1150.21 90.8516 1150.24 91.4497 1150.24 92.3042 cv
1150.24 99 li
1148.4 99 li
1148.4 92.376 li
1148.4 91.624 1148.32 91.062 1148.18 90.6895 cv
1148.04 90.3169 1147.78 90.0195 1147.42 89.7969 cv
1147.05 89.5752 1146.62 89.4639 1146.13 89.4639 cv
1145.34 89.4639 1144.66 89.7134 1144.09 90.2124 cv
1143.52 90.7114 1143.24 91.6582 1143.24 93.0527 cv
1143.24 99 li
1141.39 99 li
cp
f
1154.28 103.419 mo
1152.96 103.419 li
1155 100.138 1156.02 96.8535 1156.02 93.5654 cv
1156.02 92.2803 1155.88 91.0054 1155.58 89.7407 cv
1155.35 88.7153 1155.03 87.731 1154.61 86.7876 cv
1154.34 86.1724 1153.79 85.147 1152.96 83.7114 cv
1154.28 83.7114 li
1155.57 85.4272 1156.52 87.1499 1157.13 88.8794 cv
1157.66 90.3696 1157.92 91.9282 1157.92 93.5552 cv
1157.92 95.4009 1157.57 97.1851 1156.86 98.9077 cv
1156.15 100.63 1155.29 102.134 1154.28 103.419 cv
cp
f
881.379 135 mo
881.379 119.968 li
892.248 119.968 li
892.248 121.742 li
883.368 121.742 li
883.368 126.346 li
891.684 126.346 li
891.684 128.109 li
883.368 128.109 li
883.368 133.226 li
892.597 133.226 li
892.597 135 li
881.379 135 li
cp
f
893.879 135 mo
897.857 129.34 li
894.176 124.11 li
896.482 124.11 li
898.154 126.664 li
898.469 127.149 898.722 127.556 898.913 127.884 cv
899.214 127.433 899.49 127.033 899.744 126.684 cv
901.579 124.11 li
903.783 124.11 li
900.021 129.237 li
904.07 135 li
901.805 135 li
899.569 131.616 li
898.975 130.704 li
896.113 135 li
893.879 135 li
cp
f
907.28 129.617 mo
907.28 131.018 907.564 132.054 908.131 132.724 cv
908.699 133.394 909.386 133.729 910.192 133.729 cv
911.013 133.729 911.715 133.382 912.3 132.688 cv
912.884 131.994 913.176 130.919 913.176 129.463 cv
913.176 128.075 912.891 127.036 912.32 126.346 cv
911.749 125.655 911.067 125.31 910.274 125.31 cv
909.488 125.31 908.793 125.678 908.188 126.412 cv
907.583 127.147 907.28 128.215 907.28 129.617 cv
cp
905.609 139.173 mo
905.609 124.11 li
907.291 124.11 li
907.291 125.525 li
907.688 124.972 908.135 124.557 908.634 124.279 cv
909.133 124.003 909.738 123.864 910.449 123.864 cv
911.379 123.864 912.199 124.104 912.91 124.582 cv
913.621 125.061 914.157 125.735 914.52 126.607 cv
914.882 127.479 915.063 128.434 915.063 129.473 cv
915.063 130.587 914.863 131.591 914.463 132.482 cv
914.063 133.375 913.482 134.059 912.72 134.533 cv
911.957 135.008 911.156 135.246 910.315 135.246 cv
909.7 135.246 909.148 135.116 908.659 134.856 cv
908.17 134.597 907.77 134.269 907.455 133.872 cv
907.455 139.173 li
905.609 139.173 li
cp
f
917.247 135 mo
917.247 119.968 li
919.093 119.968 li
919.093 135 li
917.247 135 li
cp
f
928.906 129.535 mo
928.236 129.808 927.23 130.041 925.891 130.232 cv
925.133 130.341 924.596 130.464 924.281 130.601 cv
923.967 130.738 923.725 130.938 923.553 131.201 cv
923.383 131.464 923.297 131.756 923.297 132.078 cv
923.297 132.57 923.482 132.98 923.855 133.308 cv
924.229 133.636 924.773 133.8 925.491 133.8 cv
926.202 133.8 926.834 133.645 927.389 133.334 cv
927.941 133.023 928.349 132.597 928.608 132.057 cv
928.807 131.64 928.906 131.025 928.906 130.211 cv
928.906 129.535 li
cp
929.06 133.657 mo
928.376 134.238 927.718 134.648 927.086 134.887 cv
926.453 135.126 925.775 135.246 925.051 135.246 cv
923.854 135.246 922.935 134.954 922.292 134.369 cv
921.649 133.785 921.328 133.038 921.328 132.129 cv
921.328 131.596 921.449 131.108 921.692 130.668 cv
921.935 130.227 922.252 129.873 922.646 129.606 cv
923.039 129.34 923.481 129.138 923.974 129.001 cv
924.336 128.906 924.883 128.813 925.614 128.725 cv
927.104 128.547 928.201 128.335 928.906 128.089 cv
928.912 127.836 928.916 127.675 928.916 127.607 cv
928.916 126.855 928.742 126.325 928.393 126.018 cv
927.922 125.601 927.221 125.392 926.291 125.392 cv
925.423 125.392 924.781 125.544 924.368 125.849 cv
923.955 126.153 923.648 126.691 923.451 127.463 cv
921.646 127.217 li
921.811 126.445 922.08 125.821 922.456 125.346 cv
922.832 124.871 923.375 124.505 924.086 124.249 cv
924.797 123.992 925.621 123.864 926.558 123.864 cv
927.487 123.864 928.242 123.974 928.824 124.192 cv
929.404 124.411 929.832 124.687 930.105 125.018 cv
930.379 125.35 930.57 125.768 930.68 126.274 cv
930.741 126.588 930.771 127.156 930.771 127.976 cv
930.771 130.437 li
930.771 132.153 930.811 133.238 930.89 133.692 cv
930.969 134.147 931.124 134.583 931.356 135 cv
929.429 135 li
929.237 134.617 929.114 134.169 929.06 133.657 cv
cp
f
933.643 135 mo
933.643 124.11 li
935.488 124.11 li
935.488 135 li
933.643 135 li
cp
933.643 122.09 mo
933.643 119.968 li
935.488 119.968 li
935.488 122.09 li
933.643 122.09 li
cp
f
938.299 135 mo
938.299 124.11 li
939.959 124.11 li
939.959 125.659 li
940.76 124.462 941.914 123.864 943.426 123.864 cv
944.082 123.864 944.685 123.982 945.235 124.218 cv
945.785 124.454 946.197 124.763 946.471 125.146 cv
946.744 125.529 946.936 125.983 947.045 126.51 cv
947.113 126.852 947.147 127.45 947.147 128.304 cv
947.147 135 li
945.302 135 li
945.302 128.376 li
945.302 127.624 945.23 127.062 945.086 126.689 cv
944.943 126.317 944.688 126.02 944.322 125.797 cv
943.957 125.575 943.527 125.464 943.035 125.464 cv
942.25 125.464 941.57 125.713 941 126.212 cv
940.43 126.711 940.145 127.658 940.145 129.053 cv
940.145 135 li
938.299 135 li
cp
f
956.93 129.535 mo
956.26 129.808 955.255 130.041 953.915 130.232 cv
953.156 130.341 952.619 130.464 952.305 130.601 cv
951.99 130.738 951.748 130.938 951.577 131.201 cv
951.406 131.464 951.32 131.756 951.32 132.078 cv
951.32 132.57 951.507 132.98 951.879 133.308 cv
952.252 133.636 952.797 133.8 953.516 133.8 cv
954.227 133.8 954.858 133.645 955.412 133.334 cv
955.966 133.023 956.373 132.597 956.633 132.057 cv
956.83 131.64 956.93 131.025 956.93 130.211 cv
956.93 129.535 li
cp
957.084 133.657 mo
956.4 134.238 955.742 134.648 955.109 134.887 cv
954.477 135.126 953.799 135.246 953.074 135.246 cv
951.878 135.246 950.959 134.954 950.316 134.369 cv
949.674 133.785 949.352 133.038 949.352 132.129 cv
949.352 131.596 949.473 131.108 949.717 130.668 cv
949.959 130.227 950.276 129.873 950.67 129.606 cv
951.063 129.34 951.506 129.138 951.998 129.001 cv
952.359 128.906 952.906 128.813 953.639 128.725 cv
955.129 128.547 956.226 128.335 956.93 128.089 cv
956.937 127.836 956.939 127.675 956.939 127.607 cv
956.939 126.855 956.766 126.325 956.417 126.018 cv
955.945 125.601 955.244 125.392 954.314 125.392 cv
953.447 125.392 952.806 125.544 952.393 125.849 cv
951.979 126.153 951.673 126.691 951.475 127.463 cv
949.67 127.217 li
949.834 126.445 950.104 125.821 950.48 125.346 cv
950.855 124.871 951.399 124.505 952.11 124.249 cv
952.821 123.992 953.645 123.864 954.582 123.864 cv
955.512 123.864 956.267 123.974 956.848 124.192 cv
957.429 124.411 957.855 124.687 958.129 125.018 cv
958.402 125.35 958.594 125.768 958.703 126.274 cv
958.766 126.588 958.796 127.156 958.796 127.976 cv
958.796 130.437 li
958.796 132.153 958.835 133.238 958.914 133.692 cv
958.992 134.147 959.148 134.583 959.381 135 cv
957.453 135 li
957.262 134.617 957.139 134.169 957.084 133.657 cv
cp
f
963.338 129.473 mo
963.338 130.779 963.516 131.722 963.871 132.303 cv
964.453 133.253 965.238 133.729 966.23 133.729 cv
967.037 133.729 967.734 133.378 968.322 132.678 cv
968.91 131.977 969.203 130.933 969.203 129.545 cv
969.203 128.123 968.922 127.074 968.357 126.397 cv
967.794 125.72 967.111 125.382 966.313 125.382 cv
965.506 125.382 964.809 125.732 964.221 126.433 cv
963.633 127.134 963.338 128.147 963.338 129.473 cv
cp
963.359 135 mo
961.646 135 li
961.646 119.968 li
963.492 119.968 li
963.492 125.331 li
964.271 124.353 965.266 123.864 966.477 123.864 cv
967.146 123.864 967.779 124 968.378 124.27 cv
968.977 124.54 969.469 124.919 969.854 125.407 cv
970.24 125.896 970.543 126.486 970.762 127.176 cv
970.98 127.867 971.09 128.605 971.09 129.391 cv
971.09 131.257 970.629 132.7 969.706 133.718 cv
968.783 134.737 967.676 135.246 966.384 135.246 cv
965.099 135.246 964.09 134.709 963.359 133.636 cv
963.359 135 li
cp
f
973.346 135 mo
973.346 124.11 li
975.191 124.11 li
975.191 135 li
973.346 135 li
cp
973.346 122.09 mo
973.346 119.968 li
975.191 119.968 li
975.191 122.09 li
973.346 122.09 li
cp
f
977.961 135 mo
977.961 119.968 li
979.807 119.968 li
979.807 135 li
977.961 135 li
cp
f
982.678 135 mo
982.678 124.11 li
984.523 124.11 li
984.523 135 li
982.678 135 li
cp
982.678 122.09 mo
982.678 119.968 li
984.523 119.968 li
984.523 122.09 li
982.678 122.09 li
cp
f
991.362 133.349 mo
991.629 134.979 li
991.109 135.089 990.645 135.144 990.234 135.144 cv
989.564 135.144 989.045 135.038 988.676 134.826 cv
988.307 134.614 988.047 134.335 987.896 133.99 cv
987.746 133.645 987.671 132.918 987.671 131.811 cv
987.671 125.546 li
986.317 125.546 li
986.317 124.11 li
987.671 124.11 li
987.671 121.414 li
989.506 120.306 li
989.506 124.11 li
991.362 124.11 li
991.362 125.546 li
989.506 125.546 li
989.506 131.914 li
989.506 132.44 989.539 132.778 989.604 132.929 cv
989.668 133.079 989.774 133.199 989.922 133.288 cv
990.068 133.376 990.279 133.421 990.553 133.421 cv
990.758 133.421 991.027 133.397 991.362 133.349 cv
cp
f
993.085 139.194 mo
992.88 137.461 li
993.283 137.57 993.635 137.625 993.936 137.625 cv
994.346 137.625 994.674 137.557 994.92 137.42 cv
995.166 137.283 995.368 137.092 995.525 136.846 cv
995.642 136.661 995.83 136.203 996.09 135.472 cv
996.123 135.369 996.178 135.219 996.254 135.021 cv
992.121 124.11 li
994.11 124.11 li
996.377 130.417 li
996.67 131.216 996.934 132.057 997.166 132.939 cv
997.378 132.091 997.631 131.264 997.925 130.458 cv
1000.25 124.11 li
1002.1 124.11 li
997.955 135.185 li
997.512 136.381 997.166 137.205 996.92 137.656 cv
996.592 138.264 996.216 138.71 995.792 138.994 cv
995.368 139.277 994.862 139.419 994.274 139.419 cv
993.919 139.419 993.522 139.344 993.085 139.194 cv
cp
f
894.438 162.602 mo
898.713 162.602 li
899.622 162.602 900.333 162.508 900.846 162.32 cv
901.358 162.132 901.748 161.832 902.015 161.418 cv
902.281 161.004 902.414 160.555 902.414 160.069 cv
902.414 159.358 902.156 158.774 901.641 158.316 cv
901.124 157.858 900.309 157.629 899.195 157.629 cv
894.438 157.629 li
894.438 162.602 li
cp
892.447 171 mo
892.447 155.968 li
899.113 155.968 li
900.453 155.968 901.471 156.103 902.168 156.373 cv
902.865 156.643 903.423 157.12 903.84 157.803 cv
904.257 158.487 904.465 159.242 904.465 160.069 cv
904.465 161.136 904.12 162.035 903.43 162.766 cv
902.739 163.498 901.673 163.962 900.23 164.161 cv
900.757 164.414 901.156 164.663 901.43 164.909 cv
902.012 165.442 902.562 166.109 903.081 166.909 cv
905.695 171 li
903.193 171 li
901.205 167.873 li
900.623 166.97 900.145 166.28 899.77 165.801 cv
899.393 165.323 899.057 164.988 898.759 164.796 cv
898.462 164.605 898.159 164.472 897.852 164.396 cv
897.626 164.349 897.257 164.325 896.744 164.325 cv
894.438 164.325 li
894.438 171 li
892.447 171 li
cp
f
908.741 164.509 mo
914.822 164.509 li
914.74 163.593 914.508 162.906 914.125 162.448 cv
913.537 161.737 912.774 161.382 911.838 161.382 cv
910.99 161.382 910.277 161.666 909.699 162.233 cv
909.122 162.8 908.803 163.559 908.741 164.509 cv
cp
914.801 167.493 mo
916.709 167.729 li
916.408 168.843 915.851 169.708 915.037 170.323 cv
914.224 170.938 913.185 171.246 911.92 171.246 cv
910.327 171.246 909.064 170.756 908.131 169.774 cv
907.197 168.794 906.731 167.418 906.731 165.647 cv
906.731 163.815 907.203 162.394 908.146 161.382 cv
909.09 160.37 910.313 159.864 911.817 159.864 cv
913.273 159.864 914.463 160.36 915.386 161.351 cv
916.309 162.342 916.77 163.737 916.77 165.535 cv
916.77 165.644 916.767 165.808 916.76 166.027 cv
908.639 166.027 li
908.707 167.223 909.045 168.139 909.654 168.775 cv
910.262 169.411 911.021 169.729 911.93 169.729 cv
912.607 169.729 913.185 169.551 913.663 169.195 cv
914.142 168.84 914.521 168.272 914.801 167.493 cv
cp
f
925.979 165.535 mo
925.309 165.808 924.303 166.041 922.963 166.232 cv
922.205 166.341 921.668 166.464 921.354 166.601 cv
921.039 166.738 920.797 166.938 920.625 167.201 cv
920.455 167.464 920.369 167.756 920.369 168.078 cv
920.369 168.57 920.555 168.98 920.928 169.308 cv
921.301 169.636 921.846 169.8 922.563 169.8 cv
923.274 169.8 923.906 169.645 924.461 169.334 cv
925.014 169.023 925.421 168.597 925.681 168.057 cv
925.879 167.64 925.979 167.025 925.979 166.211 cv
925.979 165.535 li
cp
926.132 169.657 mo
925.448 170.238 924.79 170.648 924.158 170.887 cv
923.525 171.126 922.848 171.246 922.123 171.246 cv
920.926 171.246 920.007 170.954 919.364 170.369 cv
918.722 169.785 918.4 169.038 918.4 168.129 cv
918.4 167.596 918.521 167.108 918.765 166.668 cv
919.007 166.227 919.324 165.873 919.718 165.606 cv
920.111 165.34 920.554 165.138 921.046 165.001 cv
921.408 164.906 921.955 164.813 922.687 164.725 cv
924.177 164.547 925.273 164.335 925.979 164.089 cv
925.984 163.836 925.988 163.675 925.988 163.607 cv
925.988 162.855 925.814 162.325 925.465 162.018 cv
924.994 161.601 924.293 161.392 923.363 161.392 cv
922.495 161.392 921.854 161.544 921.44 161.849 cv
921.027 162.153 920.721 162.691 920.523 163.463 cv
918.719 163.217 li
918.883 162.445 919.152 161.821 919.528 161.346 cv
919.904 160.871 920.447 160.505 921.158 160.249 cv
921.869 159.992 922.693 159.864 923.63 159.864 cv
924.56 159.864 925.314 159.974 925.896 160.192 cv
926.477 160.411 926.904 160.687 927.178 161.018 cv
927.451 161.35 927.643 161.768 927.752 162.274 cv
927.813 162.588 927.844 163.156 927.844 163.976 cv
927.844 166.437 li
927.844 168.153 927.883 169.238 927.962 169.692 cv
928.041 170.147 928.196 170.583 928.429 171 cv
926.501 171 li
926.31 170.617 926.187 170.169 926.132 169.657 cv
cp
f
929.967 167.75 mo
931.792 167.462 li
931.895 168.194 932.18 168.754 932.648 169.144 cv
933.116 169.534 933.771 169.729 934.611 169.729 cv
935.459 169.729 936.088 169.556 936.498 169.211 cv
936.908 168.866 937.113 168.46 937.113 167.996 cv
937.113 167.579 936.933 167.25 936.57 167.011 cv
936.317 166.847 935.688 166.639 934.684 166.386 cv
933.33 166.044 932.393 165.749 931.869 165.499 cv
931.346 165.25 930.949 164.904 930.68 164.463 cv
930.409 164.022 930.274 163.535 930.274 163.002 cv
930.274 162.517 930.385 162.067 930.607 161.653 cv
930.83 161.24 931.133 160.896 931.516 160.623 cv
931.803 160.411 932.193 160.232 932.689 160.085 cv
933.185 159.938 933.717 159.864 934.283 159.864 cv
935.139 159.864 935.889 159.987 936.535 160.233 cv
937.18 160.479 937.657 160.813 937.965 161.233 cv
938.272 161.653 938.484 162.216 938.601 162.92 cv
936.796 163.166 li
936.714 162.605 936.477 162.168 936.084 161.854 cv
935.689 161.539 935.135 161.382 934.417 161.382 cv
933.569 161.382 932.965 161.522 932.602 161.802 cv
932.24 162.083 932.059 162.411 932.059 162.787 cv
932.059 163.026 932.134 163.241 932.284 163.433 cv
932.435 163.631 932.67 163.795 932.992 163.925 cv
933.176 163.993 933.72 164.15 934.622 164.396 cv
935.928 164.745 936.838 165.031 937.355 165.253 cv
937.871 165.475 938.275 165.798 938.57 166.222 cv
938.863 166.646 939.011 167.172 939.011 167.801 cv
939.011 168.416 938.832 168.995 938.473 169.539 cv
938.113 170.082 937.596 170.503 936.919 170.8 cv
936.242 171.098 935.477 171.246 934.622 171.246 cv
933.207 171.246 932.129 170.952 931.387 170.364 cv
930.645 169.776 930.172 168.905 929.967 167.75 cv
cp
f
942.415 165.555 mo
942.415 166.95 942.719 167.994 943.328 168.688 cv
943.936 169.382 944.701 169.729 945.625 169.729 cv
946.541 169.729 947.303 169.38 947.911 168.683 cv
948.52 167.985 948.824 166.922 948.824 165.494 cv
948.824 164.147 948.518 163.127 947.906 162.433 cv
947.294 161.739 946.533 161.392 945.625 161.392 cv
944.701 161.392 943.936 161.737 943.328 162.428 cv
942.719 163.118 942.415 164.161 942.415 165.555 cv
cp
940.518 165.555 mo
940.518 163.539 941.078 162.045 942.199 161.074 cv
943.137 160.268 944.277 159.864 945.625 159.864 cv
947.121 159.864 948.346 160.355 949.295 161.336 cv
950.246 162.317 950.721 163.672 950.721 165.401 cv
950.721 166.803 950.51 167.905 950.09 168.708 cv
949.67 169.512 949.058 170.135 948.254 170.58 cv
947.451 171.024 946.574 171.246 945.625 171.246 cv
944.1 171.246 942.867 170.757 941.928 169.78 cv
940.988 168.802 940.518 167.394 940.518 165.555 cv
cp
f
952.885 171 mo
952.885 160.11 li
954.545 160.11 li
954.545 161.659 li
955.346 160.462 956.5 159.864 958.012 159.864 cv
958.668 159.864 959.271 159.982 959.821 160.218 cv
960.371 160.454 960.783 160.763 961.057 161.146 cv
961.33 161.529 961.521 161.983 961.631 162.51 cv
961.699 162.852 961.733 163.45 961.733 164.304 cv
961.733 171 li
959.888 171 li
959.888 164.376 li
959.888 163.624 959.816 163.062 959.672 162.689 cv
959.529 162.317 959.273 162.02 958.908 161.797 cv
958.543 161.575 958.113 161.464 957.621 161.464 cv
956.836 161.464 956.156 161.713 955.586 162.212 cv
955.016 162.711 954.73 163.658 954.73 165.053 cv
954.73 171 li
952.885 171 li
cp
f
964.574 171 mo
964.574 160.11 li
966.42 160.11 li
966.42 171 li
964.574 171 li
cp
964.574 158.09 mo
964.574 155.968 li
966.42 155.968 li
966.42 158.09 li
964.574 158.09 li
cp
f
969.229 171 mo
969.229 160.11 li
970.891 160.11 li
970.891 161.659 li
971.689 160.462 972.846 159.864 974.355 159.864 cv
975.012 159.864 975.615 159.982 976.166 160.218 cv
976.716 160.454 977.128 160.763 977.401 161.146 cv
977.675 161.529 977.866 161.983 977.976 162.51 cv
978.044 162.852 978.078 163.45 978.078 164.304 cv
978.078 171 li
976.232 171 li
976.232 164.376 li
976.232 163.624 976.16 163.062 976.018 162.689 cv
975.873 162.317 975.619 162.02 975.253 161.797 cv
974.887 161.575 974.459 161.464 973.967 161.464 cv
973.18 161.464 972.502 161.713 971.931 162.212 cv
971.359 162.711 971.074 163.658 971.074 165.053 cv
971.074 171 li
969.229 171 li
cp
f
982.098 165.36 mo
982.098 166.789 982.381 167.832 982.949 168.488 cv
983.516 169.144 984.227 169.472 985.082 169.472 cv
985.93 169.472 986.641 169.146 987.215 168.493 cv
987.789 167.84 988.076 166.816 988.076 165.422 cv
988.076 164.089 987.779 163.084 987.189 162.407 cv
986.598 161.73 985.885 161.392 985.051 161.392 cv
984.23 161.392 983.533 161.726 982.959 162.392 cv
982.385 163.059 982.098 164.048 982.098 165.36 cv
cp
980.57 171.902 mo
982.364 172.169 li
982.439 172.723 982.648 173.126 982.99 173.379 cv
983.447 173.721 984.073 173.892 984.866 173.892 cv
985.721 173.892 986.381 173.721 986.846 173.379 cv
987.311 173.037 987.625 172.559 987.789 171.943 cv
987.885 171.567 987.929 170.778 987.922 169.575 cv
987.115 170.525 986.11 171 984.907 171 cv
983.41 171 982.252 170.46 981.432 169.38 cv
980.611 168.3 980.201 167.004 980.201 165.494 cv
980.201 164.455 980.389 163.496 980.765 162.617 cv
981.141 161.739 981.686 161.061 982.4 160.582 cv
983.114 160.104 983.953 159.864 984.918 159.864 cv
986.203 159.864 987.262 160.384 988.096 161.423 cv
988.096 160.11 li
989.799 160.11 li
989.799 169.523 li
989.799 171.219 989.625 172.42 989.281 173.128 cv
988.936 173.835 988.389 174.394 987.641 174.804 cv
986.891 175.214 985.971 175.419 984.877 175.419 cv
983.578 175.419 982.528 175.127 981.729 174.543 cv
980.929 173.958 980.543 173.078 980.57 171.902 cv
cp
f
32.9023 231.17 mo
34.7788 231.006 li
34.8677 231.758 35.0742 232.375 35.3994 232.857 cv
35.7236 233.339 36.228 233.729 36.9116 234.026 cv
37.5952 234.323 38.3643 234.473 39.2188 234.473 cv
39.9775 234.473 40.6475 234.359 41.2285 234.134 cv
41.8096 233.908 42.2417 233.6 42.5254 233.206 cv
42.8091 232.813 42.9512 232.384 42.9512 231.919 cv
42.9512 231.447 42.8145 231.035 42.541 230.684 cv
42.2676 230.332 41.8164 230.035 41.1875 229.797 cv
40.7842 229.639 39.8921 229.395 38.5112 229.063 cv
37.1304 228.732 36.1631 228.419 35.6094 228.125 cv
34.8916 227.749 34.3564 227.283 34.0049 226.726 cv
33.6523 226.168 33.4766 225.545 33.4766 224.854 cv
33.4766 224.096 33.6919 223.387 34.1226 222.727 cv
34.5532 222.066 35.1821 221.566 36.0093 221.225 cv
36.8364 220.882 37.7559 220.711 38.7676 220.711 cv
39.8818 220.711 40.8643 220.891 41.7158 221.25 cv
42.5664 221.608 43.2212 222.137 43.6792 222.834 cv
44.1372 223.531 44.3833 224.32 44.4175 225.203 cv
42.5103 225.346 li
42.4077 224.396 42.0605 223.678 41.4697 223.193 cv
40.8779 222.707 40.0049 222.465 38.8496 222.465 cv
37.6465 222.465 36.7695 222.686 36.2197 223.126 cv
35.6689 223.567 35.394 224.099 35.394 224.721 cv
35.394 225.261 35.5889 225.705 35.9785 226.054 cv
36.3613 226.402 37.3608 226.76 38.9775 227.125 cv
40.5942 227.491 41.7036 227.811 42.3052 228.084 cv
43.1802 228.487 43.8262 228.998 44.2432 229.617 cv
44.6602 230.236 44.8687 230.948 44.8687 231.755 cv
44.8687 232.555 44.6396 233.309 44.1816 234.016 cv
43.7236 234.724 43.0654 235.273 42.208 235.667 cv
41.3496 236.06 40.3843 236.256 39.311 236.256 cv
37.9507 236.256 36.8105 236.059 35.8916 235.662 cv
34.9717 235.266 34.251 234.669 33.7275 233.872 cv
33.2051 233.076 32.9297 232.176 32.9023 231.17 cv
cp
f
54.4868 236 mo
54.4868 234.4 li
53.6392 235.631 52.4873 236.246 51.0313 236.246 cv
50.3887 236.246 49.7886 236.123 49.2314 235.877 cv
48.6743 235.631 48.2607 235.322 47.9912 234.949 cv
47.7207 234.576 47.5313 234.12 47.4219 233.58 cv
47.3467 233.218 47.3091 232.644 47.3091 231.857 cv
47.3091 225.11 li
49.1548 225.11 li
49.1548 231.15 li
49.1548 232.113 49.1924 232.764 49.2676 233.098 cv
49.3838 233.584 49.6299 233.965 50.0059 234.241 cv
50.3818 234.519 50.8467 234.656 51.4004 234.656 cv
51.9541 234.656 52.4736 234.516 52.959 234.231 cv
53.4443 233.947 53.7876 233.562 53.9893 233.072 cv
54.1909 232.584 54.292 231.875 54.292 230.945 cv
54.292 225.11 li
56.1377 225.11 li
56.1377 236 li
54.4868 236 li
cp
f
60.7109 230.473 mo
60.7109 231.779 60.8887 232.723 61.2441 233.303 cv
61.8252 234.254 62.6113 234.729 63.6025 234.729 cv
64.4092 234.729 65.1064 234.379 65.6943 233.678 cv
66.2822 232.977 66.5762 231.933 66.5762 230.545 cv
66.5762 229.123 66.2944 228.074 65.73 227.396 cv
65.1665 226.721 64.4844 226.382 63.6846 226.382 cv
62.8779 226.382 62.1807 226.732 61.5928 227.433 cv
61.0049 228.134 60.7109 229.146 60.7109 230.473 cv
cp
60.7314 236 mo
59.019 236 li
59.019 220.968 li
60.8647 220.968 li
60.8647 226.33 li
61.644 225.354 62.6387 224.864 63.8486 224.864 cv
64.5186 224.864 65.1523 225 65.7505 225.27 cv
66.3486 225.539 66.8408 225.919 67.2271 226.407 cv
67.6133 226.896 67.916 227.486 68.1348 228.176 cv
68.3535 228.867 68.4629 229.605 68.4629 230.391 cv
68.4629 232.258 68.0015 233.699 67.0786 234.719 cv
66.1558 235.736 65.0483 236.246 63.7563 236.246 cv
62.4712 236.246 61.4629 235.709 60.7314 234.637 cv
60.7314 236 li
cp
f
69.9907 231.488 mo
69.9907 229.633 li
75.6611 229.633 li
75.6611 231.488 li
69.9907 231.488 li
cp
f
76.9634 232.75 mo
78.7886 232.463 li
78.8911 233.193 79.1763 233.754 79.6445 234.145 cv
80.1128 234.533 80.7676 234.729 81.6084 234.729 cv
82.4561 234.729 83.085 234.557 83.4951 234.211 cv
83.9053 233.865 84.1104 233.461 84.1104 232.996 cv
84.1104 232.578 83.9292 232.25 83.5669 232.012 cv
83.314 231.848 82.6851 231.639 81.6802 231.386 cv
80.3267 231.044 79.3887 230.748 78.8652 230.499 cv
78.3428 230.25 77.9458 229.904 77.6758 229.463 cv
77.4058 229.022 77.271 228.535 77.271 228.002 cv
77.271 227.517 77.3818 227.067 77.6045 226.653 cv
77.8262 226.24 78.1289 225.896 78.5117 225.623 cv
78.7988 225.411 79.1899 225.232 79.6855 225.085 cv
80.1812 224.938 80.7129 224.864 81.2803 224.864 cv
82.1348 224.864 82.8848 224.987 83.5313 225.233 cv
84.1768 225.479 84.6538 225.813 84.9614 226.233 cv
85.269 226.653 85.481 227.216 85.5972 227.92 cv
83.7925 228.166 li
83.7104 227.605 83.4727 227.168 83.0801 226.854 cv
82.6865 226.539 82.1313 226.382 81.4136 226.382 cv
80.5659 226.382 79.9609 226.521 79.5986 226.803 cv
79.2363 227.082 79.0552 227.41 79.0552 227.787 cv
79.0552 228.025 79.1304 228.241 79.2808 228.433 cv
79.4312 228.631 79.667 228.795 79.9883 228.925 cv
80.1729 228.993 80.7163 229.15 81.6187 229.396 cv
82.9243 229.745 83.835 230.031 84.3516 230.253 cv
84.8672 230.475 85.2725 230.798 85.5664 231.222 cv
85.8604 231.646 86.0073 232.172 86.0073 232.801 cv
86.0073 233.416 85.8281 233.995 85.4688 234.539 cv
85.1104 235.082 84.5923 235.503 83.9155 235.8 cv
83.2388 236.098 82.4731 236.246 81.6187 236.246 cv
80.2036 236.246 79.125 235.952 78.3838 235.364 cv
77.6416 234.776 77.1685 233.904 76.9634 232.75 cv
cp
f
88.1196 240.193 mo
87.9146 238.461 li
88.3179 238.57 88.6699 238.625 88.9707 238.625 cv
89.3809 238.625 89.709 238.557 89.9551 238.42 cv
90.2012 238.283 90.4028 238.092 90.5601 237.846 cv
90.6763 237.661 90.8643 237.203 91.124 236.472 cv
91.1582 236.369 91.2129 236.219 91.2881 236.021 cv
87.1558 225.11 li
89.145 225.11 li
91.4111 231.416 li
91.7051 232.217 91.9683 233.057 92.2007 233.939 cv
92.4126 233.092 92.6655 232.264 92.9595 231.457 cv
95.2871 225.11 li
97.1328 225.11 li
92.9902 236.185 li
92.5459 237.381 92.2007 238.205 91.9546 238.656 cv
91.6265 239.264 91.2505 239.71 90.8267 239.994 cv
90.4028 240.277 89.897 240.42 89.3091 240.42 cv
88.9536 240.42 88.5571 240.344 88.1196 240.193 cv
cp
f
98.7017 236 mo
98.7017 225.11 li
100.353 225.11 li
100.353 226.639 li
100.694 226.105 101.149 225.676 101.716 225.352 cv
102.284 225.027 102.93 224.864 103.654 224.864 cv
104.461 224.864 105.122 225.031 105.639 225.367 cv
106.154 225.701 106.519 226.17 106.73 226.771 cv
107.592 225.5 108.713 224.864 110.094 224.864 cv
111.174 224.864 112.004 225.164 112.585 225.762 cv
113.167 226.359 113.457 227.281 113.457 228.525 cv
113.457 236 li
111.622 236 li
111.622 229.141 li
111.622 228.402 111.562 227.871 111.442 227.546 cv
111.322 227.221 111.105 226.959 110.791 226.762 cv
110.477 226.563 110.107 226.464 109.684 226.464 cv
108.918 226.464 108.282 226.719 107.776 227.228 cv
107.271 227.737 107.018 228.553 107.018 229.674 cv
107.018 236 li
105.172 236 li
105.172 228.925 li
105.172 228.104 105.021 227.489 104.721 227.079 cv
104.42 226.669 103.928 226.464 103.244 226.464 cv
102.725 226.464 102.244 226.601 101.804 226.874 cv
101.362 227.147 101.043 227.547 100.845 228.074 cv
100.646 228.6 100.547 229.359 100.547 230.35 cv
100.547 236 li
98.7017 236 li
cp
f
117.876 230.473 mo
117.876 231.779 118.054 232.723 118.41 233.303 cv
118.991 234.254 119.777 234.729 120.768 234.729 cv
121.575 234.729 122.272 234.379 122.86 233.678 cv
123.448 232.977 123.742 231.933 123.742 230.545 cv
123.742 229.123 123.46 228.074 122.896 227.396 cv
122.332 226.721 121.65 226.382 120.85 226.382 cv
120.043 226.382 119.346 226.732 118.758 227.433 cv
118.17 228.134 117.876 229.146 117.876 230.473 cv
cp
117.897 236 mo
116.185 236 li
116.185 220.968 li
118.03 220.968 li
118.03 226.33 li
118.81 225.354 119.804 224.864 121.014 224.864 cv
121.684 224.864 122.318 225 122.916 225.27 cv
123.514 225.539 124.006 225.919 124.393 226.407 cv
124.779 226.896 125.082 227.486 125.3 228.176 cv
125.519 228.867 125.628 229.605 125.628 230.391 cv
125.628 232.258 125.167 233.699 124.244 234.719 cv
123.321 235.736 122.214 236.246 120.922 236.246 cv
119.637 236.246 118.628 235.709 117.897 234.637 cv
117.897 236 li
cp
f
129.084 230.555 mo
129.084 231.949 129.388 232.994 129.997 233.688 cv
130.605 234.382 131.371 234.729 132.293 234.729 cv
133.209 234.729 133.972 234.38 134.58 233.683 cv
135.188 232.985 135.493 231.922 135.493 230.494 cv
135.493 229.146 135.187 228.127 134.575 227.433 cv
133.963 226.739 133.203 226.393 132.293 226.393 cv
131.371 226.393 130.605 226.737 129.997 227.428 cv
129.388 228.118 129.084 229.16 129.084 230.555 cv
cp
127.187 230.555 mo
127.187 228.539 127.748 227.045 128.869 226.074 cv
129.805 225.268 130.947 224.864 132.293 224.864 cv
133.791 224.864 135.014 225.355 135.964 226.336 cv
136.915 227.316 137.39 228.672 137.39 230.401 cv
137.39 231.803 137.179 232.905 136.759 233.708 cv
136.338 234.512 135.727 235.135 134.923 235.58 cv
134.12 236.023 133.244 236.246 132.293 236.246 cv
130.769 236.246 129.537 235.758 128.597 234.779 cv
127.657 233.803 127.187 232.395 127.187 230.555 cv
cp
f
139.512 236 mo
139.512 220.968 li
141.358 220.968 li
141.358 236 li
139.512 236 li
cp
f
144.229 236 mo
144.229 225.11 li
146.075 225.11 li
146.075 236 li
144.229 236 li
cp
144.229 223.09 mo
144.229 220.968 li
146.075 220.968 li
146.075 223.09 li
144.229 223.09 li
cp
f
155.99 232.012 mo
157.805 232.247 li
157.607 233.498 157.099 234.478 156.282 235.185 cv
155.465 235.893 154.462 236.246 153.273 236.246 cv
151.783 236.246 150.584 235.759 149.679 234.785 cv
148.773 233.811 148.32 232.414 148.32 230.596 cv
148.32 229.42 148.515 228.392 148.905 227.51 cv
149.294 226.628 149.887 225.967 150.684 225.525 cv
151.48 225.085 152.347 224.864 153.283 224.864 cv
154.466 224.864 155.433 225.164 156.185 225.762 cv
156.937 226.359 157.419 227.209 157.631 228.31 cv
155.836 228.586 li
155.666 227.855 155.363 227.305 154.929 226.936 cv
154.495 226.566 153.97 226.382 153.355 226.382 cv
152.425 226.382 151.67 226.715 151.089 227.382 cv
150.508 228.048 150.217 229.103 150.217 230.545 cv
150.217 232.008 150.498 233.07 151.058 233.734 cv
151.619 234.396 152.35 234.729 153.252 234.729 cv
153.977 234.729 154.582 234.506 155.067 234.063 cv
155.553 233.617 155.86 232.934 155.99 232.012 cv
cp
f
90.1807 265.62 mo
89.1074 263.268 88.5708 260.852 88.5708 258.37 cv
88.5708 256.716 88.7876 255.176 89.2217 253.751 cv
89.6558 252.325 90.3174 250.915 91.2061 249.521 cv
91.7939 248.592 92.7339 247.388 94.0259 245.911 cv
95.4717 245.911 li
94.6719 246.767 93.8262 247.97 92.9336 249.521 cv
92.042 251.073 91.394 252.597 90.9907 254.095 cv
90.5874 255.591 90.3857 257.096 90.3857 258.606 cv
90.3857 260.862 90.7788 263.2 91.5649 265.62 cv
90.1807 265.62 li
cp
f
94.4873 261.2 mo
96.7637 250.311 li
98.4453 250.311 li
98.0454 252.208 li
98.7769 251.463 99.4604 250.919 100.096 250.577 cv
100.732 250.235 101.381 250.064 102.044 250.064 cv
102.926 250.064 103.618 250.304 104.121 250.782 cv
104.623 251.261 104.875 251.899 104.875 252.7 cv
104.875 253.104 104.786 253.739 104.608 254.606 cv
103.224 261.2 li
101.368 261.2 li
102.813 254.3 li
102.957 253.63 103.029 253.134 103.029 252.813 cv
103.029 252.45 102.904 252.156 102.654 251.931 cv
102.405 251.705 102.044 251.593 101.573 251.593 cv
100.623 251.593 99.7764 251.935 99.0352 252.618 cv
98.293 253.302 97.748 254.474 97.3994 256.135 cv
96.3433 261.2 li
94.4873 261.2 li
cp
f
108.771 254.802 mo
114.882 254.802 li
114.889 254.61 114.893 254.474 114.893 254.392 cv
114.893 253.462 114.66 252.749 114.195 252.254 cv
113.73 251.758 113.132 251.511 112.401 251.511 cv
111.608 251.511 110.885 251.784 110.232 252.331 cv
109.579 252.878 109.092 253.701 108.771 254.802 cv
cp
114.165 257.499 mo
115.969 257.683 li
115.709 258.579 115.113 259.43 114.18 260.236 cv
113.247 261.043 112.134 261.446 110.842 261.446 cv
110.036 261.446 109.295 261.26 108.623 260.888 cv
107.949 260.515 107.436 259.974 107.084 259.263 cv
106.732 258.552 106.556 257.741 106.556 256.832 cv
106.556 255.643 106.831 254.489 107.381 253.371 cv
107.932 252.254 108.645 251.423 109.52 250.88 cv
110.395 250.336 111.341 250.064 112.36 250.064 cv
113.659 250.064 114.696 250.468 115.472 251.274 cv
116.248 252.081 116.636 253.182 116.636 254.576 cv
116.636 255.109 116.588 255.656 116.492 256.217 cv
108.474 256.217 li
108.446 256.429 108.433 256.62 108.433 256.791 cv
108.433 257.81 108.667 258.587 109.135 259.124 cv
109.603 259.66 110.176 259.929 110.853 259.929 cv
111.488 259.929 112.114 259.721 112.729 259.304 cv
113.344 258.887 113.823 258.285 114.165 257.499 cv
cp
f
125.28 259.231 mo
123.974 260.708 122.638 261.446 121.271 261.446 cv
120.43 261.446 119.751 261.205 119.235 260.724 cv
118.719 260.241 118.461 259.651 118.461 258.954 cv
118.461 258.497 118.577 257.711 118.81 256.597 cv
120.122 250.311 li
121.978 250.311 li
120.522 257.272 li
120.399 257.854 120.337 258.306 120.337 258.626 cv
120.337 259.036 120.462 259.356 120.712 259.585 cv
120.961 259.814 121.329 259.929 121.814 259.929 cv
122.333 259.929 122.841 259.803 123.337 259.55 cv
123.832 259.297 124.26 258.954 124.618 258.524 cv
124.978 258.093 125.27 257.584 125.495 256.996 cv
125.646 256.62 125.82 255.96 126.018 255.017 cv
127.002 250.311 li
128.858 250.311 li
126.582 261.2 li
124.87 261.2 li
125.28 259.231 li
cp
f
129.525 261.2 mo
131.801 250.311 li
133.442 250.311 li
132.98 252.536 li
133.541 251.694 134.089 251.073 134.626 250.669 cv
135.163 250.267 135.711 250.064 136.272 250.064 cv
136.641 250.064 137.096 250.198 137.636 250.464 cv
136.877 252.187 li
136.556 251.955 136.204 251.839 135.821 251.839 cv
135.171 251.839 134.505 252.201 133.821 252.925 cv
133.138 253.65 132.601 254.952 132.211 256.832 cv
131.289 261.2 li
129.525 261.2 li
cp
f
144.547 255.684 mo
144.287 255.786 144.008 255.865 143.711 255.919 cv
143.414 255.975 142.917 256.032 142.219 256.094 cv
141.139 256.189 140.377 256.311 139.933 256.458 cv
139.488 256.604 139.153 256.839 138.928 257.16 cv
138.702 257.481 138.589 257.837 138.589 258.227 cv
138.589 258.746 138.769 259.174 139.127 259.509 cv
139.487 259.844 139.998 260.011 140.661 260.011 cv
141.276 260.011 141.867 259.849 142.435 259.523 cv
143.002 259.199 143.45 258.746 143.778 258.165 cv
144.106 257.584 144.362 256.757 144.547 255.684 cv
cp
143.86 259.847 mo
143.217 260.4 142.599 260.806 142.004 261.062 cv
141.409 261.318 140.773 261.446 140.097 261.446 cv
139.092 261.446 138.282 261.15 137.667 260.56 cv
137.051 259.968 136.744 259.211 136.744 258.288 cv
136.744 257.68 136.882 257.142 137.159 256.673 cv
137.436 256.205 137.803 255.829 138.261 255.545 cv
138.719 255.262 139.28 255.058 139.943 254.935 cv
140.36 254.853 141.151 254.788 142.317 254.74 cv
143.482 254.692 144.318 254.569 144.824 254.371 cv
144.967 253.865 145.039 253.445 145.039 253.11 cv
145.039 252.679 144.882 252.341 144.567 252.095 cv
144.137 251.753 143.508 251.582 142.681 251.582 cv
141.901 251.582 141.264 251.755 140.768 252.1 cv
140.272 252.445 139.912 252.936 139.687 253.571 cv
137.81 253.407 li
138.193 252.327 138.799 251.5 139.63 250.926 cv
140.46 250.352 141.508 250.064 142.773 250.064 cv
144.12 250.064 145.186 250.386 145.972 251.028 cv
146.574 251.507 146.875 252.129 146.875 252.895 cv
146.875 253.476 146.789 254.149 146.618 254.915 cv
146.013 257.622 li
145.822 258.483 145.726 259.184 145.726 259.724 cv
145.726 260.065 145.801 260.558 145.952 261.2 cv
144.075 261.2 li
143.973 260.845 143.901 260.394 143.86 259.847 cv
cp
f
148.054 261.2 mo
151.191 246.168 li
153.047 246.168 li
149.91 261.2 li
148.054 261.2 li
cp
f
153.304 261.2 mo
153.745 259.099 li
155.857 259.099 li
155.478 260.934 li
155.245 262.034 154.884 262.841 154.396 263.354 cv
153.907 263.866 153.331 264.16 152.668 264.235 cv
152.842 263.425 li
153.656 263.2 154.192 262.458 154.452 261.2 cv
153.304 261.2 li
cp
f
36.645 282.432 mo
38.501 282.627 li
38.0361 283.987 37.3745 284.997 36.5166 285.657 cv
35.6587 286.316 34.6831 286.646 33.5894 286.646 cv
32.4067 286.646 31.4478 286.264 30.7129 285.498 cv
29.978 284.732 29.6108 283.662 29.6108 282.289 cv
29.6108 281.1 29.8467 279.93 30.3184 278.781 cv
30.79 277.633 31.4648 276.76 32.3438 276.162 cv
33.2217 275.563 34.2251 275.265 35.353 275.265 cv
36.522 275.265 37.4482 275.595 38.1318 276.254 cv
38.8154 276.914 39.1572 277.787 39.1572 278.874 cv
37.332 278.997 li
37.3252 278.307 37.125 277.767 36.7324 277.377 cv
36.3389 276.987 35.8213 276.793 35.1787 276.793 cv
34.4336 276.793 33.7876 277.028 33.2407 277.5 cv
32.6938 277.972 32.2646 278.688 31.9541 279.648 cv
31.6426 280.608 31.4873 281.533 31.4873 282.422 cv
31.4873 283.352 31.6924 284.049 32.1025 284.514 cv
32.5127 284.979 33.0186 285.211 33.6201 285.211 cv
34.2217 285.211 34.7974 284.982 35.3477 284.523 cv
35.8979 284.066 36.3306 283.369 36.645 282.432 cv
cp
f
41.813 282.084 mo
41.813 283.109 42.0591 283.887 42.5513 284.416 cv
43.0435 284.946 43.6689 285.211 44.4277 285.211 cv
44.8242 285.211 45.2173 285.131 45.6069 284.97 cv
45.9966 284.81 46.3589 284.564 46.6938 284.236 cv
47.0288 283.908 47.3145 283.534 47.5498 283.114 cv
47.7861 282.693 47.9756 282.241 48.1191 281.756 cv
48.3311 281.078 48.437 280.43 48.437 279.807 cv
48.437 278.822 48.189 278.059 47.6934 277.516 cv
47.1978 276.972 46.5742 276.7 45.8223 276.7 cv
45.2412 276.7 44.7114 276.839 44.2329 277.115 cv
43.7544 277.393 43.3218 277.797 42.9355 278.33 cv
42.5493 278.863 42.2656 279.484 42.085 280.191 cv
41.9033 280.899 41.813 281.529 41.813 282.084 cv
cp
39.957 282.268 mo
39.957 280.143 40.5825 278.382 41.8335 276.987 cv
42.8657 275.839 44.2192 275.265 45.894 275.265 cv
47.2065 275.265 48.2642 275.675 49.0674 276.495 cv
49.8706 277.315 50.2725 278.423 50.2725 279.817 cv
50.2725 281.068 50.0195 282.232 49.5137 283.309 cv
49.0078 284.386 48.2881 285.211 47.3555 285.785 cv
46.4219 286.359 45.4395 286.646 44.4072 286.646 cv
43.5596 286.646 42.7886 286.465 42.0947 286.104 cv
41.4009 285.741 40.8711 285.229 40.5059 284.564 cv
40.1396 283.902 39.957 283.137 39.957 282.268 cv
cp
f
51.3081 286.4 mo
53.5845 275.511 li
55.2661 275.511 li
54.8662 277.408 li
55.5977 276.663 56.2813 276.119 56.917 275.777 cv
57.5527 275.436 58.2021 275.265 58.8652 275.265 cv
59.7471 275.265 60.439 275.504 60.9419 275.982 cv
61.4438 276.461 61.6953 277.1 61.6953 277.9 cv
61.6953 278.304 61.6064 278.939 61.4287 279.807 cv
60.0444 286.4 li
58.1885 286.4 li
59.6343 279.5 li
59.7778 278.83 59.8496 278.334 59.8496 278.013 cv
59.8496 277.65 59.7246 277.356 59.4751 277.131 cv
59.2256 276.905 58.8652 276.793 58.3936 276.793 cv
57.4434 276.793 56.5972 277.135 55.856 277.818 cv
55.1138 278.502 54.5688 279.674 54.2202 281.335 cv
53.1641 286.4 li
51.3081 286.4 li
cp
f
62.9873 286.4 mo
65.2637 275.511 li
66.9453 275.511 li
66.5454 277.408 li
67.2769 276.663 67.9604 276.119 68.5962 275.777 cv
69.2319 275.436 69.8813 275.265 70.5444 275.265 cv
71.4263 275.265 72.1182 275.504 72.6211 275.982 cv
73.123 276.461 73.3745 277.1 73.3745 277.9 cv
73.3745 278.304 73.2856 278.939 73.1079 279.807 cv
71.7236 286.4 li
69.8677 286.4 li
71.3135 279.5 li
71.457 278.83 71.5288 278.334 71.5288 278.013 cv
71.5288 277.65 71.4038 277.356 71.1543 277.131 cv
70.9048 276.905 70.5444 276.793 70.0728 276.793 cv
69.1226 276.793 68.2764 277.135 67.5352 277.818 cv
66.793 278.502 66.248 279.674 65.8994 281.335 cv
64.8433 286.4 li
62.9873 286.4 li
cp
f
77.271 280.002 mo
83.3823 280.002 li
83.3892 279.811 83.3926 279.674 83.3926 279.592 cv
83.3926 278.662 83.1602 277.949 82.6953 277.454 cv
82.2305 276.958 81.6323 276.711 80.9009 276.711 cv
80.1079 276.711 79.3848 276.984 78.7319 277.531 cv
78.0791 278.078 77.5923 278.901 77.271 280.002 cv
cp
82.6646 282.699 mo
84.4692 282.883 li
84.2095 283.779 83.6128 284.63 82.6802 285.437 cv
81.7466 286.243 80.6343 286.646 79.3423 286.646 cv
78.5356 286.646 77.7954 286.46 77.1226 286.088 cv
76.4487 285.715 75.936 285.174 75.5845 284.463 cv
75.2319 283.752 75.0562 282.941 75.0562 282.032 cv
75.0562 280.843 75.3311 279.689 75.8813 278.571 cv
76.4316 277.454 77.1445 276.623 78.0195 276.08 cv
78.8945 275.536 79.8413 275.265 80.8599 275.265 cv
82.1587 275.265 83.1958 275.668 83.9722 276.475 cv
84.7476 277.281 85.1357 278.382 85.1357 279.776 cv
85.1357 280.31 85.0879 280.856 84.9922 281.417 cv
76.9736 281.417 li
76.9463 281.629 76.9326 281.82 76.9326 281.991 cv
76.9326 283.01 77.1665 283.787 77.6353 284.324 cv
78.103 284.86 78.6758 285.129 79.3525 285.129 cv
79.9883 285.129 80.6138 284.921 81.229 284.504 cv
81.8442 284.087 82.3228 283.485 82.6646 282.699 cv
cp
f
93.8618 282.432 mo
95.7178 282.627 li
95.2529 283.987 94.5913 284.997 93.7334 285.657 cv
92.8755 286.316 91.8999 286.646 90.8062 286.646 cv
89.6235 286.646 88.6646 286.264 87.9297 285.498 cv
87.1948 284.732 86.8276 283.662 86.8276 282.289 cv
86.8276 281.1 87.0635 279.93 87.5352 278.781 cv
88.0068 277.633 88.6816 276.76 89.5605 276.162 cv
90.4385 275.563 91.4419 275.265 92.5698 275.265 cv
93.7388 275.265 94.665 275.595 95.3486 276.254 cv
96.0322 276.914 96.374 277.787 96.374 278.874 cv
94.5488 278.997 li
94.542 278.307 94.3418 277.767 93.9492 277.377 cv
93.5557 276.987 93.0381 276.793 92.3955 276.793 cv
91.6504 276.793 91.0044 277.028 90.4575 277.5 cv
89.9106 277.972 89.4814 278.688 89.1709 279.648 cv
88.8594 280.608 88.7041 281.533 88.7041 282.422 cv
88.7041 283.352 88.9092 284.049 89.3193 284.514 cv
89.7295 284.979 90.2354 285.211 90.8369 285.211 cv
91.4385 285.211 92.0142 284.982 92.5645 284.523 cv
93.1147 284.066 93.5474 283.369 93.8618 282.432 cv
cp
f
101.183 284.893 mo
100.875 286.41 li
100.431 286.526 100 286.585 99.5835 286.585 cv
98.8452 286.585 98.2573 286.403 97.8198 286.041 cv
97.4917 285.769 97.3276 285.396 97.3276 284.924 cv
97.3276 284.685 97.4165 284.135 97.5942 283.273 cv
98.917 276.946 li
97.4507 276.946 li
97.748 275.511 li
99.2144 275.511 li
99.7783 272.834 li
101.901 271.553 li
101.07 275.511 li
102.896 275.511 li
102.588 276.946 li
100.773 276.946 li
99.5117 282.965 li
99.3545 283.731 99.2759 284.189 99.2759 284.34 cv
99.2759 284.559 99.3389 284.726 99.4658 284.842 cv
99.5918 284.958 99.7988 285.016 100.086 285.016 cv
100.496 285.016 100.862 284.975 101.183 284.893 cv
cp
f
105.315 273.471 mo
105.756 271.368 li
107.602 271.368 li
107.161 273.471 li
105.315 273.471 li
cp
102.608 286.4 mo
104.885 275.511 li
106.741 275.511 li
104.464 286.4 li
102.608 286.4 li
cp
f
109.53 282.084 mo
109.53 283.109 109.776 283.887 110.268 284.416 cv
110.76 284.946 111.386 285.211 112.145 285.211 cv
112.541 285.211 112.934 285.131 113.324 284.97 cv
113.713 284.81 114.076 284.564 114.411 284.236 cv
114.746 283.908 115.031 283.534 115.267 283.114 cv
115.503 282.693 115.692 282.241 115.836 281.756 cv
116.048 281.078 116.154 280.43 116.154 279.807 cv
116.154 278.822 115.906 278.059 115.41 277.516 cv
114.915 276.972 114.291 276.7 113.539 276.7 cv
112.958 276.7 112.428 276.839 111.95 277.115 cv
111.471 277.393 111.039 277.797 110.652 278.33 cv
110.266 278.863 109.982 279.484 109.802 280.191 cv
109.62 280.899 109.53 281.529 109.53 282.084 cv
cp
107.674 282.268 mo
107.674 280.143 108.299 278.382 109.55 276.987 cv
110.583 275.839 111.936 275.265 113.611 275.265 cv
114.923 275.265 115.981 275.675 116.784 276.495 cv
117.587 277.315 117.989 278.423 117.989 279.817 cv
117.989 281.068 117.736 282.232 117.23 283.309 cv
116.725 284.386 116.005 285.211 115.072 285.785 cv
114.139 286.359 113.156 286.646 112.124 286.646 cv
111.276 286.646 110.505 286.465 109.812 286.104 cv
109.118 285.741 108.588 285.229 108.223 284.564 cv
107.856 283.902 107.674 283.137 107.674 282.268 cv
cp
f
119.025 286.4 mo
121.301 275.511 li
122.983 275.511 li
122.583 277.408 li
123.314 276.663 123.998 276.119 124.634 275.777 cv
125.27 275.436 125.919 275.265 126.582 275.265 cv
127.464 275.265 128.156 275.504 128.659 275.982 cv
129.161 276.461 129.412 277.1 129.412 277.9 cv
129.412 278.304 129.323 278.939 129.146 279.807 cv
127.761 286.4 li
125.905 286.4 li
127.351 279.5 li
127.495 278.83 127.566 278.334 127.566 278.013 cv
127.566 277.65 127.441 277.356 127.192 277.131 cv
126.942 276.905 126.582 276.793 126.11 276.793 cv
125.16 276.793 124.314 277.135 123.573 277.818 cv
122.831 278.502 122.286 279.674 121.937 281.335 cv
120.881 286.4 li
119.025 286.4 li
cp
f
133.339 273.471 mo
133.78 271.368 li
135.626 271.368 li
135.185 273.471 li
133.339 273.471 li
cp
130.632 286.4 mo
132.909 275.511 li
134.765 275.511 li
132.488 286.4 li
130.632 286.4 li
cp
f
135.544 282.678 mo
137.4 282.565 li
137.4 283.099 137.482 283.554 137.646 283.93 cv
137.81 284.306 138.113 284.613 138.553 284.852 cv
138.995 285.092 139.509 285.211 140.097 285.211 cv
140.917 285.211 141.532 285.047 141.942 284.719 cv
142.353 284.391 142.558 284.005 142.558 283.561 cv
142.558 283.239 142.435 282.935 142.188 282.647 cv
141.936 282.36 141.318 282.007 140.337 281.586 cv
139.356 281.166 138.729 280.87 138.456 280.699 cv
137.998 280.419 137.653 280.089 137.42 279.71 cv
137.188 279.33 137.072 278.895 137.072 278.402 cv
137.072 277.541 137.414 276.803 138.097 276.188 cv
138.781 275.572 139.738 275.265 140.968 275.265 cv
142.335 275.265 143.376 275.581 144.09 276.213 cv
144.805 276.846 145.176 277.678 145.203 278.71 cv
143.388 278.833 li
143.361 278.177 143.128 277.657 142.691 277.274 cv
142.253 276.892 141.635 276.7 140.835 276.7 cv
140.192 276.7 139.693 276.848 139.338 277.141 cv
138.982 277.436 138.805 277.753 138.805 278.095 cv
138.805 278.437 138.958 278.737 139.266 278.997 cv
139.471 279.175 140.001 279.448 140.855 279.817 cv
142.277 280.433 143.173 280.918 143.542 281.273 cv
144.13 281.841 144.424 282.531 144.424 283.345 cv
144.424 283.885 144.258 284.415 143.926 284.934 cv
143.595 285.454 143.089 285.869 142.409 286.18 cv
141.729 286.491 140.927 286.646 140.004 286.646 cv
138.747 286.646 137.677 286.336 136.795 285.713 cv
135.913 285.092 135.496 284.08 135.544 282.678 cv
cp
f
150.207 284.893 mo
149.899 286.41 li
149.455 286.526 149.024 286.585 148.607 286.585 cv
147.869 286.585 147.281 286.403 146.844 286.041 cv
146.516 285.769 146.352 285.396 146.352 284.924 cv
146.352 284.685 146.44 284.135 146.618 283.273 cv
147.941 276.946 li
146.475 276.946 li
146.772 275.511 li
148.238 275.511 li
148.802 272.834 li
150.925 271.553 li
150.094 275.511 li
151.919 275.511 li
151.612 276.946 li
149.797 276.946 li
148.536 282.965 li
148.378 283.731 148.3 284.189 148.3 284.34 cv
148.3 284.559 148.363 284.726 148.49 284.842 cv
148.616 284.958 148.823 285.016 149.11 285.016 cv
149.52 285.016 149.886 284.975 150.207 284.893 cv
cp
f
155.17 271.111 mo
156.25 273.464 156.79 275.877 156.79 278.352 cv
156.79 280.012 156.573 281.554 156.139 282.976 cv
155.705 284.397 155.043 285.81 154.155 287.211 cv
153.56 288.14 152.62 289.344 151.335 290.82 cv
149.889 290.82 li
150.682 289.959 151.526 288.752 152.422 287.2 cv
153.317 285.648 153.965 284.126 154.365 282.632 cv
154.765 281.139 154.965 279.633 154.965 278.115 cv
154.965 275.859 154.572 273.525 153.786 271.111 cv
155.17 271.111 li
cp
f
73.7539 381.17 mo
75.6304 381.006 li
75.7192 381.759 75.9258 382.375 76.251 382.857 cv
76.5752 383.339 77.0796 383.729 77.7632 384.026 cv
78.4468 384.323 79.2158 384.473 80.0703 384.473 cv
80.8291 384.473 81.499 384.359 82.0801 384.134 cv
82.6611 383.908 83.0933 383.599 83.377 383.206 cv
83.6606 382.813 83.8027 382.384 83.8027 381.919 cv
83.8027 381.447 83.666 381.035 83.3926 380.684 cv
83.1191 380.331 82.668 380.036 82.0391 379.797 cv
81.6357 379.64 80.7437 379.395 79.3628 379.063 cv
77.9819 378.731 77.0146 378.419 76.4609 378.125 cv
75.7432 377.749 75.208 377.282 74.8564 376.726 cv
74.5039 376.168 74.3281 375.545 74.3281 374.854 cv
74.3281 374.096 74.5435 373.386 74.9741 372.727 cv
75.4048 372.066 76.0337 371.566 76.8608 371.225 cv
77.688 370.883 78.6074 370.711 79.6191 370.711 cv
80.7334 370.711 81.7158 370.891 82.5674 371.25 cv
83.418 371.608 84.0728 372.137 84.5308 372.834 cv
84.9888 373.531 85.2349 374.32 85.269 375.203 cv
83.3618 375.346 li
83.2593 374.396 82.9121 373.679 82.3213 373.193 cv
81.7295 372.708 80.8564 372.465 79.7012 372.465 cv
78.498 372.465 77.6211 372.686 77.0713 373.126 cv
76.5205 373.567 76.2456 374.099 76.2456 374.721 cv
76.2456 375.261 76.4404 375.705 76.8301 376.054 cv
77.2129 376.402 78.2124 376.76 79.8291 377.125 cv
81.4458 377.491 82.5552 377.811 83.1567 378.084 cv
84.0317 378.487 84.6777 378.998 85.0947 379.617 cv
85.5117 380.235 85.7202 380.948 85.7202 381.755 cv
85.7202 382.555 85.4912 383.309 85.0332 384.016 cv
84.5752 384.724 83.917 385.273 83.0596 385.667 cv
82.2012 386.06 81.2358 386.256 80.1626 386.256 cv
78.8022 386.256 77.6621 386.058 76.7432 385.662 cv
75.8232 385.266 75.1025 384.669 74.5791 383.872 cv
74.0566 383.076 73.7813 382.176 73.7539 381.17 cv
cp
f
88.1196 390.193 mo
87.9146 388.461 li
88.3179 388.57 88.6699 388.625 88.9707 388.625 cv
89.3809 388.625 89.709 388.557 89.9551 388.42 cv
90.2012 388.283 90.4028 388.092 90.5601 387.846 cv
90.6763 387.661 90.8643 387.203 91.124 386.472 cv
91.1582 386.369 91.2129 386.219 91.2881 386.021 cv
87.1558 375.11 li
89.145 375.11 li
91.4111 381.416 li
91.7051 382.217 91.9683 383.057 92.2007 383.939 cv
92.4126 383.092 92.6655 382.265 92.9595 381.457 cv
95.2871 375.11 li
97.1328 375.11 li
92.9902 386.185 li
92.5459 387.381 92.2007 388.205 91.9546 388.656 cv
91.6265 389.264 91.2505 389.71 90.8267 389.994 cv
90.4028 390.277 89.897 390.42 89.3091 390.42 cv
88.9536 390.42 88.5571 390.344 88.1196 390.193 cv
cp
f
98.7017 386 mo
98.7017 375.11 li
100.353 375.11 li
100.353 376.639 li
100.694 376.105 101.149 375.676 101.716 375.352 cv
102.284 375.026 102.93 374.864 103.654 374.864 cv
104.461 374.864 105.122 375.032 105.639 375.367 cv
106.154 375.702 106.519 376.17 106.73 376.771 cv
107.592 375.5 108.713 374.864 110.094 374.864 cv
111.174 374.864 112.004 375.163 112.585 375.762 cv
113.167 376.359 113.457 377.281 113.457 378.525 cv
113.457 386 li
111.622 386 li
111.622 379.141 li
111.622 378.402 111.562 377.87 111.442 377.546 cv
111.322 377.221 111.105 376.96 110.791 376.762 cv
110.477 376.563 110.107 376.464 109.684 376.464 cv
108.918 376.464 108.282 376.719 107.776 377.228 cv
107.271 377.737 107.018 378.553 107.018 379.674 cv
107.018 386 li
105.172 386 li
105.172 378.925 li
105.172 378.104 105.021 377.489 104.721 377.079 cv
104.42 376.669 103.928 376.464 103.244 376.464 cv
102.725 376.464 102.244 376.601 101.804 376.874 cv
101.362 377.147 101.043 377.548 100.845 378.074 cv
100.646 378.601 100.547 379.359 100.547 380.35 cv
100.547 386 li
98.7017 386 li
cp
f
117.876 380.473 mo
117.876 381.779 118.054 382.723 118.41 383.303 cv
118.991 384.254 119.777 384.729 120.768 384.729 cv
121.575 384.729 122.272 384.378 122.86 383.678 cv
123.448 382.977 123.742 381.933 123.742 380.545 cv
123.742 379.123 123.46 378.074 122.896 377.396 cv
122.332 376.721 121.65 376.382 120.85 376.382 cv
120.043 376.382 119.346 376.732 118.758 377.433 cv
118.17 378.134 117.876 379.147 117.876 380.473 cv
cp
117.897 386 mo
116.185 386 li
116.185 370.968 li
118.03 370.968 li
118.03 376.33 li
118.81 375.354 119.804 374.864 121.014 374.864 cv
121.684 374.864 122.318 374.999 122.916 375.27 cv
123.514 375.539 124.006 375.919 124.393 376.407 cv
124.779 376.896 125.082 377.486 125.3 378.176 cv
125.519 378.867 125.628 379.605 125.628 380.391 cv
125.628 382.258 125.167 383.7 124.244 384.719 cv
123.321 385.737 122.214 386.246 120.922 386.246 cv
119.637 386.246 118.628 385.71 117.897 384.637 cv
117.897 386 li
cp
f
129.084 380.555 mo
129.084 381.949 129.388 382.994 129.997 383.688 cv
130.605 384.382 131.371 384.729 132.293 384.729 cv
133.209 384.729 133.972 384.38 134.58 383.683 cv
135.188 382.985 135.493 381.923 135.493 380.494 cv
135.493 379.147 135.187 378.127 134.575 377.433 cv
133.963 376.739 133.203 376.393 132.293 376.393 cv
131.371 376.393 130.605 376.737 129.997 377.428 cv
129.388 378.118 129.084 379.16 129.084 380.555 cv
cp
127.187 380.555 mo
127.187 378.539 127.748 377.045 128.869 376.074 cv
129.805 375.268 130.947 374.864 132.293 374.864 cv
133.791 374.864 135.014 375.354 135.964 376.336 cv
136.915 377.316 137.39 378.672 137.39 380.401 cv
137.39 381.803 137.179 382.905 136.759 383.708 cv
136.338 384.512 135.727 385.136 134.923 385.58 cv
134.12 386.023 133.244 386.246 132.293 386.246 cv
130.769 386.246 129.537 385.758 128.597 384.779 cv
127.657 383.803 127.187 382.395 127.187 380.555 cv
cp
f
139.512 386 mo
139.512 370.968 li
141.358 370.968 li
141.358 386 li
139.512 386 li
cp
f
144.229 386 mo
144.229 375.11 li
146.075 375.11 li
146.075 386 li
144.229 386 li
cp
144.229 373.09 mo
144.229 370.968 li
146.075 370.968 li
146.075 373.09 li
144.229 373.09 li
cp
f
155.99 382.012 mo
157.805 382.247 li
157.607 383.498 157.099 384.478 156.282 385.185 cv
155.465 385.893 154.462 386.246 153.273 386.246 cv
151.783 386.246 150.584 385.759 149.679 384.785 cv
148.773 383.811 148.32 382.415 148.32 380.596 cv
148.32 379.421 148.515 378.392 148.905 377.51 cv
149.294 376.628 149.887 375.967 150.684 375.525 cv
151.48 375.085 152.347 374.864 153.283 374.864 cv
154.466 374.864 155.433 375.163 156.185 375.762 cv
156.937 376.359 157.419 377.209 157.631 378.31 cv
155.836 378.586 li
155.666 377.855 155.363 377.305 154.929 376.936 cv
154.495 376.566 153.97 376.382 153.355 376.382 cv
152.425 376.382 151.67 376.715 151.089 377.382 cv
150.508 378.048 150.217 379.103 150.217 380.545 cv
150.217 382.008 150.498 383.071 151.058 383.734 cv
151.619 384.397 152.35 384.729 153.252 384.729 cv
153.977 384.729 154.582 384.507 155.067 384.063 cv
155.553 383.618 155.86 382.934 155.99 382.012 cv
cp
f
1 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
0 313 mo
1 313 li
.194675 .150179 .156374 0 cmyk
@
[1.99511 3.99023 ] 0 dsh
4.99023 313 mo
1224 313 li
@
[] 0 dsh
1226 313 mo
1227 313 li
@
175 149 mo
176 149 li
@
[2.00382 4.00763 ] 0 dsh
180.008 149 mo
1224 149 li
@
[] 0 dsh
1226 149 mo
1227 149 li
@
665 0 mo
665 1 li
@
[2.00905 4.0181 ] 0 dsh
665 5.01813 mo
665 442.991 li
@
[] 0 dsh
665 445 mo
665 446 li
@
175 111 mo
176 111 li
@
[2.00382 4.00763 ] 0 dsh
180.008 111 mo
1224 111 li
@
[] 0 dsh
1226 111 mo
1227 111 li
@
175 69 mo
176 69 li
@
[2.00382 4.00763 ] 0 dsh
180.008 69 mo
1224 69 li
@
[] 0 dsh
1226 69 mo
1227 69 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 24.0%%AI8_CreatorVersion: 26.3.1%%For: (kyle Hamilton) ()%%Title: (nesy-table-diagram.eps)%%CreationDate: 6/30/22 8:54 AM%%Canvassize: 16383%AI5_FileFormat 14.0%AI24_DataStream%.((`,!*IH]""O#ZasW9=7%+Vd@%P38NiMU]TVuWC!.mO2iNbp&*Cs#']+Kl"!$VCCJ1h>_%*f9$KJg*>?$kUVB$#!4^TDe4U?VH]%Bf`uqR\j:r9o#P_N[X_:06[VM2,/SKXD,7p"2He;"gHuiY7/$L('%]9dkg?kC&4lE>(4<]g\OrlD"ZW;%BjUB>KsG'*33S8TBSCK%\aescj'-ukH9aX2BK11_?`RePlM4GpYo<n_MJ8KtZG0GbMW+GJeLXgQO*9R[%5<:6RMEVThse=JA$6<]Y.+)=RcT^kpZ9ir-_%ea%GNF8=IH-UYNUQ^b\`Q[GHdT1#VW66ObH=jirbgC(^B*3$G%GpkfsLX&jk7lSD#0H1Q:oP9<Z'G,bD"WA:#E/Qg%7cB0Q/mnI5YAh%+"^lLD\rZYgO<q,Y1^S@ZKXAU\ait>5$@s>RV1N:--P_mB#up^B@j7(G0SoGPU.66X/*U$-6E'R_X:PB^l7s2=RRiZhi.6sq@+Rn%1`Wj[>BXWp4b'g=&G57)],6W>`9rKjTW%f@__k`7!G6Y4?Z40qG[l%XZT&k`=lX4NVJ4Y$H^[,4a&AR4mmk1JOt1PMY-&RNL>p=3%+$J"),Z40&AV?X@W-Q#LkD$\.QOLcJ=E[,O!;L`tf0_#ITBc.Kg:$jt/,-2Z>(?ag=YP3\(u3r=Ai7*kAd/`!qot3GGLu&j[c,Sj%l:$$]E::uP]jqqsZ1\'Pj'#YaA`DmfnfL&8r2uc@s)C03O+sQXP%4:1ms6]9HBJrJ1r&h>0%ZtlkI@Y=CE1*)(qqQS]ks-baY3^$%=EKQEOt8tX4:cu.RIXK5^%%orh?"s5pcj7kOW4"G4n20G?^BI'XqsHc[^TO%Fuf>`h,;%8F0?"mGAZL-f>[RTL?/speUm,/Mn<c2%N&Aea2dULmmDcIAF)V#_\JAGb\,]Y%>J%6o]CjFB't&L/g\#OW>uS:k.^Rsa4k'*0dk.ndB@`I8/hOrF>BBiBj!Ro5aOP>oZWmtd%7?T4^g'kF#qP@Jd6S%F`!3W9[.@)n4_^kHsn:J//5lKDTc/HODU:/pJou?I@Y(S.b2/d8B_/]hB\rcN^S1i4X%GN\Z1P=]=j4R$Q%e>h>MFk8+d4o^@r-&S!?L%osqnXAI90MTqF6F4'4a3Yo+I7kQi<8VR2SiQd,3Rj7iXEHB#\1qj<XS^Qu4kH`1odp1EQ[QJPb\Y#^%H"Hss_X80JJ8uWJfF*.:!mX\/!/DZ.Y6X,b1(<)Pe[>4jK&[CB/j"_fRf!'5DLbf[jjkqlc1,Vam2G:Hm+Mo1ZK8qH^quDtR/lu)%ff,d@Y.Y+VYi!($K'W;WjgT-H0T<uTn+ZFn.i5AE!24bO/ba^,DI':c*PdZc@Q-QPcWp9_c*H>Gc#Po[E8Y%X>i-WblWSqYgR:!e%$n9`9"UCpOQ7PUeJ,HbbA'bKo@r\qo!,9Dtn,&)M:.pn+Rj[8`DSu:;T#%&J*S4QJb7:ac,q=Ec:"(j_'LgE9B^!j+r2(<grq"n_%L*QOdnXh2ncX3EBq>Z;Gj=#nXk=1N$Sj^ur1e#mkTBAQ/T4Jk6?S'U16r3FGgW%R0QfRa*cgoRlFmUqooVE3>q#K9pc%9)Fk120*%Nb^9BY.8JHU<3rH>3[JUi,6*R`EFb8G1fY:%(VMt.d?lXJ"ksoNh\%hk@o84%*t!'TdRb(F!<Vj1b;LE1s6I?5JML1NJAdjX=/--%$9+<irJuj8r&f1tSfH!^Sg>8'o^eU9:(oe8Ot8ujUY^cukJf7Sj*7$-1s9t4TBAbM/B9uHj>iMQks)q"8ts9=6!2g6IF]o6!cC2^%i>12]>h<_-j>VVM[6k0OT'$C#q)F,`)m6U0H2VsSE^4MPE#`@\E8?*"3!SPl=`A.n*YRYF(?\Hq>__hn#66C;@[uU4SDOAjELpBb%>CpY(Xa4TmSpT%=gk#p,G3'UU=YL5$M0]j8=#S\)LBZFM7)j99:V;9r=9N['QJfQ=P@599*ju5R^NU*qTF,QCm[^m,OR!nLJ/8Y&%J9h2t4=AI\HIs"'%"MKpJ=HMW!Sj<Z<`/lWc["tHDZ$$f_SaqF[[&K?\.41sC,:YJ\ZUBconKO)QRfZc:8&dp>kcZ!m)-6lg.]iT%otB><LTB<u%(foVb9>]Fm)GQ"L0[L?b&7+]J2)4?IcC\=ZWAgb`k#FUI-UN^>7rOgI'[/5Y$VqQUYYbMa0E85[<gFSlukD[7cqY\%%#X3c`51eD*T?;X^0T<:gAu]YQj)BTbF.%&4Ki>tI-<S>"3?X.4hG%o^ieF:]5cTQYkoHNmNob%[g$j@bFMWC>^*O2fP8=3h>qRY%hlKnt]rS]?*k'`J=6S@C:Ls6#M`Ib8Zb9oEQJn8Wc^GPR]ALqMNouj@hsrjuc)Z3'CeL)d^9t)b7b5;]'%8\P8H/Y8o/,3#APH37%RcZP'dpsc%8=Cau<KUNVO^u^Z'Z8h:lFN#=H(O2uY3l&:nc/W=q#AJ0X`&XZ55]j#+a`pb28=I;lPb574OnR:7IlZ.q#C))gTKkR%Y3S-+j>ral3gurAeanP/dmR3er2OI'r]7K)gU=6LfrpjA\W3T1Rd4XU,0?:NadQRBa8aoF<7b&Kf2FiaE?.c[D+S)pIU1QJ?.X4)%fC`+fhm^"!qf_u1L]@CgKthJSaK"R[[\qign?:mPlfd$1m9AHll`%=pqUnnYN[ENSNAZ.+MBTV2[P^9rRc"%8D->?ck3nf8gX[(l%[O"/mp8neY07L>=fbSF/en!$(mG"V3.d>X[<)<0d8'eWFff)LD[]FbST8]/029g(=d^-(O5KTAV5Ln/fD;4pE2\u'0gRb!Rqf]!%%s4R*Fqpr4TZgB,1caKp#WiXm^I1+;<Ib&=&[f'ao:A'gCCt\M]gU8+!`jVtjR\+EN;.SE[,tHNKe[?2][Um]ZI^3fjQ#4W_*C&49%n(ZE?M8Z`:hg?^/<V8K#e!m3^ahIRjo`'^'LLK*:f!i))q^.2K6d`WUD;1fK]!a2J[dCZ#kdmp4haDHigD34TFC!W:7Jhh6le493%D;2L9gU:tRZ7O2)/Bb>8gTiBRFY1eB7+&`VD-?R,'YSG>[M;4FD-KjgbI//)[Tus3>h=*5`P/&0\r's"Y%uddW$nf!MM`U8U8TK+%-&VDuD9Gfkf<m.u&Ojl@'[*d5gK#"WEEu"1'N%gD7BnC4;&&mSMPAb3D<j?B[]T:P/'GBo?52/FqmKd3n(2\f]gpImotE!/eU(.u%=7=lZ7D3&0'_T1Y.#ObUQR.N808_13[Un_%\sB2e-sDqnQXs<G08a>o\$d#?mnm$u]e<#UoNi5#EF$9P*_!d:^+?tl?51*I^2N^l%#8#hs]G0cb8!I5f\'+KZS_Q5Gk7>*l%(l(F<eGreREtcSRei`UhR=H5Igf+./56iWW;gNJqXY(TPXJ51U8[<LoD<),XsYZ>+i>tC%hRkM.dnS:J!V!rMZLs)Q/Qi.*pNGZp]jip2L?-F@SEE6,%(XiZh"f!P$VSnf7?J"ns%kO7\WJF+M3au?q@=VHaa*<DImhV%4?`O<%&cFgnL?OGJ+$EK-r;LAMUZoI*Sf^,?ne990>J.1R#0AO38bqm0mT3#P@CpsjUg.m(QJYo<f9?]YhFPd/\V4>(!P"M"9lk=_H%tck%4PR(&IUBJjEoT',>B9uX\]#N"XH2`QOPTSXeLi1+refF=P$?Qt/;NLLY'IZ%a,jN<"5qL2X!t?Kp8r0^TU!DH!:[i+hJ\]".f,5W%;3(9X%$TRnMB)HjpNC%mp4CT<jN:@/3R;tg@EWD07aH4$P%XQ5le@/$Y@le/KjcEbUdme9*(,d9SjQ-`4iopS,s(nm*643Nbs.pG%C6kLTa:]N@d4E?-S*4O7Sm,GlRC2e6Esqjk_tX+YhNp=)Us+_M2fA0">W\/_.r*s0+,8RFITNkEVA7"V8EtsF[;Rgd)b2jfb]3QH%3;8`rQ^crE2h7/tf_$61X)5VQ\`V]<40,Vuep]b9V>#uA,tF[ojA7VmcB;B;Qm47%DTT:HdX,Nid;5f/;AC8g3jY=)U2R0K6-)RG%$F#W99hl8(>ZbfE,t6).19*m)5O*QC;\Yk(2NP,+0kh3F8E98bU1Nl$&>B!/78<`'SMOZO_\&O.N)\^*@3J/bA"S5-lqu2E6QjlJ%jedlMX\1kM-_^-]d:nQ/Q(t)KR>"<t"j;7sM$N*NI_J8d)1ZuC[P(1/8g.C>Q6obRAD[eSfu6Pl[0d9bLF6t9;ZeL%Zk.muOVPh2%d(q2i;HS;o"NdTZK'[S0-Y64FKW_3kOK``d[!i@g0(PRlK)p>'!\Bf!S/.*N%730qA0c.g5Ur!bg>F>gajbZ><"r+VTncE:\RZ81%_PDhuPMu\%SM#N@\"b)>/T-!)[g,`b5K^36;*oJE7;3jV:J9Q`\dm&:,+G5X2KFEk,,6A83fWZB4OB!Fm,<L5&+ndPo^GNhR<i:D%;8MW8n:JN]U,(dGDRoG9-+bpkJ__sWHL93TL',X;2@TZL4QX#&,r"hn#O`%jRj.$C^rL$Er0-'/bC+Kdmk$Tf`nbW`St,C:+?Joe%?SDc2#H1&:TcGgpX@LQ9pOI>=CV]a,iLJ@8!mWr+Jb'C0i#FNqE/p@pS<*MY5]AnP?pJZ`i10B>#uC7d#iV9]QoO9D_Dugg3mK%P%P&l6-i-YNaL%$@dX*8aE-70p:MbY@iIQrtH!k0qZOf@WA=h$E>Wmlek%lXF9NH>>n7j>o-hk-=(*?Jb5VU-HJ%HtVN>M>.,bruTX%/=hn+ZT"tNij0kD`%E(:AUQ@7<[;J""]XW_]]e"l1OW^I(8m*/0H(fM=G/^hUGImK?-?]EBEiKb%(RV"ph\,[WPW<>Web#0M%H#t%<?mJ]/f'Ej\ibp/INnn(c:`K,q"Cg/&C"CdB6@C_=/'NAQ-7Ai#ji-qFDFX;B8*9c*)TA9ic%#=<JOMP\K;;L^`A7S&(e1g&7!dL%J5XKUGu`BEA#Jm*,Z`%r&!`A)'`(]NKF+FMjq?Ske=^nRPSo,9'B[aMSQ6+-j&GeKr05V[P=YcBX,4/&SLIj<=p(^iGSrd!Y&FBi%8S/%q+or=$?sj?C([Q0no+.?`X3c\TR08dV@V'(';Vr;rDaTDQ-m_HJ]'>ENT)tdLl_TW]:S\rK,R'M_PJT)Ld"*B01'XZeFW_cW%d,Hel#n99R6tk\n?_GYP_#ZD7TG-CS"<9gR)q8N^!@OL9i<;GoZ\1.kcN?9u*]#-,4IuWr4C.3^3rOSH3eFn*4#PWHGAbp$im^Y_%$>8;650"e0co-`L?srRhMVTu?bdV"TNL<6l+@hk$8Z?H40@SBh7O4;agP8.hbSl&]N/36p-8luu@1]HtK8KMj"&l5G"6P=EYRBa1%Sr3k#i4.DAS&6P#752mk#5VH7_4+Ub^XcQQ#o]kGXFX1oeob^R]mp`\=,`MDqNa`],`8\cYa"g4H:m"=Zq6#&:D6OQ<@4YC5u&EU%Jkt`[ZYDk5=4<ltOO;deOeFAO&?nRaVN@T@S.Q't(-othUS:m+2EJ,#\$<0GAn/,pCXkrY<]!si<m,o@eeI`+<CCN7eRR-OA2&k5%,.4=%O]ef=7UiZX+Tc]o1"A.-NRV%/,uNV%=&``Y'N]#%X9IS]n:;EE;h]ac%1#7*\pj:29sj>@K:t5b;lrV5Z;mTC'PNk/c&=n;%XWT6boX&'JBmlBp;N\?5NXJ.;Ej/rS`mM1*WFIMC'FpCYMq7)cVq\/S@%7E@>9OGrE:AjLGAft.%$jbKJN9tXL2C=$7QXaC`Z/=k%%+YH2(GtJ1/LD!ZA\eQ;@aQX@Lde%XdccPWWmCrDdQqSE+bF_emmfTQ1I,H3$[c\+WPCM`f#pW`.#kQOUJ43tWiMG&,3HIJb'kfq%8JfmpCg.opQD4ap(.p!WN">HY9RT$rncMA8P+i<0ne"/18e[>[OoD1bOkg3MOaUL_UqdtDjGf7HUeMEfZ#;OooStj25oKo5aYFXU%L1Bl,)]\fg,T+iD-72%bkXi-L9TBrfOfPGG`_r$cCaU,*(tpo5DsL1_"R27LlfH0M3W5Pcn\5F[qA4-"EnIjH%9MLIk>7Q9DC'sY%+%HT[RP;Z".Qs"F19r:HcH;4#QcK[s\&Gg/q=([U8G!AaE:>@lLB`nGJdXtL63<g)0/ar1;HlG-coT".a.iY3edsD70U=<\7gWJV%O3k[u^<o5gq+M\2q;PDJr%\?dn+-UaRKDXIA;\UPUf*!q;P][cnO51,BiKed=I9FKm0\OU,RY;2fkQh7LalFljIAi!^("o0-3:Ta%,V^u')@9-7rJAT<F\%l@_<lY`-K]GTi-I701\,!5U%)Ao`Hj$8L#Jljo6[B:f6IItq*kd_?l?iB`[_2WSP'64/p%XX6)5Y"-6"BE%"H>R0Lqu@86[1Gr,KM[<FUq:UG8EHD]$Y79FY2:el"lYDkrp'ZkY_i/lo<i/G-!W3kQI6nI40Lh5%&%slbIO8VF0;eK+9?rAIa,5%0j;]X5%BVjU.!0,$$CY$mRReB#=N_S;AIF"i0?p$+Tnd=%.jQA)'5c6@q^9K'uN"<+pJ^U__?Hcd:aYRYJQqLf`f9l;q)03Lm8>M%jSLG!D1oT,=A:gX"\59e.`aACVJm-4PJTV>+bbK/ZR@L1k#e9hKs/j;aUEmND=PK%je=h,Q&>5INjUoB(8EqT(6gl@1I&Qo>V[>N%JPH!]jWhHWBgL53SpH`/Fu<\e)/<KuBLmjFW%iPs-9"Ytfd[j?G0.6""+u;#i.sW3@C#Yt"G`Q;&BL!#+Xg<P684)Z9&T=f-.#O:%PV<JbOq>5Z4J?\t$-FL*eqAV4H>E_;QWgTuYgjs/@[A/UbW`4S:qI]k+J@-2^sEN_",.s()N5[MBAel20S@r+."dLJ_[ZfY*lu.9%:c/Hc4$*\==<Ii]8IPiPUQck>@'kNt!UMNV#))gt(mH2]/Z>0Z>&^2@1BFTlJd&p+E![qB[M#D2-RB>BW_(!FI7XDOh'%@)M*6GF%e(P'c'GEqI=&'LHGX8`hNsE*#qF3!c&4+2kU]Qam?jI5HbpfkJ@\dCt#t4m4c$4f>gBrL]XI^P&JfOuJ6)5XE7-K2pk#T!Bne3s[%NEA#$q)1%,Pnl/NnHBfFh&43eC!4Km7\E=)rpbeF4@+Qug_=s/g^K<=*9KcuE(OLcEC$ZQiZXHqnM*u<E*-CgGbls1Giq4H4Om^G%=)3[$+4-Ja2pn25+Z)s;$$APN;hKXdpPhTm,2<Q;#_+j&&&,<E.5sa##JXCm#"S41JlBZ)j^JF7ni@MS*&U9OgsRU4]F<=Y/s,8B%>G`G3%VOq7"+Gg6;li/(PF*%hKG#SUh]dZ4a$7QI_<6lTirei3^aFS>i8_gSi#H?P^@FI=CY6RU02;ZO0+9gISIH/r)*!DZS9+99%Gc02(i1/7/`m-SO&-eYS#+[#,GbL/h!TeQHq0o&_0K(>0cEBSKP*\kjBE]HaP4T2QQNH7Ka2t`t&rs'O/1He@!fBpm$*Wp8<F8aF%:CNQI(B^VoOFr)("]1,/MfmkGTCUqZRQZA#P_P?%@p'pJRJTi-O#%rA83@%ZF+<W(A?$@`""I[TUNS7.%?ZT3[O(gn)%@!:l[YX?%[1h=;Fl8Lh,S5Mm8u\>nY3"/BI3NVC;@9<%Y3\knXgtF^P'.:*B;0!\"-5!i@t=Z[F<!gIk+u<c<=L/\b@B"#+TbdURD]4hm/LT.%:4[IM=[5"_QAsEM/#T&'*hA+]HT4:!DZ^1PJ:1h/on9(.Z9,aZ"[qGt;.BX+=0Nd7OX192Z+JY?Ch>H]S=^QE)C/nRPu`V+E6`a'%jd[\\fdD2H3To1_E6_mc@f[`Mc?\P;92uUH_%H`6\q5#&@%:]EQ/J0:.P-j<jIC9eJoa,$+d!)S3Tj`nXE81_2fR%U"jZpLIT67K%SF`2b3KIMp;uN5-5+lfqbCO_c!Ppdsl8Tk>@).:eA5ORiaCYJ#,YeDY\aKQS[3h>.`q>0JlL)(hPd1<m0hk<RLGT+];E3if95nfb%B"]a@<\!E*Kd.^1MJl2+G?i>(!Sl#eWaAO!$@k,VkC5qnZ-3!Z'EH?2q#^W+B&=G[NG)DmKX4=SXCb*Fc`HrMlSlU`J#bRF]/&'!%=#;J7^XX<Na_q'k>hGWZR,_eH6c1[<E1ht"nA[:)YFc=q_M+Wl=&HN3EptZ]>XdaH(<geKGKV]#>KsGI%JR'lgG=Gq/slk?E2IBX%8.KDm@lE!t.&lODF3(;-h[Cc-j_rP1nh(O^jYqeAa`jG3J3Si(,@>Mb6pA>uaLbi'aG\s`aJ35,j'cl=nLrK&j&;BR`[fE]`+.`9%okN[<qLp+?nR,$7nZrW.H$q2g(_%"PV$p.Z3BdqJTF>'oKEbcP9V'cf#NU;&B;euP2[Fst.7j-JW/-Z.eO/Y]M!]rHJ._u<Lp=*l%nU7a*"!0>%XLrLn^:pd+bd+*n2kZd-<Mn6*Zj*SI65oq:r)T0D>@%4i/6j513=OeR5pDH03]6G_"c:a.ke9=c%LX)t6o0fn.tO0n%"ej,#''mT,,jT2aH+HD1-?NsbMY[O[CIi(3XcqGA8%c*F/[YFj&A+2(c8^7LHq5>WiDWVO3o`nGSDL`uejBu<68(Y9dEl#Y4F_u)%U1He]$"DdC1X"_i>.t/+]S$g==,Fc[e$$\>0j(8MM6Vhk]pLU4'QUsPe>#k,oVPGkTCPmR^?UKPYH"u=[F@FfX;<1t^gRBgf'\RK%0U<]AHX:rG'gW)!<YND;l6SD"_^G@?,a!?!7<<c'Vner].1)3&MUdZ6:i[J@ephQf3-A^nn2PMDZ7_LKqidPVj,M["WYe&(K8E..%!`NeqFWQa.629#d$W8pL#1c483B8D5_"KlIX<9Cu<bineIH+#6#?uMSf`Cqo&,'LY#OKM57b1DUJfGJf_B?L@E!jOF:-o_N-mVK>%Z:.K9>"rWp0-jDC8gVB+C^.VW.Pg_^1Mi"A&k5KFcrF7Nd9_N<SXQ?sW_Rgre)ZDoKckIdBVlAUF;T9+DRe+g'@T?K&;^_rP=]5&%)-dBt<gp+Dm@tlB0=,"-b3[`41Aga8MW/9=0'0g%Pl"eN9+O0RO^I<Ff3(5KcD@#(LY,`l/f,G-=[L<U,19:Sbn=2lLN,VabUeMQ%5nkoWRO*@:%b$5Rq+<2,ML<Q>"=]R1,=R&PikSqmiX#>>:@H[Opf?"B7?AP(GA(:5,RIV;,bu)"$-HaPP#-biMNS)Wn[K3"aoE.^%G2T\//3@gLC[LJ];GAic6^"*UnuRT2AhASAUR^NU;OekW:`;#0DnsT7CDcG;BghofLS42$GGo8!W>k^m0I+qBb3=1["8`bZS1Rda%&f*YL<u>]V[R;67)@,Bm]RIasI&^@U&2_bQ(Q:MaCKTgM&5\>\XWBC:/K`0rO;KOb5quJnQV`SC[4"",<#&Yi&g_e&,:e#r?M51[%aU[C+3lrL[.l7Po$W[J2O\d*\CK.A(<fN]\neV*Y+GoBYb)=.n0n0AAe`H2KUstZ#V1cMh^X_F=?Uq+p,kA/V%uYp>e5-VWM1kXL%bqr!^#XR\F"JO#f-+ZL2kgC^kPt[?[mJ"UGq.Ku!Lt$^VBJPKXd3S*`B_>b47(CsQM?m:OrItk+q'1AMT1S<r82Z3\in'FlqNUmR%Pl(;\Wc,PVGgmimPT\O.iPRFWHl>TgCR4Hu\V-9:7;rPT2&[cs[O$<_*=QPPIV4`^*ehL[qM.Qe-941<ho\-29&K"-:;+BtO#mIj%;D/0$b0*QKg765+fjXXY<&SGn*d?mDlo?h6-EW,Qb5S3uorW)e[RLn>&jAn#<hpBT$&UT3kX8":..p;dOsEZlC6HYpP%P$6^*+$h%!s_[j<((t-PQnGq-Tu]4LI@it].?s_\RQk/#FeagUBj5D:f+&<Kh@imNDMVhn\,G`0=tQcM81_9D']6ph*X3u=/e%-22rG=&26uq%MA[I+kJS<^9f^0j4dgPX:JdlR\LAc*=.i`JW>fCi_Wh+G4ifYN")l7m8*]c,9O/?[Q),PbZr.3:lNRh=e4M%^#:3"3ObZ[#OE!SU%Pi>Y]N%FYs-O*4_PMeIjqo":4QOao4fnG5qJ1]TL5H7<-2icRu,%bp(eOo)f!BG$N+g`1\KV5"M&a@QH=!b$m-q/U\XY*CuX36FY%lJaKqjKBkmU-sn:O<ei`r`U?Y0&O-!<Mq0XSa+s<iUZ_n_skFY,&p_pI,>Wi0['f-T+SRNJbs!]DFWQIJrjT5Ubn9LP)`'iN5,n9%M80Q0$(A]<F\2EY#(i>;)-e@kRYXM*La40E9Tj@k)-e4K1V!?+P5(WmI_EXg@3G=o(b-^t0N:HMMDG)%ZY1-!U.L0JbmP6uG,1!$%_-^l,80H=`9gPSXq_j/[2oMCg;>_?0gt0k3P8S"rc8_$[6TV.oI^S?p@A'?>6f1;g=Ze>/`L\;a%m>/MEM5HakTO9r$(CQAoFMCs%M0P^+]S@Qfbum.k$V<\l@a,NLB$hms/2VIlJ4'o&>S+jCYutZBJRCbT7E]M!VVfW>*qMoY9iA.rCL[rEGdE1GC@LX`XO=SoD4c8'%eoBA,8R+X+=(2h"<HR6C:@IkR8<H\n:!g7cr_$ZP%"_#qFVi0YiDB_5;WNb:e>%E6$Xof$O\\X=eGG)"i370_BEjfqZp\g`P]C-g%[fJeW0`6aI*EZ-haIfgdBR3c@@$%.h^*P%]:GEF9E712:*/5R*\Fh;GNLe>0\%96([mME,ql;>@`Cm"MqQ5*8A/p>BW21uB/G33#%?dW<>m+!APg]BD;6hfmip)NW!QC=TjaI4A_iA)#0`&<e3YEtmh1X79=qBdY=S9LVS@4pNVPDDnq!hZ94U/^>U'1FAC,^kRuFJ:UA%StR@FOs"jl7,J2jB`e)a4N:'aLg$[^G^/Sp_`>+Y+\AJ96INu#TNL^p_]Q*9%.%2/<=rZXj&.o@ER#i@,b<R88_>tF@"P7$[hi!X%cO!=meA+X=et++7)m()6fK3g;&W[=q']oHEof=-i72\XLTgT.e[179sn[NS@9tanC^--cRMUh#3Vo+lk7c+u<`LrE(LbaN:):1oF%*R4DG`YRp['L8>%ombO"m*]"fI5BDGg0da'ArMK=KrS<N3!^GmKRn]:7`m.i$AB7qQjE&mWS@opl%9Ub[/s6?S9^kS?t<le@X*<"%E#aTcW&]d]BhJRY,4&>?(`[')/r]Q7n4$^88.Nucj>-lJ`,o[#&-o2d2t8\UT)OhNk?YmE]!B&kqDBN"/?%&*YU/lAC0/:^6@)aq%c)C).+f=OB;H_P;BFib)Mu[)oB.9'u//F"/3.D6ma-9jAb"CYeVHV?qh9*jLY60NF?P/1'j%51KLqr%:5ep@;6j7=QX3:8)@<XsX%Kk)/=."jtI.HI3JI'/3Ua1(]Cn?+OHUjt.!$G:obXCP?ZV;o%,P0lk7N_3O/XDaZN(We'^kDg-J<*)'qXD-0C%^,ZL@n#t/Z3i/d%U!(InYSTW?#+$?F:^WGNZ=4+u%+f*Fq%)/rYQP;?7CfY/D^l:WT;G&2A!-sK\NFHslTqN>/-i$I`qns8pn01B.O'Q=Xk$Jd%hm4)%:2)GX$6]aZVVKdU<:;C%)s-uYMaq:i,Ah=d?a[&M]Q3>,^`.^6X:'WYdYr8L7Og%LUD-NAhRtBghe*'T:IB<][fgVK_G]H="0RK-%O5!O!mCIHT=rrp6KEYO1<NH"_pl(kI(C6;HQmda>n.@9BTVJ$J\4W0g>"r38>$dp_6$V8i$I*:Q_%Ih>EUV@l=]%cd^545KRF*aK%,.:;H1pnp@'^Jsl[Q0mR*E5XoB%Y::j>XPUOqJ3rJV=k")NZl,78/?JM#:dkV<Yi[0A.I/F92Q5QZ<[[WK1*hoZ`;dpECLm+-3:Z%5o-h"hp<#\j&o@9P*psN'c=`2g72N-_!W-c<1"N[&85W%M9.Je*gG+X^Or9Q8.=q#Q-@-];#Nd);C*[H/WFO8QM!OXK3rsd[D$RK%5P#H1="DXB[.U9D3-ca'%S$.D/>WP4JUrqQPf^2DKjAo8@JI>tF)p!mf/F.0JHB2\&=H^DSsAM=TDB=!9[GaR(cWsQELOp7CF#:;%h.Hl(jg.X'aC`qEh_HFr@_g3?M>(Q=9jc8LTPpA,W:d%9Lq4EN@8Jj'^@`f`@<E]?W`n4;H6sKqJtO8c4$$9Vd:q3\q[1qRY1Cro%44U?7-?_qg%%Z[t_+KbU%LXkL=F@q5i(ZuDn/4Na@CoH4Z5Ie%@ofU-m8)#drU$k."[5Mkg5-EVEPOH^YgVRYfQ4uqO['G`@pRh+%&+h("r-lW(9L99TlTepE_W!6:6j"':+''f[YXE_/hX>dq-k8XU@2rV28l`gidZ'8^$^-d4#\*uER`:P(BU7g1MZ<RG4FKeI'0SpL%/3ca]A,(nV.?:-:RcX=$kRU0//sK9teMg\QOgshpU%KA6A='T(]E)CKKCVABMOL=1J'n.t<55p?MZ9;dh/[;%fS+6GY))'2MhPGh%>HS28J;cA+@VtgpMoA<o!30D:T%=_t])h!8@Bk(;QgES1f<\SpDJ4*"\1nsXiV9l"pX.<DUA6`Pji39\\T"TdYKHYM!$oj..d+9?%h\`'!<`>UUIYq?KCaF2T.[]Lj7-4=nA%:rJLM_b(4Qf;]F/[3S-:a5k$b:5WhZ-nT99uBjE(^:@b8E&up$L2:D^A!!\&XltjfT:l%8PoXT<%S\a4?tLb8aEs+2Pe^j+8h`Tn\$T=C$i#?a%-fY^ASUB;7m,u:lt`@O9;YPM810s5LHrn:F$Q&MGGK1$!!^<U$krfW2eD+%fCdDSS#QR'gA2p75#b0_mD?h7X9T;he%k"j)=E`VZ;7*K'_u,@2$s/G?j1Eb%PS6aJmjgqLOk?Bj2h=&3@#5.$=;VuLjAP^"Tkr^%*kp]$=?Qt\kX5Jp'gN<A%d7[joFO0L=$ri+\=b3XboRp4h\7!Y,kNo!`rm,p;UG<O@:B+,-c-CqUnFW2*0?EQCEgEiA=j,<(GbYG%Kn?4aBa6(/C(btPPTW<Z3T<K'a>]qM![[IS,j8ls8J7%/kW]^Pp36$*SeX3d)#OLld+]sE7[c?.!VCY/KMpYLUi2bamNRrjA0a1Z%S'th_<u,^=eF.bL<Y]2h8Hp?64epR8Zj`>41gF@=aLF>Kd("I;!MU&F7FVK<eS#N4Ej9q=hoOI[qGWW@Zu(#5lrk%$g<Ope;f@%p%$K;RlAEk1)V:>)a1A1RB.u<)>9F2ohJ=nq[+mGW/'Hgm@d.`MB@mpFJ=+)_E^e+opWE7@^P&W>5F2S_^AEqF7E($R0G?Ui7++YXl%ot[uQI`7+S51i)O6rXKbI1&>Ol?Q,t5QVU6+8'a`S0fn?F-@1@VUK3-h2eWZ?Fd9W(Q5'^%Is;SLkc"VFC,%m;bo+tl4h3a!u8cc%)M?NQ6QK3_9YIe'@"i!D9YJfH@"j#eA.f96_!7#\pN`rB.(0ITkTL($ph@b",j\`%ZT<aN[)aM?XYfgAW'oMW/.^dO2qhP80LN]U%^m=n!'(khs.ImoX'(g97i.`Qr)EtIr-"9kHcCdc>cl5ZH(Tr!36:MTJCk/sQQ46.`X]8<nNT?Lt<_9DN?qG8e^t.(CVJTp';boQb%JFGPCW!)W(6.Qn7p%!X!!C\;fX>Vu;f?9l*`Ik*s6>Akb7u/>SL1Bb5nWX(A'o7OuN_U"n5oWUa<Rp&L">h_AL["2o.NTf7X5\j;%i]n=c<sB@H?rb^DAfe?uZVoe`QA.If637eMT1R-"IHu&oaW\Zii'=G%a`C)Wd'p_tIc#OODggs+7qm)r-PP;__'pJLirY*:!OI8]%gR&*IHt0?e&I8L@JO%o'@q#n[1NasAf9&a4f4DTi/rcnB9C[eT+laS(6C'2ELXI@+*CtS\ALKi$PRIW2WUotG;J*fRCL=M)'ji@9%peDOodR=@fo5JJfh\)a05gAr+f`jF9Gb^1Yq6*]b%o?/*(pHNU;2k;?g11o-iBShif+N&bUdN-8]Go5D*&;@o(GULa_F86OT=u\7%+_Ya@,D"^d:m:D<DEr,0B&,DA>1!#'r6,?pi_1,4.:iH]ahbOL$PYR[Z`8.JVH2+LisN0mdA9^llcX$74q@%F#ZR+9I1'&C;Ch!9%hteZ;Q#OWVqaPmV75r$@ojEk4`k(<3(A';=MM4<q$/p.\0]*peU[e%cU^_d[pLM.lq_a%sO6,m@.?i]I!9$1F//"XA(nj5T"[rY_%.h+86NDOo96"mPj7d/e$I"bS*"+s-8-Wp5r2im"H2g`o\;Ccn$<#sjE:'G893o2:i95qd7^uKj<Aa38d%tka;E4u"l."_3FhE_Cp%BFg;gYUFlaN2nReLtG2Z&W3u7-'(=p;1UPA,*Ss1$)DL#%?(1tD^h!pQ)rV<>R]hJMs];mLFA=J5]9Kh"AdNia!mfXK""-J_,F32%n5&opgnR7D^<e\thL6Qiitkk`EJsotn@i=E>(S[;#)&lP#p/nE*_-Aj*A?l9_\53+Vu)ng_W;(*VClIKL^*Kf/?gh:RUm$4Kn!'a%a7=W]^Grl(72(f_7rumE?2(I>omheTL&8og6<4rkhm^>5,*j>YV3J^eX]/52#`W@+60^cEYE0^q&GsJ?[3eJtPoQIk*#t9rW[MNV%f!eFW,:C6L9$k:l)N>>LH`W1k=k2t^`MW_u;UL&s)M-+2$Dsf*,QdkXPR(;q4h\VEorW.\P9<bsPX)tp]PlVT+aDm(Maq()Eef4Q%YC/5MJj\q#>0;C'H\aCAWer(Tp&s>j+u3s2P/B2F+)@#KZH0W*0\Q^SIXn5m-B]dKUbYDiJQe^]8`(/^;h@=a?P<1=QIB#YP+l8(%2[I6I+sRD+imuc%X_9OJ"-"cCBp9;H;O/"3c#?DcoC^`e5Zh]=R8RC8Ked%+<NBTdAdFOZiJkXmdnC>kjM'*H;EUPh=@a<j^7hF<%FV^%'lu9)7b4DkeR#(i0Uf`-EQm@*LWKcp/gjLuP<fibZ=)hZC8JVj=iR:11Urj[@$#<uV(IfQZ4?A7M/-<SL"iQ$r$rZK:_@*d$%';-34e(?>n$"LEOiE:k76'VW\@1G`cO]`N_n8tS^;<.Q+5O'2TC-fV+k0@D3`rR\R%M'n"#tR74lUiiP$I+7og..FYkf]np,*:M;%QiQJEm(ioJ"p0gR24V2DYraS(0X;h/Dj\O[UCJ]/<"%HF.L?@9WOCfrL`inBp'O\dKQ>*%+0sDV??%H>,(f%RgAV6,Hn;H_#^G.Q%8gS^D`h(0M.erbBM0U:bH&oc27#t".5/VfN_E0Vr+L=a0#3jl:QQORQacI&L;.2\`6`-I=Gu2AlKc2`>_H&r/>?MM-@O4q5GEiKu%]6+1$eYFD+%\Y%EDtE6N`f_+*oI[_;WV<p(8FJ9I99lJWMTAISn.LHgiPfl6Vp7t%?^iO&&%)mhHI7NiU.)pALu'<VIl@Z<'Ar*G%-OqkY_d#esO5eOqY)YiGT(g62"6E:?WV7ENclYa&lg#1OH4$*6Ih3n2#^US!:0H(/DD?YKILskJ[1#Gi%N\V9m$g>9Yl*550G.MJ%jRP5\KrM:T-j(A[OKWgMKWKbTe%S,/dUXn#Tu.'(d$^[NGp61*i(4`-,X!%WOPO2Y9UQ3O'!E#Fip-esh`Qfg&q6j<#etqJik^2X%Jbb!0BnE4:QpH0Q$4Re^'`qt3SLQDf-uJ/kY"/RKp!1dJ[,^Ha&r?J9G@cf"i._J:EN4gKS-[p>$ctXUG88)\Y8-7ONS<W`=pI*b%L]W^"pc&[h+VM:nJi--:`'?c]T4\?(^<OAYbI\))8gT)1e>kTa!J*hD%YYaUHkc2>E?qS-Q+iWi<Q-A>e90^UPs,=s8tb(e_&5a$%D$aEP*U74+iY`?C9o0IbLsW2e5i7!CmLqc%oFOS6d+^/LoYZrBqVK*jrJ0?^^8@iJ5bB0!7-L`moQDZ)0i1aF%o#=H[sNiB7#t:Z%U#/O/%q6lYY<rf;7k*-ub(EC!JVrI!`M@Dn"$tI4?^kLGL7`uQ(+;b1==ar;QLESm0W(KR5o3iP[-/[%7\bl6+c.HcpjM%gTTH.>%&;2Y=KhOX_b^L':dQetlJVrH(':C<S.Z.#t8<H\U?Pl>"*/8q\kYeNs7W?7;KlUjB4i)HCdHI=YR!GR#OLq80bN#I[XPde$G8sT_%'q?MK$I4a0*k)D[`IX4BR09M?Se*=!f;P79_Eq&9UkAq*[X\oIT&o]@-(tg`ocuBP57Nu0_Y#Iph?_mJ4M`mV<*Fk/H6u3#.pu&)%`:Qq9AYt!<Nljk'+FL1mc-!`]0f&k_4_-\)'<s4m?/HJQK(%Pb1ZFj$L=A%H#kf.RpbcGCZE1+5kX/I:W0./QZmtgs,)-TIEi>!6%UUC6jD5W.V#9jXmEp==fY>P0dlTPc6i.m.;+"/iHP7Et[]fAbQMFLMUBan_;OK$iX$,2$WXifa!N?]>m.CRqEd';#%n_g&@;1YC`%?j4a7_s*;NE=t7,?9n"H^e"ZKTc2(.dXi3gQslp-oHgM:QqE+[ON<4XOu,]C'*(9G,T`,+#*Wb&ir^!G"$][7<^oh80Hu`QA!&`%%$A\gVMS^bQK-1M#N%r;sU]E,p*.Z`\Oe56q9CXQ:Qhq$!"hI;5KhjOj-;DiY$Lo3/:DVoIVIOWp1Y(C>LUMe&.*!^i)5iV)o`D8"%+*>68qg9j9#Qf,3:;C1,*Cu&rNF=T7%2Wqta_*jG%16t2HLdiOG(mk0hLkCMl6<FNkE"+"q7,i%oSO1/k=KlhrMIL1im+P6LSf&9%`N6,')B)#C;@#(>r^U5e'f/IJUs/$&CnEpIj[Jt:^eg9,efKi_-'@S7YKD[LT0,tsA%L(p!ge*Wl8Y_DU!iU'K#M/I+ntW4`u.L^%q(:<=>[)Dp!ei[Q@<F#"d^fQgQ*s'2i='a2k$Wp0">uJ6C%u1[ddFAfSk_(ReP1`5K4rp]c^<$8=6<=<1qibWg[)`U`B'A@rp?EH%'"q$hOpJEdJXi=f5m3o^JHhhYZUP(d<Io[9Z@`F9Plb*^]ur\aT4Q+%O/aTTm:/cDDf1nN)?l<!50MrOn<b!TMTPKFFe'D5.OH9,%Rr9EuX'MK.gefIH=jE/MFej:ViMK$fCrJ4dqGraKT9W7P;tQ2]&e3I_/ot0uQpMmY2i@^YQ1@0u:eX0k>abNk%]o\i<*7Ii;8elO%9S#i;gYkgWnTl4!]'-p9h4lIL;8(nko-D]!FunUcUiL[g-kAC6%/S,/M13*MEO,Jhi<n]bpJe'fFBu51ca9LjmGY9HI`>jU@rK\E%f:7[i=HmgYgHCc<s5Oh=:p?bfR?[BHdFocil?[qEHN4kek+#f[N#I68==g+qj^pBh#+c4]fZJ@>Q91<<k,H/i?i*]AA::]WVJ2-(%UO-)ef[H*rA92Sb/J`2*7c8o!aiLqnW;YiW:44'&kHM%9E/9_]oJ9,aQ>W^-R"T*rYd+n,")=Pq#q,(V6o6:qJJZ14IS?Jn<SBZ7%(Lr!eWefeqGlZkQ&4SPO["&!kSSYme6B98=NB7:0TBmeMJM2O?D4C<Y7$m^QK8AKM#Pq2-iY;t@"3D-i-R(H>0ON*jG:6uM8li\E%r7b!.MiC,W&<Ltg[&kV2Z%9\Q?DkOu*!'Df;(.!&5Hn]J1I[UC+bnbO,N\75q1\pMJ^elmCf0>'RI%P,3lGRU-jD>3V^-nXj76DB%V3-i0L9!I,DHLIAHuFm%CgWnI.tDD0fpZRM)9iJ-23gd/D3bsNWA,Y!A)ABJKIDgJlZ8l>*e?s+=ID?<+.\MUk"oU>D=._gLjK+V%7V>HjO9@np<1[KCGps@8)-E[pYi'4-$`Ya;ZLZ.9TVIKfV!LX"8*8?6r0;:<f<>QJPi7[OaeRT`[IakL,O[c&99]EOYsf+i6^`Q=%<=_A8eptsN-Hsd[c0(N,Rt!?s)+/CZ]4]#nBuGmg3sd<"CEQRZWFmn2BG6"5.69_T/715b@_2FmX[`uX$C&dEqe%$#jg`h[^frET%3%rUA4b<o'Q%(&Z;'uj(d#je]6K*\SY?&W`Q*A[:[>r+g[4tUPlpUQs.KbT#&nj[&E#A/t<UBj2$d24,TD3"5:9ciM$[YQ:Y-,)P%J>BT%c\QbuLq?8u@?T%MJZ$,CZP+I".VS4,IrD)k_RSeO*K#pB6(C;gcp%X*nHY7@3/.7FZX'#T3['RV/&k$1qCWENRFSW]HTE7c%SrK33$_VEcj%q8TrFGP-c"i.YCNH6JGqt6#@.ssclp3ClL#cf#.QKkKo!YEM$M.KG%gO/h)n33V6B=ca)X&''"/_6mo&-sKRYrOY%\^;?W]qKr>2:i^j9ilV+QS,4.m2pKLag5dB=nY6s&p=_Q8h]NL.<W>HACp&@HqdnuReS#K1s=Z1bo'E'a.@1B0m-P)QI0JQAF\,3%7LDL*/GIYbB<J_m/QFU9!ic'tM.8d+O+Pm+mOi0;h1oaJE:WI9@Aga#='HfEmZ*b+T'kAWFa*d4Z(LHY+E`0hD=!7V8_kmm2r9k6%^SgMj[/aQ>`_"uj:H(V@]c-hgjL/FT3UE&agf?G,^N,9mPlV).T2!rPO-f=#5MVK&fahZQ[SkdP*Q7K9PJDG/_>?WB)i,?Cnho&P%Q%P0R@hU7RD]&T@kE3+aDdR=@UR_.0"/qlAUE<=(&]O%-Cf#>3"TD1/L!D>;G\.36+,Mc[<D(Ba5b=15>sJJ_$NlF/"M!S/TLRFq%?FZBE]>6742Tbmr*T\^.f?C!XVA452kUDfaCQ5:(a5iZD`&Sk#)4S=]#U1\K0Ggj=gc/P!PBg=98Z%O]W>X?+C2%#!.HLA#-7;Sg%-Q2fs-"YL8Lfil4-o*T<arafKlo+96TA('&+4DI:qJ3'^b!_k$\H>1Kd4MJV7*2!-W.Rd_mtTd4_*><,7W&?O%T$B(YE'UpBF%W]%8Z=*rGs',#(lq3ChQ?l1Z3SXGDG%!DUCr.&U^4L=6p`Qs(.JY0@EUb7B1jq[q"JM;D\a<4>s-al,m].cBW#6k6]cZF`%>6mn@MBr%9FTF#h'42V7pFZ>6UjV`n'm.GYS=rP5o6l=L^T\:$6pUlRUhB2%+F0lBXVMa/m?)eWj5bZ*tQa@n%.Qr;CrX=W$5Z;>@G%oL/joC%&#;'.;"I:?be-0&o9"7F+*S3KjV,Mu-Ko.Vl@u5*pfj]l1Mf9g,0<:P7D(o:$6YNjM"j4S1(/\O[WP4Yp(0"?0^)5)ajr?C-QS]a%P-(7DO,#EKCU"IAf@Dj%N/kqmNSPs`K[,LZ`Jo!%8K0#n,$f[F8&@n<b4bnhUrrPO*CZB9WjK$22QejkBJ>H?^JBWf)5e=^dP-\d%RH@jK3?gVR<KrXS/KYe"NA4CEU>!RP"S;rpl)3fc`rW^A03M3c/Xd\RQd]9QG:l052]A$H\ltV#MpCAmSi'he1G6]]Sq%="'%bs#%+Nd2[B)5IEcZ$027$[$+&joWr\f:M8B#$k.0)Wffo/4nD<!HV8bXX\8VaqVVEUud%9'Q]ooe6jMih0[iInc5efTu!_+n$J^cm.Z8%3FUcPVl?!$'NOsGf8W/Gg!'*/$Mr-W"FDeCqc:m<r+u[3]5RB8`fs:kqPmEW45JUs<8V@g]p`g!m$"@Bq9WiaEpA6OOde[W6C)c3%YLbJ0W7VFu!:Koa,:3rG\d??jhFNI1G4pik'2&64?'#D,jL-/.<l#6512QWtQ*rJ'-kY1>RdY-W&Q%K8G-Rm]UH1\]KIsI3eq/@Y%*KR?r%f=N;L\GfH4c0SbOkssSbaj,QWnY`>;u%Ps#B0F6>dk(p7](7j^K.S,7(@eE=8D&7_'o1R4;hK^9+`X<iWPkpJ=BB9MqE_]%'qRmfPS4n;R^qCCd;;sp*0_K*)b8_hpT"fCKBe45<K=GV'*YU8+YSOkO:ZpK&Ub)+'K6N*mto7Zs$+KI?aIKZV2;YdKN"g7>8^Q.%WiH<P`-j^s'^Bau+?:%)GK']b&f6t%g%R]hD;Z%af9`ik+tg%CE[=gqfkqAkWlub/6baQ+_Li3-g!racK7_L,kNMf/4l5?hc*S-3%0A"^AkK&Ns0nu.s&"uf50p.9EZL_QLHnJ5KB],f"&Jp,a7-_QuB;j@S'PcU)fiZ,H*d/\F.U73*'1'SLl=#jLGJh<lhYISt6c7rf%]W;)Y^Yrn$]]Y`6_>Etjas^&n<&'j2QGL_]qSmp2S.dL'Cr_YKf`GhGcH_g.9%23EE&EQY89)oA=<'3nPcY2*LkG0\6?QG9rTI-J%ULkuj=eD+!W`t-ls.=uLm9I_)Y#-(S9Ua#2UrVu5LI$1Drl$Z"-405ib?d'CSi"LKL&WcUJTH!f@eq*:^5:`?9+*aTkf`Oic2Xm$%A\?07eQ5)?D^<1E!kr^!aCi8^K\%pNa3NLI3+or.*p2/o\Lr'aWosAGZ:DjN!Y1!4ZFDfJ+PU8"%uTQ&1&`<dBp%k``6J"eM+O.1%8"BS8lV""7,QSuH*QP17\eNtJ%J(iAe7?BNZ?7%RQ"hW<k),S?9po3UE6%1Uo*n<?'X6=M/$RjJYejHZYg4$PQ(`a%PoBQ<5JIKm%^/l=TS@n%a+aS]7g_J^3JgM1=3d9Il#Qi&N%oYhgor."K%Qo;#]j%?7K'[ED]oU)FT^3kCg)e9uK-p%Xii>6d?O/kS(254q<*Hh#%$_<bhh't_kbY;%`@YF5E"-Hl@LM6)c6VQmV1e^5R-W*cL'erg<3;Q$>"rD`(;j(%=+qZ2j[X=C93*ls^m^#E4R<&W6#!#df3TbhM%<b9m>h+qZ1(,'rf_K[+moT::'U2n.U1I8Zn&JbpEaJ0^\&GjBi5_q/pi3;`#</si>Bo.s%LCG?HiW%g*SJ3\RXeM#O^2r9#H7!IS%,CfWn2oQnF?`og!@s0YuV[im]kSpT'D!7^=\&hlE;<V;XYcful5T-KG,T"Upe\CCJ,.*J#DAEh%J_$k'%elN[>MM`o;-]cE&/fn)%]\HXP?.;\hSlj##T\la%RVUkc(&^(.pD+a`pLFfd`abh[44##2C$R5oiqBt21.#HqL"ZHa(q8:&0J(@$=!*%*(0@tBQ'j)i[=p33%8`FpbDZZ7T\_s(Kq-W(l&^",k><`B;C%lGq%,0cJhLg7j^*;$[A+RSlPFg]Z.$A5tC_(`H0-QW\]F2*D>]PhQ)\E7N&D8]JVm,k4%URZ7XJT[+DQJN)-ClLA%Sj_^_CE/-XdMlsL8l0!LbF7\r,Op*h+/O4VK=r4?VQL9h#b9_gf+h(V`^,:o&PmFU9H%[1/J;`YRk:=g%rn2<@:ZSlVTReM_U<hG&KWQ3\;d1dOBG\N[5SZU7#Z4]S?e54q_CI7hpaN,KeIZPgd^.b`DX>pOR`EuMQP!9XKI,@E%V'oA*NRhM%NEpf)($A6[J-0bP%s6d,m&TsPEmX*9YtpJ2W_H$ANXa([)Cds%Z`,XIL3h8&$`b<4hn0G;9:#ZQ5dWq%*jKc`Tj#'/^r]Bkal)J:%%2t+1msG4N)R/LS%Se']p[;g5I>3=+?W^ROmP<MZd<\Z+4>%KV.Art(>at)t\)5'sDg<,U`!ieMB^)>G6rO/9/XWJ.R\a#cZN_%6%g_13Z5h_E6%*"c.,V#]2FX01>Y3Dtke>#qs%`(U%$O'ud'h]G5LJm<8Qc:;8ZND]N.sUEL(^f7TP=`#>'S>7FEAD"(nRT+S)pa/s%q!h>9+=8<..'@-m$a_i9VH;1Sfu?)%2P0iK$gn@0W<G+&KR.2XjRl'=BJHId56IpMiQR:Zdbs\tjme!WZSniW51,d7qo![Jj,'9Q%@+VkoD*6'J^K)K\@1YoZ%GgVb,kY]-`n$s^8Im_rm8iqgR^lSE09=`0M2>a:$`ZFU2BD3rH,A;ZOKopk+/g<E`VbV7!]Re#Eq-l:%V7gP5ll&>J9iptIgN`:qN@A['/^?02YkMX:EkT7O=.Kn4RjW?Pih?oOs%t1\q"Yn*B.E7#K=(69)N:5e6!hC>&<lnqehHk16`Aj7%3;5Kg>RRO9>LqS(C;uahfr0edrl7B"aWd\[Q-Cl(%$48KVRfDB"I(`8qX1Q3hWQCG9U9Uo=s3_S'n.gS=88R7R8O."S3uuHgkb#>%-0YBVG0:A=D<oB=MjUH<FBJe1<M**Sdn]bQY,#iF"VH0HiRDFHJ9e*Z=8U-'J!ot1aWIne(nq0/-JKO^]\bMqomV\'^u"dZ'd2Il%OICodG!n8L7SRk]rKbAq#5<b;iJ5WYW@Td6,;(4rOD]+k;BC2M3lm)CWFdX/p1%(d4gfHVa$a"`Sd`N,JS=J;<:gN0`0T;):41U;%eK63n!1SR)QB5NRbGc^CWj(On#*_59aC`"J=\m*94BpDP`TH'=/#@>SUE3X6HnEL>2(eY2%*uLo?X"rmTsmGcJ:T(0agK+>PX9])%%!D`gl(.NZA]HRl+:?YtQ6X?fou/@slU2c/oo"Ib5'^+r?MfY?=@Zm3cZ)Xm_/B?eHV_a;*+p^eEj=Mo1g2+>)L'Z^Tj[IA<l%D,%K7%C.*nonCn#tacO1&Z6[nC1[,maqO#7(UG5nEUQcmE]D<8NFrEKL?>-@,D9MpI12JJ-s_oKH<FU\cf>fI2`<g((t=HOqmT#8In>%TZQtqCqKhhENGHRV[`0Il_t*GT:Cu\jWg/i>HJb0DN'8]iTk-[DT3&TSa*@:Ci=U.K$dNKj;nQL0CA@)qdn:J6aT,O"bpRiqHmZ^%_cr9pl#hlP/Gsjk)imjaRt`hEeMi?6R5(ndp$[2i*,pfc8)RN<-3t(GU2,LjM8Nuj?OrU1ncL\m9s$WK"c@e>Kt<7K%Pe!1`P7:0%T1ZA(U43nVT^lYBZf4deF-D(r!fg/9(ZO=5lJLgJE34B>QiP40J"tr%n1R=G<MY*j_*07]9a/=\pm6FTiYgcX#%liOW0>G7X$61E%_(liM9YUpu5U+pXIgHL&]E6N]rqEs]&@?&j@1T=li2h"([8<PP$NKfZ31dF!OS\]i99D62q4pfKO;H[jP8*VNl\^/u:FNrYIi4b3%:PsXAiFIP\)Q77N#'9_>5=9,%aFMgU5CSO42ffB"0<5rm8gOBf\PI/,-XJ0n_;spMi87bdYq:".`D38$=c8XV<)XJh=!T48a$R5%%Kt0hS4+.%b/0&^=7tBmXe`/-eX>(5DoCT>OH#P't1L7`uOB>^]_mXcILc\?[-$`QKpj[XQ4@'"AS%jYUPL(B%QO\nm$eQI;P+o<1%OXi`m=u9Q=i:"fp!m\Q'm%WbHXa9$uMTUMGTNg.M(e'VM)PY3)=7bR.`LT;rSl1!VkUG*<6t3V?ZUN^afp=:$YNgu3.m/:D:C%G2%K_5gE?)SZj!AaoCd_6hD*jL.9p4QVO$%9FUPDOhZ5&'S)j)uCYDi:m7]uu+cX./l\R,qLVA.Y5X0j&/oZ0[,U/":=#lGt,#E0eUC%2i*#r>^1<iI]6Z=Sa;c%<I92"Zi\++]?LatPB6RD5>f2O&-,t3?]RL'=;7Y,^*F*Hhqc7kMg1BE4!jYS]s-uRAY<4Ya;6L/Km3$%%Wf%Kh9p-"sGCThF6eNSIHnl><?HIO5L'ge>)d&S^X"?+qD@?KP8.l+6EBJP2<Do9A^Z7NP^6+[cHD3q?H%sff.A^>\eJ&3RKd-t/%SMA"Je)En`]rD]#[j)A>51;$U?GaVhf>1g$[K`*;NhN;<MMagY6atWL0,D9VH8g2EeD%XH/Pn+^iS8XFna6>j^cSOi7^>;FhV":E%UB3-eC2-72NTO8\^^`)JGf4.3Y(U"I!.`bV9\""tq_+T%(cWk@qS>-\5h(5j6^T0$C^rJ0`WcgVj\Gk*&hVq]7X,?qF'B<CTFE<%%;jU67oqJ@mXDa+`,-8hs1WQ=%_?V+h\f]b8!M[aOPXruT/K7njaVtu3'#ack[\1kuG-!jZh*Qh<(kKfBZ9[#g9I:K&p,N4ALDjg]%"OmMUZ:]9o`A7;(q:QY:NaVV42@@#(>%5GTE=5sB:cr^3.rs3\#E7>1@OsBoQ-20ta>)K5CC)`)MDOsQI7T@do"\E=>->#u#iZ[D%[t7Ao2.SfdFWc+^(/1.R8W`GAR9oCE;5`()]Q>>[4G9c6m9(D:ESt(Y9.n".Iir[dP8%s)ra!I["QQ;h>T%/"@at*<!M."+]gaf;%1#ROaWB,8Zoc3^(&O9WR[%JD*$%u\YchdIk/CRHUXPj$DS5N),1`j;@X'Ud<@X8D9r+)qCHH5Par(d5um1L?9Y27(r%_G3\$[tPj%rM50XeSFKJ7R=>=M8H<".GW,fHhJcsY244QZm;>6J2;sU91>\39^pCYrp"sC+()_GWnaUun'?*@CDs3Z4Y:8.g#Wf-%=@bCS,Y80%Us-Z=O9ilM_W[@8X'S#r/+BrZg?DiV(1QCj@+>[\!Hpc^`^TS:f9.3oQih5O7<NZG%u`sknS?*#YtqK?n::-',#NVH.]I+Ze"-B#%9D[3ua\6YXWp[ksGg(N,:u`_A]WN=-iNe'EN]1"TDP?b(!Qp,$qR."Gl\"OEYt)H'pGMs_U1eG]0J^Sp?*b\YIFar&SS:O(Do*?L%=+kr<MR?#mC@(/<Y07`+Ga#p!W'3m+N:-+cQk@i(r+X%2DB]&5qs-E[8`?d3(%kjCW+E3Yj=&&99OGNs7qLs\#/RF4?:],@C1_b@%lbW2.!81n'0:qadV5:Ydo!&/2F%m6Yf74^]f>_r7G*2W9Jr`S2&\C+<Cj[Wr)i>0L&D'!iAMDWF;a,#`k;n?n:5iZWh#?0@!Pt-h%q<LPB+cPZt(Y[6o+e]k^NiZnL8GMVQ104Anj<ckk_.IrrI6#g`UI37'R=_76-.!pe'\7!s\*i83(^=*n-inutWSHP+@g3jYJ*/R'%U=u)A\8msbq%VUmCW3p;$sY4Ah$nB#-*Mfg5/"RD]n3@1U1dQ8o_$=uD!Rp7m-h*#hlEflMW)NMo=MX3])sIt`mA?+""27n?[[,-%&-B+/>iOT(bKV5W+F&oj"0VH]=`j,8R],"1X97)2FYpOZgU-7eP+YUu%9h<V=PeeK@GDjH31dpIK(g'=3Y2/fIU[g"UJ/'u*8K?I%[bqo@RN8T_<>N1?Q=@NbToZO9JnK8H%S0lbn)%7@9gHiu&'Do6;Hu5mei(IJ%d=h[+Us1:hb.S\=F>N5!eP(@jEi/7/W\nRK3=Q:%d]gp13U%AVPkghBQ(?4cEc($Q_UXoB,8jaj1JDf0"JX_NekdquI:c/M^!`uZ;ZP_p#B1',>MYGWk9/bRk>":5$M:3I<V6O.&$n8k%LI3UPa&lI[9NuD%"5.i0&n5dLd-'Vs@\dbM][q;23>ebo(+q`S.sQY`90:Q[OZ%k=aYo#s\NK]$27/ugMjVK#*\:Iq8^>o%2;#bp%hXY:WJl?@0!JMAmf4Pr<8q(9T0.fe@UR]@I$cT4a/te+X82.[1G'K`?LFMUM6HX=ZU_0e(Gs!d_$bhuAY&doIXm"X)&<&5V,_"A2%Xb2Un=V)*LdM(pE>bL1Q94M6[]2RDgF8`=i"cQW"7YaFoUGk]u$4TG8/V;f+s/"LWDN\umm,NYJ,c0\/$O,P(R#br,!YpfaL?,X=%A:#@PXank>_gLqW+1s2qO89_9#D"%t&Dgg6_J6M#$9>QrKLJ0hY@E)o.lU"0X^Nl6+_B`L/o)+YGG@?)@0^\;I[u28+hA,Y*%B>;%L99V=9c"!nR!KKEjA=d("Imi^do+%8E5ElNQkau".dJC(FM!:E&Q^s2h_Qt.P\'a%Co9^gQ=@M0,nPZe%#^jLYNemZ<"TK[h;L)&%<iB+@h+(?K"s?>N$IBi"IW>BN$.h[+Xm]c6M/d&42;YpK=PDPQk.J^/9,plB"26E0h$ecNqmsY?HC&XXAW1egjc78DnXXC26)UCt%2tGRu<F/>3%+gdRXFr+L?,eEQ]7="\-5"4M)UB4/%\]<*ik$M2^J6<f^Jdh,,$3ua?Q-o=^otX!E34@R)XcV`VHAb\!4gARm]E`<%VM=prc8tdbBusStf/nk<!p:;7mVe\t?djp#nK/,(C7HP,?5L#7ket-YSWBihq^q@\MZS/u-Gitr:%Xh"NQW7T8^[cn.Mu<'7.@NA%cTo_MVF[E)n5SF$*cQ$`j$quV5uPF]+*oiS-OY3:)O(f%$rjJI;PlA>U^QJH)Z>fL@`cOO5J/e7jLmh6QWR7S[oF%%,S!g-@6e_k%+4-)_g(gQZ)W-!<iku7+p!IkI*DPhCq/CeRi2.TKY0L&[WQER/.>>V&H"'a84k\oD>*6g"9ir0`TaPpW/T*PV#C'O+2-Gs0/KgAY%`*i&2eV#7V1=WW#gE<G(3$YD*Gb=D[+\*j4,OL8EnFV*hQsih1)Mc@[E>Ib_Xj0+TP.m?%^o*H3@\#70aO,uk8\9$d1,LNjVFq1Z%eQl'Ol"UrB:r@C-:d%@HnR(&!50-g6A\*Sk;e'Fa5)p1HG=IEFaE5=lY8)IBP+I0#gC`n8)p3'sW5s&umn;<TF<?j52O--qm^3Vg%!OJtHIG`07:@6a3XAA_S;D>/G\uFdm`jW=-[FT7AbpC=!\#t[J/h6n2G^!_D%k$Wb4s>]21?')7QldTXR0k6&h=/J0nZE:Mknj4)%n=uqekqi-G>T)#`h=6aI$l;F\8l%t584\n$5"g2dYZ<+'ZAI@BKN,rRI=5sBl#&SW.kteSkA%,:A<Ol`2qQK!$^M_8Su5W+,mW%Q%R_fjtRAS$2(<u'Iok/fmdu#4;:YQZ7?/Ck/ldEB*E&h3.(TJ?Qh[&_,B:tP)%NkqHmcBN:_=TVmY;h"/H]_oS@^A93$$R0S)eT/E%#)OrKYhKq&f)Le)LMr+gFmHT!a:_Z;9O$Fm.jf;ifs8f%7b:oHY^l(li?WGJIb'Uu5;ZI?3G'T&S3I&58QFm2P7FcQgu:"\5/fkF%_*>-WAbZt5X4[+RDDX6!%^9N:]4',pPY5bqW@$n(-tp+5,0]j0J].sEe!P\pi8c9l2tg(!fm3"g@0F8V"^rfH-,c`%+)s*<Ne<L3%=Y%:!0hb2>\)J(&gY>Q!YO\f/iV6g(`OkedJ&!aE*S3\=DeSq+hCdFQ/doETJXfW(6EONkYmf4u&Ym*k9[VE8%3cu4B8?=V=E_gn%k/5@*9S"0n0oj*QeljmN7?<!uP_#/m*L@.bN!(7"Y1.LU)!#MiAMK*NG)pbf\^E:7jdm.(_dSo.s(R+D=V;..d[/@?(qh:5]/)k'%R-Q`3_R\eabU$h&J>_9IloM_V*fae>@*pXd>_n523NL%R2&U:tINLZG5"TP.#C!;/Zk$[aA&3'MD<#-Pl>jC-"G#+K'F_'"3Y@uD%`bOjh&TkDfHiN4\4;)SI:YT,4mMl%?-C#utH)h)O0RD$uJX[";a#<ET>,+4Z^O4CiON6Gj$#4be#bEpR:md&\[p8JD;36S1lQl_\%a02Go$123QJBP;o@;BpiU%X7LA6S%Yl@d,na2pX(Xg0CP3Refbj"i$V^Me\T)@V@O=/s_hmjBT8)=FD9BkBE/[UbjQ58$tR/7,I5%DGe:c3URd'WP7BL1B8'X4E#rR\T_T4<FG%fK9cg01>E8F)[7.0#tZM?o9W0(S;))W+kTd<2#s'WYAPTK!P>#OC,R.S.2+VmVV`6V%Jbl]3#R#>0O@$tI$s07ZHskboQlBuMhV.cihsC_g`N"g9f3[@__Kn&22E)+2[-aquiE>bDFJ`81<;<Z,R1,<(H8$m,SO#lN/'-Sk%[2%5,&<&3a/n;HmP#u(d_Ohad,O!&_='0Z4D>%gRMRJ>2eZ_jNY&g(8I"]?mF@iuE&uBRXW)u)?Ppc"MSu$k"*B>^kX]/&0_,6(#%;SYnEdW;b^n]06OILZ$&]BhCk9N,*:Q[6JB1^oR2iB"qng+&&Q$;iE\pI[T-V)riAPMOiPf6;=5D_ojA\5%@P0[_X6Z42$Y%klR_%X#;X/&\^>[cO<^'Dc7doh"rk)o$uRs3dceE".na`+J>sKa/W(7J0&kK"4^lVaI,NQr!0k*NBB[hn&(,H,E@'f6llj-:+m@Tk6?;n%d\ij6qOfKON$bOSMe$$!<?OIhoc7*"_obC%\"1Q`L?XAcC+b<"NC:ui?Tj,SJ7aSWpV9q)P?G?SO]rXF`,M@.U'8;V:i#6m2uE>8%N8p3i8b#K*rKcj`iiqXhjSUJ>HLH/_QouaJ:&&aaIG,koA=QNsr'-&dl)K8A%^d-Ik`efiBQ;R["X_3lQ]m@Ds.(V<_'e0e_/NJe%1/)=MJ5[0&dDnuDh'_QC="<pa!/^G5&&/:W\Y(kSJ?SR['06AGluh$ho<cH_0j:kYm]i5Eh^ojs?Y;V8fu*i1e*E)/(ZJV=0]0,R%i9pWu>j=]5Wjtj4-)I'O/;We)]n_!c/H8%.qN]NEh[=UW<QEE6DfQ1G0W/7"d);R*8WCWP!><fhVqXl@73Q&P^$39TM;'24dt6Qr%*h/+5&OJ/PS,FH^#oeT&n;W/$\<4Y7O(mb^'QoZg=;-=,QS#W)L1BlX:26q(RAiZOeQg5,U/ASaDk:_#9n1UNp;:88Qbf!;1oa5j%@&YW;=()No>.m^mdp7CMjrH$mAa8WF")No::X;'k01UKkGgEP+eV(tBPPa'Z?5dbL4+Hr,N0ql]q>p>??V[^b1!?HuDQGt7c#qND%k1)8\E!\j35C::O7>)i(+An)F/4=6?6Ya#K7E9+1fh;ZR,l9#[8tlKl)<iuU]6@^]ITGF(.D+80a>aAfAu<[N?0h1dWEm!N''<pt%HrJ/eqg(K6S;!eqK4;22#M-1mXb@('pNeOd3Do6dqUAmGdZ7'?!F$1K(2f*_TZS"U5f)u\Q8R6>$h9&#n>3"/91!L9;7Mk<]]qS)%jNIrneb&kO9UcXVM:,qA<\$^ID=]\nb#s-ei[2M#W27aW/Cp'%K$`Gn':K$KAR;Kj>UTlci/`-=gtGc'>iF?BL0"g3JFIS!l+b.e%.#!361st1rs!F^A9/ha4-&5G1bN8d`/B/gU@q<T6e3lHOEe^k)%&6NtB?6a"o>&?">J)7mKTRs4m,AL_hb/G?19(_Y?H$5%(OX?s%N,RPZ'[m(X\HJEB@>GU`Nb:%'E:4\>'ft8a*tP=aACATlpk7g`2!<WuC.o?/cr_>&o&.`"eA<L^bJlkU+<oLQIGJJ+88/+SM^8V7%$`gLM[)3H8aVqQ^aOD?\%Y>Y'bnURR;dTuQAR-UJmEjGBdkLW&2KBsJ`\3?Ma<`</=,=b+<kUKY(<Z[PI'E)j0\JUj5O19\T'lP,%J1L\C!9P)ZPQP#idtd^6H&[i<+IL4Kn?J`E"%Q94Et'Z@+!2#i\DBC(BT8d(Q&"V'rQ.,OCOJ(k8H4Z'g1+hcAB^7SncK(jfr');%=H]dHUBJ5cNo<UI5\&1@<M3hZR*RbBCL.+hbUl;OG,,"/\CRM.app:V;j(4mUnN,'F5gk8k-l1ALWb.5F\3fo1A@Xh,[Vq'#he_/%\We^EFhDG,C,E95k4h(!Ual0;rQh3<,#FI`E@SB>&-ae%N')?.$0<4`#an_h)N:AdZ[7>\Es3u<"D>JXYNW]]A&@ClO_1@"a;j?7%#A+4X@[@rT?o&$5dm)PTDO1XN0N.4QELM0%XG&t"K63U?/kLe3L>WMgoBSU+0@4@XDsBtuhYZhp9#ou*,gk]un=1US&n2lN3FL3g%5i@C]]M]_0gVre`$I7U1?lB54D@D#,G[+:H]SsNXXK1hPFpVbJ1EH?BRj1G2#9uqc0dc7VXgNCSE*/WMl7tdh&kd<c9GYi_$hj>U%3(/JXnjNiT0EeHcYhGK7FFR69!p`'4b0i1K`H2(pZfQY3hW^gX`bgjS$s"Z1C+MQKEM,TS=o'V=Q)ng4Bu*Pm)c$\nLQLJMi;4jM%a5&P9M6Na2h%3m0!44@INASHUBK>Q=15o%::*2_ZM6i5VpUZ=3Lkj\a)fr;.,0!1Xn%4@;!>eDQEK/(L"ZBI>5+M@G)/DEB*T6ud%`N.Hpb0GpL\/ZQ6'.V<]?eqkLTU-Yj-aHi%o)cM/7IK]8[hMH`qG3tql0%qd2>:9#8j-n8emt))BGW>=P/AU>[/fI7\UI6nWG01(%c4g1!F'ZV-;5Uu^*pXkR'I)=Vosd_DKD_DHeEA%"Si-^aRUAC90oY-2ci([1[Y_H@eO3MHQ*8M!W'%I.4kr;:E;?*9l>k":VX>bG%,k!rmo$-Y:!:^2FiO0W$ATBYUe%'\?$m"5:We]NDqK?VdMqAd\Zd#T(LY3SH/1#/6XC34J&@iea1to@c$r`%d]!Nc/']c\YI*Jc6%AhtIgU??YP_P(#%`N4$+g8OqRA?in>0(;bL<TDjeb:KiK;[T+^=pHS,"h1Q?S2g)k,]=D.6.=0cCE,W4nW,1<%-TBUg8"(1MGC?f%Rt*#W8XnQXIm&[#"dc#nN;:.%^FG(n_$U)sGXAlT4qo:i9urYkO$WstDJF"8af9ZF0+ZuXDr(R6A,4!\0lgP1-J.3I(\^\TS'\P%%FR$4_g$F)um=+TT78P1RVrgF-eEb7u*U3mh=,Q:=`,`2Ve;O]sjm'g$I/T:q7oJ^]*@mcaWjIJfKgF+;"ddi('CmXT`l-rt`m7bE%MZI[K.oun*_rgKTDmXLNPWQED3$LsA]F&;9^_W4*5Z,a'4CF^.a\i<mjI0Y@jm]]S,,D4_,8A*/Z@Y\fP77bg!3l$XfD`_+s6Jm;%hS7"PbnrLb5%AuIeJ?KZAF'3QkMA^U()9k?E`<>XQlU9*.(uL.ER+t>l71p4ala5?;O=+Npi!]t#R#/sme+CkA&-`EH@.CV197Bd%DbOdL.p=(:8p+d[=!m6;hDV8UZtMY4*4D8,V=-g,TG.7c-PX._)I]8QOFF\C/8+TB_#lZf^Re#^.>>k,iR,$q]-4,Rs%2.[pLUuM%FV@DHPgs]X@8RmETe%':_ho+..q3jXkF*^M0SdM)S9UPe]e4fD'C&"?%:66PrD!=4Q_KH9PlI\<aFL<t%B2UUeX";4:kMbls#!Ph%I=L*9XcTFpoMiSt;n(UUCi+P*aEb=C.Xb+j:>2&N6bRsOHMjL%a$+2F\7u(SU7IIDINg.5/AuE;>e5o$^n?mMjQ1;079s5#*?t-I%o*!W>;%cl_E]%7!4*""(VngU_%oW`2?WHt$S[^s?#7e7olA=]g=o0&D*2kiVQEnMaa0Cek8T4ND6HX:'l'Sg=2C#)$"!PqpjQB5<%f%S\2a,IF;b]6o-8J&W8%,U>B!TKg$NO0%EBTGq^lA"WQ>km5e0QW)lhQV$$M4W_MSA+r_+#pKK/T!Jj>>D$sbk],pcinZDfl7m:%9]4Y=8MU#H\7AYM$T/nl,"iC+TeR'eStcu7d_jE;c'],E-^YM:R\eCc<^:!%gXA&>JZ2SdR6]@bd47R=b41:A2JSFAPhPfRTI2'b%rs(fAfe`E=a;QGe8qiG\$mfO\:HD3L]DB"pU*[0TL=RT3E1F=0hMC,(h6R)^Y-.[F<fY3>W:i3\djVOOH[n?Pf^<TjjGMBYJsNO3%Bhjm/U5b_a,5I+u"K[8-)[pkUP@:JXA)+d<Fq]E`1b$sS<FaMC3-J0Z-u[*2Jg3u?Tu%]tXq+5/W^h!#5!+J'2F+35)nbB6Xe]&T%=#QDq%[k@J)$bqX.h'(Ha2!ZW/,5X8d?UYs**orkP9RJZ\Iop5d@%s?++07q5N[j0hq0ttmV*<%_#_^l.9BF3OGRfVJ&.Kd%XAVg%Ne_'[2RI+IWJrQ6QWo>j.QLB9,RWVrocNS*'&IRS0rdW7804t[[d@KY_iDjmf<IVJ88G>;9ofn]7<`J%J&Ge)D;+0H[7hGSdeDbb%/gTIT'E^F5CV9"_IoA@!K,\#IUF.E1=-5JJa'mtYeo*L1;>rui<X,nn!Odh=_&L.i$!L6YMTO!(AasH*2J)<b6C(JD"'fumVj@Ej%JtKRQ!p<koS83'OdA#D]-%B\54?UeYQW?/5*"`0.S;ROEI[ERT%_HGn5fJUB&f)ZJ4<btC67u+_^-X=p);'*q"[S_0F"0sX+0.lG%[CN85$C3>T>-;rnW?F2\>ZiC#UaMu-+=5,9KZE;5nb1e%V8.*s6hDpn\9S+knm5u6Vr8sSR@Z[XUJAObjKJ2?`.K>RViSSR(OK!q%`4Z-YbH8#q&sDVR>LdhpI<Q>"k&`FjH'5lBT$LK:Mo.'c/t:dV]g!$b-HXmsaqa3K>][[Z>EV;\nD-"[Ke:-6k_RiWC#->tm_iOM%OndqD'>sinLEZ'MT>0=bX`tk1T[@_jC'[GnY@6aJa:XfpAj9,O(As>6g',RrNjY'V_JpN#`QPUD?j:6q"lm2agEqS(q(0%gicG+G%h\t]@VHQOV8*BY6f;\qSFYqVf]@E#8s-%[a@FN++IA?&(0G2+"KX*=4B%rN9;d&[d3Vi/c(KEP7:eJcq]rff"f[H(`ZM27NSB*?B%!n\Qc&fA=*+*ojhIo>7F_kV/CkH`PRLbHLhIo35#@1'h8UqFJ%:K.KH$^OB+bbEE)eUT3J3VLmQW(Er-$ML4=7ia]USE`s;\R&6@%R..X`?m4WKq=OnqCnU3`MMGOL7N`5H>OCS2=H6TqKRghNo9M"t/9iG+8iQ1?[@araXT4A^Tgp76%[EVO\i<k%e/VpHq!]hdidKDC%mpok>_\3-f2):;]BuW3N.Z/SPBYk5@=U*=1g%m45+;YN8Xq=Fa0?Ka3M$/O%/K7=S-E]pW^7cLF5Qk&<;0?=+95nMC,G\)b']+`u%_tr5n!g]c_?5G@de9W$Tb]_0gV>&7lQL;Pj]XWo*Tj^(DoI1W,[DSG>J!<KE<P!Xr()*]S-u`iapc?G=I7)M;4+b676D]Ca%PeL#%#FM\fi*UNiL`ttL-F3\7?FLkO;g=kJ.-6%\PSskd&R8Xe!4u[>=CD=(&$H+/OEO<k?BG(ZXb]d2$T.!J.uV#2)1%6KZ!J4$DN)'<%Ac70"D3R8a[7meW[Dm&)j8RlsWYF:JKd!OLY"iKB)1j1]kRE$oS"Tgk4\s,b"Q6eO495`B-6G=.gf;B8OGZ?-s'2cB3"kRPhN9s(%M,r-7HD[]O'Bf20MWhH:]etE]C1\[/8h9e#(*<6$)R0,(;ZrKL$atW*h=oAsN1?\9L\XQ6bP[Dl\rUiY#tg6?p17EP6\H8>Q<+i;%gRY0/H2/C_TVqYk4Q+AL*L;/a8kcu:B6mbd=1E1'@W7bJS#6k:CYA`YXhjJ33NKX(OCGg^k_5VtrPA%/bUD?cX/6p94hP#b;m=[,%%up0'p4SqN_HA7_Pg[]=O//4aF!bSWo5>TJIJaN6h)hm\^=qW2DAQWHF1o"R`*['t5_7sD+n+P"P8)\CHAU/_2DY:SG-80QWL\5b%9cd9R(>jHHR.,C[5_+)&NN>ZLO.crfi!`-^(X"cXF,hBP+g5j!MG-?l>#]sA$_W7BLu&'5e)N*E'4h7+(jX4OHpSRF]FYq4`+)gb%GMcgg/?oP;1KE>J*TN:(;)-Ka(X_&,,,SYp!u\DGWY8QJk*pgU4aCZZ_;@Vg]%[^Y#RMq]@)7^-NkBlgRX*]r>6_OiMZn<MBW=Lo%GeN]*1LX3r'%Kh*,L)!ETeGO0%NFm;Z>%WI`@(#6\$&BaGB#m<qsgl%QZU6\JS.+iP&j2&dmMi%:DKn5X(+-0+fobX%k$3uVAim_%NS)eRk07up\qu(e?.C>+0KJ>*:/b=Ub%5]@k9d=]%/jjU-)#_)FUGCV/t/aGiZg9t:rf4qaWk`p=i(^$kGmD<4_^So<DDRr5+D,u%Ei+AqhIT"RX5=r\3I6b<jbK)b@JAaW\YtRTmGncN-BIMF+,He'!ke"O@:)l5NS2qU>#5'gNK1k#BWc=+CFZ>JZDmm>hD\XQIrD?9%2RuNBmjt$P%4QuUli%;*Ad(/XC'K%HkhZ_7LiA"1Q!-fks%<('iJjog>`bI"+oF7%a*KP0^4YV-\AH[sDM,nT'248ls0QnPVAR)1%(;rR/bF:`LV+H<1:<#?ueW6m9E3aZOK%3Lqm?PDcR;YI7c&RV8+FaR!rth*9m+Q=Qq*CAUjEH?(kg_ic(ejYEI<i:u/[,IGiX'ik%W;,5JAj5ubACZ?g(EoBcpJ*(i3/M92?sIpi'5,3?XjI%qHDIt%,hq_'eS6o@d[iBZnG$P4^fUGj&rmFHdq'\tPHWg-Z@ZmKI(I/i%GL[FI1'eDGDMR&Jre_0X\ccBmqs*^=\FJs@nJP]9Bu_?aFfSJ;Ad+=$P!I"bV20`@iJm+(c2RI$Wd6SWg[U2o1j]C90bOZsEg:WA%%f^C/p7MSU0FnRb&:Xa\cV=<Sn$8L5?LR"!inROr__@ulji`V^3I*I0WabCoC6QE/Hl#(o[FROm+P4nLGgF[`B\'ci_d?>1bOA&;%oBMW\H5'YZ!!H?flgTr/?nP4ZBPp`:0rSA0D%uD:[7TQ18l8GtMm25+g7*`O.*0D$$@f!t^pVV4#$MjRpE^;n'`/+</,K/9%(W(M%-@=uqe'o^lJEesMWp9T'$eO@-EMp71!c"iJ3)'fJpu;h8Nk)#02upsl7FH==]dqFW[Ti8V%8U_ekP9;k0PMV[)PG@hYR`a$1+s5X%DLKmR<i8r6pAJ>ETU4dO^NgXN9-:4QdkM!XIHnTG"s%($45#;M+.C=H_)'bDK3=6Vf=&Ga#]K_Har"+r``+5"X6X`XLXa5t$1l^k%5[1I(#p^hl2CP*qQ\W9!o/"eFlH.rHI??[qTdH@E/$I1HM`<R%+86hb1d>K8!(W[YF>,&u04<5h-^a8@k6UmMhgDtnJVSNWJ#0b)%I>[&&DKfMRLe,^KG!$#71b\mU9=i=2Wb`>hUZ$W\$AKFoftfiNj!0@6%>6N,^S`3$O0&QT$G.tSNo&Oa!H7rASF"8JHoAna,?mo3%CXF*MCG)"H>O^8H9YRF4Q*WC@Xg003p:oa8bZ&FFeWc(npLD4"rWF"-:s)+='t4"dDG8Un5D7Ph7V01:3)um7!L5qUgV=&KJle$f%`-d>WmV>(l.\2<^B71E"mpAS[pH(#!NL%cfnW"0cW>It8"8a]CF6@;gro"2-E9+:X?Qfo;X)H^5>]AoF:guiYD0EbUB>h#<pq1lW%$]J;!e]!LW;"WbeI$%'Ej[PK+h:Ts@A'ZN&Q@XDH?cM5S+SAF*Q0EdlT$Ymf.i7fAH81';A-/MIs30]Wk_?tl@\!\^cAK)6e_"uu%o(C`\W[gX;>u3u7$CGKjf\[#a=5;^m9XPC9fGe9(.=hI_P*'4P]@Pfq)HkO$/RB3L_M+Cq)UMOWi(VGRpcIHFZ,r["^(90>s!1YK%]?28ilU;_aFdSE35=P<4rr+mGXn2$'!p7OBb&nM4EE<&THC$+HNB;]7%XDJ2r*JLNH_]m3bg\rmkOf#SQsdG=&p7"EVsf@Xfq81/%:jb^3f:l*NH)P)JSa3?9RWXQAd12-@RJU<!]N>7n:S6<e$euo?cQNS`242/O8`@n8i06KA8<*6m#C$^eBP?@/d]bij#cLjBcS%K>%.AAf\Hs`E7e03cEA,>rcrq2uZU*etdWJFj>9X3FY(o1sZe[3M`B*HjnJk8<bch_PV&5>]Ie%0>c5D-(LhQhL5Qa]D"0(50ci"HIr%GOd[8bBbu41mc!KQe%_2a8.[a/$egeacjkBLqi_`j[`>RNlI&7_dA1#S[q`=]Kll^cUu(PXnA-*>/P+X%T`@a(Q]a7q<.`R'tp+j%o,g&.\:BuMH7[o-+IZ8tm)gtHF3fP*\1O;G&rVGVQ-+!``>iL)oWA\.a<*H$osQjEFk;E["mlShgttWR28/@H"'Tb\9HI#'Oq\j'%IC:J$]J6Qq&G?YcH`'QB+/WEXeR6=KUBDJ=L]i.:HI855Pr3&fSM69bj#Zcf_:QqVVWp3PFiTp/eHnT'1Li@5RA'"Y-:i<s+>[OE%1GNB__Jh8C(Hc2ibh:+.SM4=2LmC'G/nc,4fa1#Wa:<dPLlfq-]H(i:$tem[Q(ciqPmKN\0NR?$9$7XF/pJ8?l@e+O<$tUB*D9uU%4;kk.-pWtVV_/!*J?]%YqHOktSX2lg@3GMJ>FC;;gq:1bF[L1b:31mP3G2[\\U_d.&:!6$Z^)l7r_>(p<0_Q_luTWk]H,J`eDe`R%-:TWs*D1f=8h['dkll[.#IW^\E99I)Qj^gFk/iB*+-p.KkU"?1IX1an2O\nOBjf%o`b&a6P;-Y(0g@UWCG$1F*nTO@RgT>9V%'W9%3NXSc2khM@58T("=e3+I=mb!JT):XZb(Tn*P$DtA!"b5(#_ls0jc$]'e9e(2c^Zs6(C%ooJ,DY1X&uR0iq3dKM\D)!:Q#S`AqM>k%?])LP,+hco_I.:"6QYf+&Fnbs?kt[U<h/0d^rJ)eAKD1:*YK7n[,2bc/0oa2f[04+#1DhS@+lH[hC?kJRW=jb`A7l(c#-WqhCK'T%1W+TK\HlHbXKIRq.glY++G'\"J:Iq6&-`f:Ma&tr/.=g+BP!3\<u/+rON]q]AJU$[\26]3RuK2K5OD@o_Jm.<39Ne70$`u<$t=G@%ORpi`pZS0S0V$-BRqF(9Kn6Ze1T1`BSQ7:>\`a*ZQ`h>9"N'$fHPt&B7Xg=DX@P"*k_+t$0ln6&Lff_D0M$3+pAsR]!F81Q`?;To%S?ahFMF'Hq"gp:J14tBQ%P%#*d`B:UF^g=\2PH4j5o,21a@5]</,Hn_)!hb$_7L05c+A'Jg24JqE`lLsi>EoXhSNZ6(C8)5hGWsS%qcao[s!k,7`,SSaL#Ib2X;C7>#34MRpC*d@3XCb$//0K>=`D.V&;W&+!/(L]"ArUW,JeEI@,a=Z6bDI0V/on"iG4='@Z,RQ]?Vfg%S[O6GcFJ`'=Z-rI2-UpA]B7d71<[TqitaGnbIE8Ba-lPcM4dYNNFn;Iibbub55!d#iR\d%p@A1qmq5&?6/b@;WZ;9APE4*[W_(2m%ogQWE/3U#sNj."G>OhD)KfYl8:^Jc"TGl.Ji)%`NcP?_RHCE)W=[aV$abE5!^(SJ\[b(kT7Q%;[&ZHP#ZD_6HG*.T_c$1_Yr1^0D%1W30'R(<P`F4D&g&;B7kY>J,Bp5LCrV:<A$`]CMfdagV1>NaKOP5*8lDpe4QqPHJ/WtH[jlq=udVsI%j*8>J'T.QBh0,p?B_g+h2%nrdft&>?a)Z9uo^(f)"4cH7o1AM"7T)f\;e`D3^1KQKMcDstm(_Jgm840FpY&TIAYj?-nYVa=sM@gbZs6:QuD>>C!O.@V,+UYQM#%`ECa68,Z!OHcEZ'I->T$^7G_'A;`IZ(5ATiZMZGBXt)k\Kdr%`/N#Zb*r&#CZ&0r6$O%)d);SO,j0bokUOIn$$ikhi*Y<kq$@s'#%#=-'rge8q<!Al`-Jq/([&2\0-K`Mq30?N4t=B:!Ga7HKZX+/tU&=eNbSj1%qNT]%G%*Eg7XMS@oo:UIM_to4b<GOd!<>\.(e#N'[%Z)D8d@;XS52V(VgAUXc!2ffRH+&H+PR@&&,KB)?3G=1<HfnX4KBjro?fe!c"AIk6_DCi-II<Hjgi-)F&"iX.9?pF`"4CB!15QCik%!!!BD%-<:_)cZ@QW^*e4j-:X.$O-qB$3ghA$3ghA$3mA8TO=F#TO=F#TO=F#TO=F#TO=F#TO=F#TO=F#TO:#5:bY^":bY^":bY^"%:bY^":bY^":bX"+GelY]J.rD+$ks*a$ks*a$ks*a$ks*a$ks*a$ks,7"NgQtOKgnK"CeHG)Y#oD=W#HX8U<RmCOS/Z3h%-!9hjX\%GK!!#I`6SpiWBjF?q>9p;k/n5DN5)litLV3n?^C3>Vea93=f^-c:@'(0\BOfI!fN3)Q1f@:"XM7*gbF)3JKa+_`?pB)4hE,P]Os2%$o-$Q%$.`N%-LlfKu%YOk;)$@+u=54^p*A"b;<./@;qS?bVPe-'PR<=CM#Th$*u<b\RKj[14tcG(N6IeCil(%SDqa]Gpm7`LiLT!%.u-gCA+P4]$B36%Hg]27!^SpBFQSn7[%&AH5To-\+A\(pL)ojl9ZAn,Rq)e<qmH_WFn'3T5jFHrg'/rB-l@blJHQN4(ap4LE!$69%?pIgZ_143f(ap4L(ap4L(ap4L(ap4L(ap4L(_@#g$ks*U%g]rQ$3ghA$uhO,c4c89^-;P7b983@]>ls0\OKU_[sIIr6\GUK">uTW%1<nIQ4i%ZT1^NsMe'*W(V:_a@%XnI/25K;XqRudK=]iaXk,"4:c@tcmh6XX<Cl@_iT(3d0$*gO-^^2+p2&$N5#j?c[mss$u$P3SW%Gk]:m!JR%eZ`*NX%A?L=?P>a:aqY8N.s:$e;@-%31R5_M$AFT0kR`R^JO!N_RH>"X3Wd<:G!+C%#j_bSQT00*J46lWgRZPj4u\=O%-^5Oa_Y1sinPZ_fV0KSU,S2s"<;Bc^;U!$5NL<O8K6WB4Em.M(@tZGB67a%lMJI%J88LaDkWEnsOX]TO`h3m#%&Kdt#XnlJOU7E`%@A(S1KiC`F#V2XpMF)uI."mWfH'CWhMPuo9&7Js4+[Q3fZ%iSfEK3C+F*7hS6YM941F.:24@E;>;D&MWkSa4QoKu.o%.$>t6KB;$%4=!<3bTRWtLBn"A2.YqH%#sa41Ha6J;EWY\`5Khu!@*a9/T\:]M$XKVnUq$4A1TLUBh5H`Am4=07;&W=hN6'n+i5pL6]+?I#]E%_%J]:'HR0eu^iFbnP3X'ab#oO!OPSrN*&;-PDb\)UI.F"BTOq7a[]GZlcn<OXB9I8b3KY_7i6>T+:Uh5E+N/A0U/&D%>Q)PTPQ^?,A%nTVj#7Na\i=>r!Y-O_"*m>`T<-Sd%X`K9%a6jP)*KOH(#&L%W#;SWkW//dHsSX0qs:2$'Ta;A21<@;t,:qMgo.mkXcG!V6&R:+e^%8#A%^G8ZPtn7:sAEu1@YF(XKnSI*W0*Bb)6N1DYMju@P%YbRoB#t%G;d:VZ;(iIKr4/Z#cF*0?`m;t=YZ6MtSBQhc@d"WZf1O%67%3s8kZl,]DLZkJZcG8M]T8#GX-1j7@T46jIWFi/F%Y&n=/%UF_&dEi'YUD0i/W($?QU-aEh'&<hG$6*DM!!*Fm%F&$fAhW]@B&&Ge%G:=p6qqO2UpRRAZpYKCuDXMP+q[Lkh<bB;)mGbuZ?H(T2j<9Cdm(s;Lp6o!b8U_^9O4=!"!j<8UfAO6&lG?@fZ!A3blsgh9itr()%Mm_8k@hst#lG?B6WmC"JE-+6<jqT;Z24tWu&IjRlo],26':D4aA*Lia1u2\'rH)Hj\ep9]MFBtC^]%RWrr;u^5PQ%E@9mQErB`fi%TMlCV-n$L"GJDrd%.n'0TCU`4qHp<CdJflrrr9a"-nYoe]hZ3<2O?&rIN8;ASqV_Q;^sGeAKVOhXGl6K")hWC>niXr+2`cJXRg'!%6h,jr(e>Lf5Asr'J9c*;$W&Jfe8Od`_f,O&&D^]hVn748pg8D%&5YTm^NV=>I=E2,5Q+)$Q%hq=8rF1JG]\S2bmOekDIMbAoAe'X%O#^]&F.(@%4tki>a@.]iPuiDp0:.ig-'sgcj?f$%QNo11$U\LdnrR)RmdBF6]@3oO]=S_G4ANrW'JDWkJ,Jh]r5QA,?"q?jX.qK<%LhK:K45NPViY-6Xil$Z1h9jNnF`_^qUoQT.\JT=CF5eha&,Lm#2LUT`mYl-DCM,PHV(jM_b6.kb1Mbi@]QJm<;e@KM?oDX(MQ\-V%@MP;07k)ni;%?rjJ!p9TrVsa8([(Aa_d'h_6.'lFb/u;$28_Ln39Dsef_hS5D^PHb[W8U$Q]LdZi0+)7<7HtK3R@UFfo"n^X#raW%B)"U2j2VP[0M"laOaaSXVZ"'#/mHf!VN2et-D0FV]D)7:dXD$VIM@;3*__sk%d!HP>8ZM)I#_g"j^j@4Hq*XB[b6t=/[p+`ZZe&2%<uup>T,IBUG.D,Y7C0$O]3I`FP"kWm/A$XW$c>j0Q\sfRi#;J2fEH)kLMO(_Wt_\CenSBD09Jl&)Q@nUH<;Iom9'&S]_W%@-r>X%%Jhh%&N.6^A(5D?UCge`1/AL_p;);r+/#CdkSPk#hB]hfhhR\*0r6l/=TDFfK(c><O2kJW'(^t,+HH^EX)D;M-ih8JfJ9^'>!RlFg%Qn8qpApCR[nH4@fq;kZpbUR7A6]B8,RogM"357.HCr.]BEQ#^J_jY6n0,=bXfYf-Q#%EO.$\RF:iJ`HlAW5Ze%7BDV0VhhB>lS9e%8#6/@3)<sk@*/WSiGVb!)!Vbb>iF/K_B9hf(3\(X/.BQ,Mf/p,0IUmLIE,WMj'Q`p;W9GO5K440_nLPo_rN$;Na[2O0)J`dB)\>D%GeVSnI#^CNk;hQ=\JjirN%e-.puRS:jb,j+r2/M_cs^@eH9BK-fs!.i_SWqa+ijD:o9t1.]$=[7^QbAY)#qntde.:f%I#>N1r&/l%krKOEqI02@,ffDW_XK@u'Y]ZV+n-ja]Pj=EKd$4e\3g'IiEF*,@>Lk3f3a6J=T>b/L\?@DI1=L!=/!G!^5]mN!J;lq$H1>aUKg$9%)]o\>-^4\00HJ2E1(hp$kU7dAR)B]9\Bt(MaebY'e.PW8KV;"=)T!18@$n)b_^_'R.[==\aeb:qe5D-,.L?3b8li51;4)#F<KsG6%KYc[-B]s8g_M0ITLr+lpkVk=D$rOU#"sosnP\+TBW'_Sg%Li^HIHX&rd*RQ$JN?1U6SfED+[e.&]$R+cOG&FI,:#T"6j!KG+VGu-%W/r]8d*[FtLkLGT6:;G9+VPK_%m_HL,XDqj7Z[`Z6VrCT'N@9[5nl]tie)h,kjGh8*:%Kd@CQOG#m1>okWpR?ie,PClu<gG\NAuW%G@U)js8D]Xoe$Zh3A\s>N.>AG79/H\X!J<N9q<lflW%A&jd6pj2R!5tFLoi`6Q^X=V42B!ksD9emC*V)^g&JoqW0r1LL7&?l[+@>%^3REbIJ$%oYHP\/hn(!0^=DsGl\4<oH[aDUCd,W0c26'/rUeQ75J72tG>\5#UZ]mUU#qo85S.tpTrQ'=$/.$L+sS645r%FE65YY.%.3Y.m_MX]t.:D]jc5l(o6(dU9=(c_uG"5&0Df5"*>f;-+3OtefS=H+-5<GXr?2PKS'kFbY(^h4$bsRuiB"lsHZSK_K,S+s-(hSo:%i>,r6MAf`N@Tep0;6!kRf;n\HW[_)<b4R5c;(CjEA4:k7IQsMLQH1m2?mckGmO&&KRA`69-4``bL8%Mkl*S39':MTB+sNL/SD,UN%kJ@/9TYPF!2N06]JA?>^4femH/I_;hgTNAXD=[Pa-U,(]\W"`f\>f]6)4AY:ocJ5fZh@unmWeZ70RQQ(f6D,l)]*ET*o?\32R`-Y%j)N+Lb.,A%^3D&H6"UGXichf?-u`'d+?7K"`#)o-?/9WO+a'osCP7DX1an]Y(!Whta]36Hm`no+q=OK/=(.blR?a1;beh6"Xu]N^%<V?"l;@0>$W*!&271:t,0rri@=KBtgXCF^SZ!LEIGVuRs1;:omEn0\K<E7T..a/_V-4EtPQl%REb)2(6YOhF-\LJ$<C:RSs;,pch%.a3Y7+Mn[(&iqTjOe5&O<@SoR(_c1fWK!V13'CA`&dV/W&V_F=#_SsEDad'S(\H-bW&H+Q5#_k40Ioa1L(Z@91K:%T6Vr'3]_4B+%p'Lt*/dhdAEB32J^OKVaF5^@F2p36VE!:hc[$9,cmBk=L"5@/;[^?N^Vc"0[eR$t8g'b;7[3T\J\g;&4[5!4t7QRr]',t\[Vo$df%_l#>XJI)HJ+[.Xnf!N<`q=HHhnMEf*PXMB8!XM1]0$`H%[A^%2dL(&k'c&,4%J`QL&G&4S;&4kM6M`cXn16mKO:$V39e&"D.4L+\%KGK`5Opk3`+g&-"8fU8LT?BbYXY<k'\b%XZDE3m0'tFm7>ZfE/8NJV)l(oUL($SPj_B9IhObP^R,'k!+\>V*7PX;/j'o%UBQ3m^_%.8!I25eNA<>3%G9@5p.p73F6*Pue1;Oh7lCnPNJsU=H1rFJ:Z_oO;bu+X4d"WG%Nj;+H=KU*UEuM5W+5//8B"W#LZCDM4_C-:4HD%^d]QGHDi)G#")8Y8,rVi#h'=b!'j3t%LNLGZRU+L!>L%c<&>.;6=tOM9VN%U,pE<h!!!QA!.Y=TJ/SE+S:X=Ak!Z,Z',4f(Z@f68%002mh5>.9[LYYq']rI9>M,iBOi=@!G-DBD).nE!>?BU#g;p+$SS;:k>'$81_Lj"3m)5W9lpeY+"p`*d._^?[FhXG6%[.q;OYKDuB%;l;[2h]7^m]^UDuoohhkIRQ["b$\B2ruJLEU[UW0'$>k\I^ODX.XY2tAC+1A,)[b`b"<l+3'e+t9`lDf5k("-V9*;!8t$/&&JC](%p0<sCRuMUV*WFH\)6\kk%#brNLA2Y%/Qa'CJ"Ts?_Q)DM=8[b)fcE>dd(@9hiT"k:>89UPWXWBnj4JuR*"a?8K1"<Bna//SgV@gI%(WoIqVF?0.T0/:p`#ZPE]cFWC60\o@pjD6@:]#MtBIp5GRArB6#cu+p<p5mK'46/*qBir/`:h]_&t^']q1IKP/[-KF,#0s=AZ]]J%._\`))H8A+3Un!]V)9TZB^)B`6/p3t?`+q7Z0TPY!-;_-T9P@l55Z[_3UM,)aYT0,`P[Ici[l1hY:n4e`l!QUD4pN=3Y&piO=[aJ%++AJR5"Dk=_l"kQ.7dJ3)Yn@2m$39s#+4T.KWgi_#,DXmAVq5Vlaui5&%cYK%=D;YWUR7WM#!_54is!W-[bVU&c,A^re$7b)+nLR%mF1"Vqpg8hi"t!PdL<21KqQ1-KXOI-?B>?9^T;me#co8($EP]hPe^&'-LlHPlt7dogp`XF)WeL\:#j`ek7V[[8IVV3dC_C](liKX%O=WbSK^@uh:2%Gq$1fGqUgp&!K9Wc-8O05a/JG@8'ROBI<C4P.@.$\Lp+haN`eb/oL%>6*s7S8PYf,S[md05XERWS,^in$h8'i7f%R'`r$-=[lZYJs_a]F\ICa\HJ5=tVf$Z&+uDD`&Wkn%V562;lZ+;#=QYNe1V3QjcD\MhFXf'hm&0*kA]ki>RA9K<?>-3pD@;NV,uk%XC\NK5?j=G">Y=Gr%J7U!A_:[;>/AaM*F%V<dCL9T)+</jK-6i6F9&Jr4[K`gdH216'gc\os1GKr"9+m=S+:,1_0X\\nQ;caC2%o%GKuZII&,T*9G;'Njf#0+DaY,q:sR0mEsA=HGN[m6YbHhl23/`"EOf)CbRKmV_CqDmEs(R^ia@gf-t#59F$.mE<^0(S5k8HY':NV)%p6VkgH$k@9UQVuYiKki\4a]M4Q2u'Vb-[TGXs0NHbDnO_Z)ob#YJ-!sNk-PmDF,2Di]#iAF</'+T4s8cgM$F<Nl$g@mO;TJ1.<qi%1c-G,F8/?f]gf%Z:e.]bd^@/;:9+n/8#)ndHH_(S-0_Hs-b`<UQ(CF)oU))fL/hcW=cM3`Ad6JWUX'@o%4>>uRiaYpTb&'/5ncs6%IGLE,7-4_IeslsXO4I*kNGD%%bf%GpGI/QRJQAb.E6?At.Q5O3_AG+I28c(Wk:*Hug+NM[n4keLqku8QLY\`Z829;"!Z?Cpj\P'Y%0cMm&-'me\/YM,F,m)Q[c'8cYs/Z@O>)<XK-[Vq[S"XkL'KA.`#Ac*Q33'1X9eq$Hm)HrjUP?WQ*1ka[*j$+&?';*AP7;AbG`sk;%EJ$P<jbb[LeC4/J4^pG!^I&B2eVml=Yf8onQSb;E(Dn^R"hpD"$0V/aq#du4`5G3DLXIK+OUC9%Do[cU@Z;irSh\q)L1<m_p`Q?b%iL'SZJ<J:s^#uZ-a2g6arICU6"LLE/!#&fGirE3Gg`-ZDm'sbAF`r(`N,AM&ec\T7X)7OP0fiGd)0h*uKED]M`_orN?)<M(lr_l#%!L'eY:eFMoS3WE=6i8K,7S\]1&sEoQ&7J.b;P#4XJ@eT*I0#QGHMfc:#W]op(r/[*7TY,tQX^0+@m\G]k]$V`oim<q`?g^'Q@'E'%Gq2U_4JRk3LO:jhY*2^Z10..]Kc1B_:(p=P-np(.0Yo3.4$;Ua1@s]U'5LI8o5>%&3]^iPV2WEud!?QKi^0%@oNW=WVANC4MIRr`%p6s%7N5'&8A"+()aG`B.!#ZI<"aC/07PUt7%I[72m!J[e<<_LGI$$-QAL(O0oV39EZDdqcY_n&HqVHB-&Wgg0.@R5OR2+m\A`cnp%E%:-7l`iQPS>Z?#^,u!,TeSSZZm4UF"qc)%,Pkee`%JG3Rpi=q'B^%#.?P@s'BJ/MZ3b,<c-hOa>Rje-mJH9)R(_0V*Op+UWJN))%00lVm6F4._UH3Y0e,[F"XGeCONiKB*XeA#-80b2[[G"W#ih^pRR1N'tQ>dQ?k6C+"rU)K6.&_H]eMcR<SuEbu]Xn:aE39?ZYTUn'%p8Qjds+.3I2d_A$cPCDi.LAWheZ&SH$E,[VU2!9[aT[V(@O/HKZ$HRsXED"J!(#/ATPd/'XA*in0@\W<<V8>(8YjN)_UZaN1f`B9%3&I/jakt-kWR`<,]]kH1W^h]@Wg4>C0.g9q6As2f$Ge*BWgLW&$r'`cMAWD9_LtmNf62om[Q9mX!1Z=se1@^sHGn+j+oB\P*EKML%9<TUZ]LtP%_6]";nkS%9YAt0W<2*lFZg;qO.Sfqna]*u$G^\<Sj-1H-_Fs['VJ\?^o-6=jPu:3!<2rE*=;4bG"bpuH=f/3cEn=JC%Sl66Di'.4Y41[U=7-k7!PV[_;?\tGdV@5brIm+7bDQ4_R<opnE,Ushr49r&T3Ug[iLTk;UQda$l_o46?Ai_edgGiqTL_YD58;A1F%3OoINa5:?$s%%ICZ(,c<Sp*f8.tJ6`@PjbD*s&ajadM@MG,u,59D``NE)%p-'f-RsSb+I@L?6?d#!9('CH6AZoXeX`O;p["DXp>T%BchRS\:9LFpRB[<S?JLVgH\^n3Wk&af2@!<ZcIn`Va,?pkRa@01-EauH;P*nZ-_,-p.P95<TsKN.fTHi1bjQL#YeC'Lr"5JY0q]@%\1n1=h=Yof48TZ3f,(M7'?\i*9(h)DFSI1D>Xp`3#&#ca3GfGi[]RG3]#-@<O,P%B[bk[WEhiU8%P"T^e2<Y3QWZ0%;=HS%2%XcP%O-I#4Tgs.elWj6GS1%Sl8q9V&<N[a?6cu):fJpVmTbg#8+h@77'"TPArgsjC,Wo]Mac?$b"IjICh-',gY/i1Xd@AQ^@TLuF_8M1o%(8jEJMIEt[PL-%X6fEo)BXgYO_u8t&3W&HBfG^->FQK(*H+9[i1[Id_nm@k=[,J\hj[uG_j>Q@8\o,l+&9Wk&=6QWQW3?5h-jO``%I?0WT];13@H@^_F2%!WeX2%#TTe)5#q/GEqb,SUUGQ`&qWB#*!l#$'"\bc>IF#p.Ph&CJhiOb&<#i'g&^+f?/+g"i6hOL!QV/bR?%F*i9:/)5M)E2P2\QYJ"fqTZVRmo_'jUdHUGqoZ8-c+0-WRu$[ur?lXk+]p"dS:jbaS%G!^6efH=br8q3DEHR`q11ta_;ApI6NrHd%aa*S:"Mf!"U)#VI%^m\5mekj,AQK8&IlJNjJmH]Ddn1%*NB_GGS6)dt8+(O,Q["rT-0Wp1F<H\:_Es\2%.SB+@o:a=-9f`,!9`D<%@rnd6`&!/HAAgLg@IgDhkp))YJFpiO6i[i.Y&Hr=?7&MXadI5D(/La.SCd`Ai;i%>N"f.abtUi14W9$h3Brj+m4;:5@AreTgs+JC%hISapc(dRZ`Q`7Q;3F\=8fq.qd?u_FiT@?;hP=uZJOWAg_%PHs^)c,O9`&0uUu2%N$]p3mG7ud;n[h48"5fUlf`;^]["4_DD5N4R%]sS.h3Ns$Uh3ars/H6g)a*G@)L^_u&Q^-aY$_W>A(MQUiidpK6J6G>,J$smP"3#al5P?@[KGB;co29bR3)-?UBQ))'(InrkdDRtk%oC\M^W&eEE7j_DGE<`Y']2!TH;Ah$Nh\PT&9N1eLC@p`E`q!d1+df<@``g6j8;l&rK.!aQ\UbM<,tn3MAr-.SL5".PQDY7C?&L4Z%qPGt"H"-J.m.'OG%N#LC;3(pYb[@EShoPAIAO-<M^YM*?p8rPNi:In1fJYY^p^*"Y!Q1/,d_!`=0L[bO!`5b#Er9m%WmShg6Kgl0%h,#3n2CS)N&ogkJr"dSIpkGG*&TKO6F&4`+Up2D<EpD+j"k`QWP6)b[1B"bgW.:^N<1NP=\O(bak@3tTobK7S;SN@M0.t6]a[dB3%Fs:Q<]1p3HP8p=k>2LJ#80rNe@G,VG:o5G[7LB*'C\K8lVX3[+KQWR,c!B42e5i;T@O8@1$o@/p.>0Lj"bX0X.'*D@>QJmJ-An^H%?]f^0nMX89lF[cu>ZfPi6F"Nj)Kr+WB>N!TITNEW\AT7B=.kgUeDjX)Nio:c1d529Ar88'Kar)H1WFl\>iR"s9U_,Y1fK2#7$:'R%:7C1>QQ/;Ldo(tn0,At<?bnj^+GR6M;IZU#$C\VU%_dUKOT)GbW(o(*/k1`nNGk;D[UhZ]c'*GjiIiP?&Etpk9-]*["@fjNl6)u2%B:B3*)m$%2irMG8&n2nOU^FR'"!KGg,UWk''?q78#kRG@Ne!*3q-E5W'8D#[,N;urN9<[Y('ii()g?G,BXsP]Mo._Zk7BCUh]mH/%m>To4-jiA@[VWhcG69#b*n\IMq_^lGha%_q=:%%qW<>BlOdX$aZpK_aq>sd?>Bi1-+i@fSUBE327VIr,O@uNI!Q>gDR2tjcUGQ^\%>V3g;-XcMW'Khp10g5V[8r]A3/VK?fGtGuc.L`VuOPjqZBt\q79jBe$qLAg<=06!g9AD-g$Bf\DE'\PnRnf.)Z2;&O>_lJp]6RW%%\Q5HVHu;D.Nbu>8&h[D.bDll_]n:BV?]u'W8^7PCR6e[+b-j2F6qk:Ci:'bl%AT+E]EAE8G#g1G#:NQ9B!b./[k6YKe<eFr8:V!(%ccG6&#b%E.4X1-K0M"]o-g/IdXeE;M@GV("JX;MdeuiPZ(h]Y`RcWa0at.bW`:_d)=<iG]3b(l.NhGeOjefs=16<-Go."j^=:go]%aGr4?WkjBIRTR&Tf6&WuX&aij$E?L^b>9+5AF(sQ!,YiVho)+t)OnV\F!S'\$ZB>@=Bg-QV&#=e>>`NRWZ#I=E37i13i\+j/<Q.u%V*5nq<LMes5as1m;LW,8#eAN@:Up-0j%f'b9c`Ee)&+oQD@W,QK?dM#*'h\(LRV^J8e!I-aOTneSBTn-R40["RdbCB2-Wne!M^qm%\<8jkH]Q6`Pp>G\FKTW]Ktk/F[>)RP$XX48\8l8Ie!]_4]qbjgS`d]>.(<(=I*94^_%(knWQtrP2&j\SH<H\(/O0Jo[+K.(2Ou,@%MZ-Z1e1S?7W1kLRl-;eLq#8loUp5A+<K*7f>@d23EiA1_$$79#b%`Dcd0e+'2rS>t:@J'<"rd^b8POi5r5ati8Ko/L,;0tm[2Vsj%JNCIM<YTfj/N[r5.JIAgFm;<rKi[2>_0"%mW-!KJ8aeBtd\rl9]ngKIUpY"sE6b*"!"J2RkT?uAI-i_O5MX#L.D1`VqZ7q?Y5']p%o*_4GK&bSU\653oIc$8_(lRZZJO>'`KLV]hM/<h&8>EMdn`AjBD95[OJ^N_)!3gT;U]F&$iSu1<<0,iq5U@Fn,A1@80eI8V7iK<s%3e<:_%\4flOlG0;hF((lCd4PMf$R<6Bp=Mg86Si_V#JFh@LI1;i#meU\S@fPgsa+d=k/*OTLXL@Ve5&IU=t0PhFV3u5E)1u-k!5q%HYZ(-9k8Bt'hUU$:R[kCF*[U'8>dbh"oT*\&ce)"b!$KcLgtNi,M*!VCug_P;@3.B^i_0Lk7LF:-&"dBHg?N2/blM+2N.T(PgS2Q%\%r&:W4P#]cf$63T&?9;TdW)sZ(Y:H\/$^.$e0V<\X,;6Uj\TJ@``\54%b;ZJ[BQ(+ksQ3oTEIJ9/]B6?$E4ucL$,IhaikN3KHKF%6^S;q2R!>40?;-'7jA9//bgP$V"jpSWIgp0QjGE5EY18#e\+&KC5oG$8`r?4p;$R'[8o,!i+\T1cX4pAkGD1=Fp,FU'B2.^'M*h,%:FgigkaCkAbf4EfWsJ>OAH,\]<U?VbkOa<'ri!V"r_sj6_*6fs/ht;J^H[`7WQZbo^[q4SYq=V>IR'q,`uirPNQJm#?^4opf455Y%bF-AK67fn;\NG\O-u/c<('b+H#I]-QMQia'hsGWu.JrN3*YnBR);Y\eB)1,;K3<`d8hd^$goRQUh!(bJmC*XiCC(+2msl*)f2?,H%rt[Bb[</JHkOk9l_FjFnQaF[TWp_ND)fl@,-GU*]XQd!u@_YFA_f@huM/SL^?<%mgoeA/VIE-%qTQK+k':-X;PBYXZ0"d4JgBX#E%jB[Morn,(AFbh-1bGI"::b8:V^ZdS0O+=P^8+u(&oCSB2`cUX.S4>2se%p3[MtVru)"=`*JX[MECo&jtKe[m+_L6ob8ngCSJaCjQ%'7"@&U];Q_VO'gRe[uTQ[IJoQoK$?jE1=jhgie+2+?ti7q@hsi\hqF07Snd&aQ?(YNRr1`"(_h:8@A@13=ISMLL9:'VpR:pq/i(F%=SHQ:BD+NK\ZR.3>c2ld"0TNNf0._$iR<,W%![5Qf_I^0r^h$Uj4[s+`b^LX'Z;_p%t[jf9Q@0h#$%C;iPcWPl%Zj^0npIA\:tY_%0ZFZW(6.l#__ELG,,_!>1<+iCZE7WU$F!*oa.XO,Vpmn6BYaGnV"t`U!tmU;pEof;59=;GrHDYGVIL%ACX/e&bS\7!V0n`qr>;kl%GY,48q57ja+ACM(K,fN.QJBTa],XPY"4@[?3\e+GX>A5C<gH:P'V^$V6<DC'Xo+8LCG/_Vr?_q7ZSX"D94SVQ@#p^DLM3D'XK!o7%A3;&3EeAFqO/3LIcEVURpWGNjksZmW*0g1EB[p-6#M/1&L7U%qH&35LWq._Ddj+.r)!'CC;;HM#>:L9\?U;!#f9/9ug:$;1,PV_i%N`lHgnoo!,b5)"Se1H%g#phK_Od''q.<,ZPp&:`g&UU?t.hhZclcSi40X8,&9eo:4VFKPN/lDr6)g$.42+^Ok=CX@ED7"k/-h;Tf%FSp4?!siZSEbW>.Qr;W]%g`!KK"iPniL)k,caW.Rd4AZ2$Glue08Ds1A#2:D%f*2sN9)9N??SV!Tk<"\Op6Tl:\2]pK05[Bn?*2U%,"fP2/]^M(1pm]`;])_L8l"G=hO`Ac-/SqJj_,-c8hKt`])NmV,BgKb;MN<q;mdZU/nTM%F$/+nLdCSt-G1*RY336_'U?+<V:'KU%=?//fqYFHZd1GBZ4;:,@-k3o`@.r!2l/)cZk;S,Rd>s=&6E:`PQj5+HUAU:Ob=V1D1s^[16G<lJcCc!B[DB-sIX5-RR?6k@RkJ`f%[oq]&l$YiT(m,VI:blec6ZVj'n$BN7ij(RE8XpBu%-bjdkBi?DW33[s9S'PDdhqq,#F)eH%-c!c;04Z<$5U):Wi3^Gm+7?l2nh..%r+!K7G"YAR>3+]nZn9rJq<7r!7#?3*-\(5>0LN$3kM`n.5S(ZE%$5)39o3)ibBi_r+Ed4;&Glm[Sp&=i-GdXo-1;-D<+L:dZijMK%U:(>'6mM`=X./g/SUHEC8^\oG)-l0@s+FK^O;>*OiM=RcbCOho';H<BS<aIa;EHLEL0>iS1Q%fMmFdMnMPf`:4A\pJ%!6TtCiORE%B%UL'EBTg<*CTbY%PI\@KPbnRf&FMK^+N9p#;iFa.^KT8EY:cnF^hJ3+P+^KrFUp?NRNA'XB`Uhc[6-fE4PHHBfa1%/$M(+.l!6c%1etA"4iN$%/@"S[Es8%;V5P@MJ>CS3Im;I@gV<GZKpF>C:so2[5q6&DV.AI:N#$E>',KMC0cn9@\Hp[X_$-da!'$36"^Nk$Kt7kY%5*6'>ggc*Q$]JYE#)IV7<]"Vg(G*>o)*kmchX;&fDO$TOr6Qu9@cCE>>SGA:?p)K;j43nuWb3tS'o2Bu7WOMQG;3>I(1\-tc%bPR%-p_XCJi%/#3XYpW5"W"aR3!aC'qf!WeTR&DOGsaQ:Y5!qUo_J">e+,Y!`LRLoN)G]<ZaoS^6Hur1j08jFoGf:9U3iDF_X32<g\%$%[2-hEiUS1s+]hGRa:UgY_4)P7Z7i#`KB`)E+6q^J/%MJ%aDnU2*!A1M'mKPo('d-i[(H!7H^.7#)MTW\kuo2DIn\?;&B!FUR:7;c%;!lEsCD_&$=0CjI&0RkRZpKcm<4A.Ii>k'0,,ZJ1LOc3K#l!#,T^?N9Js>6a2F5M!A0U2hs.-5'S-\[ObX%?`g2U8cA?,cqmr=o@%?\mPD;?7]E;h<`)'S6X%_YsMKM\%.Z*d%T/HpG'.kC-0`6M`_Ie9^$.IR&".BGa/\:SdgG'8Qf-BFn]p6FXDs#BE6oM??.lKM'@a%!"9:I$%fgd-aCHPFIf-WR'f29kbqlTL@a"#DAa4C739@[,Us8_8^>,<6#J:36:3B=JX=";]cd4Xe`ni6pgp<_dh+>Mguf58"W7B.%BkR>L"LI?gT,p@g0qDGg6)$KP(4=E:)7KlZ<ka\9@??SuU4U$#"IE+tA<<!F9BEpO:^t_YJn172][`K9SP^eLm:($!f"ONA"jnCZ%?A(Vi]k.`j34+T'CFs<RQIuN)B@2<)O8a)a:L&ri`HI2o@V]&2<Y.eH1Mltp"b[-_;B8kh3rsl"+BKkV$-tV[B_I"A;qk)9ODf5Q%57')(#lG2t&4(h&FjY=;iWYG\[h/arS+t',PDE=mppcSr@8g1p"DMN8;Bhbrdf_-k"1%o)&.kEH"D:i%+B49PV2la2W?a>J5oBVF%a;!]'/hh[r-:l<r)6I/dPX\XV3O8B`+))>k5u<e3m0%-q`bX1X9HQVi9GbX#Vof&n"G:f-6!lQOMSL5`dWT(Y"-99VcqlE.^=p`4%V#=A2FFhK;#[TGASHaj_[UK^HE;[gWFn]ANKIWW=ODOQVr)Nc4CX^ODdS&Pr"sc#.T>8KUaF8Y7>Qn\+10F$u`(b*X;H7bhGQKlG%U(8"N*%>FZD?#50PlZm>QS%qm/VjGd<UU*!OA>^DAr\cVhr1J<Q,dNt#kJ84m^j/G#iM6!E'EHKZ<eL/q$mWKE"Xs#M;_&MRA;;q%#+G'S.*HEBNT*3,ckiWd.>d?:KNc7R,ZfS8'tDRRL^"RoNRF&1BG>=`=V@id:mXY]M&%4`iiO0N9<8b=:X&`3P$KO_P>Mcps-C$)%\b8edZZNm@a'ZSbIb6;Ve]f;<qJ('"Ki1OD#N*ItHG3/q`rP!n90YXMfYdc>N*lfJFN(\g9%JbfR/T1[0dm4TL[eF+g389b.f0Bj%6:Ir'rJ\X^[6Sg5oEHmHg+m!.0#$Yb#D.N@m6Rr9KpM9/M'B8:7jn+]h[K0J^q9L1[A.KX/A`j=3]A1Ecf$q4at6_s'gs>C*Te;?%_+R+L'TEPP$;l"dp9ph@3<:+O]WEUmd\pr^^9jgj^NpJ?O`Mu'W.(8hI4S6a]S8X.EWC\?%Ed?OllHmk2&A5%8J@(0XkAlm7:LAP%<<]9%m"-riJd\>I[eX:.oWjtib(The.+mrq37?aPj;loq]2NgT9Z[_o?'W$U>?:VRQt9U?'2:?VCF^JGd#c$EPN3sbp<'+d=[8g_%D-j#,fm$>em;scIOJ'tU@5b:P^CCLqh>A%`)ku7kd`jGZ5iKfHOO63We"sb`4Ip'uMG"aNs-M!(5C8kHOA]4(S0YB'Je?7hOm_(N%;1oPmklfZl]F4X,B<@Z",'At,<28]b6VP^hMu-\2]$,h\gMnb78_7[QbLE:=Fk'*/l<U_'7\dADm%mCPmY@4TP65MX7DV7n[3rRD%WVcOa/Cn1`L!Ii?n"(;?W;E!0JDa\>M>NN1\Z>U]YmSGYX0G9sl;F\Al0D<GJK!b.Egmb[9j7-aaFP@r<>RkQA$>_[(F(Sa.$JHQ%Hipr*"1Ij!6R&"SP-3ge)(Ugs2R/lL`$LtYSfU\m'W`m<gOSSAhmsf[ruY4qQ9_,QJF?eGDVGm<rY<Mb0=Wu7LmKGDn<Q)X,_XDR%oApN"?p0u6%GhF_OOCgYrIR*FQK):rSqrZKdlVnX(V1<85>^.DiBLno86_lK#de!"Tkgb^T"7KeghZc74d-09$C@RbGCYosS%]pp%IZE742&B&)Ls#5aRmA,<6timqdkH9oD'D[:5A-7(j\AM:&11p$B\Egt=mrXfnW3C,d=O.t/rmaVfh,D<P+4MRQC$n,#EC)"/p>A7%Zn5Reb$AgnmhZghqRKnW-\5"YUR-<)0A4Ohnk<@)%p*3j5gZT?bM/@>%!?L%+dC9PSU@nlO%#)CQ>]u`EI$"KXNpE:o2$>2-n(f4%[J6QJd>%BO*<_\>$c[`LFd9$9oMTM#I\1k$McbL#9(R60/I.EX61K`@(QVEpK4B^GW2^B8""Z&I&2Xt:!a\ar4cW)*S/OQpMS1Uk%8g\EnKV<[C6]7SA_>jLaQ8!Am@_hc.912)i';luq\X"RC,u&LOYb:-HGFF0Qpfn`Z,9hnMQ'Ect_F]8.61aLf0uR*s-/$[9[W.F!%FmL]DfGQY/0CB<J65,/g1dha?,h1leY='"rS)%9[d=nst<aJq%?5EcaS$)ZmPnV,(#DVbgifO,WDXe3iBI(5V/kK/KY"Zd6)GZb^%[KnAZ`<5d,^ue6eh=DuU8q0-T@*n1\70G4mc'?`mm"\VaAL/1E+;9Su'mp2@3CqlqA8/]mO_]TreA$Rj/4=?6C%unKBS;M;'QIZC%!T<rAkF;qI]Nge*_NhnPQ't7]:elC#EgeWD8%oHSOhhoZNYH*'7`Chi!JpC[Y^12]]\-Y+'&hK+YGB4Z+cPKCgW*kQB('O.O:"K/%U0cb+VZoOQJe4XOm0tbc"YLSsg19NTJl%'FZWWX"d\/;r+rR/3-3G@XaLJ&GcNf^B)u2i&3Y#=+Wp_,I%hF])$%j..$9O8_2+iIA%eKZoH%XF:tY$aSK(J3l$i]DE/fJ)-/ZQoLBN"4A]ZQ'9KV0nSJAo54:#dI0=?)3k@M$GN'LI8/MpB<X631U!e7TVG6T;BU-@g#>3%_&bLd:`>H<lTPSG5J2nHFj*a(Zl?[cT$b?VXADoZg'l>j[Ija+PV_]gO4G1p4(:-?E0PmV=i*9:J59O\UFY7*n@SZ@O[-:oR?Dkg%nC4@;=A/ub4tF_u:RH83n4"F\PEip>QUBIQliaOCc:&5H`!=l?.g0(Z(pGn3#m)5F6dt'[`LDWPSrR'cP7?]ie]'qMeCn5#j!$``%N*(:/5lB<*r-/B*-Y`Z0I\@FSS"7?.e/W]Wo]:$Z_R*qX]tktZL##FkTH<>2)I/`gLj/I$C#^q'FF]3($0+0H\>MWcNR>*JCgT2d%[r0Rr*s9VOqSC8'dr5Ik/-G07giIBJi]CaV\T)b>"m`73$A_RdeRReblk2Q*8^\0sK^si=]Q_>R&1@+l<WINP9F:o[f1KOV$bA.#%rIM`i0s!tKPjB_>kLWUin#l%NS+.siXQ<!bVoaJZmWPf/:*#!Ld(OgUNo4^CF\V$]"B_J/<ht@r)@f;dY=S,q"$sqkVFk9[AEc`4%f\1Ta<S<Z/Q]Sl7bQB]03YePTO;_u]QZnS?)FfG]3nV<]lRROlC'/<ABP%??.0Ybr5C<>gZ",fJX<YKB$@sAi`_L1aF3[3rO6V[s%iY[auP6EdULQH9'1gMY/!fuA5^i3eGA9YYjoTTe,h>"8Jhq^Mj08ZpBDHI(YVEho.`[p5oj;3g16X,Wlm/$OKE@>k1D.-Ie;a'rL%_UV*ui2D7qD#@LWcbTb&T&RR8l=\(f+AAt2M/)pcO%Ym]ESAaN+`NJ2V6Y;8?n<B6"B?Q(!3\q$j@JU5.M@2E,XV"fisQcs..*Ka%[?AQF2&&6fKB_WtpQ9dQ'PE*5O;0)ak;,!.g[Z",^(3j/P[XnV48*kW/g+(<^#\XbE_XZ4PFjDDOtT\_7o8%MHERJ]pm+0)l@FGS%i'8`iNTcA'O_J/`LD:-?B*R=&K\83u"q,5V2W>r1g`!oP9UK1?mo?^GC&t$dEu<:u.,Z._AloP!fcHkTCQjikbfOX-`D\6)anQpi%guX&d`.1F)JhHdD"(&LrO]f#Jk2n[=KWTUnD:%*+7@ZFa9+`d3^L?&1Cgr0<1k$L#I7<S5@TCP%"n?p-nWAEe6HJ?K>i_Q[\3?c)%(KiINo@3Ts)Z\D=TR7P=^X-Hc/>McW$t9gO-R@U3qlCVA!*0O+%G;k2:rIaJq,bI]YjAf71(#,:Ou36S@EX989\5l(dRouj'$WL9%X(HPS"$?gYPu.h$a\k=cb)?VfeVrZ(q7c-[D.lp7;#M;*#>1$SP[H%>N=SL2UuNn:+kcBWM@G+q%IR,F5sL`d`5'+;=0$i3>)6ET%iZ?="9LC;/^0?pWA<Ub0G$0),(]<5)Ie>8EXapoFSBuBbj[;?S9M0a9/p\">mf)BIaQ'snQ.d'LE[:pC(="1$4*ZUB-0<6iN'<P>%U#f^uc*2M"F9q!T\<?tCTKPT*k5d4<&YUX=2&.cq+?pc/6,uf?ZUU4l;q<Q,:[O]Y%2VZ@j\>k&GS]\'(uD&BJULGCM=*mlj[M)O%Ccf9BIaIu8SqAM_4io2s&K@+#9ZLU_rjhOB,_2Ku/E<Q@$+68Nm*'2l$!8&NQtA4ZT1+f5)9iNZ?g?A,(i_NaXj#flZq,?e<_ok&%p2^<M)%X,>S\eP-X#gD1JW2cI2+*4^HqjqhK-*NSUmp\"Mh<PrFA&B1Y2ejZVo$=)OH@$CAn8/)'lC,u_%[d9)<0(_bB:>uehI26%mS/GSR:X^5fX_Ft)Y#17on_kt<n[WqI#f8gDV:H'YUR&Y=6W$<;B?3GTUG>UpK(jlKp0Zp+cUP[pbeU+&umi90gX6p^Q;1DUl1Ro%USAdB)81]*(IqDh;=0\48He\A]Ja:Dq?Es@s(Zf"Yj!*QQmTd<Tj-FI'#aD.&LtYF/@J15>TpP55c8MZr<@A@q!I#7F!O5WkVLPG%Z9X*i^CML:Gd9&_Zs?-n;d_3dN\HqoL7o\s`Xsrf4GnnMj#^_o;2;'nD`@ipJ_>P"YlfU-M.f6A^6EG;C_FfA9aVJbU-V;:g,riS%!.YZCh7eBH9[D$&*(J"[!lH-Yg_<5#C,ZS)&B6%5P*E%Ri#L$-(p#L1JVabC\Cd'!VY^T#'LJN/N(Pi`5<tTF0+.XHaDdn[,5/?L%"1b0<MjH^`"QD1u*=VOQeR'0,pRWm+26VmjIh#s-#(Poj;BZ7M(NdoXd;\og&b%q%:E*h.680+>bUu.LB+ts6?X4d/GdpHA^r4$b%Je8kT=G-nFLN1NOK%n-B>6GE>4Ie8$>R9<j-_Gd7*#M/Gn+^r('KE??<5dfL201h'\'\%.i"o#nLd";?CX'U%N/=G>R0g\Lplufm%CW5`Ybs)h@_olD#.5m1_72)._:^'DZRu)Jh+6XO6RFMJ+h(Mn.cSKk_oo&DPlOi[Y]d-GZ'aXaG1O_H&H+:_1G7#5p(fj/PpL$i_%IBm%:%1r%__N0T$,S+taSe-nc,pH4c,5G^'0?@X/nmjcD5\oll`E^m>bUe4:?.<fV(SfZ?g8bF*/hn_bnGY*%?2&mC$QMI>87#p4%`js99`SVS_jX"apirK;cd1@"bM^FB@8G#Y_-OcHQd:IZT%&<9`?Cqj-(a$KYLCcE^BnR:]`5$.rR+E8']nW1RB)_j2%h)=lW:TX5%_<AA*$d#gWo?i'$4:J[A*0%EV1gR3<[8oRT(rT#$l@KU'h#o_#_"_%/Xp]jO;oa,@)#JO#opRR"-'Jn:-+`PA&/6Li,n$_/X?RP[%h[$2?mM%(,8(8?*A`<p3`^nZFV[e5sR=Ku;$/f4q<'=a2.(U--/LUV='eqsc,SgDHS]*`;@=JX!KrM+<k<juD@(t8@I)P#A]QMPj%2TZBEV"NF8r8&jG1Tjd>&@o]R7>>%oW/+b9%o.7i+s74V*Sa0YdLQA3(^N=-9r"*<`n#mkT_B+O=<%a[%@'(!PFRr<(,n@Vp-JIp%#i(&STHTPjjVcjKoU/:VEM4RMBMe6QX0`9gR`f_"@mSXDg_,RMFZ47O)%jM"otJ<@glOY@1/(kqCC[$$<aD;#r5p_JKJaC5@9dZU%\9pH4`YF\b_r%78[12,rI/C[LDs8RCq0:/!Ye6Jg.jfioUK8#p;-QH?13CVq`a7L;j@*#GdlJ*DORES#?bsa(Jc`Y+"6g55bJb-Q%8B,#4^797#JR;`Jc%@K*m#i(A?"B%-pf2EZrYW!W[iou',E=H.@WYfo5DocJ1J*8RC#%GQ^G^ko'T5os0Z,%JDJ^ha6g:5K!1?16%RfZLr0fjq-2oIB-90on[!<k*=h#;l-<L+E;%55?*n""aO?h#iP<Wr-!o>bTqHQ0+!j")c/D$Oa5LrmF&LUf]F=Kt0s,$bHo$o!`U%>Ccef\VjWg:`3(Qk_Cq<P8Q*OG$s`]Kuc6(/43QlYGH*>84aQ@iS%El49SU/VjU?l5$Ap6ZHA@Xq1[V%9uj?;m(dI.Y<Upa%AY)4%_WnZd$VHtH6MZ0,,r"8,IY`T2p\raGOSGe.3TT,cE_e<:&d)+X->k;-)7=TR>LSo$kHl3/c"5j.]^S*3l)fduC2T6F\QCWU4=8)]%`FelbZ3ZL2kid\O1aln%dSLD>'c\Qh[pt4#A\SrmEf]QE00_go*Q?#t9oYH5dHO[!?D>bZ\2coHhmX$7D<D;NE#LJ!f$-GfF6Kr.%+>QW(Rn8bl8R]&-l:mW['tLbTV6I+*"NGe_j9AO8AZ.:!=ZL=_m1WR&9#TiiJ[1[L=gFtXTR/"4d+GIf7)BPY;#>=!+NYT2"#$mM%N5d-GHZQqVSLml<F%gC$fTsdI3[Ujop)&jIGilZi8/0dV'OTODf]eD0/s2uT]7uRp'8L(cP`]*h_WHJPl3a]jK-o&V#p_DCJY37&%k/tos"'T<J-@%M\o4<Ajj?eZjhM[u?d)04&.n#mZ<%,p[V]9+Mf^;HIMMX!6!O/SFgtHc%K?R9\0F!O`g7-uaS)7"i$(.-kZ/Am#%R0N>d/^>&1)<%Tm1S:\>S@JWbpquMS\NZ2jDW,Cf]/>$pe%1LZnQNson=I[hb\U\i4<<JXKK'OZ%EjFn`gG(Q/J/"p2QeOcN6M:I%Z.m=cV80=g0dkQ/UA\@3TH1@("nnJ"C[gXkp>3HXnbn`2aJdPh"$AV"lPPe#>-jg3B1:K362Wp*<E3=mLn_7mQ_UC;ha\0PpMERp%\p\M`3BIHC^&VcBd)4i$2`ejNd4C5`iNdOVmXsC\g?7f/_mF@@)$J>=Ce4?[a<8!X`'&N:&bqQ4X^r[:nQQe__s\NdYj[7HJ0=XC%BO`oSjni?uPk$m>)!gntW[*V>d+tarrGjig54o:9f^:*$54u'uZ`2<Trbf0jqq],,1sKD%P!IUqNSlRkI@mtHSpX%n-'@I/)9J*>%=9M#Y[%"c_^sWW,If101ZcB7eAW4)+_ff>!Z1A??08/WhUgI2C][ZCi3eD(9c*%U7*r]/0^MlZXf\nua?PI&42tNl&?i5,X_Ja(=%EaejZ!F'?qnB3U/Wp=Tor%:Aj"8i%7rVLG]-"IRBs)gq$.COagIto<N$OG_"?ag*<(X!f'Ce(/n%AudBpq$.KD-cWL?J2Ed#ur!"%KP:["^lCa'AIDV_]&nNnfjCSi$Ci<AKl2J1%$,0\YYn4ckc^u$29:%S%bTBdUe/AE/YS:-`hr(:rNC9U80e1NWj`Sn9gbLid8/f9%&V?/=0a1\7(fZ6?M=A%X!ELE%!UG+8fJb]))9qMtnOGNgd5P/9E$9N2qH:TC1kZtT!d7dL:)%*[+%%^l4FlNZ):/PS.]p^)JGj&l%bm(iF9GN!X:W;HS"ia`XZqC;PI:9((-@t'r[2]?VcB3;k2(#OpTS!q<osL%m4P,T#4tpPP#sReQ'oY'5h83PG%9ZR5LO7:hf&2/W%5T\n!'VhNhAd$ti]N2,?/>:?H_Fa5T<DB`M8Y\oa#0SMP2CV3WK*B]/perJiT<RC%QjmBNFbaogV/Ag()b%G&'tAjG/S+Am7%H&E%K6l[@TI>u^Ro^4M=JjhR^6?-'BbUR`k'hG"oN/lomeeiRDf5+FCkP:1<IkJJ9sO4a>7cLWY!C_g=ItZ*0N&b^X?>cN5nOi`dgFPb%ktBUL+Qm=9i3EE(]<aqBC))#H@.t"ubM?<K]u6e_6$ZCBLfR[t%dNW:#^shJXD8H_\)UbV<9#48oE_/;\eH-X;0OB+EWA3)%+?gm%%=b&5qN05S$N+XhD)7.s&!;VgoC>c.Z9'%X/K?V$V!*N!(#5E&=Womt@h+q/*5$'r5S;Xb-gp-Z8<9q>=!ndT-3+4T0_.#MA*@%[%=[.eb8C4P;p]^.9N'';5aJfZ11Xu0?9:!8j-5<[R&N(/.I8sK4KVYk&BV.3)U?#Li2-ApL4q<7daBr,++.(97!K)gH;p/!4!AD*i%D,`50C"e.7E1j+oHYB1B^>a7t"IShJ$$@%BY86>clAi0?^]72iA_SI[Mu?$or#+/=F@h]C%;_\-9q!PC[Hs:sn&MN:#hVf/`dGf[%#!Da?*i2^=2pujVqM!u/Y]`ju+dJ0jUs^13%&gZj"#FK"s,XTC-7;>O7!Z'<Sq#.1-VeTE-do*P(8eI+$poNs,jC3)R.BpjHfOSK%cu$'Yo^lTeo:n1Eq;ecBG&81#N'bV>@!IC/SPY?.+HQ4QGRAtCq?^*m4:K-^LaJ-$Q=#V-2[30$T2NC`niM?<:X-j^4#5i+cHZe<%qEQ$++n)V.;]i-8dQ7[*CO4/OYn^d&lHE5&H]mF%ANnW&W&*Il$,<T#<;g?J0<$&Sgl.D'hupcppj^HlL-i'T^Vbu$qM=qgBCJ/#%h8EW*)6SGW>>*a0Enk4\E6?1tq`honQJF*7CWc&@rV/He1*Qa@*-f0@dkZMV!$]1_3tflD?,WCUR0>;GAY<6eFGs#HIcf,HL^*0Q%9&>>KfIQ,c2!(h7Q`LHI40)Rlr:UIliHheVY?&o9T]it(^./CaFCuRT\"+f.YpHc.Tcr!+TbN"-ZRoN0`aK/_.MoY[i@ehQi!Z&[%llBhFKB_hEG%&N?1i^WT%;U+cmEu&e'+#/o..P`o]SqH+5f=eA[h%cBlM-6C`I2WP>'Tea)9-.4?-TF1R&oo3"=V>UBmtG<LX8X&%]%GF65qBlDk@Tt7H_L<`+P]a<>SfPsnlk(ZR;q5]a5.p#Ul,cdb+0kK)*9.Im:ih+!"df`f!F,)@(H*d^<-eWaeu:$$R,Xmh.ce<%@>Yl=%V.c-)Na)ioQ!D26S-^Ps6:DgS;UG_huLlR:4Q9"qYUn3.a1I3j41=%muMYhmL7!Yl=%8^\cgE<6W_d+fMm66EXD+J#JMbZ%L:e@;JOcrk`%"9F9FjSC'e!DOd?lD:OE^RFk6A]%MP*i4U.4@l7D$Y`8HW1>XW,(k1WQN`MU!B0lIpLa0M/'`LS?q%Nt_fY,M)`T%/4)sO!@F$[P0FTY_Sd8fRaGtLHmap^J10<N"%!!?87jY1ZHU4_]UL?hg<o>V!Cd&&&LY@jU7nGG^e3sH1cp`Mk(Y5rF$(lB)AAj`%*jWi<$g4#'TSMjm<D_Wne?6)%gZpZX:'!dhe&5tL7-1VIjJ3NB4@#/b79%]gs%gLmUViip^o9N];pXg6D^2nG<[$tiePj/_MaPc4%/FJ2=`-VL_j0=pOJFj/7aO8u%cUTcBeih9p3eTgCJ\PS>U]&;hnZJ`42/Xb_P/"NBBlB)_Q,KS7nU5.gikg+6Wqh*BV-_=IF0fZa%:.KSCIb]=kA;M+#lSMPMr0Ls3A3UX*+C3e@7)Z?Tg(XVae(XV\.56R:W.9G&j>kBmdc8W4UU.eG`;sCn6E//c:o4*&EET@JD?a;Y%(>\diXVfIH-0T;*=N3Onpt1VbkYR.o!qQ,XG[O:J)Yn]Q&hG^c[fb`1.ERAe*6aB]lJ:b(VqJNR3Qn3:"@C"fd5OfOl*=@3dtQka%,[J$^"MV_rNWgVWkK)RA*NL$iXB%.sH`VfA)N91!hu7K`;ml*3Tp5-oHlf7c#6X)#!dErkbD[e!o1CNg!r9Jj5kp:lqi16[=$cIL%EAf1nIMdqB%r,N.WD9m:(hpQBpp:"U3])A=$09i7Obb,CoUc6APmGBlb>"U#`^AZG.B)'Qd(iCX:MsB2!_euGIFjGg"+<_PU<buN%.PbL!i;aN_DT-qCh>QT9>j!=%[D[$B_(+1CI[#dt#Rq12m.Y?c.O0ph=K%H,"pio/Glij("XTi1g;R^T(M)GlG/65erUeaa5![h#%aq'\2/:%IZ)W*-GJ<"0f8V+h;ai"M\b%@\&E"/Z3)K)kpf_RQC8V(TC:/CsT0ZGa8\M/YpC3eX9.%+k(Je@eI;=R'VZ7ODR`'j)<%#W6T(IfW14^r>gF`/QAQ=>hKoIfsH>*T;bRGj.H^!Ocd%MZXr0!bl<JpVbQ>(kDYI2N(fCOu\;;>l?5%q<.=6^pQl>d"aS.k=X&$%P\80*U8BGk\H!KIduir3MhqRpA&.M#KH=NcW]6:a[,2-CZG)`r`ioK32@]`pALPOC,kA9%Hf@\P]](=Z6=Q@oaeX?4@j@e\*=N!-%XEdQmp'?k#;q8*'\[[qkK>U=W_UKsR'll(i.%guq7jQpqE(U[<+tSDN^D0$oT1643Of!_fA*f'W8MZU@"fsUGSKbSOIc`l-_Yap3%jUYggQEW3PJ\g>ip=&aBAM17t+oJPOE,cMMC:M(RkHC%$=mp`.R"LG;p!-\2;Of"aN<jnO%nV@eJaF"",k;Lg)314"i^+e=;g$<T%3"W/'Lgsj?5c!)sSa;uM;I3(gVKaYmc=Y:d0Y&/R#.dOm)M,<,Lpm`m1`T<_$!kLf.AoAM&e[TN.2p!mZ@1mB"%sBXYMHm`'O.;;%n&)3k!`OV'J?6(NMb.q&8m-)p8K]YdnZfXGFei9+UDT5S@mVMU2[O2%WJi^_VK9Ja#_EM\S9X-*&/pm@eoa6&gTT?LR42KI&AW,V%P`[+Sj*ps/Bs6Et!e\!q(n,F0)7*`$Y[DDf*6]3JNlSJQe*8E\;@NfDrU&1;V8j?"_V];aG?M,T1Ss(E:m_tdTm!poF"8,!9:FH?%9ZHTLcVQ5i<J*sS*]`%VAf3-]32/XDh2OD2g/SX^?8u8qL[./#3!"F5U@D'^P(h6DF96FDEO)t[W(_i7Quu-C0`r_6aE,tHGTi2$%IM)id"<qg@W$US6;CC/:-N\f`lKpZJ_eOJtJ.nC;C]GR>cq")_$h"(&074*ld:ek[MRp_I`9K)&s/66g$5:rT7[:ejg^O?9^<,mg%Ie*5&OQV9A!rZM5]a0/^JS=Er*qCS]`o+bHiT@'X34lZ>c,$Rkj+?,%Ho'>8'RcH.>>mE(.:5q_Pd&0)R3ASmH(Zc]k:1uVlY!b-%-mX=Sj;I\0eP5&`(%L\R<H\O(rbEGmk]<9REfat-NP>VL^-?DdWf/=Ae'V9/+^V0J`+/m4]onqq''%G,g^dP36\D%p)>QTA4/]s$%^]k"c-4\,lbls!>@Csho*ks]4,V\,8'Jg[(&Z_ch2p7JaBFe+]/k*=-k*./`QAeY-Smac`bm<0'/\ion,T%`C4Jb*s@>G@P)iDT=%_kOZ3]/G;U#nHG7^Gan-RBt9k*WC5MG\q:P./PgK^f8+MWi9N*L`F6*-ecp+q,CJIZ6W67g`"U)iFOH_Dau'uDZMG<&7VuIR>^0q%nV$he#aaSf^gN@747pHO6'X8USZMF84GP==)8n$4!i)($)g!Vd_=7BP,8c%3pZ"W'\OVp55)Q)s0,5+JUTuIsM5"t(^>@$95Qj\m%9O#!S)`M0")"@Ib,9@=?ds0SUL]iO,-Uo<K0DTL`Wn`CF7!2?8nn[s:NE?]TDF^;d<SK*:L+bq<K?U*==j['(L*HA'5J$$<p4:R%%bUE.@d"fKDc9dSrP7+ZlNuT42b!qQt2D#8s"a'iCnrE?ZlQE)8XX/Qa)$uZ@**-p@qT#LX6V?A4deNAr;Js-a,!T9I&r=ChEp+Gr%CAA%h[u)(kB(*B-)d.11@8\ZS8::l,i;=aFg8__Zo[SV(KED8,MA[;?_X.1@jBX.@OPR$4`)Cc(R'YYN%Su*[/Hm6E^/d!M)<!h7%0_"-)e;AVFXjk=%"<-5MYA?R[r_:lMGm.ib3.0d-/pQ[a"m1tbNa1q?&]]mo;4-:n)NT1o$k+#C3h/TF'O/l@ieJ]r@ab\[4(P/A%T%WdcphJ@Ibm9ITHj8R<TKKl>",7dFNiJYS`f*RP^X10A)"?0:(o7QO]Yon,S+4)uci>/b!T,]m]9$!I0]6gRd=<d7c0i*p[J;F,%MXF]Ee$<9U2hG3i#`S\O!M_tHO?[F_Ijaem;6(;QQhITIo6FR!!jLlDI3mO<E\80>'29R-%;u\Le@eE0Z-iXp;TAs8+r6H*TPera%?q&coEDNM%Aq)>5#sT#C1'L.oEsVbG_4`Mi>4D24$dJIPo)cTehApj(?_C%oQR/J2ol.aDP%>Y@?iN6*`_b&+#tG[5M]IX@Q]AHq%kOP()*`1>Mp_"ah7On9K-5n>6XHg&W54]mEp4Qh>R_]*?E%cT60(;7@7,pbZaaS.<1H.RiBZ[VNGOi&bUPg"@rF!=9Yn^5jo1@.b%CnnX3lr&0j;rSt*oAS_N']r[(SJN+G%Z`Ie?Bl./6tb$CbG<?>%O3ES:.(?GARFm:4dU7%o,c#kf<NM.-eM"T[DL*H4&4Qj[nOG&%c_2X*,2)QQI;CPV4l>?tfGW1R%3l\@NRh;Rl+$D<$/\$fgYIYeruU)^^5Gik`3qtCXuN7OMiV*E2pb&Cd\-/n3()Bdq%8cFF.N=7%"!fktpLBLUiRFe)<Z,[6$NWmsN\4/LDY%kKMP/K;:K!_@h9$bj[MJSG[6n.IhVBME;"\%TO2(m?J6L8$cc>&]F9loQi^gZ$,!`U+%@jG4P&C8B=a,UNFJE^0%'6Aon5cu(1d0Q>j=9O@VqnS3,^PW4XNCi*6f;NdEnW)AQ&A(\A,S)o*/]Q5J6RE72'WJE2$XTJ8[^oV/%&.mhlf9Rm[V.>hIIkC":-ji7[pe%9dR\.pY"K=rl(K9QUJWg^Fp-eM#I^^L-0V\B(=(9W4B/uT85QF*P,t\ZQl,KVS]sQJr>R[iI%kO*/\D:&kk@/%?$>^8!.1]YVG)dc=Br$*BX5GNM%+6t"G5__.%/X9G]1]ZV6#bb2(WUlN*2`;uWleBLJMea+t-\5_(cqY!.E5V$1%:Ln,<&Nff,Y]FBg0)2()7]gag6s!a8c+2.P4KV7I(lF2'0Mk:aU>Mg8M!,=B(?g4r:$Ck*8jEUEW8BctnpYt;kGY8G7<EERG/Fbm%(X=n&hH4i*%@aC7:$&ZW50_pV_-q7Ypb+Ul=QS\fI@?Wk(R'dOZgs76\3hce=0@H]B!_o,RpNtlepH@8kX4AWpZ)_e9RVk0lri+0%)i-L,h'm5h(m)[mk"g=)ERR$o7<1BO%5==E<8eTu+]aSAdjkhZ]b^gLhF?FH!s"*6MlS1S],o.6d[TpSDE5Gq`eqI?(NGe$S.-"i%I;3X2l`ZHkEjN77k1p#:E-o%ooJXN9C!U(U+-k"S;B)3APX*Z?pHfgh?;`7cS*Sq4GedrMd%Y=o:(I%rkn.Gn%rH-'o+Ke:Yd!)p%%;aq[^?/WAYNZ76c$nhM#$22aI/f[dXR(4=dGM&'(Y/6RRp'8hC5RZ9ib1@e287](#-@BDT[M<W^H#$\d5:$'0hnn[92i#k>4>&1%7fSQ^o[;,$HS_*fdBZ"Q;!bmsd6\@2.t3.@s8H8K>FC![lC8Wr,Q;/SP\acs9O*Z\aZT>IC2Qca1LiZj$fTk=4Sr@k<dL_)0<DL$%D:jgHC!5#E#u\EKL0j!%dq/lY1W-]8Mr+)f-g?3feA"IJ_[o1s7Vt5?Q%`7')lp/.S-T9WDUPj?$mt?dEs=_n&MYYd&#DhSmPMu1%*Q6/Y<@3&&1Il\RT+ipp7*BQ-UHcYdp2F*"NWP'2/7K9n$&=l7'8Io$=&Sp\VTK6Lf<]El1=Zj164KJqWHTZ&eh%`Vidh>Xa37`g%:25t[6Q0$u&u8Y38TZpZ%>X0``">)/lhG<8[P&6O^p&Ko8f/MWp!sO"!f,ndY,SAu;*!<kp9/=B)0+[PrkOJBM/SnU5l)SdSaPfF%i(=di.fa2G3q2Xr&[#I13(WJ1I0W]`Pa>$B_hBdM/fKOrARE)5\n=&bDA"6Pf[^3m9SF9V@&sbi.RlIAHaUG>KfBs/Jh53;cU5A3%KlV9N,1*o0h-8Y+7HuS%91T4AV8h>bE(P)p9jH6p2JTg6727A<!@7TD3k]L>R*e=:NjqA<1;mKj'`n9%m1uXtqVbig'9U?c.3cMC%4Z**CA8rgsYQBHuW/TFlCh3u(-Z#]s3QW';<6Q=6*+'mV-CB04H;#+)ClK3GKF*c)\mAY,M68;<+lK^QP*ejR<utj[B-\N0\BDpm%UOYcP`i07O?rUH5=,9tYmG$>\\:2"M^G5:NjOsI5d7/$1TCoc(qeJ&4rb<bFXL6%M;:tub`>6;k/Od>K$^6.":TjhHW87^s^@m4C%g&$oF<3-Z,$l7V%P:3Q":)uR8<ek50`neobQLj#&B8)@:,EeDYkA'Qj;F(XnbmIk1B+oS$L')`X!YaqSRi>mkb*m(2jYt;0!/Hmg%g:+l\ADY8,<j/"[aOKrukZr-.H!Dn@8AWVH5753O%g$ESXhamfs&Fm8DCfAZ#lS5k>a@RtJhn12e?CAPE%:[>%FM,!;]?-D9K:UM%$hh3_G;iAGPtZ!*`G]s6M_,ebP;]P8:Vlt'gQC/<Bb8aY1J1X/WVI7\?q'cEqE2XLcu/<52BM79nDdDW,^)DRC>$_<2l9l*+@PPd%K#Uka$It^ar6%W]GRZLgT)b53g-1\@ZGQiB6i'HYf>-UV=<'\40>c,O+bH5&i&`OH&:nu;Vo+=LGO`RKS&fWA\&3rb:s(fYe`@Z9%Q@;.-4A_'UP5sQ2KH[IcB=f66D4@W`^9d`H.m"TN01t\M[#4=-_qXRA%O].`G?cf^;hN:B0CttT#uL%LSf#,j(kfL9Bebk?gj0?i%i&5HV)taKd1cPh!$fo]""ikWoXGM>"kTd)'YA5U\\+[c4@=mFrhVL21lA_=3^6Pls:+GB'\=>`4oRXZ4D?/)ppE%7*'m!E"&(qBf%H.88#:a%n*[H5a)_H]Y?bYtpuW5V89n;S=r;XTZ4Wsu5fn'p+nGVR<(&f\:9PG>1"=3K&+4.-`@1e*-k:<]8'KdO)KUKLAe_XYMj%JV&0oJX"s(Sj(11:]e85M%8QFm(\!F_Dqd6P%4j8rrf*gT*]2L^N@YkmsI''V0BEb:@Qs?dEr3=&"hkt^m<!9X5<Q%G`1`9VRV`B%1C0R6-MZTVXPq5RLCDP6e&Gi<l$AEdpb1;7i.eI?9.l>>F34u\4U^WuF^!,4`$A&Q%Lq9*,?])>7aJQeJs^SOQQ#Q"ckf>c\rO;!%XS)(/e\*U7^q#*@hR.,jB[k4PGsQ4*99#NqeZAI8M-i:+R44X8d(e)I7p:At6ohs@JB4]tl&0n>7)One%^R(+`D47e=El@-^F4P.%Q8+^:,(]lH*mUe(`PAn2`H;-(D\F<n67IIH^uUhHJZe,8pq(b`mO(9OZ<s?':d7QUeKCXsrIdGWque'4I\JXB_?i_o*;k3Q6VTbU%DXA+"4`p_NV[\IH([%PNH'?H2[f\>,2\j`[5eaBb2oPKQI]#.K5,=ei6hml=L^!m-;g6tM^'?eR&<#VQ8fF5^E"Cl983,DA.G%jZ%bk^se!di!oPb,%52oL[J$6"6][ST+f%N>KB7WmT"djp]3_b%$Qdaj<t9]/GFH>dqE!71P65iB9^TB$HRMUK-\hba^O9$+LB/FTV4%L/?`6N.\t7d?7S^I7k]d`(DHBGd,OE`HX&9-H-Y`HfG\+pUqu@X4Hd;QW9FB-Hru'+aE3.J1&$3b8g9:\'hmP"],"5mOj6emGiAp%0lNNJk1aLU)\,HH)t]KkckkJ+L[pVibgP/0[%FCTlUi'rrE=EuX_Lu4=BU1a=1,W+>sdaO?$\s)11?q9e30!f[8,?565;<4&A(Ob%?&@oJ8%MT]<6j^c>Z^<LmV[\1Jt;BI=s./&'PE1Om7X;"V6hr>gkGfibH5tk/m%.FBK[bF$Eh':Y5:bmQmLaL*($/d!HM;Z)s2.6%-]T^'BH5Ej(j@M^%PdG=!Zs&6.K<$\kS<*7U[o&>_HWDpRb\.M?FFY]aZsuN7(oT;U8Ot1Q:JXk1prPI11Zn0gVYZ6,T%c75"F#m%,Vmu_&IDQ?aD^p;'MO!-B+'f[Nruq5bk6JOh6_]F!6`ESP1Vq32palt1]u>2r"@Qo<o5#8joE9nj3&5Jkr$8GUD<-mA?3WZ5DcBm%)LhZrBQpc-Z.o]epAe4\LCC+3^;g788]%ZV!@,DE3/L)EUc6o3C9j+'oWofI@aUMkO4OH56^b*Q*nhKO!&(o3KPU!l)JGoV?%b,S%>oq,bHRb:eJ3'KG-)4h"ejUI0I/<fa.m=1ZYCa1N2O90N+1HnqK+CJ>]^@ABL:V-3Cd\kqBFe(`RaN^d_IdB3oMusRb?l['3\0?.%:PGJIA,m&EF4E+C=J#">,Dn+?"VDpF_?Nm*6A?qp6BXalTp0VL`\qEGiReXbjU:dhrkI/A-CngJrD39Q6'GXi*'9;r5r3[[XVG&J%DZKdRq>acZJl!5k;[&OZH3U)=#MGu2I4VbkGO!F7/_C'GYk%."#i*\Q:H\R:(0,IVQi3=ejG;8VR,6i2qA"jigTE%?<Y2"n,>oQ6%.6WjlPA^A#OO+`=Bm%B?p#]X;CUh?[f?:tP-KDG&k:E]41GH^A%M1A3R74R8<<PNU<Z\lsW^KD6!J2<J<^8a-h4-\>"gF&Q3W-MJ%/q7u#qgST>?KX!O5R!%:s.pdS[IV5mdp$/B3op!s3F1+EcJ;Z,=3.@n`)\Q6"rlt#H8,?8>ALT8h\2\qogJUdJD&-q3p^2#8n\<#%pH\rIbYtH#DWs4uD'$Ed`9WJ=6GBYLF.a#p>QlYSp1,bQ!(FYTi;I[o68J8XS?5bllA-SEYqlR^lE0G_^&(s?"^2iq"bZM]>f+;s%\QUJ`d_"aHS@c0X>(l"qaWC)JdW?c%8LbV[i%3goW&3[RO:ZlJS&:m^.3rajd1,GY(2VQ@^,!2L^KCbhMC"!7=qcfRLCXto5G?G'%k@HV@4Tb(tlp.\Xrqlga-gj=oTCm4=7L4&JESc(+gG.1I2:\>,_0Z!E!%crE0E%Q3DfL<U@%+bYau>R?%Q+0NQKU`0lZGk-dmSgO%*=nL[b6d%[)4^b<TfDl2K(`UX^hfS/ZtH<<5O'n7219rW,*i*+X?N)+Cu25TSb]-%#R^U3e'%?F!,Nq%-R.ckm>$iQF>66.?)@$`%3T2Jb0lR?C_VZ1f:-*kh*.A::,R4tU2Me:Q2]5>c+ub++Q!q_k+8PUaLLWQI4,O6CF1SS>6WRKl?pfWBA7)A^0%KQEmVEMDJWIS@%$Mp)?T/`16*15=p&?^JJEoW'J[,^`.d7lcufN>2UK.<Q;ma:b8<KH2$[f_Z"L?r':6)r5ZNqCA>27.AIbD3=Mmm^2?O40/r6CeSH%5^4W2NfL%EF?R/Ki+26<h@D1E#SOCAq!KphD<Y=+2\U`G*5b7@q7dZb\]L)RLmERlOauHJiF1H@2_0n,)625AA8*\>;DAO_$V0uQ%gXDTLL(SEp#-n!W#O#jfj]n9)64nf-NA>7Gs!>iD-0,fJE1WM%F3Z]BSI*Ts\Yf1S:q>\/0I%*Z-Z!QX&]9)B-WUKs,6SC.)P"+'%<V6%6Y,G*%@0oChfEUs9,b<_eHo?KFA9H'\R*5aG(]9j2jjZG8BB!dQ%Jm8A@0GLNfaO/?)S("JSg,Wc+O9Yi*1(%p,p$T"!AhQk%D1&egNbP_[1,_'l`4?>LhoKW_E$IKMV;dY(id"<(?;iQ9*Qb*H^\\.;iq*+satAED:o81*\H*KiR7pp[H0qMM^s'<A[lbLmV84;h%&01=u).Zfe;-\aR>70H5?*\;L-$VEM)a?'4R/!]!@FRMG][R?2Di):B^^EYWj"ccB\.-&TIZ-*Wd7iT0TIqYlFD&jE@kHtXGn4=)%mF^-QDMP1q/PM4,^Ae25l9_$s,7NHJ+s'Fnr_$EgJF"l;U1EQ08-7O<D/3ec4@0mdEUo`[,%JYY(h+K/-U0lA!Of'TB+5Op_4P?o%*D`G%:`,piMo&;jpY`)C>F:t[39I_0O)T[sn9R)>mE",YRVYJ"TQDFV"]t<h+a!^lW'l?Cf:0D@&&8<X[9s%E0e*+e5eWB"?a8fi%XCIkI$6SX/8d!qi]^@3E9=%#c3cd2ri>4S>+V+PS'RmZ@Mp\e*i1*:,#a9mH`3qZR)/F5pfd2Oq"]]hVm7X2+&hgkoX<@>h=%UdG%rU@olbYu7`M\gC7Y7UnA5OQdJGBW>'OF:[M+kLGj54<A\/r_I`&'-M2/J2C-SnU.bp,`;+dP(KqGYcBno6?>f!$R^uHaM&Qo7MEU%IF0narq;FFQl!8pK;?2i"oH#a:sbXq!Q`%`I/s"UmqaU3)*"s:9??P#,=@j,e0ji+h967\%p3a!'#.!M'uVZf;?[?8!-keW"QD>p%iRr)jn*(:OP"@I$&j=&nPX:a\@[j?Bi,ZRA-?RhIf5m%d,er6/V\rj"2$XR1Oc`%8HrnMC6jK2#,3$J&ore7eR`U*cj2"d]S_?;0%YsPK8CpEtTBB-tcW0dDT\Z,g"e!_B]^3Ob.b)+bf'\&nL!jY7>(T%a:W#.eL7g?.19L.2]RB1\]F%E(iY/@ImiBtma(3m:!HoU$5%$:PnpmcGY^l\B5giUP*Jn&7K&-ADhlTZ]SF3e[t%@,69?Ce&g*606ET5gH\ljA:?g^r$q$:16&IMW/^Mcf"VM#)0*&OA:A49R/:G%3!s/L=TmfEJpIod%qfdEqoF6?@C@AS-Y^*J71[^n.Z;/pcIlt/I0`@H.2*@28b]K`Q$-=C&\@bU;>MSsklN\,crc6s;Gkf!_b[@<%TO>Z0/+'X8f3Z>7J3-q:[8)Rea@U&MD`CZ3Ln;kH%nVM<0Rj]C]e-PiW_6_DG2>0>`0$3E==N^FJgCLSCTd'LAAH>#@@2Qmpe13g%[MHdd:r9Z[N9'lCoK:3g[ZIE8WpEGaVIXgG6a7$Da58S0AXF]%lKO^V6isSV\TJnq;*^-1HHdcB6=AjX.Ui[2JnrKQI#Q#aje5]9%LZDu$h/m0PfBnca?dQHij:WH[CorW%BPl6#=+9uT^bgf^UTJbN6Z"uf-1[ZG^K9Mo5N_h0Wtqn?.W(A;mT>$i_@&nWDbJ"aZu-pY%,d/O"S$Zp\i3D#k"%/m'\-%@jI=7c49ISH3:PtH1KGH/$>P+rKK)mP+(p]Htc'+?Sps)08#S#jA&%tW6[DB!aB[F<%ZZ<`N1+FO#%oag/0AdLM/LpQ(gYB"?9kF\7fAG=JCa6NP(b(@Wl`C_`hQ`'N>_^!>?!ri1AM=al)/=7:OY4lkq>(FCC/\,PN93cVc!<!J$Wec?<%WXh`I7j"\<7:61%g&ZHOh`BlC5rXHCL(mP%7adQ[`LInU?4%ZMmN'PokH9B2E)0;fR>tA.W#(!W'iQ'gcYgT@6%g#>D]rd2.;?5#%n-Uc;"d\l-&!B,_Q5)BR%,uf@>6bLn"RIR<BOX_BLd7`1\W`VsJebHErc!C6KOQ8]j,[;Br#hs,jKr2IR`*e])/E0HrCGG'GeXH&%_BZ*T^ai:"WA5V,%KFc`Vt$?#<t+]oG?Ng`,Ys$/CUd#glBM?($YQrc/=X.E_H4X,3e2[W*n*GcdOQ$1X;.5VXeVMhWlaK.QG]m]%[9uf0esk4L27U\J8-'Xh_qH%R]>!h>aNhm7L<^!6@HW7Ms''qO>$52!h?V7M,,6s1S<%!+LC?/9TN#3L0s^A#paJd;&8bae^m!"q%m2BsJ$1tO#]`0$\(+-$*o%pS)h_CcP>;_ZIM>70Mj<;?F;M#%f<+5c6s#2`c#iRo):(CA!@lu2D+sZ^-rn1;+l-kYk6<J&T/SE4b%lEd&p"tN*!i#Z1Kh'a@>Q:cm$8^e`'Po0iqrdk.@Dd<N__b=g/it=4X&=<s.lRKpJHc"4$SG@1?4^&BY#AZ'#qae;"b9,X@*Hq*Z%=*\Wm<Mk%nL@?Tt[6[p<oI7=JpUd*@N4@gaPIH=]J$h]"eQ#LTH"!-fM$"4p0^md_0Ge(HE/`BVMmah`]L5n/NW>RQIEfK7^\]4K%Q0p-:CPW"8S[9),#SR;+mF%='-^ZfK)(CdOO2aAmMsCc3c&pm9^#`Eo=*SlI1LBM,T&;-u0Tn,??Itgt$qYoQA(.bWog1@G:B>\!%e-\!tk$=i'";>ZY=Mn2]eYTnm-tLN86VpBuTstpE=FQ0D[*h)>TH/lf80<?l=bST4i(-,j4:it+KdrN.2cSi<A0jJH-cu8Q-T%Z:%"@fn2O(s#hEEN3>L8=qSM*i.)?01-7cPF[e"P1REY0aSY+if:Z"0V4sL1)]!$Z4D(Y<j=mM(RqC<(d3:qC@MH<jo"#<GMB]7MJ=^%!%9@88[A"0Pc,:GRuq@J8:ERr*F,60*O<Bg2QL.[4QOc267(651^iWOa3TO>Xbul6OG([JN6kqNqVL0nSu-(G,:ap+TL*"Ws,5s=%YZ[[lb7[Y:4sJP.GE\jPL0GVer:$c^RG/VV-.B']P?'oV<6BJMR,u(@cu881bCT1P<j'Yo!YD61DND#pM.I>OX)ocCO%*I&X_-8i%M!`tWR@jBI*S\<`cIm\e"`JcA:$X-3&A9^WmF%U1$I>*SS(T0,A2C\<&$q<U;gOP"V;*V!/uKoiMCi1P_#W1U_:-4"a%f]llNr3Q%7tJ6HmN%O[B/kLNFR)fp-EclZ("tcp`g3dkTqBmkSHI+#@*4aKKfA6:M>Z<2&s<GWP?N?2RpF)Cr"&oTO=cYUJpDBFYc2d0BoBD<%'+m2?jBLBRQH^!O/*DN#-!F&CY,/=:IDFguUib.@V7cjCcEo#QK(\(H57D&#fN3hA/([JAW4gPn$Ik5gOq8N$2j+4Gi0M-j$uS5k%QtQ&lE[>Z)_-'@g=:k3"rq7sjSYAP#8]o!Gf_1db1P.Md9Q2$7Q,[=3H.OD/O5,NG.K_&nm3jo5`RO3r<Z]*>3sdn*/P3b;EGQGq%CY_riO*a(uPji**KSVLih,):r<`142-Ig>'OQM,eNM:#nQErHN-"#<<hRoK"4n]jmnZ2S:\ouZh58YHZF]^L"SNH-t9)#tMP</Kl%67oSOnk`WAP(TR*Z63i.THqGUXg%?'\$rE``.&&uf_f;mkE+,;:#B^;n%U(3Dn>\:TG:aP!<l%DFq)Z[PKke86_L*M$K.?PL?l_b%OE#?VXIdkU]N\6(\Ul,2HfQ)nI^o]K,QIoGPBTFJ2)I$56;\KGP1@Lu2pJuZO:kFj.RJCUJF>NegMm?kHIeMf!;G;,b;GaS&#$Ce%4;%h;a>>IB>8O8;^aPn^gdL_NEb&h;d0[_D1SQ<!eZJBW^$^WhQLh(nr`s=D,:lJ*a`+MQ5&ObPe6TH81_NPrlRF(fUNhnK$#l=!%/Yg1'8rGX9V8dEd=BJt#oJWKtjjNJ`$YGq'"J!n?ioNKB#'>i>K1cR.YFQRKTmZVGV,Z^g##Y!)?*I1r%I'])[tW[ZrkK(jqAE5e%gb>aRlVT"e>sK(dlnHZ2EhmVD'!VL][GE`&L-)=$/m?O9Ef)fIPH)A_:Cih^ffoW#0LN]&j<OqI<i)N(`"')5W%k?h_ce;UOeRme%2P2ZX^>i]c.gQ+,8`M$jful&q>IFfD!83%Q)d:cs_E2e52;p2WJ?)uac"&>pb(h+$b8;*!prhN$\?@'Pm+Q<IN;UhCKH88m!r(5B%d(aNWg^!?sX9V_/ZM[J2D&("s%'OS6n_r!*[[<Io#d1gt>=292^j4OLan-*)"pBsZlG<#Xk`="_qV/>/ldelc5^]Q"?RQLH"-\,M%oO/TIgIKrFlS#8pV0dQ"dtl<[Turo)7Z[>KctcZH#47KjA=uor8AISu5e$<gnYl3_W"Y+uhh;LiN@8It0u[@#"W;k%n@2Be^cJqu%*&>IVhN6pTV:"5>-cmVKr#`FXdXtf#!P`A=0jP2@9'']0$k-T.j\9\!_$;_53**Q>>%\!@Ei&EB@3l[(AV([*YhhcP*+X']M:O93%L$0Dj=55uq=MiHcF1.\)&Mnus'_u/k%.sRf9dEc4Q$lgCT[^He#c"qWJ1?@'J@FHeW'H.9*=MdHaLB*4)!I8n4HME<P("c(o!WsE%D*!n9p2bZThcisi8,AuBWVtXdH!b+_#fi6hm^Y@gi72*?Ecd`@BBt$Ag"\9WThk_$c;;ZsS#:hbAWO8A4GXYQfH<<pF)eM%*MH^J%jPVj/.\mFtkpg7(_5$hNH[m)b?\@Vj<`QQ60Y*%sY;KrTgpWa!bmDZ6PUChok,1$\i\aW4TYA3a4oNl=lC'<M^oLGe:f.8cM9:*t%lhd^AW7b4SG`p-=,@DSo<Z=):Oq<%C\-*(P17usdKRA3lV\%d%g^[%m[f%I3.".PB0/76/]u?iNqkRoO6WO?gMKO[Xf:Q']UMZhZ%,o?=-0EF,^+`CS9q=8f=$Y>6&nS$@Nh#e"5AD^g,OS6QlM=o1(j'>oGKt06[-"*]t]V5mXBDLBbe'd3m#"#i/*`e^V9)&)S)PlsV%,0gs;]IYe'&B-W=WOq:*o6(lJ&m2g9i#$^V[C5AD(/jFs$+s+F6JmS.LcpuV>oo7XU+e_K?]#r[j(sDPR@r,of0BacFL)h+U$!'u%dG7!s\GkVYXLo,@7[Zr"m%aB^e(ZBH%IHU%c[/-C72-kL_Fne%+Dc"&c0PMXYfs?+T8T'NGI:,&8@*r"[i=+')J?+RJXX!E"!+O9%!q^qV*eC(1%,A[tOf):aRS,EHW'@U"m+-1iNO9W><&ZoE`i/c6Jf122(HiW\#ZM%AX/='#T2]Nb4NduQfL.YF;>89qmN(2&JFNEM%]skKTW*&6uY:)%7H9Q!1EXn8;#XD^hcZ"5f)03_>p%fKQgS=KM#PLspc?!ji3Im4&)Fd7u>$hP(mr4L2glDJ#E/3df4'-;4Zj3o'%NK6hH/Hcd'Un?,(^qf6#Yl$_NK0'E%?nJg[U546m+-[`7nGdg.8KS5:@<1B7IL#_=<^",i._=9<aB!$TGjX#oYtt,=oWj/Chc,A;%RIspm82i(8d=5'Y%R9!-Hl+^5V0rQ9C>NknE<d3n(BCZbK1[n?8]=I3IN"CQ.3iQV>@Cp"W,Ic+*G^p?jFf!9dE^2cPKs*O5Vgj[%MS1/tftL`s[XMh#^Pm-:X+U7j>mY%On5BkP^%P$.*P:gKSg?.9$c<U6H"F!g1U+&:g@t76QUnrPZakKZ']ajnFT(/t,gH%q"i90V%Ki#M+/qPIm*^gk8N]ip9GJ@b3rX?ft0_tR`;QeTCNbKZ+;7?jp:1BclkE5%t?g@&"RCVBa.'jpr5u?oTTEHgG"0*Bd+W$4TU`aN"%BlQm9];h&M7<\,pEPM.U!\+6m!X&Q\V.rdW78\EF6j-d8G_t`cM&;F,aL2Cr^%J>1[K[:4$#<OFjOQH$Q"Z";/m#Sg/jV+Rl$@jg%Hk$5;Y3bFK7PC-ZX1>:kg$8=D"+DOt4qbTqp$TL#Y"[?fY,k`999]mJ"=G-=PLe&R!l4t=id_(_\pF>s<=glm.U]@YnPg>L8B">`%C=Grl<Df"mds*>Fms$f3c;;TPAJU>;*KR9jH#_!NeBA?G$jdi@R@0I_RQMLH-&P^C3jPiN*"M-_=V\q3<j>&t=N)a*cVndBdOM!B%854pTLTMNl8Yi@D;V!UcQ:\,DWD8:Bh+<GrWhb)in5cTgiju^%;<h=/AZ]281mIh?UeVVH$=hB8kb^%/o=*rE<Y05U;]']K.1EdY%>W7M_-C`e*9kVtU.r#F/VOMn+PI,)WBj-'_M_2L=8m3N>(hG$MQ)W=)9D$f#Xs@G?>UEB7RE?o"'S_Og-,rn6f9OKi-'sms'F)P;%<gBhi.hRVRd5pWVj>AcJd:l<j9OY.o'2@M`;G5KM;A_!#=bhSo[7VepG'Ct=nK=eR#u'JJ5`\)%6GU-2-,eXdi!HCO/d+_KB-G(/%UfSa'q43?!$+^LsjR.5#g]aoNmfMc[#`.;B?/:>u3]]:XgkiR%6$IN]eD4C9f\P2Bh1]ilB6SNCEHZLQChIC)[C`b$].hHHltGC$%XUCZKS^)>R1HJrdGBDj./j^4T:fV$P,SH[\Bl)q1a<G.nG`GUR'bUH6n%\ercQ@o?^\tA1\,R!!^G!A"r9++#4eRa3$hO8irMtG*%^O^IK+5ch5(\DG<\%[@Lp]'Uss1PW)XoGC#o[H+pH\Fler\/ZlIi.pks*h`_hY4e_I(nM,Et;dKGIl[M^[Jml!8m7[qsJeJ^#+P"%J,e:k5\n.%6]C^pYQq*eP+8QuG^gQN\)0@k@=&8^4*s,L$aDo%h#>pCW;dN54TpGcgW*($fYdL%TR&a0X8cV`DR\AYlsr&MWeZ,:%klI]K*Wf2b5^MA[ipH?Ji&lto05*PQq:sah^\Q[I2P8;;`lpGm#^D,TX2,0nGo2iS*lc=&9Q'DTl>Mr@!&8MnP5eraRJcV0jF8$0%Mteub[jp67HjK5;N6<(VU!P3hiFO8;]JdKS-nu<g^fE[VM_G8V5WJfFKL#Uh%\(^RS'Ai6>L1ps<7+sZg27:n[bA[Q_QZ#Sm'=Si%GctQN@@1f(@@5TF(.Qik@*O/[B4htKfq=pjiB%G-7+J@i=g,$_mq`G8:X3i:,B:%oX[MPEbs^4NAo_pC@96JF5dRaHZSJ!m"B`c6%aXRQ=Hd=17"[aHkKO%0VkJ"sA2#$?^@l62B@psc/V/T3s5j`0:9hg=$5c/pC0;&1P":tfI-aOC44h]!en!QruT6U5/"Tij2Vq:sX%JEWLHTYs0<1iInY%W!0f3qG%[i_BuO\8X(l$-_N%hst.R;8N\oLAuPijS;$!?QM]*rt`@Es4hf8s$\P\3TY;W*QEB@41GB9\QlSd%2VIeKCpLrtff$HZ>n3W@>JX(4e*FDYhq"o6\*`j'X2Cl8H?Us3q/+[2BgpS+?L.=Z47d\BDOp+![?KIu<)hVQ@2S/fTD^Ihc<b*;%?Q=eKZ^;bfIGtp3m2Ul)q(21:_f=iZ#1"XZS&;J`@@5:R0S_&$rUS<H?bOJ@ns.D8@L'ss"I-*;E["LA.A++ti`EuNS'C)^?ZnF<%/)0/qfr+u6,Ep710MJJ&XWcBY+V36o%Klnoo#WdmCm.RO\`Apq6tDL8/7af5-5/BJ)ju(anrZWn%sc6,P0$&iGl4h.8TGYYEfj'C%QTD9h(h@-;*JQYaa((1JY\dkhO6ae@`hlQ/Zu8gqVG5OJN+FR#^prA8>\JnC7QL\!7%+s#dimWi>V*<&nPm1F35ofdYjauB,\\Mq%P(H5f6S]&WaU9]]aLso<$&'(6KG5TIpb08f_lsLj&9VD8^[&K)q(0g(QYj(u/.BG)D4u3r'lIf([FVDUQ56iERMK(?EJ<.JWRFnM%4^j%_V%m0f7;]$U[]e'51G`BV:<_N#X$Y`r>JSP0KOtu1_6F$SHNgd!s#gL/OZSV1Vbn"EL4G:D:)KdW+j_):Dp70ZNl*P1Pd+f>%V[S>.6^A.u(s7s4ach:KP@7]kdkjeR1sMI?D=X"m4;e3J3=NACYLb:=;G>O"R'\pfn,%DD#Q\!K.8pj6N%%?la>!&']-B[N(S$V!%,T2?aBJ^We7\^jE=N3)d0="\2Z=q3-(5p/+0T/DXHaNQ7P2q]A?m[([MId3p.#P+I!#:Xn?*VK1M5<e>RA2G=>Ws^Ea=rE\(`"k0%N6$O*$iu2N!&&`K8mVRp,R=D\:Inhb%$g-%:JM`^jH)_=8Ho/#Ku3j8"%&]C'Tsi>#t=Xh5=J,/:e6I?ptrjdhA6MJ'FK+%?I4D#%/C%gfa(1B&\a0m30E6IX_V;NF9X\fDd!U!g/<`4T/[j<?c`YNhRcUKMJ6*CfnP3gc9<jASW2`IIK"LPp7V]k3^7V+/1Xt<2qr^2W%rqc(6htqp7fKqhtIMdOlqu5ce(*1EeIGY;-s4Xmlpq])rJc#IR\^m4=h1#((hd3qn\)0puG.[-a$^k8#hT@DdOUrWT0c&)5p%h15%GcdYiFW5OIPH2<%57))%$.A&pB66#BmAA:5W(+eh>''P:oJ#JQFHVBML[k2QnhB-8kRZ_;K7<Zq;k8O5Z>QY6Vp!-iqNu=*X+@2p%)(*KE!!'>:n;q'4,TMi#B!]lo#8@.>?n)L'.S=A`>Z<3#"j6lG!!(@KTEQEsq]3GU%Pm_\]I8Pomb4FXQI7TH$dfn)J/Sa@PAL]J%Olk4<]f9Dr5IOE@rsF-@DWu<VLIq/5P#rXD)C`5AC#ZE'RnIjokQ#S$GZZMMXSo0g(ZmTcZNWro<._D:Ik]h/)g"1]11&5d%_!m]%6n7$g2l)7F1p1"qK`rQ9*QNjEXTJ"!R#,N0BMKTr0"l>I>(_l`]b:?C4Q$>\F4KpieHiA#HGbR@);+i#QeW'7;Su5;(WGAps%JCp%l?=*F&0sTUrb@;C*<ASQCps>EHl</'+?+[/e4Fd+]7S2bFR<RmU2b$2^g&g#@("iJ\S-q!Y$Se8&A^EO#X?*.\;;;cr-C9IgZFi8%?ai&I&UXErS18n@,dOT:MN)Y5nBUD+\6M:.$7&-@W2#k17pKKZK#\at^_JTW7_c3n(XV<%*0*fWX]aR)^`8L5T*>*A)nAH+bC"DD%4@Ce=GjgHrp^68UGGB7p#=AYR>Ppcpb5YgF[lCF[lJf0P7imnfK#'!r/'!QhhS]@(%eY[%[$l[un8*eo)p$,Th*AV\T(N0sOM2c*%Ptc'U/N#QePZq\U2GR#m*1Ds9-\ljMYsBLD[3B17iW,s&,Ve1l=lg&<gRCajX@4XPKq$TC5kU?`\(D347Or,k",4A%EX#1O,^[[Z%bpM9[,>U(#PS:\Y3c$B.g!9mmY]fL`leSN8aN8S78sYrh\1N"P?o*e42_mK;FL0<g+bQp^YNn:$C60*$(8.8ZqO1!uLlP.n]sZ@i%)CFYCN*"F5V5leE[KR:;LX?SAFlObLDUTKYAcnhaad3H&\dZde<[HId%1gcb6EBB)3,7/=h%ZKDY`uL`VE<i2IQ8TIA-CFd;rE4%%rbJ1H=*%XJE$#e.L?DCeCCkJd"g$)ac<R26[pHtA&E0[O>ES"^Cn$4].:Fmb:?)t@LLf)n"5MR0Y:/ISMG1AE59$.>Wb*.:<G-#O%ol,fVbo/j*l)>1?l1&HYQ<+.j,23.=Z)ra.EU[$=q-3nJjm-C_9M*XEMAMgj@S8.0l5l-t^&^$+R8CDNP8O"X?s%.Ddg&Dqh\_\a%.og=d_h8P*1.t6\2]l!A64L"+$+.L$)Y-XC#MiX>8Wum4diaLd-T\d&dua(Sgrlqo(Q4Hd,:@@I+RgB$Gi@O:f-H%q#)^<=Y%B4G%N2]L'UQV8jrcl,$%Yk1SL']P8MlKI'*eC&DZ`cO1)8]!u"M2[_q9\M%87JH1>S]n#b"!jH0%j](q#b###YEZD3ONLSmfTde(sSd`%\gA<F$d;XThHBW8fY&2A15(uG+j6',MaWKf4-GTeWK8?REdHL&mck]gd'bYQ2Wt92Mb7pj2niMbK"@4l>3[_Y*!HBO(hb3-.hM7W%*!p>Q.n+'&,?Hi7_6Y/C*B10Ud[c15.mp_RYmr"E4@3)J)TL>_9bK+-kBjJ$_&c$Y?L@N9?U"gul9MFRhBq;3GJ'U`cMfPA=*dbW%W2`N8O-6O&,r>0#(ZQMq+bJGFa%FW<."&`18ER9QX/)#MR$9<4J@W`oXrBb"n1)3K_Kl<609G(C,IH[u_S;?s6Lb4_>.DcW^%[,?%Y`-uc?2u`2X@'-sp`F!)^*`KhlS)J]>R?>s?$uP^C0%?n8U03@o;N74M&-Zblr#"iGMs\i>RgZ=B819.EP5X[=-,m\2S63LFT6Tf%0$I6D>Ek^3BF$T/^brng"FA3eb8niXi`u9NXj;\Q..6(%]!04hR%Yh;J:+U80]_$-AmC3X\hKp(.FWC4cop>s3!l[DLH8s5oo1jg%!r)h@e*T=S0)Qh6[gnme[9GZ]%iArd#6BN$Le@%_32=2Ld^P;D)g9_!58=:-/Sq8t>lK`MOg$j^G3G\l4W(H;+X:Ph8TsFh)%fDY%S+am(#$3aM(')[rTnP<(90Yo#ReCX>$q<gC\+rNmi_RAg\%YQshN,20e:dDKJEP8A)nl2uFYRW7")5=M>dl,oOQRXY$l*-t_r/"@%cutlL833[F\m[YpgS:mVd.IAOZFO,agYTDe5iBBHHk2QpHb'o-%Yn_[!d-HeVLK*:o-_#u$a;FYTi6f\W'.AsNOYttBHLrn#n9B2%2CG.ZeW>s4EuXN#0d?.$8L]8G,o'?X]t52cE',QMrn%h1Y*dAj#)0RHWu\r29`(d=>YkA7`)EDBcr":dem9*:%Z%UB0`mm'>'G&h%=qAX*aHL/Y/b6/Q*/SJ)&tamh_HI0>\&6e4CS3L^g#0j\>@=.\e#I<%"u>^r"[YZmG::]LI3=j:3oj6Df[X8,fi-S*<CB\8#]FW>%N3[7i%DT6(kR(NVM:WLtqNdjBqIEt^>7EY:gJO!:jS6*@XbqPl"I"\jMF']RR+8kU#c@krd[gJ;hduTr:oNc[*A[k0KF3@T3@gCa%pefLf[-jp0JKRBd1;P(A)h/J>;jUYb63r&uUHneQL%E3QkuW!5/:sB1%!W'1&e#P_Y[8e5RtAm5.t1o9YBTjEZb-!s<UX=(JBM#3%eH>@]@3P+A>/9rf#/Q3%ck#IC=+#%fm8<XU'00fuO`1`l:!+DpQp_QOg9BP]2!6'mmVY+8I\BJhs2hs'1%[X/#R0fb/0MZg;'M-k%BIoV<L.%E9h-WTeH#RHpFUGr(H#E&*<5>nnm1hA7i3So(NDUma+iAoBehb7U>];]4,1,4#EW`l**#\>&QlQe@&g1[T6RO't^>8'A%^o>E!b`U"QO#--c6cMXg(O*qYP`Au95d))Y2dQZMGDHcl`#k_E_^.-++/duYTiQ"o"DQ3#>stQRJ'Vq\RsGJTThO+=6f.![cCK+j%G`)Iu&MN)`+As'kOZbD+)nW,[Tp#d0M5dL$7g(f)91cKSWj<QKs0WSV!X(oK.mBH&L//dOMji:$HPo>`nC\st>C,6kI"TWX`;QfA%%VGP3b\Q*d8C.RbS$q;+%6sqL,HeC"[fR9r6>d(;.Dbgr3bB:?3"P*Qn'3@"FXS#`5/%6$Y3d.k@`dg4GkS!(EWZS0alHPP4Mn_$%a2@'m#20S(U/B.>a>FBH10pTZ4m1Su[H$nNVljEs*))c>$57.;.mpnS7H$4h-+o+m_6X]Q)@,Sslu*a(*Cu2d1@G15q_rfq=NP,j%s4KlJjFJsXr!IiZK.nCHR.H.R4OQAc/F;p)@;Z?$\lXo!:^f9,LNlpc/`eff.[\)K-1Fd'!2mFNjZLFt``W@-Blb[g[l$j4LcIdq%.KjB%Y-)`A?he[W04&J]"ZscY76o[dI/]ZBFCUg(E@L-`*$E1<^h;boM9<\d;A,fi@TbhKNss6i^E-4ahGTtg^g[WD;QnF]o7kSF%7dX_9isRNX<BPd_mUa"Q#HZfm*$C3@(cX/Aq2T8pQDAR>W:#W[K#P2Wj=6S_;@7rX*Y8DDIHe"]VG)mUE]\1N8t#<6(+F/hA0J.5%(?*WbL7dFsl,Ga393AUXmiHQ]nj)UPM\63><!D>o8&WGo;Zlgk@iuN?%-kOc&A1UY@G3WrdQp"1&M-^#Wc01r>;Qi#6l2:(_9!lh%>9:XdQQV!6Hm9THlBhP``Bc(SGSks*K\0nuTr,'o>YI(YYZ7%8ea$j,-_`L&D0(Tn$iXn</oJ7&CgM`O3e$G8eo[HF^OlQR_LWM>%.#>^16Xe>2O$M]"lRZFPKmH%lB*6^dN&Zj_`S35MDW2D@YEitC:kGOBUDH:8JY$Yu;`'^F*Q*C-O3r5n3&/\?)_D=QKo>4!<(Y$e%RR_3KVY?O:/)7,0_5A&dGmW$Q7U_B.)&tOGooeuIp(%D<#=!$_bTW8`BVo[4.rY-;eJUY<_KG5L3Ima3KLKeGFou?gmu/lLW!$;<%4@B\3eKNKB;Ns6U%u8=;oF@uE4<JGt-q23.a&L38j],`6@/@q@9UM>WGZTd,AA`dY5.3u,JJ:#;$]YV.>\PDlI7dpR"9s2tI7fQU%m@1e20aSUh1Dl=_@0!^k`(`Q16H]Wj8/*Ko%;mc)WSsjP!m=q07AirE?-<X#>o$Z4L6p-/<'RO!^-Z^^_n[@A>d:T=!C5uV0,//a%h;s]ma!"",>r;.4VlO=;q^<OojK[>L#$urBS)":TiSP+/kbO70"mem`J".gm!.JCdCH?EEcCb4Y!hd(i`?t`G+EG7i<`Al0QK=<W%]6@i%<:DMQ1\k%8s(/BdgJSM'R<'q[3k7$.!Is,sJ<0bd74\b!@1`p7(m2KUZXR9=c$0!,$,8'?.d[>K"Q>WX8dU]<]SpA$!CLm]%q>1?QY-=_*iN"+!V:2;[3W8#r!n\^lDn`W*[E=.B]q%^l8>61%5Q$&pgNtE?*2@tWj,h)L^J;=L"fZb>AQ.#I;t,4"9[Orb)D7!L%NR05YI'BqL!p8N38>,CtYE0hs<,I.sJDfQ3Jmc$^M04*sr+kZK0sH<iXYWNlLfV`f^4d+MhC(P"S(W1t,V#\/e%!BM<`9Z\Jn[pO%oM0Tj<8K3joS2)dBm6)$=qm]ff]Y&CFnqhEX?n'?h6)nVXq8HhgCPA'4%(cYNeD7d)%UK1cgmtH&[D&@^Hf@(7(gb`)2Wec!qsq\%&e@im-=i;SC"lBNn7&J+&X17W^/`Q^`5j"I/F"^Z/lbnV;8ZJ;+*-BYTrD2r;A##o;F_:d#W6#^mBu;4'e7&&=9Pj=giAdj([,nJ%$lAGE0S6YDWBf$\Ru#95A3-]L>4qAf/io$nrhq-8g"P9_l5kN&+kBO6h0W25o2[LWmjr'V>e^V;YkIX4P_?19a&i[($0D[$haqX[%EspI#PGh%8n1[HsUl#.KKQW(&H'2GuiPXi?5\#Vqdb`?miF`:PGO((ji[">@7**b"=:&_M&U8YBGN$f)msUM?I:a?AG/Pc%<KlD/%cL1$'5>RN0!1aqN8,WCf@dEphWB!J1RJRC^ghK#HmtaV4Zri_3m0M,O#_K3TaNTam=g/u95LH7o6UE#([TFZJ,GJ8>SVGN(;J!SZ%:)L5@g;9GlN-]lB^Z5Y-in<mFNh?n<2%N5;_G"LKAho#t3u"8b:cBZh?FIds4[-a,Z&:8mbRo>g>T^V>6o%6VI3BbgH^W\>b_>h_%cp/[ma%R`d1X4+oNo6l?TqDuN^I[p'KNo&fX>5AuKd/SJb=D'J`$-(L?9aOV-mV,Ke^Z/s,/G6(9>rEkR-9^Ubu=]S3)Y@N_+/KC%h+-7W!$GM^XFLM?_H)^CSge^,8H\oqZj.+:im[h+k>C6[e9`Z&glHc5CbH%/"Rca]2OHH6*UjFnZ%\kSSAGi:ZUkZRhkPWQ[aI,S%o`L/eLEBAXHcsCb5)g<JXaN_Mosg[%-_NgiplU5+7hfH[:mu?4Zn`;$244XT)4YKR?G&7M;4?>n82R3QLs7\qeNYEq0D$aUG1*!)%3D%OAOfs-6)0C<d1^!"@EFVDEO3U5)hHoTs5AZm+ejidg$ONIr%i-YDhna9VDU^bbJQ=HCg>T]b\XAV[I%iW!"FW+QoZAgd9<4*0%`Wa28U(%_CEAmQ.+U$s$-q*:^&\jWGGZ5#\,>r3n3nS-0Ar0+1<K0!Fh[qM:j42u5fa/eQk0\W&c!jCf+&u3qWe(n(Q[qS'YA%mN%-]"mqb#:U4,;'Y]CI]8X1o:iO*3GAZk_LSBl0&0=g]EdUFjtD@$kGDqW?nF:*,TD[PX"Y3#-4>sK3^u*._)OE*<Ei%!pP`p/a!+H%8&B9[Ug-DFS<^5Aa9LI\6T'oN'6Nd.BX70fG_W?tS`3G,ri/3o<e<Neh&/oNa46=.)_s/9BJRA:Z]6RE(d4T<D5SNu!CC<f4<;?L%N_D"l7b7f:)o^<gTs-,VW];r:MnM@NQEYq]77^OIYhj(g,*AE%f"WV4NS^15VV<$6\sglZ"=^0CC`7_t[u>R0<?W"SH$l^0/Z%fb%]FqLm$E98gE'Gd,IC8]O!UH6NN)\fdBKDoJnJ1G[d<J\W%qi71lFsSsCGRFC6^37'-0mT!o9CbafVY;4.a9QLPS,B6Y`@@+apR5g%qN9`Z!>7+4)r_Cem&h:U@EMj)+i@Li+"r:j$Y\#o!,p/uJ\[k0_DsQ00<-(-$1s;o)eIMJaKe8W,KE9Q6B*n_.TtS7GJKM93MkCW%,4CX,Z=F^BTa!t8^f"UTH%V?Y0Nb2<G=s0\KU\9fO/C<hp=^?[,?lZr`u:Lh"RXo6nG9dC2I]7@WG*T,Kh3<;8F>M(Zu*1U^0fZT%Htpg<HR&'YDZh,Gi/"0T6S09\giR\",)@K0/WJq4V!%pY!%JQjW.8Pr`3>g^'E@W*i-TT!:c*/k"-\Tu`)42X?K,IYUVPbQ]5TUR%DJ#0POVJqKl9gf6<ENr"S6QE7>HS08jdTM6s4cBhS=?Q^+h7VtT&rq#^4[gf?c,?tWUA!Y5<EEG52'iQX*l;,nqn@lF7o.hKF@uE%<td8I&6Es2*%@/UFqW#@p$E(%N3cRl;C0:a.:Kf6M%T]?T6,3A`*dG>"WFE1coq_[p^=ED:,bmk0dqQr.Y2UWPAH)U&s=!Z"*V5c%3r%2\^%8d<':bl!7siK'MQnTl"?*$epMflF:m$VIc0OK?laNop22f7<PI8$60t&q=031eQ5(7I&e5j<5[KS(WOir3p""qCE?g/r@%5r\p)N$fICO]M3t=.]OB<$tj]\#X<)NQ-Nm[8agj\[Z6QhcU!i177B"q@W.W=+Y9^jR=6t/OF:>,AdDU>s6X[!Sa^Zhhe8UVAPH#%cEX#oTt-T=OW-\H8u>nmQC=g5=BDOe0LE@6XK0)l'17&b`4DR^]$"LOd5o:^&2&,!(Qm*Nh%AZ3_)rb+l>h+hYb05nE@;WSJDN.M%UkU-qc><ZJS2'Csf6#)Jd\Q[h"01JtJI4$hBr49L)SoH6;Zs[F"N)BW%FJ04JtQ=$<@k>'g8O]R=/!j>gpXoodL\.S77rJ-oM"YA%0juo5g=n-fRZ'_G2u=T]E:5RVM2Oh?U*)0e1r@7f9h?S<fr$,]$_HcTKEaOm_7(49R*boU`#fO8$p"kCqOU0D3mp;_^hH3&J$^2?%)Gu,[P>kO98?1-p74dmNS]YY7+^!gte-HbUC@!=J&UOsS6T?uRid2=T?8>uL.#I3A7t_`(8Qg-t(]4T1Zaf<gPV-mj@G99<h968D%<X#T;qJ9PkTB7'N?s.1,CL7Kif=4;'Ti2EUp)9VFNLObLpJ;Ik*2Rntg8YufE[jNoM[Be+,*ZjGacCKKg)<8TNeS;-_@J>t#'=+3%rNpn\"!NG`(!IOB4]VgTNq.uTC+W$(67Jq70mB<Q:(e9]UW8/U)b8!M.hg-WN@7;(B)iXmPLRYt!JO?QLVZGNILP8^-XAd/,-Y)%%>0c@B2POWp&i!<`4mte=k_o@TWtBKb?J-,6Yop:p5@MK"TKXtAhse,oDT*bEbsq'PS^HoN7P&F3B<+oLiDI*TIjlaDNsp^NR.Op$%di3/>Jo-1C,DG_:'a!BBR(,4HGQ3'qW$n#FSglaJ2>/6,_=bB9RIc;TVrZ;Ij$q*82CS?t)^/h6_gVI0NKDc_4X2@ch$?kHV9tUO%RbWLaYT/dV@+SU!Gk./l`LUXE4^N%Uj77Sd)u#JEft+j#5<CXm3rEmXr;Tp9inYC!:ipq<,rU'A?NZJa6R8)SMjqkoWW'h;WB@g@%*)>g@h1G1c_/UHmFH2*+Pb#7'ZYJ66_gM%;%2!`IMRcmlbr.bQLO*[p.;qNQ>:X)1/YQqsQO<e2C.,b;6AaQboQ_BWnLXd#H8E+>%O\6GX#!"RcI/bbm!5g<ab4KOV/k?47.oB5""Q)-]L*(\*)CJ([-m4A\$*?!(^dcPGTUl(Kn/M28FX"'T@0?mNmU22.'?^V*UTS1r%0EA'7Uum_3NDPW!D+E[R3fa.mb:m^@`OAF/YSg?^0[c\nf&BF);aj`[?<\U-r6M$lOAfKA+KM*[-6O'2>nioP/LCVRD`-L1O)kk/%QQd2+'$.l#eI%3BDmUl?6L?MiE_UM-'a3TH)eVImJ';MM$'dgaU5Gm-7\%CR)/(:/'+B>k&QLNTp[R'/aPjePV[eqS%YujRgid)[%S4!@o:QKDpbW0nkd*h0*=capFRPesWcJue^(+hB6R(YM@Sj.\opkGE"&PZ$ifIoS1Iine!"rY#/-$J^DQn?FFEfAb5.C7D`._[HW%+L=7`#8T)nrlGjCQ9GPu*<+/5l5\7p95OEij89fbg&QrV"JSsFU[_C?W?UMM,+^)^=pVZrn[(eO$sL8"$o$6.49.O7*sYR<Ql+B/%)[iBt5C9UXW(`fS#kHsG?:GB;'on9g?:$'FY4Zq=#0W/BZVLNT12t]Wi=UWY\Vj<gfA@Ng6@%.I/8ESrF#@'$KH6<'#%ED^1<r1_%HU_Id!%BH#`f"KN6[siXjK,'OU/kMV4;'E(5o)A487';q2.V&"]GbNTU"']29p1'jes/,*'o5s$jX51pKmTq;L4&=><XgpI7P=O:%6QNA%LLt;b#GsuGhTS%(-n)<]cT400f)l<_C-[#E??&6$#1SUi,&l&bIqZRp9g`^%"n\jbLKR"N,n3;L&RRE5;Z$GPkuqfbp!BBp%jQa>#c)SguK-4[MfaFueYP&``E-G[cZ/=16N>gO29+@G*Sf3'o+0>nQR2&,iL*Fie8li&E]?+0t6%sH:D"PV@28k+r_dPap!fef`%lJIZ'/7kRSniU$;5$sDD)Ce$UrrlqJJ5=ZZ,9g0Y-18(h)GEK)UZWU`qR7&!:2:b1F_<mV7qke3EHR8h<nC,`#?Y*!mDqs^o^'-;%?:Yfi=5B^#18;d$n0.&AR1ZIeZ9=*!OApE:ZSk5ocL<BRj.g,L%T):/SC%F@?>!s??]-tq%r2K9>-tkg']5NMeI8gK_5Dt)3jK9)%p2m#O^^P?.V)V[fL/t3]NU`C0TN#>(6U(K&6gTM>M='#bfDC:fpbKqj;+m-1U9:UsbfD5%TK*"t"EN!X6KST[U970=;+LWnIXj/S%&/(Ds_0]RapW;JOPbjkO:Af4)0]+23QGL868kRFHQp\'&BP$BoDh<eCC[?sr*:.4G04F^NB4eN@/K&A]T4Ec$LnfA_1;jQKDT-;2%E*[NK?!'P;!$`P%7I*GQ2@/Z25"P6LrN2KfH>>gXa1A%EA8kUeH;W4Q%t]J`rAbUO$sXnT$E3b#,`=DM'i93(H2:.K.24P57-s>3%cA#..A0tT%h^@Yt][>(PlZ%u8J;_PGW3@0=.ai;bR5^9t\qW&!L),PdilS_*Z&u1rn$hf4eI>0\+eS:H#3,iWCDk1^=b:`I\K+Q*%5J$Qg93m)9dIgm?dr/9+F@SLlY0UFn0+eSX&YY;7s3iF:]lHp[BLVo>hrrLj<?W/bdA/%=H0rIMFPN(f,2a0++EEi`>%WS.3=J7r%gKPH>"#&@;8Z(,a6X+7=*Js.[G*jkOOo$I=UI^#>ljDgM!`eeG(fbA/2_>eD#Q(Pd)=FN<!e\W\fFp%$<1NO96Wu+U+1E,Prjr-6%:Un.c-h'>orqcN+!#BOh?QXj4/7ba/_=upK?o(Z-T7.PYM%&Y[4p++n5tI0sAXK1R1ou4HP*fE;!$'S&\+D:e[s<lYp'TWjo&=J9%5OR#=bJjK?6rm2CcW]6;0D06V'[9BJmo"u<(A5lE"V2;BocH*oI)15pP+=Q^ao1%E>N6XI_E;paBb9E6n!@9ljF7@`2Xoj8EW.#$%s",b%b3K**8NTH-N\Lp8d:5QkVE4MgK1(rEO2a^"rsX><G<jH-V\'`p@#K%sd&<05g*.k@nAPkufKPMp?AdaYIc(%R!)-,r]`Db:%"IgBh!2p+S`X4.8W2(PE(QCE[;9?^,YN/HT*Gt&Q6?@OdJ2:UaJO`!KrkEO<GaAV6IIq-$HANQ/dUM9C_h:00P^iqgKu-<8Qf0/i%qeZn49?s\sKqBm`R!-ip1am2<U'>b)XJE(Cac6RrQtD%8K)h[`NXCneU+qLU8tc>tJe!_@>rj4O*R"M$lD!"_!`"4uTYCQmcNje#%@s9TJT`=GYUh,,2D#XFl@l9:/8^5%#b[i_ugkOj^fj/IonCY=\Hi=0YT4>L*4pQ8W5\X%sVC[uY,H?)[iEac0K"=1q1^U:)l@(@-%=BUn4r-Na_)U4GuERY,DG,7$IM;@:1!MG"r`BVAQ!1(iZYIj\U&QUhq4KYX;#.*,K>Z@Zr!Hpur%&!#DPs"'1rD,CD:A'TL#M#p3%@m?]eeaSsuQ:f"Ng@a%+7J`$@%M\ZRAp620?UJ<ObMALtX\L3CE;01d6GJ66X_$PIQ-eqblN@o?CqEW^;;8lV)R/VNmXtQT0T`no%E&bk8CYb'KEen?%E&Sba<h;Pj1--\YQrlJARhFX05qqW?DnAfK2DQ]Pg"g/PUFn;U]9E->K!,(=^<n-b4(Z`+[2e;)&"LjGaOs'%%$pb.AgE?l]*dK.33W87FTB6L8K!Yrq*5.@*_HbChl)t!rq,lj^+;[7+Q@FBu7os%k]05UTrTtf9g?9R?&G9,[Ge']$n?,orLLQi=%2P^^Ght00'F*M54HAD`NVah?H'6$>5dYdCQ7M%"<En#;9K7;B(OS4,1rk'7D7N(E\iKF)M6b,CZmn'_b@/BU:.eK$5&gdm?7un8=%'lSs`ULtW"Dis6ts7?goRWY83YRTd>[jgcX%Xj1+,4H$Jr1C<XguL"k:4KT308gckpe?H%/*@J8*=gieGs@Cf#or%MU;/D/'0Sr3%;6D')M%EE(4X/r*\Q!46i*I\2msAKW2714(+7uEHA`R]VV'q.h26YnGlWMf<]Tc13[H,3.^Vk(E]m;>EOY[nFMJ^,VFCb1IJ%O^D%A\uRU4fQ-4O@>PHn7-i?jqf3'E4N3c1\I&[^Alcc1A6:(W`lG"?0MJb&U+9WQo.Eb=3D)IMp7[^9#(b=mD^:`n>5KC0L5tHW)Qc1%#6._##KqHP2<.?]8Jt8<8/ut@#BYN_X9cK!'Aki0.Z;h1rX&>cBWY$]1R?4ifPI]XU36)=;^38X!Re(hb.Zjc0R6e6CAUZPL\V;K%kIU)-PQj>!=PQgBA("(a`+DYBfYm,@QB^%Q49L)Np=ord*$+^<@37[n*DdO!R3>IQ8W>$@?T1D_6]!,*Lig[.noSmnKkunYre/.C%+HR'NYNQOLYS2<1i4)rC7`HFqf7.j1+`Kl$bi%dtg)jJ+kQtr\(3Nnt92Q'k"NSCjQ+oqDrua7_bOH&NeNLtUe2hS2iDW[A0*tFL%_]b-^GDUN2enSYMKR%*f\HD%dr.MiN%_V&t"V[]N'6_nZK,77RJ`"S$ECN!Op0%#Xa&&R,5np+X*7<-F70N&fops#JVg4qVcof0+%!Y,7ZO2)oBBHA;4>cL;-*WS7SV!d^[e>dsY.[a/eOB`NRjg'o`Y2\Qs`/#)kXf:LMONS:26EWB5!GOP#9Sbf>ABZ?'C7lF*c@U9H%+@D3c&SaLc<NLXGAluMFEdk-c1&,n1k)JY\/'*Qs)fZ"g=aY6\8(EoP/YM6c$q5tkO`#C3Fn\RBMu=*u#P<QgmDt'aPLDN!"E>NJ%#n7HoNt5L9U]Zbj?rjgW![1:S=F(JR5keMh$.V'j)0"a+?!j?3H4#kje!U0S27]5f$c6H$]gorJ;Z_@=p*k?T)RmE/V%o'b0bLrl%@p::G:a<FR\o;mUA"AS]a+Dg.!G[SO/!C@SiA@Pq;RT9KAMh.*R#s3jF"lSS>HSir3@,9n-qJ:PjK&S&;&!p)Hp04]%]'*&C],)(%og&J;/!j>r(7T&tDHa]";=]4(DH*`lB[j&>4s<RcD!PKn&7rOrD:Q[ZIP+5;jtu(B4/S)k\+RMm6sTq49f-AGRY_;5@ckHH=qYWh%4N5.F-*bG8H)#ljqbU:Rjq1%a0nL*YK_6"EK/Pk.E;Ceio;8eT7]]4%FJ>'s%!im")i>,(@Sb/n*'IX#%?jDa]5OZ*MC7%7s,7VZ%!Q18ZL;OXWDIrc&[`O"aLP#jJm-kofpB:_+P9`!DIOY)Sg?+S-G0[tGJ9<1q\].<r`#kh9oe2r0`_(tpOamU$'1D\USM/06>1T<<%;)S_\Eld$1bVAr6(dWnVU^0r9"fT)Vkani<*rk2pBAB?l(')J1ahfO0LN.'"Js*B2@Y&=Ri4X(I#An(<XF5keU/`-$!GnXlX??U;%%"#-(&d4u[4D]Pp(.^ttHen.p'1YZ)\=WH0!=X3',&)_!"UBj$Bj[\L%D$*q89Rd1U(pqR;R9^Kpq?sMb[5>`q+((3nqg16>sO+]%Wm=ha4tJ9.=tZ*M@dDie'aY_pXgDVm&+<'iKfc\tV#aI).t2"Mih%2fN/*gQ\_q*F[14E[AJ1-\$JWlN&kQDDF]`KMnmDiP3sa7P%-qSTl8PEN.(9aCK_c+7c/qldu0tI'YnrV]N/T9uC8n[c]/F7^5;#l:mZ4o<_@QfB?Lp:\$XX[ZR3laJmf*BgnD:<U[9bejYZdNlL%=MZ*\JnhM6,$i&3ctX\fV1TVbKOg8X2,Z6(5=E4TfFZH=C*A<e;n5DSi`^[PM+ChET$0WNN[Rlke^Mm+>b;!,&!J1ac_Z[\,0f$q%ir:l*A2>;)2kib09aO>&!!u;PH0pU=7*OcF9F>Hu&ddhMYWogrbKn"E;A]s;5Xud\O]k-bd@'&-cNgN\dE*DQQkM,A5f8;$it^;!%rEeOtdNCI)4C<$HR+dKUkNc&b(.g_hH@@pKc[cG63u<bIp8n6pRbh"t[0?4m]r$K>2r],c=<sWt&:+a*ikXAsnQh3n#tINtkD]ko%(sO!tMK'L"FCjr;G]op=_FJQAj9S_'#iWhRJWF&nYajrX,K^N>H!>q5PgXiHK#e%^2e+.rpj:l'`<K&%[u'6(+q5^m`Cbb`1>P'o%c)7-s/T2j_@oh[85)Ag?GZ4&S5bLTNIcX&SS3\i',AA=R$P`(`@`ci<Yaas70c$o[W2&::Z;kjIV/%:a4KIs:eK^k^]%c0sdYd:b%9orc$T@!pMJ_C1q67E+7@h#Z`)VdD%&LCQcjdNGg?`:r$HS7'V%6[&f/S*A,`igLrCq_uuc-pX>^/e<eHnQ2eYkF==djM6E?n\?6%p#$]Vb>BK:_B=#P5B/r?Jsi%*jF4<iJn(M=.cl?sXJ7?S5?@u,N4Ri`M[B?Ief,"'"GoF%V9$-q>a(qGQc+3D^GJthn]HCRF*57E%/c".0kbFMW8:EaRr45/5c[kXRfccV3=hoZjKs:;'Z:(0D]?)A'NhM6>#5IKXN1jnGF>&,2K84`'@P]Xc;='n?5Zp$&MFBkk;Kq*T%TXs_o\J_']A2NimODQCWV_RoQPqX'nkkM/'&3Rp28NZYcD^'W9KW^f>Rb_riF`0V*fcPYVr;QLFg-Uqg(-`%gr"1<;'.sZhjhOA"%\+R!$Z-YKf,BG7lWj`$N\'W[#UdV#S#oXl2l12H`1$u?pZ0c+c2uNXiIYN@4IHh/Q?Ui9Ub!m/dM2IRPju5`2AV)L^]:iPk=b,?q%5d3c6mh9LhoT7eFmb/H_0eIGSg,F1;L@#f@q2HDh%&RESD0^eZ26Ds07s$NY1)O71Y[ukV5."A;9V[HHek<*#'^pS3\8;XS:nlZR%Pk&KR,:i1mah`)([$$QQ--P@Wk?*/B,41EpS9c$j(Ss?Q;B?SpHBWZeP;NAD7?XHM6)ZJ%8C%Bp\42+L-]9s:`,*?-P+'o-K9Qph%B#YC;1]H+*59MoY&Q7nE@r>B`Do8bT([H@l%tg7<X:8+!K:#S/]@M?t"^[H(MbmN9NEIU&1Utl2";FU]=jGL*&feRB04afcL-c-(%<Kr1a*3iJb5+k;X"M/q)=D?i+L55m]Ac;l<b$*c6$(VfcHVMfX3eD!r[\NC?1FUs!hlJD0mAE&,93m=iDLk>R76R6qhXQIR+c^<&%hW0[-4apS;9#=r2)HOeq8>U^tPTL`a2b&@)7;pXTbPo#PqQ3:pBD%9bK&K1mnWf8C(.4*'0r/0QSdGK$!KTnN:A.;Pd19Ooe83RB%3K+lLI3a3dPqjJApr[fF/pcGH'IqA^;,7^4'fY7_^FU]A'AA_oP+7XL"COFOM;i'(OUW.V_.j.s!O.m5*Q]1$rjG5Njp<Q^UehD^%8barNUE]DV;ElI>$mO@h8TKeUPst)QjXOhmXD3StW;.t$']g<()^'>PT31Q2G4:(Jq>:W8>MQYh!>GWC^moK&ai(<!Drp,bKfNo@%pa<-0q.9\k;ktDSLs:8+.Iqj_bPk!uh)lKEr&`<bQhXP1,[/#YkreNWOSHFDf,;?g%Q)OGD1;5nNS]"9Oa%)-G_!C^fmPHhYWgB!%d&Seq_]0Z7<8sJ:13r!4'27k`eVt,d-V6PCM@qG>*5*t<B\`LdiMJ\^l-B?3kZ4QOaK&?gB3m"nV"map]!?0t([U6WElQ=-C"3[X%=:/a\RRYKbSdsCRd0FrYYo\.%)aIBpl$G%:/<tG6&)$$[a/Td"=hZ2k=@lKBETpQOp2%/2S`A_T@Zj:L__(,(*&7eDG(?dtL=4H/%kU[m38U<E#Kre?V6r\^Q6@F<,5M>NBm&u0.fbN"(0^kj>7>O(<#bn1NnoUq[Aa-G,laTSO`7Cm%1"&FD\k\i!2uIqA)8n]c`ut=8%!=2R(A.nO4h!`VF(i`/_Y9=PhS?Qo0)4:V"CR&*>,NT<nXbUFbquMH6A,)1r\&*nO>WDB`-;XUJ88MOF15X?i%3s]eNb<&m(o\NX%fL][D5p8PL-5/qEFu$?&*n9Nc\NA7nLk178_*om?YltOaP;_q:)(?5pWokUfh7WD,.lNl,Z:Bm29!j!.7f[F--N15gSO/a/T8o_<%Pp0G>d5ZL^iZ]L3]=/okedpQ$#rF_6@?>/j8/A`eT=r_`5e$E#>H.>(J!`gXG7/31UcV+d't:8f1)"AJ*3,ie5]P+SR#U)Z1RSZm%%Y?P487_I1+q)?5jLE$;6;u7(R;=E1\sJh4R`QpKE`Y+3*3#4@R`VV:dbr\K]&W=ga,u2)AhmA6:DJ"2PB_a8#QhZ"MU!aQj8=eP%].^C;1J;AD\[uT]Ln)T@inD-LK#=,#-mE%o3>4+gl'+1A8L'ZoSI+=?oa/r2[kjF,kQGXF-M!%CbrjK3H0.a`7C>h;#6EiN8bsdL%KP].gW]qpIhU`I1Co?f$,Kr<+*mVu_GV8TBo$u`ugZki8Pg2KFM^I4K#7BiORY]$OE5H;ZP&+<Xa$dhm6pN-Kk0]uPKr^-W/Er:e%`aKuajqQi>UlU-badFWH:J'!q$'W&.mkdTj!rfK7qCO.K?hC1/OtO2XEVM9m-;o"Y>u^DQ%5hj8o',]ZC3!'7,GZZ^@&/s!V^<[4%qU,>4)VV/;)Zd'UZMi:=c.JmULdboX'3nXjX(4q@OqTnR?<SKla"L-<qtj'KerTo,g(X`5VJQr(JXP#lR)p4o9h\[bJQCFAm%Of-%.0o$r*tE31(/S<f-i,A?Dad4',$QK1r^V8AYf4Y:+X_,\*&ZpATFM_nd@qm/F#L]//;jGY1`U%K%5"h_0!-\?l7kBMOK^odDadn+%),<.u*TpU$mKsfX<k:Z2)l0T8:S0TS$47^HfU@MTd9B\>pb`g3\&)82iXp)Z<Yt2K8o75qj<5OFqV2FUV$&pM<\g.@!Ut%_8F_:T%@<\J!)pe"86giG.U_?>^[;!@INrWDi1:SRM=Uus)NhP/l6$&9WRVkhTN2=6LRj5?e#ZE%eAN?\XRLI5YKc:LY)$GMWl%?^l+JXI/%1.9V9'8Qa7Bo?mj%UN%lkNU&!$MPQj8.sp/N^bQt!kaXlUn7hQNsqG2$HiE#eC5'h#pUQiE*Jfb)!/mo7CNZb2p6.X*k?VN"dR;s%JWQK3f62gMMJHef$n<[h/`NY8?WfOU7pc;OQ!prJD#>:s.:Z68Nse7];S:L'XL^9I6L2Q(>DP9;lalqU\K0MG-t@4@I#q](`%_,i%76fhS."R-FE59g(TeCX@1gja\MuMc.#r0Nsc#l9dNO8jIX;Eqm&g[J`6&f&ZqA%@lJ20ADr[!9&59jK$?6/S_*&(C&4H#j`)>"RG%NRaP`?]@8mo7fPqp]AAqULBJ')L&,.61P'3ZZ[IRL'S<"NKt!ZMJ0jDrW&a'n0D58M]40bFT*N:O^:JLp@.bW-;n:B4_@(fFOeM'%"r:.cA2B5U54)7Q@2']oGc,m2W`m>'5X]MI@mG*7aC/G*Fmlcl^rJJbR\%JFY7(sbbn<h(D=J)=VbZRV*jr6q0Fn4Q":[_loAho=%W[YRsYeNe!>JRLR&cal576cr)hWHhJ-VYc::&[(,4"X]O4(i35r!oG&m?m+`Z[8N[SG>ICAm0qn$mn'a;8#?jA:],lB#p!-p#<.5%8RU^BU)QHG1^e`&,VG;Q?S#rq,>Z;qT%:\N^6:egj6TsSU`]oL_0st=43,!W>$,[U5:)\*0LODm]#-Yf%L[9.r*e,s"M922W%Udt%VKX\n;/ak2Pin:Xp:=2o.SAHu62E(FW6=Sg#Jrn2<_Q1RD+e2WDC)Pef`alb;rmX\Eq1Sq,oJ-<R(8]Hn9S-jpOOFBNEWS.p(E0r%`L/Gg/(PP2[pi/l'*IF<s.5q/n3LA(@GrusDoI@SH7t'jdl]E7R9[kD/&*ph3:*RXXnpH\l]b!Xcum;Aa'][gKi^s.84a!9c%2C:%.\b'-(^/LbQ35>:ajq#0E?r)1?L]0uq5:BB`Re(]>XP4#!aVf2ShJV-`#"XRq82o-/o8NL]F+s;jR"8?XrS:=45q@8`*tZ="4GOE%(ShTS,DZ&%QWc$t0InFb.tiKk&BbuTdd3`<nSg6FY16)&##=[uK^+pY]T4P%`=!P!ALcsrj)YJ(p`'QG/E%J<YZ)B*3'I],@`B\=%$[ZK*-:-)i$/>WA4lJN<kPiZU+dgf:dJ$+Ie_kWAF^b!LW&&6sKH.:Y(TY_QGH>jW>id/:=3,DUZk_`-`KWle1(?4u&^OWSct3N3%'D2IBpSg\_VC*hp$]BZM(N-!oPj"N`rUY$YAb#A`DtT?XQ)J!&OhR;/V%uQ<ZG&mkE&OO<*B;HU8eiFn`-1T93.Bg%J[R@8P0;jt%d-h*p;T0NF_MuE*)(s/oA!]ph#VY,D@1pk>$7:(OG$EKX:(FA#$dQ&2!sA;q53YB5H3DQu[KjN.`2CR?q8N<A?u^IAk,W^-Z@*0B%<d@kR83_W>>AT;+orFbkIcj>o(`*=s<"=bS,:'(E,Ys<q[GDME]3$Kr9S-.We9j>V\!,o`23jm:*K#4YHC*iiiX0>NQ5@7h8NVQ0%a0il8#e_fcM'N@5+\tiYj/c(7Mj2UUXV=C"",=[b.2%bHRY"4<D2RpP`X-6\6IgrR3/+mdEK5j$I94?1H4$-j.Q@tSM]6u!UV[l0%&O;nB;NVS.n<6G1dHT6l]-\9THAT-+G0\tJb+(IkK]UK%h%[7XO$PJ=566:]h;Z7*eqMFC7U(c,5PB:V,q7VOlL+[&Es4d+Gc@Cs%OCI-b@]E.[="BQq7a*Lh$.R'2bR?iL3">9%/&703;`+%nEnhB"TG3\j.&VQfbNp9$hj?@.O$t<1fr(K!LmJ8)CK+S=8:KiG1;j@G%AY?eWP1iI<q3*'2!`V;Dc=0BSlmQR63[IZBoJg!NSRNo@m*ntD=sH>6D=/*rl@]&#f8kJ(#c^g^o87V[50VVM[V-[G`D?^mBZ<p9%=jhu>;ZOO^LgWuodjULV9qb12g$jCrOXF,$[QR,-Q?l1;-4Y-T*H2+oOA<9C3L%iFGRC?(JIJt3LLqSVW!H94JJWt-o`7-F`MYU)%4&(Fo'&Mc4PCPC;Yi>Q+lWV+"FB+$3cuGoE>46cD#-"8i$CM*$S[n/@k&</hd<-'pMged>ff$.X@Pqh--Rt/:!)-&)MfGjFN1e$g%*U$(bd1k>;lDn3J+o6W/`tW?r9YhMtRc6'BWnJ.3=%*jfOtTpER_PMQ.In%A.m-F9!!*`MRm$#"=L];2HpgBs"#%fm:qPg%%T&%@%>7p*lTfQe<0r9DbE3>!Pbt]N<r#4RHWp>F[4k2"`:q0;M!o#P@Ll9q&(5<M'/e0NQG=!"Rpjj2C`8?k`8QQ>FO4aMJXD?!m#9UM*%!DCSCQf7#83:s4_Z?^K\h13l5Wfh9D^h>>aj6t@6Zh$?`2-kT<JX#%(72Ib)_g6r`L_55GFas45KNNtlIFk#kEo^*$p-6D$PP_/6%[39\(.+H4/+m5Ubf>Ym%@Gtp>\iZK;e1T=$dr9^&G4?L6d6Qs-3(/D(i:4B\]#GnpN7u8!R3Vcf^Ko'K'a5Hu`kW:Uh3M<n%dC3F%4n1:ZE.Vbc41H,h0j;/HF*WpWMX^cg='qtcn(bke1e-OYmSEj)IBs#/51)\QY2dLM`>Do4CCIt9Do=RZ\]*ke2AUV>WP%&())4Tb%'rf<5'c!kmouJ#$[aQ6:76Sj[S/<FUVQC^JVP:r@=@lU/](][2W5XXn-1bI@M(e<Z77W>%?$=[RJGA-Y*mB83,%:Vp79o^PK_<2U%(`NnIR@!Ib6pS_J6ld?Wj%"8S;A`9)5gn&@A7A$b75aJNmK3iG0@^<j&d-Y0R!jT(1.!MVWH1Wt[U8B_^\NdX:D&<lLI[N&q%9q4%@bJ4)ii`@%,KfZnUc-:5:C2e<!9lTe>`Xg/P5%[R+W0)T-mRR^N9e.i=dg(a02O=_\I)Dm?B'#`e=%)0Q&*"+;X.:tiaO*M91eb_%Cirm[;'o[%O;8EQUf"q;_js+Z&f;]pGSlDE`d4r#52CdpJdK(Xi]`0tK!>h)YV0@XPfDjPWNAJ1PVC$&a/FYqnPS=j)._P0M:rng%3dd=hkZBN1/g2A1We(P5a+.]Bj;oIZ"M=L!pTYR"#i&6Y5hc%PG`IE:@J"A*nhe2Zc7]/mT"5.[JV[!jOOFBg4I$P(UO\"[-,.EJ%'oU%5(m2uNaC9P9c4#=#!qXW]>UWC>lM43J&4!J1>@eJrb1"h!5h[)2H=7FPZ(S#aMA7fB-JFZd_iT0/=s07>\l!$QLa'<re2Z](%jQdQIei2=]Mn.uLaI%9XF*LToLCBNtdQWm]21Do#:*h4=H$Yb/"XN1<cPdM>BBZ<W11b]DM2IlOF=]%,I`]n$N<YB]@'C&ii[NV*%7YYC"X.F&NokT62;b,.(`Llh1R]$t2,*;;-5-p)7%icHAgJC$IXpls>0aEK_;G.Nb'o_"G%6T-,'+<O@D5:!(*F\bS=h9O?$gp6F%ThmWaYSnC2ChR\EL`@@sVcE@[=_t$>!)u<'2AB#i3rrJ$YO#b86i/a*[B2I1]S72,h_dB4ki[XfH]Y!W(i9^7hUjFa$>-C]jl!tJ%VVpiF_q\#J`>-VnKb6;E#,aHd(TKd73g+GU%8!<J$4j(H.l\Rj:)'@e0nst8jl?D!n:ct-o<;fGoOV,O?'oZc3'(Bt.9U(Q;0jtJ%m[)**Xdk^^&p+aVG6P!<Sq!V1$TLeK5#]*Gja8L&OmD$gP2shF'^;"(*>;s=W]`\nM6LQl9j3-aMm6SA$-Mi5Z?]Ut50%4X/5Y#/%JQ[d0)#ml=+^%%'/<Q7>S\f;rFmiMW-j7A/Isd&4b@1f*8cV;g#G5c6*O8C>i]S&uP\hsRH^X*6fRF4$YtR82QM,nc^ouCB-mXaY%Mkq:[!#=3%gZkBQY'K4T(336FZ7\6jegeak1i2Q+n5I_l0n6[2j%D_Wa\^OZK/TUe],P%g_2?'9XDa't!aT@:[pd0`U&J5(Xc$="%H],/R;D)2c9:3b4Qu;a390%\%GWID%@hIotLS_7M6sptBFZ.-X+di^rUo70n<.j!5L9f%UZ<6l82NrUW&/f<Onu2`J^c!qMagh@P%_E:?dK14BuK=fK<,Hi*?n]U-@]ZSn9k9b1lQ(t3n4`LC32hlND8nG@!QtDUkl)cA#\RK%.76rA(bhi9+i5g$G0KZ]!\;"mW?86gX%coEYnDu;fZ7%S!#US[1KB2Nn0)GQ40,p;c2Za,:TcR;B5.o;6VUj\V:niO"RCtl=tJjuY%5/;NtZ/4G]UlS>o[qrZG'dkh7#8t$\%d=;nKRB.el@B;h5[fXN&o+5di<9_WXPVN/'UMUtNQ98KUE%'!AIVK>E'.q_1'ee;'DpQh"<hH^S*7:5)bqLT2Bb^h#hXQ1uf$Em(%J]faC%R]TOrD"r8aP$TF0FrN5f1M]9<n[n*81PG.[nkg2-0qRoj=>!lSH=l1,%VZSDPI'fOB.OeT9YQ&5,3=W=CA$SlO(48/>&f@%gAet+'kO5>aO\BO/A_@=[a=g/'DhcQ$@7P;56bb'UZRp2UgJh7)ker]gkqAl1KTl#knGZ,I1#K:KPRZ2>EnZQ8`?rf$aE5t49rof%^ZijTH0h.NI:lrPTuI8#HFZ=]ih!`u%a,]^Hk6j&[kai+/d@Xnf^^I2folDD)./kGQ@8uhitTBlMm]t@#p2@Q-dg1t*Q,`RqaT#P%9GPAT(`Mpb,QOVVO\rAfkAk0^\aS=gV&=3-oa6_Jn_G\qhnX$$0u-gp!H9hA]EEO/hi-S>J8iNu>9p$tnYfl%2ut(&D&*r(n2B1g%r9_Zdar.8Ea9lOMnb9AE"jtWje:0?ln'8Fu^Ch*(``d,i9n^jfqA.aPa9D)/8tZHL2*_bj6=]RZiaV7"%>=,g4Z+&:Y:^gnRU,%_%VoNl!9s0C-+SUJpUein>dnCnaFU>$a$,Y(lSK4Rks4V.6a(C&UdWe?B3k%[j5%GXML.YsT]E?p%6O-ab9XI(hd0D&+'6IX$?H0h;%;&\AK)R#joWG0^)H/Y?3/6$Xg@sU/qL"(>_Ak\1C^d0hYEO,!HW+nHDiK]]Q5B+Er)WQQH<TH\;AaPim$`I,4md2]A'HnsI+rd/"%<k[`@^=`5I[WWeG3#(#+";3W,C4j``]>DQ+rKh-pD2!tciB_r!!#r*Lr:#OJoXr0JjlI][Gd17>!22!7?"6KdBDSmjUDU/EeVEo<%#6X*Bd;+\J9+-U.\A[='qeOD=rLMpUCg8J55Zj^f@oD.mTFr3aN@jkH@q-6A-oM92A7/G[NFN#*Cj[qUBeGX*giQGF,Dfdo)K5Q8%qrK9Y=<D.KSO_<N1D.^!ILhF?EJ(.q-MZQW*9LfC4]p0Tl@asWA,7:bUKh<)h/q_'aD7<*h+u#8]uJ0AKQ$Di2NDXQW-]@>4sui$%=]K8h2=bGKfWjsA_15gSK:cj9eko.Y1.=%H`n7@/]kCo_lRg*/fMO#dAN%!OP,.niHmdS90\Z;#G8h[+r1p3/>WB"+GZ0B1,gUfl%ih9s'lN+h+Z-7q4k#uGO3!iW`W78@e*C_HV.VS_7U0pi;eSQja\#n*<8<<g3"7@DBNhTMb5icIcn-EV?Q*tZ[E84MLB\QXpe]h6S%W?p!F__LsN&Z6k,Mc7k-#FdNjP7eIL4M6$Z;%?8Hg'D'^_Zm@5%n@ko[2[T%J$@Gp^hVS[,/W]'<QtRk+'@@2ik22M+p6>b.gN@H%-*P+^s%mYQV,=6Y(dr85X=*fc_0Am##O+H@-7?!TTU5\6Xm4[ILju"0+Ct\0W#6.F_;52i)1'@@!\r`[GuH,MeYdF!gT=HuIYsAC%/6@+J=Kp9>N>2l?Q`D9I9@?(1>QHSH)i335C"3&_eSpICe;-.BfS.?7iBa=`U=k2-Sbf:0e4=4'5=08f@:)=U3DB__p&pNALA7LL%k*e5m<G8hH_Jk6RhEsW0`,Ki]<=#=n\=O6(0S)W*/>d[gemqgX0c@m'lL6!GJd?1gLI>:DdTMQcV+58.@]n29"G[0NO?W2*/r6D%%K&T&R@1`)iSJi,%K6Y%]Qqb5=H1_H_?Q.:+51QT!p66.5hV&A0'Fr--N(P#F6#WZuQ!\5N]Z0X8-n28&+cV).l%HPU5q,,)QHr-[%m8>)K7jm!>o$AbRlI2TC&Iq+VWoo<>\LbZ"+f-B4fg:p)U-J'j<Yo3[[LpPfLqTJsM/.6<hOgfgJmaCUp_@b7@n=Pn3c-I>j</%S%1(nf:&%WnDh-`H1XU5Ij?[Im^Y+=eI'(L_@3DW!d>@!p3G><SYCP^O"js>TjZt0TWo;6p8D7^tV-)0=M!/Ci14ZJ^D'l<rtWB.tT%Led`@\uejaksi18_-7Q)Hu^Wj8<icG2;KuN\b>rU(dgBL(^clEd8sn:Xq',(@K@K^m;\n:Lg(2"1=o+2C1%P?O]=oSL)9nAlE!<[%#Jl`9R=]D$a:mXM!rGm)MNk1pD&o?j_9!U7dptS,(B-8a-:6l!d(.3"YH,n_`T"'R%L;]u+V/QbrSb!=i5@E]E)#U/oW9GJJ>:/T%M%?j7i.XGS8//[+M6#UJ?P=\ulk6ID`c^lJL)-^V1"RG)A?s#)\F,]nrQ,l5\lmB5LO79^;2+=?,mu-`;Utid,>hdVWs),4&D6<7%l<c5F^sME0#!YRm?[&7rmrqLuHeib-)>Z_jF\D@;cHKrDP!Q#!$miB6h.'bCB-$>FT@WljYT"G%%F$NXrF3KAW4Tk5]kG'@H+H$+%iRTsph2F!+lmA]VjN^F3m$9\f\-NTNd2Y#6H*,&'qQFZXef;;Y_0:3O^t>4H7G',``pO_3.XG-(ljaY4,W1?N*4*uV1`"H]hdj2[%M8`,]AN/k/62RZ?i&&'tl/tTkZePDUd"]m7[+@a\UI1QXHPGe-((9X[<^Oaa;D23GkSdCaDT*i%UtmTd!/UoeUYSj)<\G/>`"36u%E1M05Ta).YWSOf),k4sJOTO*,[WXSZDb9]Iq[qPoh9j2bT.&5nA.P3t^7g]n$`AkCI/'cIf@E,<DS=5>StL&<]tTrK4?1RX`FjlS%*j\d*95lgiYf.B^Z4!Y%R%C&tGDh$+)'*[$:CsH^VN62ok(i2_#Mkrh]i,s-4h3\M'U7b7$VpMI?)5+*@RXVNh<P7IZ<`$!\F(F&%^$D?INMYSF%.<Oq1"8p?G8D-4npbj6*e>p*;+0m@7^[a^*-es2Ut"m@_:Cp%^ZZ<_.E]9mGe,-/0:3\TMXj_g7(leWS$.$m(M_X"%RGkb:,LS<N5KgK#>4C@GK](\rNt+Y&h@1[S=lK&A=tsS.okpbh`p6,A%nm!u;3W3jQW+SQ"P#\%Wcou"Rm:HVmZ1JR\D"PlgqXP!%7Z-s.TKGE$N:.6df,:(hhWMKsc5l0R^Df,DGgbSnif!O[TEn%PGUQR?4K[-'(Euin5/#C]`>_5Mld-Qh89G4X80"up,d0@o*urPA%+M/6GKsS%]dL*fJ*HAb$>EKmu$25#I/lI*uXIir3bQnWEe5`RT5uM7]b<<^A&3h$EEj7qR91sgSs'orVD'Gt@[1&KA!'oq_+QW^:%]rIpIWCeOOjS+sRc+>XS*ZjO.Fimt/OlEB9Jn/Rhn>T3L1S66-o+O5<_@JlIob@+LDIA#Kl3]p;'p1'fRt\d99L[*uffFq\9L77I%q>g8XU:lC@%m*OkC]f:2LfRaHXha=f?oPI.JRm\3_;$G@YUbq'+D;;K)IIa(LL]p:aeU"#VTeg/Lg^t)'#FW!*[[Z@$,gHp=m*io%P#EHgR2WXKotjM)b<DGiZfk(Q^%=i>1TuB)a0RGih+/&'C^)sn'8`G91d=)b['OA<qVf].,e2Y@$YSZ&LC",Xgt<rP_d=CrLC&M`%'Z@%rZ_q62VLrjK,cQO*+`pp:#Dcl%jh:iQ:4>9m`r]]N$,q,oLf%/o&f]SBh,U*m:,BW\nLb6aJ6X-<G2D;d9`&dUG@I@B`2WiI%D;3HR#=4$f=PXXb?R63oo*&`pl]sAcI9=)_EERG/1@8j\H&EX5DGX]Jc=s`4il5k>$aSMY@ko7#8<f\NimA9JAjr\.e)^-sJf$`E%W";c:[nCq-':[$i!*]d.;NCJ2M1i`E^e+0?SVRR1oYLTaBqm4\O93,-.!0J2Ze5:16<QT0>o);'s6ucj7u2cMK^M6:VtAX*&O@?T%3#ZMP/8.Wu+O)Xf+T`E^\3(G&3be"C"[5K:o-:[qV.1a\^pJBqT[8FiFK)R[+OZ)a-)j@OD+4QN&ZJDh'(3Y="?'f<]f(\7RT#p9%IR#T"V?1.eAkJ'J>6GqAIu/sV2[IdMCDFto5ibu8'DQnP@?D0tfJBD-FOQ!^]9cHM8mq=[lM%C)Q+$P!K">64_Pgck`D])fH"\\F%-GVH>&5g@@^!Te5^)[31XB%?M3Z$T->k.I-FWjgC7JE??;t?[Si=25R[l.]gVDDZ\n=`!<H&^otA*:!k=IRZ23fHb]'UNthcdS+p%o8K2Y6+o@ibhX=LnnJ*E5t,Mq.m3F-#'cdRqO"Uh&l2N.WI>tVnV1Z[ZFPM&el8r8P3k&ZA5!qW6/<8dE%dIifo)p.eZN:X6:,;&%[6p(WOTo2,$H()_Q,"Ko,Kj4tEF)+%#J:.,8XEofY0:WL["k<*FE2po09-"5h7U-08!HI;lWhIGU/U<5-EG\gA9b$BIG_o!k`Np9%n)l0nJ3#9?a1W#fLT&Qm/)3K+2L<\A5%$T?*0Stt1p->-+]KU7/0-3n3\?eG0D0LEE2IJt21C<1UeARQ?`>i(#G*/n/#K3H6=Od8%QOr4`$LD#?mS+]7k%g&LV8[`hbeI*Z*m6KKJBR2L\(rfPQ/Z9nSUl96INUMja[iNu_j&Cg^HcPMR<[?L\o'71"BubcL*&^"U5l_Y%]CsGLC1Rt_5#I[Yek,9#$iTVhB9fF:g7(?.Tj02h-+&F]%Mfq,Ockj>F+KfmZ^ud^:m0LZhrUh'_edn,LGm4+S(5^%o2&oL4;pQ5%O=QgZhn&aaUhgh!&l_TX"*#fQrRe`f`,1QIAb4nW*bZ%omlN1gD`[Vl3m-T0YOH)S@4f1k`6X!VfrUHa+qu`#DtH=_-%rVXgr+@L%3&mCC+'o09CmN>X`6niY")luM:Mu9=H=:U<B(CBo7&A/.j:ZjC0Vh)KD3".%:<5X28Kp8Ea$(@AMH'n*IG:Up_J:Z;?rkZ@S&0$*%\ZlBILJShGd8>YjTR\#%Jq=PP*Ot:8pW2pIS5KKhY3jl*KsG4@ddFu2:cBJ]M7nYQ1g**gcq9&gOIoR\O`ja$:1?m\d%E/nI^7J!%L$Rh*%CIWB7ANQcOa`D=_Jmm'q]b8!+,a3Q,%qci,0B3Yqu.j!CZ^FKoaaL!c5)7VqS7"</U+uE9T;+b`BP$S7*O#aUA5:I_10GP%\kQH?.G2J#0;_(h1MnVk^q7B-1./[bf;YBN"4K&a6%4Of2bK36qdPlqm#Bm>'HIUcg>n'/<21N]1An#mb4u@l1n)s/KO#tfFU>?!%UV0d"fsEr+8Z\HM)7QF.Tu%"@:qu8%]1J/+G2O(Ho1l-P0SAIYKO6C7@U"bBV57La?u*&8?716/TK,QY>/oHc?k>`8M!!aSD0jiO%8JYZd*="OlD(-W3\C&G!cf).)-e%5Jd2Q).=ZbHSpLMQOR`7At_4bFgdE\]KX*DN5]3e>o1O$!j6-sQi@N@`Vk1\M40.4YWHe?R<%34$LdM?N$KLGWYS,-EH.3dL#L(Yg.TX+FCp/?H1[nVGhX\NBlO@YPlWFMO[t+*2)2Bs5U&TW)SSpKA'jPn]7Ur'@]-%WHcR0OG8c%W?$SJXr7C!KdaD*B&un4n]qn3nM,jO\qJK8E6_Xe-\hM4PVL!tdV9PX(9(h,>X,e58Vc=ES[N(Nkba?0Dg<O12sg)VK++`k9u9t/%n8FD8jPnihUa,'qJT2td&_S]J4%`(AKka2C!mHI`7mHUZSIX^@';uJ"0^J+1Vbu20`L[tV;XUs37`?!\T)+$X^\UDR:5/a!mOR't%[([hj5^bdhB>/b2PS9>"S$krMc-[?_Y*iepIRKXOk2[f$3fK`0DFAH?"u!dfVW*036Y>>.+UEMa+l&i2iHN[\fL0A8_]W\n!PX37%&4Z>'5Yq#CXf\$k%1VP,clEe7RZ84H`$GZ,=g-#+__,"C+S]O.dh.cHm>l-'PI9&cF`M_S)B+D_U6qVti9GEP,34b0XX\n>kT4U1%=IG0lP$7*F`^"DMXkcNkCOfgAY^eH=*I!WU[EGu+-.$r`$H$lOK.P\;&)cJ]VC[7:DS-.UQd)L?]?[Df48;l"7);!;m7+N'46jq*%N?GQ`1\-&YDEoS7[,<i%AN&QO#k#r\Q\6qHRf0i,TlTOrjp:p:9$6?B,qs0`2t1\tUj$DdD$^7hYs:9IoD%0sjMh/D`ktH=?rJCO%14&YI59oM@X/A%)prSD=ZStdqZ>EHe)*'oS=9<A!gNra&gts(=:XR[b2B%&rG`7O"l\'(6I>WgjnCK*WLfmX+`Y?qUIZL*'T]#,l%TW\FjJTpqo4Q[hqpPg`5p5)1QV0n/B"un\LE$e"kRl)6"?;))4)fe'@!V+,07hD$KB.FJU(e&I1A[p"dR7Z#`d/hAT!+,e##Fo/6%<Vb:n"pTtDS4e8kJ?Z)=h7g)q3m9Ij%"&;MqiQ#?Q68B,oLd^:Pcjh45;XeG(EPbjiF5VVG'lO]+>Op`bp@RZ5+j<5j15J[d1a50%:%WrA/DTsJ.2EE/DGJ6N!t;doO\>8TM?cVeI@qcEJ9t%_5sdRl+Cm5Hi0,kK:d8lEN/l7IC.XJXOT5Wb4gZp^jhLo8%LiWH)ka;M%M$2ME!=7(u03@5nJ8]7E$q(^5n5Jgk3InY^]G@/W%Z#E76#E"Sb/V"ujNeXZ*5G,2d%F@0HTr4PYH3o*+O;7Y[m8F9Pk^+p2'j3t%Ba!2VODKfBU6Z7gg]fH?2WtX_%Ce\O2]t>62h4_Je5ufd(dA=sW3"^B!ar=-UKSA:fbOK_"::p8/LR"rR\-7Gb**;0)\O>GNSXYm%4K/XQ+HoNMWAcT.(;[1W\mZ:d!f6B4eLS#G!&6o:?_8KXUa+Ae#<;+AB()@[NH$V\JNV">HQ>?Xea\0A?g2AnkH"H_q>i>&gj!;L%%ko^G;6_7c&)d@Y[Z;iO+$e:8.$R?qJG/c-2Edg[5ce3^@H@Nc+8$Ut:A'-.,"rJ#n9I99BsX,g]sE9bBs,sa@Vsdrg=ZlqZ14NM%q&NlBs+]erWZ=>s$eq`bH4=9_Nrk31[<i/*"qj%k_(OFWDo/e'cnekYP/dYAM9ecYJED@^dW>3@+"F%Y'4CrN5&`7hVREEQNuC!`%,R9^'YJOD9blPJZ2Nb*YF9#(2B1*gXAV4IT?R1=K%cE$'X+US2?DK!1+P2:,8^aC\Q=SVM,f$`o>Wo'"c%ME_GX[6!2Gd.XHY>SX%9Viqt==MX#eP/<4i2R/H4S!=((PUFal8>Q%(RbC"LfY[o/tiDdY_Y014i,'Y4C<e2U$8t$Oe-8#g^A53o-pCG!K/:s@lt[>!Q*EP%M028uSh\G)@Ze/C<1DfgT[-TJ"-"Eg/#-A%g6apf!AS"qRd:_4"YO<C%=nRiak_KM1rbZkO2;?c#$/;&"[t1^R<56Bfs4[f[t8;T%8d2Dt_cn)(QOJ3TWXQTZ@4s%&lcDU3nZ>^W%VB9h]EF>VUk;;E]ogWl:Ur1&N%Ml8;mkH;&rg?\r4B1@58+S=W*Z6\j+jnO2Cr,K%fhX*]+5"CNiB5QR1(u!LAQb3TL06fn5stjRY^sr^JMLSGCJf'*:*?).26[6a%`t\%FrnL"&okgseetY&Krg6"7[Mb@ZJ8,K=<V&K%QrAisB5qt!<nXUA'9f#S;(pb[Ou"iZB<,^+"=(ce+.g;1:E4Q\RO"l?_cYhfPBDVRA\et=J<Qu(>?"?XV>X!H2>b[*/j9)&)mU1b%Nf(*Eq;h^LI*qb`I>N^MWH=$U*BC0H!^Nn48Ru5)]V<]/`)J5^5O"[>-,U!t)^co4['N])Z]W8qiC(/NX:ZG^%N;;[*ELa/!HXOU%'b[>2*cuktX%ltD#U+&h!B)c$*d`H'XpT^_2rtWY1Xg4-A/D'Hi(23@FK<?!W4:T]+7Be>@K^G@dY*L>`M;cJ3t*Ecj1slNh4blF%1'1[T`9-26h]OL'C"pP"[k<0rkVd9RkRq?S__`3Y?C3,&'/An_N+j%>YQoLHN%#4"lU9H),=;\JcXUJ8cQ3T:s+<#gI#qo1<Yi,n%OgkrXeCA17EUGEAJ\N1`CId4O,G]BEPA()2$SgusjnW*AmYa&#M(T<^p?[p>4?)l"0FIH:fC[DrV5T&_-!Mq')jQJEJ0&;u$!i)i%Q'`cl+ub7jPO'+2ZndaH%)u563J"4+o[B!l:LH&.:9r<0PUBV5`DgkhdGK96W=k33UR\GuF[]\9Z@TJ3<M&RXZ>"EXb'ZX=EL%6;%UjRsLZ+NeroB44VU4t9h@gjX"OoY^.jS/A^'LN;h#m9h&8VI<S(FB0n<4RHFFACYf8u:,e)Mu=1)1s9`RkP-eHSW!q>'.ok)"Z+4%aa\<J-R2ZM'f9?PP1[S"?S"-G52:84K1RD'<hMAt&;8,f;.V)dbsfJbk^K&VL:Yn5"Pp=oF1^H3\co4i-1Ti\5=?P`<P:llQB#E`%^@r3[+,Zn9>eaL>o6/+7>YJXU>n&hEKPQu)+jV%SaVY_Y/Bck8iV2a57(<bkP)H)(1f6&SG$i?Cl1N"9D:6KgTE$5//7#u/_tZPg%\`SU^#k<$^N6(,u=*ddg,%a^#@:'+$P"qA'i=`q736tm?WX6JI*l[Q/7DCYcg>Z<7;M=A3m:Xp8d=Zht#W[1,,QJ72haP%j^5."?%\DJE1)n$Fd8aDd[:fL*c^NaCni#5c$/m[CrPB!q^r&T`]mQ_9U^sqZbIC/8+m60Tp.'lo?!#e0Qfnu2o)ip2i@r(0?m1Y.VL&>G&%1fG$15/r?'EW+W3[K<Drc)Y<nQBWe'rqo.`KRl=XQ7hF'6)<QaQ?5C(j'fBfpopK`]Iq*,"9c8aC*.>I,<M%JmQJ7>d$\R[E:[s,%#+k%")hB4(SFZqpbmR<9U68Hi<$Q7KZk1s^Fl_u-eq+j4U?P'ber6GGOsJT:<RZV#5BMd5L%b`X-de2hci[YBNX*\9cpqi6dYjc%%.-IH>EX&:Jf5;Kr#6gL&XkilLl9(O[QAU:LCDoD@:;@5I=u+fkF!Yq1N]D)cH$tC`iR^,s9<lPiUY(VQ4b[5[+dBDMYf!%n@*>/4%74-TuHeIKt$.+h!T55%A%7^@S4IWLl]*/&B/73#]q@XWRN#2VD5]#gM5><pd!K5JE9FBr=*c#GQ?F0u]A<ksU,opjN)@]%Y#FhUS%%pZ9^K`MN1RP("A^9egZ:+.Zm$6B"CH?"lE*o3o[pjm>#Y6BTZYjdmM8^Z.M=%fHnK'=?4YamA9Z%550U$n^!]:NFEoNN(9)"qe!%.g9eS6O$(Q+fh&*N=%.h0p8M\gebrMQSAg2PqU1$GHA,-8Z'"Q\rV7W]*>(5\59YgC,Eb"aH[ZoGt4`/Kd-nM(Et^X/C>qY0LBT4%n;D+B,-osr="Q-r=bkM57*fN"2Xc2VTR",7%Zk7'(T:T@O/?UI,=@N<aT*JY,<;U-gBuDDJQ7$V.Ji[fFf%ugitR7[-1:.kO5;"*%[bsnSB3Ol5@q'N0h[61F][O9l("pso:m$<+@5.ZF0ZBDErIL+<5/nij9nu_5EmTE<jMAO7'*p9qAJ5kq2/-agh<n95Etme#76m5?%o_6PJ5]2N4@eOhcX&46Kcs)W=`4>d<@A*'.OWn[:-Cn,Bo2ilSMlLlkGm.'5e!=e[8A\72[(@ms1(!C]#V69cBBMCT+;;!;f18Jt%Mb76q\csp2d:)YcD<dhIo4/N6:NT<Ya!6/2)#\UkCjr#\L"9iq+E_/0o1).Jo<Y66NN/p(]t0:EjH-KQ:_^*U_\HVZ'A\J>Z.6X3%jKKJQ.+VF]Nr83H13Y$um58*4lY2n`E/S:`2``8/'prpX*5?/K^DY-Jktj?'5>6_uKVb$%&Q6f-!e0DP1%FZn>_WYQ;<XY1RbhA)%p@jE^F8h1SLh`^A3q.,^JQEL5OT`:?dOG.o)Z*_OLVlp\7I\+qFgkKO*:'=;$=279j!MCHealRJfOij2dJ4"lOJ3mAjSk.65/ImY%Q,+TYEW@0r+Y^"bK,r+,<MQV+]>jTpq<<\1I#$t@Tb]TodUihNR/_Z,]LZ,aE5>kD6^up'#A)D1'mI)^M'd2KiK6CJcWVG>e,7F2%P\*a\H@n?=TRA,+k%;QtdqHs85nMO,F8j!"AXV9]g+ku`]FK[f75'uOU6KltfuA)(raPL5R0Ea"QV.`GL!pc`O-L<ZRGU>)ZoCdg%$VUYs(48M'4qSj^1o[[thNYD!f`h3MMh#DVP\-?#A:>8s%B$D.BuD*:;gir*Om`u5i#]46Cs%bV$=d>_SJh59*nG'L0\j'hD@#[a%58MKCdl']NK]Hl[oAt+D#.'h.G/2=16Z@NW*Opf0[+ua;BL:52g;BfsAQ,Bb+rJd<b-QO7#Hm2La[C$Xe^_-Y,`6k2pr/<T6H`N6%!AJ\kD(quJX`P*d)[X%l_e!h:R%"j7-4"?;>/6Yfca:C5fTotdH`,808L,YrU:tQTpKKqsi79DQVDhnqXn5*,#U%:tkjs^]H*)M4%^mT?$49M!&c729$Hk=%^+K&L>gAR#$&85KLrA?jR*`ciL'\DaZ3^X7aVLbK2PC&)'#>gKVAKa`hZ%Ck-JZ5qqrjD#]0ZM=q5#L1t%U(6#iEWb)+G75'gB=6=2IUaWD,#j33TboKYnNj3EKa@TNlK)8W..Oj4F:q(R"3+;LLcuF15*n828!A)=5([/W\qoZOfKg*Mph%1N%lN8.f.A:dh9`_Sg/I-X>7Ja'BF@Xu8r+Yu&=gnH4l:K,U=TA\s7"L-E5)-9QadHX6U?Yb/-"V'%m4J>mAXd'&X!)fse#j[J"2IA4%V*K6K*A"1".5&o^NBJu*ZpIV=6+7\;=4Giu(!_ohP&E2SP&^#7]#Bl;.J8T?HMC&_a<Hq-'<<K:$dh05F-Mm#Wd@7&J39bE36.R<%PVJ$4*]!ge>Ff"8)_3ZE1M1T:`@'-hlomh;hSJHd[5\U'<]OZ7-mIPX#2:iKZDSg?)`XE%h_]^8Z;=<T65gXA=)[#5rISeuFXgcV%8<a,/;&KOAJL*fhp&!s@dZ?:hM2IXE>+T>aBI^Lu$q9P?eJAOV.84^h;q&ouaE6\#IG'7kcDATcTl`Il7rWR`?2EKHa3`8Gb8Tdi%@\nuY0M!ddrI.::qUKtiUOYd3O[UNl^4[',kh`^Dl"Oi9ge.U6f.NbRYr'"N!rH$K9+sWAN5UrrQS])</uq7AdhJLE6cR9$VS-Xf%"WO;`dqU(1?M#!tFP64!qI3Br*YbP426sPuZ"[trB.KE/iASl9l*sMgHViu/FpMYQJHL%$,G:D=!GtZ]e-e.>/AUqY?`mA%G)m.q%+l1724V1N,O"eFjP[S*t1f4Nel]%PO(uUfW8P@b6]g1gTVFQrDeB`?RT=oVIg-1Ullp4^-#<5enq/g;O8>s-JNKQ"co,[q:s'Z=g%2Qh4&2%_j;;`nKs>cG&O!`D.jSJ2c`9Y<gH8T,)i3.&f\LLLcA9p%@][86:XF>Zm\hhNcd!V#jcd2aRuJfTRg8cqXD]pi`5[-#aC%[ok5H)@Xht6"r,`m!#$!!0]a&%d]^mVuiG#+B#lhg+*V)WGF:&33!I`[ZlBNC)rn;X&OI"Z?<"#.">'(d\E3UeHu=F$6fa8(e@/"%kX:rV6Fo$s1^hUmRri]Ahj;,Er=7AJ876Fl5k=h'(Z['iT/=(=DPKk9g`[8G8"/X1REL&)8TQWFW&6$,$aSJXY=I=7kS$t[E6RfJ%^+;nl>KSRN]Sqcrc,?j=H?-F>k+5TcCL$GI_)9hPS?M&rqU3D@`uKWN0]6,US&E+^LMtmF:ZLNJHFcY3>A/kGB0s]X)Qq6B.LEke%'hrbmWmD3;"\/WBJ`2ZZnG%RCb)%)!6g`DD/\1qMfi*V=$%:J9]T:9&9.\p!'_LA/P&kW;B^6WEmXjWIRSZPjA-'rU%O<AO.0'Y]%,_>FgRZ%Z+D)7si\O<Aj.#,K^fsIR<&pikN=jrUnn8>G:hJ/iZA%3+M)Ui31,$"i%HYP3\]A7:)-<5\ZUul7ns3G2iLKf7^"$;lf%DUFVun!hdg(Hb6uKMbQAfQmJ1n:2Vh'<^"!A8[NtP#;]gDNrKAFR%qM:30[=#4`X)hN2Sq:)_\=2$.lS62rP^$`Lp&nl!iZZ$tJ)%9AfM3_/G/'KIdgc+"#Ot6^^+nR&:`@63D.(mj)!S[(p_>NNYNUJ'0JGL(EX5rnIYR1:1[h/*6IOUcQ0b75ZFlaqY*`mhL`aqpDS#%`UQq>(jA-YdQ&N_@E2l<)J:S@jo6oNP#VgUO*rhK`THftC26").-bj>bEj`gccs++33FL[H)s9W(fdNR1uX^.[VDg*^OR(plqm(H%[W!U,[&Z-Pm>Rr0AMl!Mf+i\1:P)N&F\'qB9$Xhf\<"RSGL%r_EJi\7/Z?SA6=4hBRk/$KSa8RQVLf)%YV6faFCg^m:RU.95tlSQ%p3AS,k;(p-ZSD&io&JN*[un"sG\)kD'#`iNZpADK>JY9-0KFD!O/%fNO("L]@><(lg:2'rR_Q:3STsP'8fM:;i`pG)g8H+5f=T`3%7*.ka72?&L6)[C$0bXdr4,<a1F>;pggZjlW(GE'F76\-(Kio7T%TU:4E3TCQ<XqtS0.^m)GNZ3)'M7Bn$AY-lm'=!E:s_##^K<,`%?^u^So$Cr=.PtGN)kL).)blSklRCh.Go`8Q$5PQX+2,<d.b.82L(j!df/YcBDA8/-pG8Tm#qV5B,NT`"5X3ZP)]JD)ZR]Y!rDk??%2BAbH"Rj0j&CpZqY>ChCAe'@gPJT5'K?akn;*`YiqVn`H1X7'e-$W"JKG8TM=oI"DL5?nne$G?!5l!Ot6>S?@rp"p\2VmXHp@u%8%q(b(.+i80GB.FA^dIDX3`H"dsAe]39Dc^-DoQ-i`+RCe\UL7,g8p=[35f0hPmpV5K![nP$<'?t;HudHhG,n0Z\8=CKP$RGa7;UBf%:Nh&1"rJcuA81a\s6AS93r$2-f5_@[R$F0/PMZnp"PJ7`^]r2J5DYMYkb<ni0E9O+roAN,*&dY=0C2]+?1"kHk/i0pLH!H-SJ)04%DuGcX)RWhU/7Ws2AA#%k]SiFPn0X2K[@l7N#Tg*jJcr2.,q)c;"EA`QV.TKYA`+sb#J]u=P2WkrZIgAuG%6n4F6Vb4;%]PR0gMu6%mG=<("%VI.Tu]X-dDOo-=_"1046l0V^K&j^Ss-7!lKgq/4E\HmX7'XTGdi@l'aTlm.`tjS]ec3rT4]4DOB(r7f`(*BTO9+SX1t67%2]`-eL9/'ZoDrc$T_<EQlQ3iTrnag%Z6R6h1A+O5A8df&*'u5G]=48!!i,?7Qip,dnL+15%C=TlF5].Eo-jC5_ACX",M9gMhA]QU%Z4jk6Q\WG8RZuVa&uaW9XYAksIN'SZDRTP$dHi)(m!-F4<1?&QkQA%E8nFPbH)9F8IS5DE*:B1fXL8XU]%n9f0"\G,FO8q9:>sAf%`^2E-a`la,Ag[M"+CRo\4<\0l/t^0P<ssJ>l7SjZ4f8htZui8SCS0:Gi<0h70s#O+Qn1P%[s3M4rXY>Hio5NHZlpbjimQPn&/u;o%O`^=uLiP9h;:ESa7"qZTi^i`,`(p_5quMgMg3>\XCPmLePmk[Gq+gUG)M4er<ul3mdaCt0-VeH%jc`@pn$tS.)=G=<;sEjJq@-,p%d\iAe[o,!1L5Ll9(K$_@F187(PC.>e,.D<Ld#i%e*5'W'Z1\1VHGM:s7uc)]Tk7`uhj-"t;#'mX)0W\9RZL5XBHmD%bed+Jeil-j%O<jdJ=`gHQL!0PY@[cs-+l>tbn;<.*)CF!>Ll<^QZ%CXUG8sNs\&+VM:hIJd/tD]\StF&#A(lT7%@Mn=%aVloKcMJ99krk1S#?Xh%G5F$PdqDek@2A1?c'QtV*FB]QELmW5IM38I6,W_ZnE&da:nW;i1Ag9[\6,?tcjnUN7u#r4#5!,NE,g%3INj=;Pb54nI2!@HLtAbL%bY-(R^'.HLh4Y137Y^>`>a$HU\<4coKl9l`<op<JS.Ec??AM4#,G-&Qmb15MO!1E.:qbtp9`ue33BL3<hh5i_1HU4pgd1>\eB&RJ%g\Zdu4<DhC`%kdIfQ)&B*&>#UZeiZW`[#R%1\ro@nKO.lIpQ79o0eSh44c7@X%&FK\:Rd"pB%Fome8"uiPg6sLD%)/cf1UYs3qKO%P.g6"K/e)e'"Ba\@gr5"PU1)$iH,u1s+m0biRBb/k*&kmET@tlHM<#VLaS.9oYM;ToR$WdSTRJt#IoH7s-?Ado/&!SJk=e/rV'6c%Zq24ppi'Q8S"Ps$obnIeJ=`6-?ba?9NrsQfN"g&'QOfTLj>1]sTO5#g3^Qdj!S)h!LD2NnHAS&6>Z%3;ZSs(%WC&?M=ua^QfHUA#%cmf'L-$R8:L$-[-O)9Uc&UM0ags`:GV8)7rSU+.=V&ZuljF/De;9Q"hXI),n5aeCp_(UDr?gm1*bE@]_k>n;@Ir3k>%k!qB7U'U-%N7\FCr),)M?Yo=d`Z0UbqR@oX5U5Gpg`T(%Li]tK.=Y@I6VOq0I6i8iiR5!;p42#:hqinVairCfmakK"6"5I,)0%Sooh:q)oejbo%BTCZ1LFH`q*oE`9grrK+:8"s_b=373b6)G\=rZc5R9':KmH+fd$U.r.h1Tp[m6o)7G[auEGsoY_Z*p@"[i$KIh2"1+SMioRFgIq(%P/j=O.lH0/jaG?6:AHsFYiR^&LT(kBmmrIm>S41^_,K[c?=jL^8Nl8?cb2]f>"O)qns*7fqB.\h#Pc643,3*XXp5:FA?%0Ss3$5F%0fVJO'E\S$=TLhZIs^-qS`2FJ8C*BTE!A@F`CRKt58.0-pMcl:TlBO[p?QPmV%t%dk?We;b!u@h_b"^C>mj`%a_2=EkPZH?!4g9Q%KH;@F+YC3#)LWQKEU4*?:TSl;3<\pT8Q#Gp'pj?D!E*1=I'Y"VM:@=Y"m=]gTl=s3c'uJb,pAeM##`[^;2\#D&2-\\RJ9RU5,fWA%VE7C_M)/n!BgZkXaj!XI;8:T&TF(^uMRsScS@JIIYhPa#9Z6*@!/jW:5QD.nMY;W>[nCah$mBhC#p6FLHcV'^.IPR$K;6WIX"D"d%4KHUXBpsRmL^mjZ>3BC2pl1T&dLe/*;o<8m.f,ANJf^a!:_2(glgsLf$ePCD6e%C&%tg8C8Q@WOa)22Z+&l`%IE4L4mLNS:Wo>K`%NSt1_<IE"\L(>;pnj*ut5nj&fH^OKg;h[*f'c$gB`(*1uHk'gD0lqsp*\2nB^h7Z"?ncogW-WEFb&GH=E0:9"`SLp?k=T2mj,=LF%Ll0u-U?El`<".u1'-P=`V[6=UipsI4*0j:WO5G-MWTPk58/*=))Q%$&LEN9^$RchuRsIs6qInESCR[WPdE4&c[nRaHBh%=K-D;!c%:UGuRO#/:THjtKLBX<_TYB#2P\VEuC;0U&2E;4_`)rOU^:)maWc'IjKs"stIP3AhMoM$4V`7C*eHUJBK_fW`a[=)1gLc<5T"]q9*%C,(+4W,i`7fC6b#;.TI0UG7LQ>l1t.(_J4Epe6KA%,X@F:q2?q/Rq(s)a92NVEY.6n4u=W966%IHu^fbdH(oK$J!TqLBrf^UNj^)%'CPQ>\+%fJ>+SI2!kQDp)'L\2P&uc7kUl]/gZaEp7c5/75"WmKAP/d!?.V_8F[-[b!It2q!PX=J&'mVk@!CP>V"kr>3UE8O2@hW$%dmMm:Hp&V^CJK%0e)iBWRE'-Lc,6!pjrq0*-FTZSN]X+D<2ZE?':I"GWfh(_m[HgZ+sKuS0&8,c;$UOpZt^d0U6:7ca<`k\*>K'T%Fe7:4"Z,\.9m;fM@];&7a>>]kF!e%5&rAU.+]CZ_p"c$qks&%Eo[EaL]^lQ"i='_rhgB$F,6%0`Rp=9]F?S;F-D+%,1djb(H[.Z9%M1.Xr7/U#%]&/3tQ-%kMGG!VQ'hh:hoLMpqN"!@cfnmsY&9O-(6q*nnZ^5MB'f,T@W@581.YLV1d0Uh=_*b2p1NK8sEh]6__[m^R%T?.HrE>-7:&38QgK@))8DWE0#&L.K(-;m0F3)imTOACoLW]fqsH`!UfYn?jA;k)drM?<V<s7tRP(Ms*.s5/>+qqL<6$fXs3rVuop%s8W,uq>[.;qb?h2cJn<+AOY7th/4U.QHR@pIe$Yg*5Ye)MDWFTn5W-Y-1bQg]@2eged@#9D1.&AUU8*q*T^CH'Xh&/[\H[C5V/.W%fI4.)W)LuEh+>])$TU]p`Db?_d*s)T##7\QC$-nOU!A8c-cb6qkAB/QfA2Q>OQ.a5oA@=OIr<P/:2UVRjTt*J8E2*TdUat@U`IS5%1hJP4NCLO"&BC7rNcN-m)K*P\SC,F%*9BZM-tXIZaXBagWJHH@04Mjg&]-hqRL'3RjMQnpX,+N8`.K`mRLg9lX#Pu>YrGA'7:K.7%Kg/OV'MReL85=!?7H3;TFKpX`&WJaW8Ll;nAp2Sci[EsLVpmbcUCcn^3Lt"Bd:Qu;7j5I"#uq0ji[EsK+O!2C.F$(GZ"P>M3Js7i%&@(.AWaI`K89$Ye8$PWDRl3d1H,N>l#%91**/0brZSY0lRCq563L_lr)/,'+EYN\nS&*AtA92JI^m;tpo8tn[&7[V8,EJ5QFR6pt%9b/6dnVP:Cl&mYj%V@JLMq'>91a4(Y=`%VBUf#4]`,[ugkep>q/R#X+-C6a8q<Y_Jqu0;X1rN7-1U5&U0aX2B/7mLMGq3*`UF;Os%=-f#Tb#)KO]Q+];8)^90H<AdAOjl63:"[$(3T[VkTtUW(O<nV(VTDl\]:++aqSQ4)VE(0t_trd#-b'F2j(\0o[FOrX*bu36WNYHo%_mb)C+2rG>HgRT`O$>ci4\Y1Q-HIJfjE;[AV.=V).EVf\U?Ro`6V>fP,-scl'a0pVL^n68=V,FELTOTI@?i<HVK:3`VE2k^9B;D<%ab;$]Tir"FRG-.jR&GSYUhls3(1-hK-^'D6Etg[LOR,%Ej:=J,*(N$c*!M?'''<eBO]PP/`GlRr8>$';i/p^]-q,JV.l[ei*IUEn%F,i*#p`i*o0&o2E'$iNEBl`GY>oZAN-4#O6ODqF^`]1>1ItsiI`K\CM)@',=A@YB&kd"h8KVQ=-?7Z^=[U(LR82uL%J--'jd%E[W%nGn/n#r7V#JI3#2:`t;m'g/,h6G`g1%OQF.JHH9*L_.Bg_?12d;ug?'n/qc<*)N<D!sfAJBL#fij`2Z79(,L%?fW!<8a&;24-qj%%kr",#[aBJYGM@jpFS=%cWmop?:5+?>P$f4XR^0q:s$3WI,"%CC`+B3GTW?+TKL]"+@&a5:1`/X`%2rp,5Q_!15Yq`j!*p+%KEjpK%#`:X'?5?'n`-5\)2;rek,<#]2N!N0JiQ/O%WiC.b8"u3X/PD88D;2L9a0"+)D;2@5=dEWG1mr$_Xg2M0etlSfl^$;R,hI1\V-B6h%R\Ei"lqAe=[r'e29.L\ZnO^&4`9Gi0asbncBe3[qQ5tZjc0=I1VJKP4WeApb;sUj0fr!h*5,h\O+KF2)UMr8aT9`OeXUC`/.'t"K%qp!Ieom4<]rBKiPcTfX'G%T@th4="pD!:P:Eua:RG/VVG4$'sb]&O[5Jk\Og6@knN'PE++#LU*g7j3./P_=^$AQACI#pH*t%&kGi%,-+gG,_VPD!>;7]ig$<n$WMJ?)GXGe7A.;ljEO`])?9aO*<l$G#[i`R(_dGd-'PU6cor.o!d$I3/4*ZN>YlW(@M0OY1,At3!!!!"%!!!!E"i7[NPgQhD'_^4uCdNAFW)\V$Z3B2*&/*M<=CmR-56$utPESEhAaOc/_B)@ob/%d^9Q]j]!'+\A^:!Z?M=2LUPfM1%>J<g]%[=^)e!e3s8#t:!7m;5C,]p8]J#Zl/&'F?2h<<dt1UB8FmKTUgX&AEpN93rL!?78G]d9u24(#DQM=[c[*Rm=t;;)t=QU0@=*UQCWK%\deSLVq<L!"DpGFd%Z!jD'?AQZ%Ve)(B21t%`_jCK,sE&Z9l-B!Cut*9(`s*D&CW09]RW2"G7,9E?FcU?GaoZK/5SY4tQ<Bqu#6_%TN^S=l5BguA6UeGi+4su(>7qn-^VO.Z7Vq<-]cttrB!V4<6GUof,<0T8LCUk)r;f!X;EP];FX=N,?f3c'C<oEo7`pjUD92bD!+G[%5HM_T0_%!>`Qj>tApLe+U;s8D-DGtM[B@8p14^4H:eWWfe.#1JQJ]M/Fo^U-U4U7EKjKGlRW6BorMq))Y=Kq!)MGm@r_EnNXeH&!%:ku:8W]DcJ0X!S@CqfHqBY'L^(DQ/eH&W-QV]E,$dZ+FK)EKbt+NP(Hdb0e!"8),>A)eBZCs.AKdDH<J@#cpH82NS49&iYSG\WQR%&8F863qoq1God2Z2%,5=%0[=U+8Sd%Wp:Ip1UpS.dSOqEV^DoWP-4,e;(i@a1R4P_$?iHf^H#%rMEKpT,\*nIKVDS!2D_Y?K0uVF%0S[S.RM$UpiQSF\"*2j2B)M/f37:rCJ0R60/eanG<eg#%i["UDIquhS2Z(hN&l1blSCoQtRG1LPGA_,S8"lCW0HR3ZQN=>j2ccPj%k:&C'EBX]fS1\?sn1BFU@-ORFqZ(*1">8!i8KCEQg4c2O%K_-5g0b1kUKe0[)i(^"'gWp,.$i(GhNcf7`5s'boW=%"Y,N:TrN27B%70"\2lOUuTW'N%DOLPQemTlJK[dufG3rT,JWbFj+OR5'@<gMQ+W(sS3Og9pm/^+V/H9=eTV.?AGn#J8G7JYimS+m^`k$n`OjAXgP%,N]kPPY'H7EgELO/K.CYJ"moKMo']J=a3\pf"k3L__@_c,/&a\^9LoRDgR%;!<b>dT2DFa'mCRX3U#q'6l>G0+,@,r5Gh5:HZI)O%TE'M.V;DUm5X5+8h4;08G^8;l"<kcd0n.ptc@P?A(dL(+%Z:=F+Y)OM'\r<_&GBTu9s]X8]].?XhFmq-YRIe+-t+*+KL-[R!QL6V%8<0_mZ6(@L)X_6?OAV]k".Ak<#,$%G&*FYnMNP[&&?1G;N:Z0tkh]Ph_p8"3W:krGlUBn)>N6pPb6J%RQ7F3BX$dL)FUnE-mc7(Q%?X7V4l\KNN#!gct=hga&&-/][W:$L7htd:n_()Fmi*FefS.G>3AGD.nMK+9dc>i9CE>4IF=LJGVPJ8D6\[QmuFi#Hm!'iZqAFr>8%Jjgu=O[/9QOVEjTl9E193.@bWbs:EQrRM,^S'X[JSM**DA-)!\[eSA%rA^bi:6E'jN2?QqJ$jM\G<6@FOiRT=#:0QWaYAO+gXG(k%6tOJ$A5Wo>_Vph_Phu-"kg1:-5@72YK0$I_7a"%s$%aPJW"ZGY3&34Gs%g(Tk4>e-#Y`;Js7uYLP"5S'#2^[*iBb(E"Tn1`obj&X%rkn?^dpQWDJ5sh-J+!#7f46nh&]AX6k+GKb5u8/=E&a(>Ni_dL"8d9R6/*bA3*r0eeA]>r.>BB!6(Yr]\O;2N"2RN?"+$4R`5q8:%))_cQDcFf/!/_E(Pi)C[R@\?i6PeG!#ZQZpZtc8?G%)!O2s<QR[/Fql("O_P)lII9F2kV_i@[mN/L#$%nl:S"W.[H"rC!a.Y0fYM%])am\&?!\M#RcPU'$p#Z-)lffr.@n;omY(jJrbG&A-Hob]+H1MN,-Ri8kat9DU>$K`#2BW42^B<jok;_`Bk@J/ejjeP47ZGRDT9R%(+(#5l"?rZ9n`EdSH&In46'+P7\pZ(HoCJ^63Ep#iu]uFf,-;\#/>^RkGW`Ch_sUp[YnaX-nP@:qPr\?H@aj,=[p18=FbKAA,Vs-%P'$&8f81J_PFWl,^`UYpBR[Tb,V["1L0tPKpHf=cj2i&jj"J\IYH*ta1*r:G!,RQ=>2`][OFS1;3u_[aT[n3V;frR2]\5-?$l@9O%ZaolsVD_Bl]AR='0mW`2O.iu3O,je!\9V.C71;E<g]uTEn-qBU*`A7h4t`OeIe#03H4VMgTrM]^\iq<"B?<_Lb37mdKkoYDoFsq.%m)QQ@&k&u.[OfeUen!Jt9T.l'^S\.Pi(;RoEOGa6ITB8;J!SM4AMH`[>[r[fHoKRh-#C+iZ(,]p\9-ENL)js,jodOBl7c8OeV<_C%DejGkm)UO^op\GOp8#h*'@iO5o@]G%73M?6_;c1#X<q"Q[#.U>2LpAtRYrmsDqC\]@K(S!Vg3D`[!sP8rAXnr!bDN^jk\>\ZCGE)%*/Y.i!Ro-Ym[3%Ga"aR'.I0tQ/p9UCV6"=[#,)-Pjf2$da,]t(eX$%q<M&-Or*@O6P'UXgVE]7f9pe"3Jn0u`q:UTdND0SShhVt*%&VXu#2LmMsWgj;2V!'+VJDE6&!X#?^Is:)qo:e];Q=2UTTGr&>s/3(A`"GS6o3GQrIIO2U"Mh2-l8(u8dB7>6Z#%dr!,4=FEFA-7%Olf;k,Hbh*OkVt/Y68+!/*"36ePUR)CVUKf)hTVf>&5lU2sm$E.*5\NG&;^Q9fLk8nLoNm<g+=8,u[.<@o(6$(bq*D6PClN^M$uB%&0'oSo-EOD*Q%&'P1?d6)H8YH21hX3[XL!!S:HY)R!?MG9/uTH.mii>0a1.M?/;KB2&4j$GW*]7ae&tkq#@42+%+1c,,J(sbI-I%%rmODoC3X>=if_T\?\W6:YYng\S(OVn`mZB:H4#C;T-tQ<3uaJeEG\T!oeTatPl;@6/Yo'IrjA\Gk>F)kM?fVgnM/DA+\$'u@q*Q=%6u=#0?4>Xd?[d7!+VL-@-b=QgPt`i4EGa5:h?#&A2jI'Yh[\4R'!d>U#&E]KjAe%J#Tc%F39cd"O:JKS!+ZLt1\r!e'6'%2ectlC%jL>ao=J%HdA,!mCc/K6T@VP8jEaC[(L`f5ZKp.Pgb?7'KK*&&Nhd8/8kfLS2esGGLl[D/T/1AsfYRj4a(/iBQDGQ-r[!%mL0&rtY%&**"0P;P!B6i6,_5>.%9X:AEDFq>-[4^;J/CNj.i0bWQk+<L2MchV11b>?Ij1FN"NY8']_OLa$P4h$a*]l7nST5Mtf(Hl>"e@2!#%d(PU#^"*P6<=-t%>`#o`]`@IU76;tsb@YZ8*cPWl*fMnk:0s8!5Xn832F>723K#,f91N<)c(P'f:NQ?Q!FPnUYnqN6Kf3sM6rQQ^%)oQ\S3U+j7=^)V^fn6ALUo8r\`IXL]i>*m(I@D#)&!ko'$Hs(K*$l]"6;_Yk2;!?SeopI%L#9V/-[R\RqfX'LgZ>U\Zb_@:@NBEJ%+R/&M^Nkn5dNV&CgCjZm.^.T5TX-$E>?OZtr^?A7dN[YFX.9"CXF)f:*k+oLeO6qX`Pct)>B^asg[P5$)2O-(Nt(N(qr/C[$=&PR%-b#aH+AQJf3;5Bb&9Q0V\hV,K$_"ubnB'%,Q9Pg%8/-Z09K_&hT'9AWEVJ;GlCpQ_hNj:).tBLqHf,/s;r/:)8K:.)pj_RSU,RI-%%WL9em6,m(eKt2k3@/FmiLu)2bQ=8>LuKubD<Acn.'^qZ-q#7EDM]L5Z6._t+_IgG6&GucW2gAacCRQ4mPK79@<T*co,S/H/)>].%>YW(Lc=N`l/)Dhu=[J9b6;$Q)&l(=N4%?@kmYQAUA+!M,CeL/SE(j/$Ykr5$c%=V\<,>UI>BHPVSCTapU=D:L[QY(@)c't&_N"$@%F\pIuL]i!BTpVQ1T8U^?asi-mF)B8Lhg]t.`K^ht]9^I.524=J1/;^6kf#g6i`DN&ROt@l$2VfQ==+FOgdi9pWm'2+'rPLup9f0D%/_2*@%=P'^G$XCCI3\ZI"aNFln-gD&^0!IsZj(hVmWqB?GaX+4h.PW+S_s`p;+,+/eIrn"l)0:2hT)9Z%1YHW5_<S2$rQ!T2nQ3^%6Au4f1"%_S!kD7OT9AtF(Agc`#+<^s%MP%nCTl_'bm6]t!^n1fI7,M9ZG753M94hu:jBgpolNL@;G%4;fq]8S;k^lU$9/NsVjU$M%RFt6h2@c;\fY=Ef%h@GKN[Z.Yd[O50aMnTheh%stao]SunH-n:nC,BV46oJU(Q/?kYMm^Z-n7afLG=M9Z-9Ber[c6FZADGO3.db>%<'BP(A14HYp_HULG"g3uX9>>iAqQ8M!Pap?=$uW2QT+=Wqd2TU^JC=IRNA)#Ks@VSBQA2i>Z$Dh\H!hpb:=8P!kN"::EO<;bP!?G%5TU6a'F.`B*A@SMUCVI<XK:`RQ<U@m'7TI/W7%.>Lt"GIaX%'AJ:,[Zl@tC>BbDFXLWl.-:Y^2Po]-#$O$),cY.Rg;=tMa`LkQeX%@?WCN#.+0<>50>F]1sZ)i"3<OZ]$NfqG@I^I#Z\>aTWY4LLnW_iYLOnH>Ic3MV!\nm`HQ.:g3RI%M4)4KPUPWaC"E53Yug`XOmRA%+,hh;7'-#qBA^$OU==_+r#'lea).O%,i\02WZJr!?7g,_OXE-sr$KG%OTh2\'.2joYK/#oFV`"^=H9E&IFL?HW!-,j4(jcQXp+0D%hn@LUO2_VlfKtG@fJV'*c!?B8i(W,4<u2Dr+"W]c=2(gs&0^HAXT*s+8!72'EaWo[7_YCZ+h@+/:"?qf+=h!g6C-O#/sHJ,<R(tu%ZRH`BiU\Z-E)o>q0'K?9"4J@Gltohrbn"P3S(I-OSHoQU0\mobH\'$1d,o_,f@`H<IR3gg\ThcY5<;SB/YOZf`0GbHZ]3kSYkQYa%n\cJZ+(&Tg5*uQ7"W#T'%gJdmWRFqs-C@a:K6KOJ$Nd*>E-GQEO2VNa-lNLP\nufki\m0DO=]9?j<N:Z0@tGe02.<;FJOgc$ll6X%1A<jlh&K+gKUppGg=,L!<Lt&VEW"i%ZVf!"^R=SJZ.o0]6_FetL2'-RA7g/MEH?eqfm8QmOWhS`_/knj@74^?X=tT,+E=O3l91fq%-O9-;UKSCe2TZUpjmQP)b@!C$)LWq.8q2d]Z*m`!bnfn#DlT<WMu[^1L2XiD809^+"_oW.ikBiO7_6IhWUV1\<do`Gb<%Te;OIAI%>p]u4Sj>k$.\B7M#6=*t*X]euVP5eRH=@Pk9\:UR6uP$uVMJHNmOUl&pgEVoUDX>bVrhP']"-`?/>[Z$e7nJuBD,&.l7%P2Q@S=k%HGY'7Fr_0':4*%XQ7tYVaM&K"H%_SV8F$INRTJX$do[B%P*o?B&'@<X]R.#G`H]N$Sds8J(;qE\a",,%\'3A4T>e"V;5Ue4)Z8r)%\hZ+&0QfF`q%Of4\7J>f8C4F=EJu.cf;V-ckK-(1;739E3f`QYalk1s?LU[W%YEGe;:*=Q"=NgJ6nDf%6\C);4?5i.7ZiNb0u>C!%qA/*+XaT(,Rd#$%`nBb2Nt>k/[5+p^0ak*G6g9']6cmJs$E,0XcWgAY<RbY3_^Z.JXA+1G=`h;kb&d^$VISh-f]][mm"ORI+iLPl%4q1D:Y&3F`ri`Rf!jI:-0UE7^+]#Y9VVdGcQR`0t,i&4I0/]Ga.[GTknU4VtnlSicXpPPQST8/]PPukaUYX5IG=G90.0sRt3sMAm%[:k3Z,/FIL5ZI0^3/itj)G?t>"QJMj8s;ll;H2=6U;I#AcsU=h'?@u=iA*Q3KVFNXW=Lf?=rRjEcS5jE;O5:X,+&kh2[GO8p0;d]%SD_5md)$gMVfGLr"Vp:d)cpM,)K$G^Z5#kFM"K`nP7H]-mQd_,9TbWe(fpT/jBs_=<pDF_dT3qgMr3[qc/Nd\Mq@+n-(:D9?rU;]%0(j`KW%.l&,m5hAK*Me7XlhKc5r,k:%38t1$*/X4=S"]>!OXa_1hBs;5WU"A!Vlb(*T3(42MTD#%S5i1"5gDr"!m<8Hb:ak<tqI0%%VU2"!2@#pciJCThJ@jCe,d\tUHF1"iV8j.=7Ul8Qk@T?D^C12E4"X(/3sc]N40gj%_s$jZ8R$6D#u-r%?SG^`\S]U2$:(kD^G5o%P.b-h2?Sa<&-H+pbQ*;8-diOj]ZerG=0rQsl#li'#mAnGNI3b<O`^lD:2^a0(JoU45>2)^!-aR&oEBVD$l1ON8shS,=og[i<WTkM%RM<O@=FI[4&IKZ<L/;hO!Q$MYl]#d,C2Tpo1n]dN!bEh^@k[qao*+e\&L\o<p^&A/=N?FLW9cX)W)#\'Xs%ns;U*n/PmF"ad*6n=%33;JIGST'GS*A?Y_6_b/N`'#21.kCn')0jb<_"#dT9Y/-H;fON[bbalI/!jtlrY4!n,IL0E_M'sj_.RS`Wp@ET91$6<5g5Y6XGc`%<`b<?F;<hnU&'Hj1U0$<[2J'ioR7m/f7H#Yh)0Fq?]&o`\%bWfnMdpM[k*KEV=*(GG+Q"CN;gI)C+GNDg2D-+,"r8AfeD;SXQUA7%]GckYB)HD&7Eoa76>b):LY#j:/:o'8>/0#@.;XuR*3n0tZh&/5SL'p*SpaK<G3+Hg`jt!Rp)Jt=^WM&DIPYWnOe9<<^$B^=3G(>,%;Dku"Q9#je-5s9`8nmTgOB@=TqI=TJ6cfa,#ke6"S$OtgTSo*j.m]*qgmf5P<OL]QD;6%U(o9Q'*qZInmtfblcU3"rW'FdC`*')6%R:QnkR&*3j`(?IM;:[@0q]h8%M932X;hQc"VYu!,X0'bTcmhPQ<]6j]b[Xm,]mmTR1J6>de[]ZJ]RU+N!uhBP'/kflmom\^oPIH.%h/:`PXrN^pHMb.R?]RNr!bbQFa3u#uCB:Y\S;GD*g*L:BiUH=ZdfHT7194iU?c.]&Y;t.rjC7o&7Mf2l!rTXKfe4W'5="R\?FMZ:%F.^Pe4/a+SAG)eJbL0>Irt&RrA7LNUZ/_0cZk;r:[0q8apD&)bg?Cn[ITLOho=0g!ps7ZAF]2+&p>eo`;PCePK9"-h8re,Xe[VnZ%$)<LA=jIbWcO6H"]_7:Liq-sdfb*Y<Q<SXbN^/8_9nJu+]<X.T$.rDN.,Y+g-)Y,o&!`l$T4"Mr0$"s'apn^,Db'Ba+"rS9(-r)r%g9W8a@$VVRr1q2cP.^^kpi"6Lr*J:db(po0NcJ#8$!YKBe8\t@6:$d^RRPZlj"^X2fbD&0`7+>"G*p]Q?'F6h+>&q6S0S9kRHu9e%OR%[DeZ34r#io)Z@dGI.<rpm7[))Z0/fi3e5(E_%;gnSAd12]A]Zgsj#3"qsF.]A7F7IeA:Aq!]><1'M`g;\GTVN\.&;6A"fm#(M%92=+k,l9a;h+A6%M)57T0[#">q8khfM@*j1Z6a9s#%Y:bf<`AtYaC%e(fM;gG2m@]i!G38k*Bd;[IG2NOL*q;2=Vp.^hF$F**1l?%cQrpI,Ht)D"q`BJAcS.B'#%:lM]jNT2h&W)Rdr24*B/VnS,lYQGDYqBW#>blLoM1AL7S$r&cYFbU`kN`B@ViUEd/$S;\$^HGa-"o%cu8a5$<&0O<<ZouL;u!;iDjScW=r@7X$`n%m-Vf$d[!a/TuknR*kbC*m)n:^5fIb8HO7>[OCT=Dh2I?SdhDIhd)IC5@l<J*Eh.p1%5Ul3,5UHm^0SE?t&2c9_0GG`4\9S-#"a?sm(go7Kho3Vl1]]MCcG7>_M^qjeMg#I_dq0h%HY"W2YEIoge;9-lGtSP?Y.B5"Uc[RF%<.jEY5TAW/QNp*W!>I?]?4CWl%@r^b'je'mjLOm'dDVKJS=mb0!o\7k,dJ2Z-@HCET;$Atn3?m!AFJiMkfcO38s>O'%8)p6&u$>p%`9V-^>G?ss1'Bm/i'Er$Q`<C)G'r#;KsNq)TWXPh<'A7u;<e#06VnZJO%r]0^5QS8*Dr/%`@8`9735e-j(>@;5YX'CJ#+YF%<&0_%kWff+[<pa'&2,5K=MKE</&7f]Ir"dZoO&EEBVHsWORq;V$P`aSaC!0f2b*FB902*uLfkOkOJ>)2B#&TA3-#6Dec%2bP=$GWIX*2(%(T"Qe)rsF`9dmTdg8HbC/X6s-C3EsGTe!7aTE$F09o(n;7#Ce1k]BGYL`A5(T737EW1/CMYSAo6-j02\;5r\cnHmpo/dT3%-uRA>%'0aW0E@I%t3:f-QaQJ3AQr@;MI:t+K;>)6;G;<9Y`n&C#=Ut[O.t`k&5E6aP#ETle&Z.e4<0$!TYT++NSi,\[6f!BQ2F%g4=;>kh%(RP;6;A];Z"3[0_b*+a*rbS/-8YCU-G/fdoJ6ZR*0L<ASLe_e:lsFIs[hACjFHZDrW'fPQQ/d@f#=d8I!PBga4YUauED!LT7R*'W%L1P7qAI-CsY7n&p'gcY=at!VDb1aH-?&nI$%%QQl61buT]oTo@i'P6sZ<HpeITtNsX\f.&N/^PLRte?'Z=I?3D)#-'XN`M3Zt[GI%H8;oWFerSW[QIeNN-I5]dCQ-'5T#\@D94UFh$C:>B)N`V'nd!)S\9tE-bZoRSE@i`K'nbq_JHmHPK3,FA(T<X'7`fPit&0*JLle1%qopIa=bFWp]O\__3n9([<BT%RNc(ul;P1cDKc<_?Oh`KV=lJ*SB^]<beI6C9Chg)i'$D)gZE@,6S"F$ud%^DiL#0WuJ!iE(;ZWfZ%+2CJ!a=uj!:6H^(s1d+UpHR]\T+*8:aS0ErLP6sC-r`k`$2>8NF_`Qm<mOX\YmsV^#A'f+iT*%b*\.@h<^VG]SqqVTe91M]<hoA(%It/_Q3k3i2bOum_,N5^M-PFduJRJ[W.1.rS_lX(*4e=/PclDmJ%0ee]rm+RPeb@&HeT>:PFRc<O6JC=0bBTomOU0d%p`kt57*82;%?DHPr1-lutjS=f!<hiSuDK%+9(,NXDkj?uZG]7?AUta9c$&X#<030;'Q\3\l]OXc`pEss^XhdB\RNPK5[>[HIj#Hb7BR9>QG_I/7%_H<(Ul+,-=1kcYoE4,a7J+Z@S5&WsWLfQ"YB9kOA.PMS922";47YCt+.tcc`<-lAHU4kjrK\E$(j7A.^SZZJCclC2<))Le9eW!I.%pB9s#[Fet!YL\R]AB/hkI'/d*ET!%?!]lbYJdP(3i0e89&YYh$@`AA40)miB!Dg5$;O?3&TC@*c8qLhe6(6#$A";i=#CUR'GqEm:%.["P+8[6L3U5$0,!hdN,Ag2"9S7BjI7Bp*lh2tRTW&&uYM6OH)OM)+?BqTb\8:Z@,Qh(+>^HVf_g=oR]=pebO+85cN90GlVS!Ol@%K.3dLjRs$Z+$e*X=0=]dS'>Ms<k5IM)I,)5V$V5Yig/8'<R;tKjq]/Z`sK.Sb\$]C-DZgp:$BD,)j9]!C5Bs7mC<</d:u*6\c-eu%0UM\M93e2J6B/f,*m-7aL>n9Q&X,KSP=Q"+.YZl@%Q`G"h?KT7j+X-+HD'i'6b6Z+L&4Z!*8?,0%Y2sj5Z!BVEW?Y5DX;\V/6.2V%&>cKT_n)pH8>>cqH6,E_oOJbBKi#H?9P41(0U[C\$,hQTR:]S\[AUOOl%<&#EHao9FEPMr[EZt""Z[U^ABSFi%<_lW9#$!fG*4OG%jI[?.I,uUhXOJ84X9f;q7)0dpR\-(3&5YsV]<pV`&DI*4WFc[h.)]%!I>NX%p3=]jgsGNl`4+U9dK3:J_\9EMZj9m^2gc[4gbB-h%5J0P\!EH<J<Dj].O`?CVn!#eLaS,H-NMB1J5b\"_\?!LJZ9[(_J/&Hep\69tgjc:"bB&+cc/T9Q+cO84'].&2(k2C8_9bAb/.V^P%7H*Mb&[LsRO1Bi=k%G;ZGUa]QKs/`mJ^AN&jqC-V*\_JqeC<GA7XU"tP#l=-@tXaSZ:U9l=LjY9a<VR6+SWUgGd"jY;h<fYXM?Yt%.nm,h4"Eq%Ms(V'O`HB&S[UVAm`4Vms(?+D8<Ou&^i3eYj-4l5k=;U6(0RDD(HRUjUU"KR1!LR5RRbQ8koVS9'3\io3KWCf)D<<Q%J?r191Bg;<H,V5L/\p]Igo.-LgcrGa(<CI=dQkm1H^G["%GrD(nld\%5=9q+Co0sY0?U-m49iO5PsDK<RQAKJ5Z1jB282mn;[j:Y%";l:^Fa&ji,0YdkiQjQ/R./>B(Dm91@geCj#GY.K<X@epO!mkQ>ulIKF/-u&=s!]U7/7RQ`82+R)'=i*enq98(1FUFV#t)[Yg&aV%1>OCiC1+pleh_5>adH;5j[^Hf[tC.oR>kk#?DljfJ!Rh%SHjL5S>7V'2kgWJP4ER<]TbC3e`b(Tk.pu:SKWNF(%3H?\)H-dZL9<j%m$:>,3)nc\2N$A/mELVsJuELO+WCp%#2J/JBuas]^D8Dm$7S1N(elH0m<?(Ok]cV4kb3^)V6H"#@c)u['l84F]*'+i#P0p7bBW"+%[=*"91tKCOYBLo5]E=Nnnf&]Alm_tc7Wt@E1]bF-Oi<<s4]i8Q;f?n'!<X4JMQ76^83C#%aM;2?CZ>Gp5#G:\jH4Mtj'9fgIngLs%n0mW^BtAUUl7M'4i8N^pR921I:[gUpd''-t'Js+4Ar@i,#SQR@0_WO<Q^Hf2Ld)^;jU!F*(B9eWr0`=9%DP5&OY5)?l`<ls7Wh^S%+7RSB@_l\ZO`(J(@+kQ(JsT.?aRpO`&b,WE,StGSBDC;,_a\V2a9BH(]mcF-@C7#F`'Yi`SWonKTH(5dfd]GW=Do1,p?bQNPl[1p%@Y@VMPm@"n0GsJnBKE>iDXU(O[RV+EgCckN;_NIh(+$kt\BDn$>.f\Y8P()HH%gb`]&J)t3CZmbk@Y"mitG&R__AeB^aPG770oB5%'6cY\qbA.KnPUkU],N3\;uup,Fdr^]V*cH2;9br-N.i])NdI4O:g&BiNdPQZFL/J?h`OCWWCW4<rE[b"9_#)77)D0I*4Q-jI![!C%cp1Aq6$U!jKhXf&[e?WLR1EOI!Xmq6E&>;odF-V8Z2/tHQZ2aC*99T!$k#VJ1l9bI$;!(Ad#%>B85IXcc(ugl#*^*1:Z+_=,3JQ1%;u794'sej3J)8PVfJ4(LM>\72BetLAFCO%$;1Xn024mqc>WRJ`oL2b5"CYH6AX6D$Z&2A\@*d8Tr!a#?kQ]N@9#"G]MV*ClF<DGO%<&oDdGR!_Z8LTGVcnJS#,Ta"%l%7^C?U#lqgJJk@#c1sHB]]+!7(8irko8V2qK";/"lL,q794*-]kW,&,CjW#OkGd=e&[olKKteX%DT<bK5WMnU1Ro6HpTPfgYUHFU4.$eP1&`nHgB7SK#rZq#IE-Vb3G\a'6CaLec-ee>6,gMiZ)Tpnl1SSenHr0;Pe&`9N*9'\3&Z\7%MWe2rgmE4)c?.l>dl#be6m%*P#E``Y!kbP+F,5c<B^A45@7,WSh/q-&+uKqr&+8X6f0h+Q'@ArUgd1E0Iqf*(HdY6R'h6I]H_FH7%O$($KCt'.CDVgeKR%^>"i^]rIZr!)3Cf^72e"N35-*sWUP$'j8gLMg2bg[?`Jb'LD-WV-RP74N.X^kGi^0780r9p1jN=*"gN;J+H%os<9]0ql'#)`/s6XF&T$aHL%6=G\nu@='c3>BX"^e;[Jt8[B]<iCPYf8H)]'=85(O$c>jfs8<,EW8eUJ(H\d2(*0:+T_N`hp<8V*%/G:isM\&8+_E'JpZ(s@Bp@<KIDdrE5dK=.0N^mR%?#mS1(/a-RX[%.a:Y7Sl1CQn_5rT>"AKb<&N2^2;\<BQ99f(9Ph+@J\=6(@Z%VX1/-W++osSEB-Ub#<RDoIC/DII]00KDoN)8\kWWSVr/`pI.((<A_3;pM/>XYGU]=IOJmN+lAr0$>Sjj!kg&o43+;a<3f"[.[`TZ%96@1n#g>V1)6t.$n:K/&^atIB6]<DK3,QaS1(otZEqcd=\St1qSe*=6Bi06;M$OWf@6$L#&OTE0QoYkfljY9Hk5.ddGR>O62:Wlm%PQ'`:3`2s?h$&FqQRP>hMJ,uKX`bY>cQL7lAQ$UH5b,o^Jr.V.a+B?U5g,Zd&G*8UWlQ?YXgNf?T8=N;C6!,eqR+lF,)*M@jrV/h%A`#kb-*Lag#+5q<)W=s7Sj=I'/S\r1_Simt&AY)DBm@2=N6"ud)'d5f"<T!6`oO_`,13!gn"&OY"BBDSPJ;0go21+:CT1dSa]m^Q%nf=CJMI)kL9n''4OWd8QRFpI.GT"`Z-#"P#-AGEG=f%=a`V%D#3Z&%F@gC6%lFKYG%&no?]!n'2W0Wn;]'0?Q%`@5+L&o$L_l\uR%()%YLA['L`7/u=')g;?A@"T2Zb>;V+6[tOj!*KSM:flHS\Lm-o^WlB&6BtE,2_fa6">&eqK0A%XK?*BhUZ&/lF>X,MEm"?7OL^'j%%:RrKLN<^[Y^9!-Xk2FM_Xc&S-*&GffFupa4$j^$<]PA[06lL)#Zp61E,5oHXp'%=Mc!*=?Gq`%kpO@"X"mUe;#DSE(,UR4-AmKs%^:i'LMi*kG!L]s>oIgPf)73(dX:_WUgZ9(VG4QJ4.5us?!5T#4W;g<&5+4U4T\pB\@1_Z/1<nVTV]6!F;MOas@rYmC_E(MPNQ8,X%T%l@C*/.01RnXE-ML)VS')n@'*Ofr3F9:U4.04Fe\!'Y0GZS'OPc)1pDm-4LLi+3uUN>:7Me9$cdC<AKU^db!AdG^dTp%"*`YUk4%,Ea)3ird)E>U0<nGZCnmYOXU3VWP:r1EdYR7#/AV4sOPp4Z"ga:2(kX4g2O&gQl&s"Ku>[%l1+#=:#D"2\)7i/u?O36\fD(f@1me%BLK73q%CWoPc?&ErYK@IX/,\Yj&<rGQFLn:O=++&KFsaYnR*JYL_of(dtBRrHcd"!=2p7j?T#dA(/Fr4BeA3lJBUjA0.e8'6"C&[%"DMO<nT\b^GA1"UUk!L37qi8?q]Usqp`1<UR)9dr,/)Ob(U0clk*?Bh+hDV=8=8#C=t-Y*Aat5JV0b8E(0'*k=;:7IJX5/i+Y*RI%$Z>.^'*X0,2H&;>5%0eUW%TTsaYk!$ChVdS0cbN11>V*)2]4p;+XlkX@7!8ER7&<!HnY;V,h\,ad\^G"?W)B;<nb"%`UA^@>Kj"!%=3hT?4\(jleXn>W19Ofg4!^'c"kW0*eCH877;UfE)lfe)lj&iTfJ3WIJb;j\i'euTV5F!2")T/q_(FYpC-CFJ#?P_u:WW_6X6+RX%7aT7<3_XEeC1:JNf!&E;@<EYqX0o$B>,8gg[+-sU)phCV<4I<,1EA3P4!+C3[j1;9&ScM3PX.587)Hn#X$DcK?(a7X<%@@ASQhNG%'V<>mTBUVTl,""f)f*/4&D[VD=6tcogjCDl"B%!@Et-D0,Qb\:J5u3YHI0,@V?'2?/+WHW=g(XI);"Hn,>9[U]l2_)*,bA>A5KAe%I4i^j7`DM!NWF5B4n*W.@9`l>[Y,5?Z/33N;-M>f7Dm@g9H`l*75=0&EP)5MG'>$o`9I*"[n[t&h5us)hX6FnCj+9&.C"$Oi+MAN%\96OmETaR;4g,qlBk^C0>IG=49e`*Ljp[j[Tf;qsh7kiYi4YfH#(_0Z_WH"M2r_brRlCQm@Q?$@B\h&XD?42rgfK<U%.4,qf>fgZ%keoZ7?*C;_dP?r'HLLbK\Vm?7TL"_d[hIe[j5j<:nSJJO95Z8ho=tgGB?)VRbIHY::,aA:VaZX\-JZDu\h/FOk+_=DhH%\E%Xeu@%Dn@oII]G$cgCgOk[(',Lm9OG;\d%Rms$W7>ccPRG75VCY,Q;I:2AENp"E%GPUm]Qr:hN04jb1OUP\.O^('3_BLl/pjmS`.g!=%TC%D5XKKet5ZbI*bt8]$1=T!qFRrp'<G9=PbXdc#E0^+NWI@g5(-RcN1uQ^_KGm"+O%o'L0/fU/0[plk89gU_Fa;]GZ=.\q5R[@152Y%EH;M\XLB/YA>qNZ]@;Ug/"Gp'0ZBne@n5KXjLpF=8.%YdJ&O+n2]/IA"QR5]8I\SXfCsq/G849W."8i@Q*Z@>Gi[6P0a1,.ouC3M%it?>^/'*,a0?Wi@RA\`<G(MqdU0pSqa>/snm$noLW@bWES^';prJEDtcPH^7@ap=>%rD@7rTSFYQ;)qpd]5@"j<fFomf%["?!&<Z%XDUnD^R$;K6C!heITb^PF6Z;h=F`b>#+Qfj5"I@2o7IohEg:c^$VHTE3lm7\:LMUBpq_M#;(M^SnZK..2bj+qbWHW]:?CV.>9t9r%qq$s,gu?.HT9IOrkJF<p\@l,&"#2pCEqP<R"_">G!,k$j1aY@>>!beNC2jo'DB'^(*cLo1I4N5@LX+*]2lqYmJ:ZmB(\^mI_=FY(%Yn96:#j'('qk;>7?9HXD#d!WNZ\=,-5d']@=rp+.(R;<pD)t_mT!4PVTG_:78aP5q]q`Qi:(h5UHU0n`0GHIh;"k7MUkh7fFu"2+%+O^;5R[_r+NEN2%;;3`U+b[Sr`Cc>(=?4Lb[?^^sJ-o"7TU159r\>@<"OsY`G4CZN5-P:Tjl/U;[5)39dLABIk\u1Q"OZEJA=S22%!XB*l8Do7_o<LuWjR_UB*gZW3-`_ZV"ksa2fO:YWNX#_s2!'ECCp>ge%f'dace@OE//lKD2-o_sZA/V>_I)%=eJ_o=1(YWj,i_7N%S=*V7<M50ZNbbXE@`MJ"r6O<Af(t6b/t5[*Koe+Q:1EhGnb/9Ub0=VOoijGc`<GGb;WUcU1,`u/,L^;6!el-':>qs*p#sSYV8ah/%fsCiNHNZHd1:J@$";R>ecu1n52]WNb@>lGM;3G$.gK+"#`kf;']93dRM6>jIp?EVTfsWQn?JKG+/-RA^j5^,u3]9O[O.I$%dCHC$%N&!(qbZZ3b:Enpp4DP[_TZ8?X*0G[*Nd!a)%V5>sVP(.(l.%6qr26mlrQ%8I1O9XH#SVe4:"@7V@h)e00gEHA!R;us2b=B7UtV\[%B'W%c:fcMTEdPpkilDB[l`&9kq*F^4d!?<`!t_7d=:E+\m^Qf1UTZ6p_Wt?Wejh5PP%GNTZ/e5U5X`YIT\]$#OhXC,6UTI:!h_n7%ppQN/8-#tnh[;k\iHSfQYpG=-_"@=GbQk1WC=pnKLJH]78U*c-S)Ukj0u>"T.Wuc1Dr7CU35!USs,W;1^_XTgIXpelZHPiGI<^fU%!=%Y_Z[(uuf[m>#.s]*U\8%1(=Ham@:LGK32"H%bKc2f0V7-G[5`dQQ9'#4giDATGeG-QVbWR/CZ<!ZRB>"J0_ueTE&8mhfBdR:#%.#nlI/5.5h%8AGF7=!5@U.NfP5lJVfT<oVk7&M^2SgK-gHgHUOMI#k/DRdb=E9Yd$g!]r_2ZmE<"4i8M)"ONi7E_*bmH/*dj!#3d%+7KOd[L_P@Kkg#lcW0=R;3!WdqNB!s7!^h9g(NaTp.PZGXR+h_TkC/Rc9'k60FjM=eGV6j:r=O"ORE_ON9N]tUM-*7jf7%dF!f.]%)5a/(>_*Um4:?$0rn/NO&HS3\Lq-a/s+dM8;_N1Be3XsW&nD9uGj/fmpP*C-ooHJ*AXD?#(ioL/&::Rq"(QoVkn#c\I]`G3ZK"Ik%/Ve]P>u`[ST)lM47@q=[^6s%[Su=Y9/JLuD3T(\2L(Iro+(IfZ60(*AQ^+DT@`oaEko4Fd-.HO2_EFY8c6C4IUVJI#JF.Dm9ksl[%l0AoVpUdTX<^REH>A$c`;%!ME)PY"-_K"X^lm_=`9=CH6f?A1P)YN!M=UN(sp/Y=-J/UYU#o4+4ao5OZ",;60`9)&"Oco?C/</tl%\OaUqk]"POWiN:f.4'ECXF>15kLoK$-X9M^O7fcE$tnDnG5*S,Vf+Oq->2J_/!0;3<`j3!CG[m(U'rt6JuVMKeQpmNp$NnamX1(o%bV53P'PHQOf;s#0g#a\6><O`!&odpP$WZ_-_]Ie@B0T98l$k.#'h%@J/=j13TYFM:jj6o=M'U@\[k:Dg&5;GP_YD:D?L*WQF7-1+%.#L*21\"Gr+Y7Sa7'K+,#QHqTrrS"bP6Y2\?9#oQ/hf5ITFV#AbE7FQ\:SH9#=U;@Q%=KW\JplSi4.1u?6pr]qJ0gI2Dg5G>NDB4%lAsEh"-YQ?dGlOJ[F8]E?TN0Rr:*#7OXKc?p`HY0LEKd:X]#)F2Vf6b,u`lKr1JX^pss\\'-`8_HfjFf&st[5$n#7/+oJ%X1$NZ+%rY*mmBij:VlMSsPs4ugR+GJS!*c:!CVi&2;ElTKbSFM6qjAI4YJpmL=Zt$B(0m4Cio%Cm[hM':/hplm;'AOo[n)j[oSa$>M5,h3m%R1A!^i"&WG/NXYLLtBX>4;)X4Z8m.F6?o9;``=^Tm\$M_H`,LmJ=tb^Ip4LCI5`A9FC<d#_md"$eoUbAaOVi6+CUV";(M0eM'\1N%6<RoNOHNVEU@_h*BtF_6a;A"MGuYofShLC04EHR)@A]`VSR7T'!BDoF*TO:u+VtX7k&R]M2AM0s:/;K`G8693hn5J%`@91HKC0<r%aC+-AF-8?g+[JOEAIo`VF5cGJ*g'SmLI'!$C'bWS`_i3]-oE,XS%lKQS-`8_%[$aD,s)i0eMQ[o&Ro$9]BUfDF.'gDDHfoO,<aAZ%Q\[qVnl6.fI7jp!3k6H2*Z7!_L#=kp=?$<Jb/UuD\][,/UMtg5C.t.@!*.NfSel:5>Ve#sH^.=_(18pRi_PIiK#GaUdB13Y$0_p^%(=)gJp,?/8%[>QZ4HJRGO.lZ[<&p^T)@EL)-jB<Dr\90G/]^fe*%`jseXrK*4E9?]'RkJ`\r-X">AWHJLBU?@@XS0,3uOha?B*gb%_=!aHa$u%`[mC1Kf?U>tO/oA&8f5m38dg[C\\lcN6'0B";ItLB%ALThKa:>\H+1M<L'Ji,PGMY^RpRBQ^mn(gQh+@94k-=`Fl3E5%JcX7K[M:Gh3G?%WA&,"]nk5t8$5`tH\jn_2S0DpWS"\\(1i\nM]+3b9/7<ERAmD[CV8!_=%I6(\$CbhSaoS`Il52rBs!?KIUPu79%bd%@U[+\:*nM$4(.*s='QZ+u6V&p?"=]%$B^]uk7D\tdk_kJ;'9=S(cBgG1d%]Im4)\OQF_.SLO%A-Xtm2bb"G%D-L3jIYY`Q\CH%X0te]cm"L='A<Zlb0@Qd6>rWHZ?Gs5A#@-JXcZbN:>?;B>W<G*X<tcBqP>*OR9E)2>&#H=EY=-NA9TG,KKt(&XoJ@bd`1A(r0V0<%&ocW(m9eU]TSAEnLG$G\doY4,IWI2Vg75L.5Zi5[fdR_`$<.nY@;4?s"E*2>*+rY>F'+"Q?WdJdN<E*<M)<QlY&1!5<*4'.(r!fe%3gEQ4T>*`2.4E2OEL%,C?RWg4Am!5g)pCl1Wc_*gMSYt,Yum(oPjY<GU;ot<@h2utik!=jV^D<V/PZ[jqMe5(_T8ad#!P@jPYdAT%kKi/ZPhq<T3)>\A%YMs-6bN:M'6G(1+@[AW044s_S_.$H0[eb`PC:f(D'Ge_TF].$f*"Xm,9H@?'bE97YQq70jd\n1Tm5*Q93.dn%k:*MSJ87FQ:NKYML69/tZ&!?tmBqDARmW)(Fnd]4Lj4$eZl&T6d/`-\M[De%.G4tnA%Y@s!$jN8TE&[;l8Zdg0^$jq65=gbEpsr(%jpjtLn+4hR9+bYq307P=E.NOJ44r93jM8\`@iY"pXr)gG*h=!#(+!+NnLX&E[B@o!*qJBM09+#S.k8LV2Yp*4)F"D1OH:N7iXBUn%kc]9T"sH&YoXMU\l?\=YrKAZ:0eUdS^hKn;6;DQLR@Xai+;.o"[jd?WcG/\]\dnmrWe'eK=ctM\7]j&(kL8.>[,7X9_Zk*Ds!B0\%X(>DL#P_N$+'f+BY4&(]((VdB[*t:#8CgUHKK/VO^Mn>Z4i@H^P_1/fDLe[J%BO3j0dAEj\.+XSfHc/")GUUI,:#31pqE*KAo,ZC%FrnOk_EdHHlSDZt3^2(f6gj)l!^U^.FOm\d=JZ#tCEL"TX6)R+OAZe>"fD\Cf`h&*frN6JAP?fK3WSa*1l9;q/q&2/X")(tO`dbM%5fTSh'[@:(U1"Y$GG:O/me(STNq/<Tgk*,b9;B'D3foud@8)eLNB<D60h19Q8pSFMP:!DT4V.p_Zs;LO:n3f+02`%UP'^WA>g&p$%$CV./lHK:IW&e)FS1`WAQYsH2-e8u:;!-r_q1)l.bu_Z"D62-W7Z)ZCl`B`:]#9V3?p&ZqZED[o7NjS,MOXqkI>Jf&N.0]$e&n"9%OC7R!0t\U%4g>)L%7:3M!-pH3D,)D1!:E7PrEO?8_h3O7K=2S;*A/tO?4C'n&M73cC%L>ud<+MEdWKMuaREY(]9h>p7,bKPJL'Ab%\eG0'0VQQ:`/VXNL1$^]2+9Do!DblEfC"k"D``%,RHF#EAEID#<rdlJjU>+5(Z^<$<)6]5/^TDq]`jK4.K2^Wf1nq!=aN'tcaY`L%YY=HBApIT_%]GThY<e$Y1T^/aB,8-b*a*JA8oluE@HLNG'V4aJ+H709EVX(=e(G/P3,$D?V35-90.aTUWX@;:h,Fdl$jCZ9"KWVR%dapEL:Ae-]bS/0IZn?=?k-c0.dsI+*^VR)O^A>THZgd>Y$Wb;ZY[`Rlf7T:J]Z&s@]cc'"7L=G%"q;WjaMJ%sZA"IlX9SDuLf.(-%Ll?,rm_VDpCK@4@.1eeon\-p0SLR=bUnGhY@8U+$b^H`#2Gq?@aWD008Zg"R=LCLUPMl]'C=mARAF@9MfVJ"KBd790HG$$aDCLK[%?^,DA^"_8Km:I^)_6j0cB7foLaDADeO'!^_5a$JafQM(eJK$)uf:MFbU^ac+iA3_diVA6IXN-#(PfL"qZ*(G#AjW)+"k9LhJSZ8c%@0')aV3'_*P??)oY7<Ie3&=n0S0Q'"3?E<+Wq#`Z&U$UQWV-ad@lr\%Ob\;eD@Ta/qhiE.p(tk>+0g`CB6rmHYf<LFbB:<(JDEB-%s,d&7l5<>3I2m!6=%ruQB:>uA^So+,Sn#fd%&,<J/`A3b2X;%.5\EkL8uR%5R"@V"(:&#l+/3kq[PU4(0,n?B65<LT>c;V7AHH7b%V5OR6e&,U>F6D[4YE2W.@ZG6d\YP!ujrn?5OZmB%H7KWaAK3K:NT4!'!CIsGim>>RaWpbQP+t7U+0!J'%(rEV*XWI17)SP=D"V'>%3Qoj;!C!)lV<1IM<."1JSlC2GJ-C+$,(#DmanQ'V+OkR[?M=^c<u=%Xoh.ZmL4o[77Kr+.CnQZpV6AieMt"k*_adj?VnMpa<Bp]>%q`0sf4aqk+P?b.K[W.4U#)hTXN)m1hIk`QsLAtL".u@o58biq`$R>DA1O9riCT-Og+4oHH>7'Da!")>&Os-Un"QG8Eq*V=hf=teV%\5FJ-aa1Zu\tcW8@3C$3-AbR?_$[b,[1JR?&[;Q6+7gS`_j%O=6BZTcIM13kl=LA01H1MS,p%S=S-3MTas)!%,f#G4^sYg#$R^G7%/%pf/&n!njcd?1%Q9O%e!VUjWadbsu0D\Lq7SL;saFdjC*Cg8CJm[<FOlXj/459?Ee06L1#9Isd@6On]dUBoe\aDMf!CEc[`O*X/%5b^k_Y\$d/\,7Doioki+NA:=#XFFm<0]g*Xo@4D#IbF=5?&%Y@P_Q$%_gSG+aT19]HpILr!,F1LAJidm_JX3_2jWnE#ZRV_D7UJd%8229lM,TWGCEhk/l`_b)c]1W3J^Vr#_!,lfCe)$5OT>p]XmA5-OS_1e\MA6a^n21)nVi<_0_4#9QB1<LV?LH!G_tVhX\P$n7mO](%?S\"gn,)PrTof)-7fe%]<Y$KWfJd1f%s#sP<B<,,LqtKi[X#m=$V0<.FgDm+o8_eknlQ'oCZXW0_rXKmZK=9'/TWKH%kEV@+A7&K%Zj@@EF;ib?P'M>@&EW?i`G_^"+,/knfD:09P''XacE[q5C\inY8"hNW[@+Q'2b26<5B(E.=P,,%;8gGs2KoNCTp:Dm"EEd8o.2/I%%*g1(5ipDdb5%Kn1?8(h=2:6,%dqCD[EV%#k*]$DO(,%Y70A#`LEiSBYQ!]&C<jJB^.kO,A>*sbD:gKN=Pn`;22HDq#f?%s`Z*Ta%Uiqu&d+qW8dWj<@Lj0?G&ePi3I5/Pm\*lff3J@A[V@%dL:s>9E5_p1[URF/iIQ-]6oqV<ZShb35nY6Z1p&iA[1`AuM*XNraBn[.;%=IgDFnI9d`%JRO`>lYA=H5:>UgA\c/9,^?9;J;`^WHJB"P>JUi?U9*1OrgsX!#cuo6@T[oT.:nJ/+/`qmYC^;BU#rjIp<(Y-u%_r%ibf'raV05,-4bmRMi$q?jK`_J@o>li;fT^K]3n>>_hIY)!ZLSgf<D!8i8rT;$jjr)+BgID"CH7?p3qH+^&AH>"eT4i"SdR1&Y"<.%CC41*?rFAK3F9ij3GcT?[3c6#lj9k=P:%tP5?h](B)Y5iZe6Hb5Vc5Vp7OCb(<uMY3TCBH3'Q`:-D\L6ipSrLe^!uDko6*%,TqT(%i`Ikf:W@Vhp_FEUAkkTG=<4H!I%1nlhHAg872Yen%?!gOC6';uKaQ,NbgFZ(9+N2"#pokHfL_e%F4B$_r<>>Zl#hg71VDne:]t4U%+Zu8/8B(YJS=YQr9^JRBO\s/s@].m3norS3%9Ig4.!@ps"i7?Jh-&3*Sm`5<=46o%JZZ*I\C8GgI1R9Z&QH:2/jW_uU@o*G&[g=G%!fpn$aq'56g4;*2(._2XLJ`sTKj9%>bfq.4lp*oe!7+M82i<^@n;\e:WBMOoA7dcbqNt!UE":9E8@<%Hb-oh:';#g+YRu&^7A?B<%.-7>.>63!!QNe6bmgpX]?4N`F<]AoKWU7F(8[KDFa]^!ON0,KmPo<4ABP_Gr@WngSIj1Xhp'`'U7]%%f;Ao<DVWemu@gg9a(c7^=%W9t>*DhC#O-XR5k]!T<M6Mrf>GUsK(:OnfhBcs;6J1&UGX=`dDcQ:3PeL[@fq`=CtlUIF7a8\A>_f`t,A'k-2a^8c"`fe&Ta#/3S%a?1DRaFqf84OunC&R'?f/!QZgY%::>6m/MRc+H2tLnQWWgm\aE:P=<lTp'R`"T-DgV65TMm4!'c4?sr'Q9THPXdHS0)h:osbX^XD%fI!<:3^/C.3*o$C<=^K&(09skYH*R$oL"YF/FA8eFUCZmolmi1+&=s'eEut(Hh^u7V?s^uZ,8CB!"MN,7Qr7urql\"@=6*:GfeH3%BS6fA`0TAaloAS-$]n"/Z1283D$m:#:'h`'mE:$s5Xd[J'JhAWYHEodfFu\1=UFB;*fcnPS]fq^1\8?[U8%V/!HD"ZW.l18<'H8s%-^2mpRU^)=o?F3Aoo_iF)$4!m1)fRRN@E1Q!mgcoE)o-N3+76rEICkR!ttPVRh:ac._?6lfDsutVj\MW$cr<>2fE@6,3Egn8(H,l%"0<[(q1oS:#Qss4,'R>:1=lG*1DjYVOJ9UjhmTqJY3-PcCZ96MSX\L5fQ,=Y1e);^XGR!D$Cq'5$UUJQEFhPBhI"C7/>"Di;GgZ5%gF%h'j=PO:;[*?0/j@"fg#8:@l&'_T)]4CWmb`OOO+PW=OM>N=fR82!&IHD)6ql0[!A/1H(qJKi-c$\Q]d&XF,T0RRG&^IP=o3Mg%Qc^J=C)if=m'/U!JZ@Q"7I'@fm,$oXO_??!lZ(4OPr%Y\Cj.KNl/_PhdUm1!nD\!:]Q.ncYnr'&@#`ZOk0T013V/)M]j<^9a7ABF%&8,$/Yn$!5#]N?lK2\&pHE&J\Q1Z(VWX00B/1WFml=<2rb%9s:2[XUu[`:1`@$kACc-`qH`r\(_)'GdZa&*eY]bLULgVt\)9\M(&%8g0V1\f;Y3)P$YN8M2LOZs=LL@q4]V%X]]n$:LWXGRk%PplZl3Q#HZTUesF/G&'*6R8Q8Cbl9$'L).($lb&M`#).+7OCXHpcLB3^%]\g_6'b\_5_tU?OPA3Qa6jhU]Ka4qRA1%YKe19Ggg*O3&,5qp&3E$aNJ3j*H^G/td*A_lK<DE1e?HBR%NlPoLo/'6ADFkUZQOaAO%Yp;aYke!<'mbi;d\$PsWpa.j1B0[+l-$lGK^N'5UZo%W2A1PT-@gi5O@gOh^fa*`Bd]=!LcL8(gn>]-6d)-+jCnc^LI=%1ke\!Sk%`MHj[^`o7;M`*ZQ4\'TU;='de*/I6FLaeuN^re6r11=AUf)OL=B^^^_P.fN52IUGm88e>.Yk(KMBraNJSJnZuotF=MFW7s+g-/Wg%Zuc.+le5J$.&&3EgX]5]QKJ[Mj5>,6BIa.kKFJ+4Np0*D@2`40Wf)3RF5JkpCKhbO8U!$(g7u>W:)'uS+[12hSnAO1X-Zj7/BDnO%:(-Tk`B[Y#"^+je9q9g#W5b\Z-G.FmFn8rJ:JT"+>VAQ$KM%Eh1R.BTS+J#:llq?R(A-Q`\\ZdG:W_ld*LSO`fi!m02jD>O,N*9r%*BV(>B>*YD&]h(>0n-j2r>t:U/mapM*3(,mJpEp]`gTA*3i%^]ngl.8fr`B^]O0Nrr;>YnH]CqD)G:0D)FWoF/4;GM^Ik0ec17"2%2=[jF)YcPH$nDo#Y6<ts$eQQFpb'2Z4!.RD$;=&Q#,Ie#iL!LK=KKd,<`p7Ra'geU!Ku."rO5S<Y+^,sqF<q2:WY-6IW):@$UVfZ%h#JlBbM)j2WG\!Tc6iia0nTR4)&D8?#h$@Dl;8!F76PW><bX9A&4*WH%a%ml-4FXL`mfZ7pZqq.SX+PoaSGmf]Hck>'!K!DICl!6%,6>oSa4^=YRGppK!osYk=Rsa,"R^Wp7.'N[X#N#oE`NMg#lZ.l#I8Vg(RVH<BMPS*Uf<Q_'^pIjK*UU<:ocO<-ETl573CkmUU*<]%(a+p?S%?KNnhK/5i4+oB=\+S"1'G/6_=5\ub'u,cSX?_'ZA<U?P_6Y]lBGONiB[lt6M&=4P]SpDST[H3!"ESS5Mn.YaA"g@(TBO\%j[ImW#IVA6U0\o<rR7EP"K9HSc=8;<cA%PH.q:XdlX@BI"`aV*g#@C:\*sfeA0KMYBd]h)qk.5',E(8\c*2cu"UC%/=c7@?D(8?s%f]([0a%-pRMt?pF8*A&]%EECIZfZ:9S/24qc8b:c]H"c'`HdmLCYEA-7sMi#Ouu`5(-NP?-jQYHI1NHSM/dG-fb-b"j'8,E&Xei&%hFu[uNM5B$2#gLd[4WEdosPC:Eh#XN1:>S_BlEB7lQPC6B3a5356#cFc5Gg>^IATc)<Y:Mg-colS3oU$;hS$bkEe+tM]n#MB!r,9%34Cl&[:,#&]f7*J?7DOsEGhF-;&cNJMR39",D=sip>UH+:]Cbblhq::Nf2.sc"j?ESsqZS7`gZrS85I.-P3/4EF)T8:b0se@[q)D%<Bd>JODE)sQoVD06WQ]"2:ut=Vd'_e=$EuX$&&l!B7RN]G7SKtj8E!!c-7kUOcJ@[Eu?iP'W?^nou/^On-Hi7?#`dr75oFM@ka#q%Je^Js-3RQ)#EP.n+0[e:6lo*01/lmVM0]Z5$AL0a)bZ[I"-JFg/okd,E0lrg[kQ$FE&op:lE1G"/qac8H3Es4J&)AaM$59<3>5#;%aQnCWPK#LWSt&=>-CIqSJ7'Tg'mYC,YHm6I9ulZ%'a%Q@%[`LuCF%Q!lWPGRH*aNrk(*W6H52&(4$sYpB5HhuPS*I/IGoZ;MXh0a%GA)k_fP4k0V$9@`aL_F?qN.Sh9f,Ym:dsca!^'Ro)93WG?HAs_4]Wn6/>@NCZOKqu3!:q5&fT`6&3hg.d%B&ca)35<,oB$j8JRRc%PT:qb%@U9l.[&7"D=R[1Xigq5&Q`$Joj^Qe)*!+.[%9:=T]urt7m(oS!2As4RIf@Aid(NtI+Z?426>=3GDs4$`:+EbE#d&kK<6#\%g*E*Xm`jZP.?E8D7Bj'S*E#.<ldUo[2C)P*kIb`jC`[GdF86gh`jT6;@uo!Jhf@"(bTd?JKRg9c^Qdb5=)r`S38W_<%MVBSE6]is%J%XU\3EQ+s^e8gq3s@(T[4]XW`&--eSY;E<@36]OYu/lsg'VSiF>JNHp#j!6V^V[p20,om#nPt78TtK-.t_c@fhg8DdcV13&crQl%coIQ'^j_ECMi(87Qp#W?3U/RZ3X6g]Nm9N^,U.XsL329(^ZNU23Yre"-5_um/J2S^S5*9MP!/7cAg;nnc=?S1BK'J@_lG8kl\O;;%:,s'%aD<k+'!IJi%+M@p3bM3.'98,q!CHo%aiX8l@>ThY-N^I]M/o66O%Lg!+en4q2B/NJ,PTO]2JPI(,%rr')GB<hgX4i&N:dW$%ShJ5(F)p(OOq@0e,TDC:a>sKM-TY,`*N;lR+jp`bnTuiZ6&[aN%pN.5"[N2!"rb&D5icU7$G$S"DWf=d+oeuXP,=8(j-4*ZZ(iEQ%UDD4l9T\LmU^a-6WM8+lJ=V6V?DJ4T3P[6igt?Z88c](M#5!-DaFGk@i#ZZ7,%<75B&VK/A;<59TXI(@ZIXn8qE_rYf:[-G7t^qP%BjX*#PHt)5Sb9hKN0`eXb"$-k3":pZ\fP!LPC!F=&c)0YptT@?Bo$*>i)FT7.>0i=mS1H#XDll(:@*;Ee#Y8Tn3.5K5+GW[%A_uN%Vg:&LSe"A60/-r,E<fP5Tqs;W%nI]ilZ"5^]CK&A:boEi@ul]3P;nF_c8`elj4iV6Rh(63/D/ujah7)De/Ljm3;"EPJ>A7#/Fd!2%1"ZVh<r/bjrE#dqV!=f8D#th^.fP\%e1Mubr1Z+Cn/SWRGq4s>m94WpVhQ2QmGMBS([[I962SOL6Dej01d+Q(2'(!ta^fHD*Gk*f%'E%(PmXa;@";enH9PltFcZ+2U]'*?._<JQ5+n7NlHu<=c.E=08p'dE&F'+h:O(K$Y-ZKX(2dm[SM!)5\%Uo,C4`GXeTdJC_%<uBW%in67;P(qhTqI5.;?8p#js7U>DIWpYLQ5cV#BnXJaScSdVC@JSBJBmk<$u4f8NVNmlg3D:d\5s1G)a@ie0Wm61['U9"\0eC3D.Dks%-#SNR5<ua=`]gYAQlWUY.d[U-[NS&2W;n\o)A#\#hH_)sOL+Jp"2r3mLs,79%>g)VcmG^C0I4eP=G@:KL:i*]J^Buu7Ya+sg7>FW%k4dS`6<'/(*ja(3-Te9j,LNl=WnkT2W)nsl3C+]-5HHS2+KK?;**AtX9%i:Qd;*f9K(o$/+[q]qoS(9GgA>3l-+(U#AN=P4pU*EI%P(sFU!b97r:V.f1o104C5`#sC-GW5-d0=qD)!qSBPIe1llN\)qSAQj6<(BQ]ru)b;GsU^!W$\<!-;$9Y<"pAe%;An3`%a!,QXIHI%?;4R<Bj49<G5*O6I_b2R>F_)5fPOt+6Pua5(dl52dC,Dj^X\t3qgcTr!$jj>U,^`0=@Z&$qO8n1&q7MPj.pV67]Hb.Xa)dSis0rc%0iTG$!EDEcafTI[J->`A"qZI<oc2@ng4N?P-Is;Tfn<a19T0lN+Q]%g%7oLkdYZk.NM;l*CA>EiH`bVicFM:@E#FHu"oP*laQdNL%R6bFCDB_]8%a)`;MImfo5TV&9mflC]5">./]:V*c,Vne<ke-Bg^+$g1IlZU"_=Oeo,.k$gQ;1R$,gb+&g$+a+,pZ>m9l+j^%t5E*%4/KA8ZB(tkE2QA2<.lu/%11Z0l!!.WqR/Nj?n(P<lf?Q[V\FUa$97$QBHZ#3kO%LKQZ2V^OT&[.l-LcL5t[bIJ]mJZCasEB4[<S%%@hL.U#qFP,3Ctkb)-$J0U_#24b3G$$LuVX>Of5'2*aX<1:s$:rb5@p\;<jQE(Fn=/,SQ^bLs"=;<'"*eipG`/F38/b,7u;-Qj)5@%h5Cb5)>b:DGK%o"\.n7n)Sq"%!+V?AV/(^(7F#?eaL\TQalXq%fnWN^PikDOi)kD!?1shOb(-?^.\T?dDaJ*8VH!9Z9d_^0A^W]\%Q-(21OL_3nZCZJq#kh/1:Pa9s'FRib,WA],R*'M@JD2BMb#GYm3uR!'PGU*d1q=O[<)*P6E#EX\.CkhmRLsEgl@O&EFLW:UDb;nZ%WV&HrhC0,!JJNak<haJ/--fH%oX6gM2PCeY$.,2(<PFuoMJ/tE!Aqu,T8YlQ88!h5XiB$NS3m*MPr_#-ZVslG@Oif6m&Nafg:Ps<%cG`6%C/9p6pojb\!%RY51-i9RV[-7qd8<5N29Ltf,Zgi%9P>qh]dh?8@;a&W`@<)Lb23\UA<PMSp2&eAF&b,\;,kU)<@NE-U7]LV%RBRp5R8q6`))h"oY[jY]7C,Su`Ia>fX,SXQfaY-V)Li1CVjh(abrCRdN#2Sr/'=9:RrGE%\[V0#]UJ[;5m&q$.d+k8TR%Ya-.59L%#d8JqX!)Sg+]R1T^eImuJVMr[8hM/-#@EH-J#`pN$b^OuFR)qYdELiGBFP@Oo=iTcB>]>L&Pl<J`EaJ6\JnY=7S6?<-$-pq@EpWf%@ARK8mV%dOqJ-&M58b1akc7($:`[2m@N.Q+Y[7fX*AZ3BOJ8OOIm]Qf#*''s`!'@[+(Db\Me-J-f`nLu*4edIe#7Z+<"D/h-l1:c%V%#W4:2%p*eIkKO1(m>QYjBTW$uqRj<Kra*=aCi""c4,\?3f_'bQ(RPd/8ou&R9^iABnK'NWB$H+2"r_FN7%Dr'`=0?R<#,>DVO?%r%i"@(u:M"a1ReO?D1qUBir^biUL)\B!!f2\f">E!Deu&O%gl2AUIRu\#StKq%8^T#4b7cYV\!JTIuumoT!8#P(]*?-f2!Cc1sX5%\g(=m#,6Q$5*c2W?CHl\po;$WG8/99&NY=(mgeRCbpd#"Y/@]En6QIS9DA#I&3([)k#7?Rh@D=3V<J[%pHg)+j[Ccc9:9+"@0j5f%?Q'cEFD$DC?^_8Kf_((-^[r,K$eX7$HH"kh*n'&7!kk^>Kqs036qjoa;AC>M2"=6#)B;Qg;$O[U<5L_t]%e+LqU1HD!8N9qmn6fs%)L_Ee@UC&Mka94"='I=OL7[jrd2To/>4DP)<le6MZ25[A^(,Bk_=Usrb1,1qM.#VYDDb5f'Nd&#dFrDtKV`&`$F%gNd=UV%5ZoP'%Z5)368/4..G4R>;N="&m$!m^Y)#.-fflKi>&L]ucDaJ>7Yo72J=m:GT>+Crl6%KDjO+3T>g09^i<Zj.&kBja)@K?~>%AI9_PrivateDataEnd